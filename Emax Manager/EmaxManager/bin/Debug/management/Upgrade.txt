--Version -726

--Version 645 - delivery_item1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Delivery_Item ADD
UDF1__UDData_ID Int NULL,
UDF2__UDData_ID Int NULL,
UDF3__UDData_ID Int NULL,
UDF4__UDData_ID Int NULL,
UDF5__UDData_ID Int NULL,
UDF6__UDData_ID Int NULL
GO

ALTER TABLE dbo.Delivery_Item ADD CONSTRAINT
DF_Delivery_Item_UDF1__UDData_ID DEFAULT 0 FOR UDF1__UDData_ID
GO

ALTER TABLE dbo.Delivery_Item ADD CONSTRAINT
DF_Delivery_Item_UDF2__UDData_ID DEFAULT 0 FOR UDF2__UDData_ID
GO

ALTER TABLE dbo.Delivery_Item ADD CONSTRAINT
DF_Delivery_Item_UDF3__UDData_ID DEFAULT 0 FOR UDF3__UDData_ID
GO

ALTER TABLE dbo.Delivery_Item ADD CONSTRAINT
DF_Delivery_Item_UDF4__UDData_ID DEFAULT 0 FOR UDF4__UDData_ID
GO

ALTER TABLE dbo.Delivery_Item ADD CONSTRAINT
DF_Delivery_Item_UDF5__UDData_ID DEFAULT 0 FOR UDF5__UDData_ID
GO

ALTER TABLE dbo.Delivery_Item ADD CONSTRAINT
DF_Delivery_Item_UDF6__UDData_ID DEFAULT 0 FOR UDF6__UDData_ID
GO

COMMIT
GO


--Version 645 - stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock ADD
UDF1__UDData_ID Int NULL,
UDF2__UDData_ID Int NULL,
UDF3__UDData_ID Int NULL,
UDF4__UDData_ID Int NULL,
UDF5__UDData_ID Int NULL,
UDF6__UDData_ID Int NULL
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_UDF1__UDData_ID DEFAULT 0 FOR UDF1__UDData_ID
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_UDF2__UDData_ID DEFAULT 0 FOR UDF2__UDData_ID
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_UDF3__UDData_ID DEFAULT 0 FOR UDF3__UDData_ID
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_UDF4__UDData_ID DEFAULT 0 FOR UDF4__UDData_ID
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_UDF5__UDData_ID DEFAULT 0 FOR UDF5__UDData_ID
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_UDF6__UDData_ID DEFAULT 0 FOR UDF6__UDData_ID
GO

COMMIT
GO


--Version 645 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Complete_Ops_Msg Bit NULL,
Complete_WO_With_Issues Bit NULL,
Show_Employee_No Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Complete_Ops_Msg DEFAULT 0 FOR Complete_Ops_Msg
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Complete_WO_With_Issues DEFAULT 0 FOR Complete_WO_With_Issues
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Show_Employee_No DEFAULT 0 FOR Show_Employee_No
GO

COMMIT
GO


--Version 645 - companys1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANYS ADD
Customer_Class Text NULL,
Number_Of_Employees Int NULL,
OEM_Tier Text NULL
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Number_Of_Employees DEFAULT 0 FOR Number_Of_Employees
GO

COMMIT
GO


--Version 645 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
Default_Issue_Location Int NULL
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Default_Issue_Location DEFAULT 0 FOR Default_Issue_Location
GO

COMMIT
GO


--Version 645 - part_flat_bom_temp1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part_Flat_Bom_Temp ADD
Date_Required Datetime NULL
GO

COMMIT
GO


--Version 645 - contacts1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.CONTACTS ADD
Contact_Allowed Bit NULL
GO

ALTER TABLE dbo.CONTACTS ADD CONSTRAINT
DF_CONTACTS_Contact_Allowed DEFAULT 0 FOR Contact_Allowed
GO

COMMIT
GO


--Version 645 - dropviews.sql

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accts_PI_Vat]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accts_PI_Vat]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accounts_Credits]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accounts_Credits]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accounts_Entry_Bill_Payments]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accounts_Entry_Bill_Payments]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accounts_Entry_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accounts_Entry_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accounts_Invoices]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accounts_Invoices]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accounts_Purchase_Invoices]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accounts_Purchase_Invoices]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accounts_entry_Balance]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accounts_entry_Balance]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accts_Credit_Nominals]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accts_Credit_Nominals]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accts_Credit_Vat]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accts_Credit_Vat]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accts_Invoice_Nominals]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accts_Invoice_Nominals]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accts_Invoice_Vat]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accts_Invoice_Vat]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accts_PI_Nominals]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accts_PI_Nominals]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Action_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Action_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Action_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Action_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Active_Ops]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Active_Ops]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Active_Ops_Complete]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Active_Ops_Complete]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Activity_Control_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Activity_Control_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Activity_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Activity_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Activity_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Activity_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Activity_Related_Doc_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Activity_Related_Doc_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Activity_Type_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Activity_Type_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Activity_Type_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Activity_Type_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Allocation_Outstanding]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Allocation_Outstanding]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Allocations_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Allocations_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Answer_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Answer_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Answer_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Answer_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[BillPayments]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[BillPayments]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[BillPayments_Grouped]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[BillPayments_Grouped]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Bill_Payment_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Bill_Payment_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Bom_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Bom_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Building_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Building_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Building_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Building_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[COMPANY_ADDRESS_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[COMPANY_ADDRESS_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[COMPANY_AREA_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[COMPANY_AREA_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[COMPANY_AREA_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[COMPANY_AREA_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[COMPANY_POSITIONS_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[COMPANY_POSITIONS_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CONTACT_POSITION_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[CONTACT_POSITION_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CONTACT_POSITION_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[CONTACT_POSITION_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CREDIT_TERM_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[CREDIT_TERM_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CREDIT_TERM_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[CREDIT_TERM_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Calendar_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Calendar_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Calendar_Exception_type_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Calendar_Exception_type_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Calendar_Exception_type_drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Calendar_Exception_type_drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Calendar_Exceptions_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Calendar_Exceptions_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Calendar_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Calendar_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Calendar_Records_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Calendar_Records_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Campaign_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Campaign_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Campaign_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Campaign_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CashPayments]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[CashPayments]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CashPayments_Grouped]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[CashPayments_Grouped]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Category_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Category_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Category_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Category_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CofC_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[CofC_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CofC_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[CofC_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CofC_SpecTests_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[CofC_SpecTests_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CofC_related_Docs_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[CofC_related_Docs_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Company_Balance]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Company_Balance]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Company_Discount_Group_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Company_Discount_Group_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Company_Discount_Group_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Company_Discount_Group_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Company_Ledger]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Company_Ledger]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Company_Overdue]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Company_Overdue]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Company_Positions_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Company_Positions_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Companys_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Companys_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Companys_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Companys_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Con_NOtes_Test]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Con_NOtes_Test]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contact_Marketing_Category_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contact_Marketing_Category_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contact_Marketing_Category_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contact_Marketing_Category_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contacts_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contacts_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contacts_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contacts_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contract_Allocations_Bom]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contract_Allocations_Bom]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contract_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contract_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contract_Notes_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contract_Notes_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contract_Status_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contract_Status_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contract_Status_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contract_Status_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contract_View_Po_Count]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contract_View_Po_Count]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contract_View_Temp_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contract_View_Temp_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Conversions_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Conversions_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Conversions_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Conversions_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Cost_Centre_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Cost_Centre_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Cost_Centre_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Cost_Centre_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Credit_Part_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Credit_Part_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Credits_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Credits_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Credits_List_With_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Credits_List_With_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Customer_Return_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Customer_Return_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Cutting_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Cutting_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Delivery_Item_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Delivery_Item_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Delivery_Item_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Delivery_Item_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Delivery_Line_In_Stock]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Delivery_Line_In_Stock]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Delivery_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Delivery_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Delivery_TimeScales_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Delivery_TimeScales_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Delivery_TimeScales_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Delivery_TimeScales_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Delivery_item_Stock_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Delivery_item_Stock_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Delivery_list_With_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Delivery_list_With_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Department_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Department_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Department_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Department_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Distinct_Part_Trans_dates]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Distinct_Part_Trans_dates]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ENQUIRY_LINES_LIST]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[ENQUIRY_LINES_LIST]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ENQUIRY_LINE_QTY_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[ENQUIRY_LINE_QTY_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ENQUIRY_RELATED_DOC_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[ENQUIRY_RELATED_DOC_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[EXPENSES_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[EXPENSES_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[EXPENSES_TYPE_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[EXPENSES_TYPE_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[EXPENSES_TYPE_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[EXPENSES_TYPE_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Employee_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Employee_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Employee_Holidays_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Employee_Holidays_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Employee_Pics]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Employee_Pics]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Employee_Shifts_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Employee_Shifts_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Employee_Training_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Employee_Training_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Employee_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Employee_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Enquiry_Line_Group_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Enquiry_Line_Group_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Enquiry_Line_Group_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Enquiry_Line_Group_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Enquiry_Lost_Reasons_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Enquiry_Lost_Reasons_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Enquiry_Lost_Reasons_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Enquiry_Lost_Reasons_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Enquiry_Part_Alias]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Enquiry_Part_Alias]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Enquiry_State_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Enquiry_State_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Enquiry_State_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Enquiry_State_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Enquirys_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Enquirys_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Enquirys_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Enquirys_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Enquirys_list_with_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Enquirys_list_with_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Ext_Location_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Ext_Location_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Ext_location_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Ext_location_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[For_Nominal_Entry_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[For_Nominal_Entry_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[For_Nominal_entry_List_with_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[For_Nominal_entry_List_with_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Form_Headers_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Form_Headers_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Grn_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Grn_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Group_Code_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Group_Code_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Group_code_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Group_code_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Help_Button_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Help_Button_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Help_Buttons_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Help_Buttons_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Holiday_Type_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Holiday_Type_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Holiday_Type_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Holiday_Type_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[INDUSTRY_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[INDUSTRY_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[INDUSTRY_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[INDUSTRY_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[INVOICES_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[INVOICES_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Ind_Pro_Charge_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Ind_Pro_Charge_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Ind_WC_Charge_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Ind_WC_Charge_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Invoice_Part_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Invoice_Part_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Invoice_Part_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Invoice_Part_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Invoice_Payment_Lines_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Invoice_Payment_Lines_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Invoice_Payment_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Invoice_Payment_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Invoices_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Invoices_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Invoices_List_With_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Invoices_List_With_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Invoices_List_With_Parts_For_Reports]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Invoices_List_With_Parts_For_Reports]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Issues_Required]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Issues_Required]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Job_Costing_Expenses_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Job_Costing_Expenses_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Job_Costing_Mat_Retn_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Job_Costing_Mat_Retn_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Job_Costing_Material_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Job_Costing_Material_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Job_Costing_Plan_Hrs_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Job_Costing_Plan_Hrs_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Job_Costing_Plan_MatSubCon]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Job_Costing_Plan_MatSubCon]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Job_Costing_Quote_Hrs_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Job_Costing_Quote_Hrs_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Job_Costing_Times_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Job_Costing_Times_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Live_Operations]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Live_Operations]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Loaction_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Loaction_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Location_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Location_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Location_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Location_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[MRP_Allocations]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[MRP_Allocations]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[MULTICURRENCY_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[MULTICURRENCY_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[MULTICURRENCY_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[MULTICURRENCY_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Material_types_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Material_types_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Material_types_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Material_types_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Misc_Issue_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Misc_Issue_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Misc_Issue_Stock_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Misc_Issue_Stock_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Misc_Receipt_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Misc_Receipt_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[NCNoofRecByTypeLast12Mths]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[NCNoofRecByTypeLast12Mths]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[NC_Action_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[NC_Action_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[NC_Action_Type_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[NC_Action_Type_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[NC_Action_Type_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[NC_Action_Type_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[NC_Related_Docs_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[NC_Related_Docs_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[NCnoofRecsLast12MonthsByOrigin]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[NCnoofRecsLast12MonthsByOrigin]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Nominal_Cost_Centre_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Nominal_Cost_Centre_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Nominal_Cost_Centre_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Nominal_Cost_Centre_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Nominal_Entry_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Nominal_Entry_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Nominal_Entry_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Nominal_Entry_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Nominal_Sub_Type_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Nominal_Sub_Type_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Nominal_Sub_Type_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Nominal_Sub_Type_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Nominals_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Nominals_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Nominals_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Nominals_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Nominals_List_with_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Nominals_List_with_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Non_Conformance_Cause_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Non_Conformance_Cause_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Non_Conformance_Cause_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Non_Conformance_Cause_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Non_Conformance_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Non_Conformance_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Non_Conformance_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Non_Conformance_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Non_Conformance_List_With_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Non_Conformance_List_With_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Non_Conformance_Origin_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Non_Conformance_Origin_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Non_Conformance_Origin_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Non_Conformance_Origin_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Non_Conformance_Type_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Non_Conformance_Type_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Non_Conformance_Type_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Non_Conformance_Type_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[OP_Types_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[OP_Types_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Op_Types_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Op_Types_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[PI_Item_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[PI_Item_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[PI_Receipts_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[PI_Receipts_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[POR_Status_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[POR_Status_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[POR_Status_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[POR_Status_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[PO_Oustanding]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[PO_Oustanding]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[PO_Type_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[PO_Type_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[PO_lines_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[PO_lines_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Analysis_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Analysis_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Analysis_Recs_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Analysis_Recs_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Comodity_Codes_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Comodity_Codes_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Comodity_Codes_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Comodity_Codes_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Company_Discount_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Company_Discount_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Company_Discounts_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Company_Discounts_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Discount_Group_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Discount_Group_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Discount_Group_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Discount_Group_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Flat_BOM_Manu_dRoute]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Flat_BOM_Manu_dRoute]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_History_Delivery]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_History_Delivery]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_History_Enquiry]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_History_Enquiry]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_History_Invoice]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_History_Invoice]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_History_NC]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_History_NC]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_History_PO]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_History_PO]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_History_Stock]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_History_Stock]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_History_Trans]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_History_Trans]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_History_WO]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_History_WO]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_List_with_Company]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_List_with_Company]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Related_Doc_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Related_Doc_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_history_Req]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_history_Req]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_history_SO]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_history_SO]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_revisions_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_revisions_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Parts_Required]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Parts_Required]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Pay_Rates_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Pay_Rates_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Pay_Rates_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Pay_Rates_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Payment_method_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Payment_method_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Payment_method_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Payment_method_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Periods_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Periods_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Po_Line_Delivery_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Po_Line_Delivery_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Po_Line_Stock_Ids]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Po_Line_Stock_Ids]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Po_Lines_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Po_Lines_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Po_Receipt_Line_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Po_Receipt_Line_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Po_Receipt_Line_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Po_Receipt_Line_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Po_Receipt_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Po_Receipt_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Po_Receipt_List_With_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Po_Receipt_List_With_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Po_Type_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Po_Type_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Predefined_Material_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Predefined_Material_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Predefined_Material_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Predefined_Material_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[PriceList_PartQtyPrice_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[PriceList_PartQtyPrice_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Price_List_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Price_List_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Price_List_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Price_List_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Price_List_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Price_List_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Process_Calendar_Exceptions_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Process_Calendar_Exceptions_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Process_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Process_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Process_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Process_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Purchase_Enquiry_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Purchase_Enquiry_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Purchase_Enquiry_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Purchase_Enquiry_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Purchase_Enquiry_Qty_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Purchase_Enquiry_Qty_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Purchase_Enquiry_Qty_With_Prices]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Purchase_Enquiry_Qty_With_Prices]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Purchase_Invoice_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Purchase_Invoice_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Purchase_Invoice_list_with_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Purchase_Invoice_list_with_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Purchase_Order_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Purchase_Order_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Purchase_Order_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Purchase_Order_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Purchase_Order_List_With_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Purchase_Order_List_With_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Purchase_Orders_Required]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Purchase_Orders_Required]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[QUOTES_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[QUOTES_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Question_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Question_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Question_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Question_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Quote_Line_Qty_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Quote_Line_Qty_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Quote_Line_Qty_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Quote_Line_Qty_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Quote_Part_Alias]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Quote_Part_Alias]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Quotes_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Quotes_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Quotes_list_with_parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Quotes_list_with_parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[RFQ_Lines_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[RFQ_Lines_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[RFQ_Lines_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[RFQ_Lines_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Report_Groups_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Report_Groups_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Report_Groups_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Report_Groups_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Reports_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Reports_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Reports_Users_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Reports_Users_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Request_For_Quote_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Request_For_Quote_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Request_For_Quote_List_With_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Request_For_Quote_List_With_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Required_Reconcile]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Required_Reconcile]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Return_To_WO_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Return_To_WO_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Return_to_Wo_Stock_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Return_to_Wo_Stock_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Return_to_supplier_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Return_to_supplier_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Return_to_supplier_Stock_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Return_to_supplier_Stock_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Route_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Route_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Route_Versions_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Route_Versions_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Route_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Route_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Route_versions_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Route_versions_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SFDC_Transactions_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[SFDC_Transactions_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SO_Del_Complete_Date]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[SO_Del_Complete_Date]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SO_Delivery_Schedule_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[SO_Delivery_Schedule_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SO_Delivery_Schedule_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[SO_Delivery_Schedule_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SO_Line_Complete_Date]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[SO_Line_Complete_Date]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sales_Ledger]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sales_Ledger]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sales_Order_Lines_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sales_Order_Lines_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sales_Order_Lines_History_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sales_Order_Lines_History_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sales_Order_Lines_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sales_Order_Lines_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sales_Related_Docs_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sales_Related_Docs_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sales_order_Part_Alias]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sales_order_Part_Alias]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sales_orders_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sales_orders_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sales_orders_list_with_parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sales_orders_list_with_parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Scheduled_Deliveries]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Scheduled_Deliveries]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Scheduling_First_OPs]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Scheduling_First_OPs]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Scheduling_Last_Ops]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Scheduling_Last_Ops]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Scheduling_Live_Ops]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Scheduling_Live_Ops]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Scrap_Reasons_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Scrap_Reasons_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Scrap_Reasons_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Scrap_Reasons_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Scrap_Types_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Scrap_Types_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Scrap_Types_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Scrap_Types_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Serial_No_Group_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Serial_No_Group_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Serial_No_Group_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Serial_No_Group_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Shift_Patterns_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Shift_Patterns_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Shifts_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Shifts_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Shifts_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Shifts_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Site_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Site_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Site_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Site_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Adjustments_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Adjustments_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Full_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Full_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Issues_Delivery]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Issues_Delivery]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Issues_Misc]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Issues_Misc]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Issues_RTS]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Issues_RTS]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Issues_RTWO]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Issues_RTWO]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Issues_WO]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Issues_WO]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Location_Ids_Grouped]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Location_Ids_Grouped]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Related_Doc_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Related_Doc_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Take_Item_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Take_Item_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Transaction_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Transaction_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_by_Location]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_by_Location]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_list_All]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_list_All]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_take_total_by_part]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_take_total_by_part]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Supplier_Group_Code_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Supplier_Group_Code_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Supplier_Part_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Supplier_Part_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Supplier_Part_Qty_Price_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Supplier_Part_Qty_Price_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sy_Group_Options_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sy_Group_Options_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sy_Groups_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sy_Groups_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sy_Groups_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sy_Groups_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sy_Passwords_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sy_Passwords_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[TIME_ENTRY_RATES_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[TIME_ENTRY_RATES_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Time_Entry_Rates_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Time_Entry_Rates_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Time_in_Attendance_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Time_in_Attendance_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Times_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Times_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UDData_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[UDData_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UDData_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[UDData_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UDField_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[UDField_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UOM_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[UOM_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UOM_From_Conversion_Id]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[UOM_From_Conversion_Id]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UOM_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[UOM_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[User Buttons Visible]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[User Buttons Visible]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[User_Button_Groups]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[User_Button_Groups]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[User_Button_Specific_Groups]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[User_Button_Specific_Groups]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[User_Button_info]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[User_Button_info]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[User_Buttons_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[User_Buttons_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[User_Buttons_Select]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[User_Buttons_Select]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[User_Buttons_Select_Distinct]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[User_Buttons_Select_Distinct]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[User_Buttons_Visible_Text]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[User_Buttons_Visible_Text]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[User_Menu_Info]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[User_Menu_Info]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[User_Menu_Info_Groups]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[User_Menu_Info_Groups]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[VAT_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[VAT_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[VAT_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[VAT_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WC_Calendar_exceptions_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WC_Calendar_exceptions_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WC_Process_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WC_Process_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WIP_Stock]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WIP_Stock]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_Expenses_Cost]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_Expenses_Cost]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_Manu_Cost]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_Manu_Cost]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_Manu_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_Manu_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_Material_Cost]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_Material_Cost]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_Material_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_Material_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_Return_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_Return_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_Returns_Cost]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_Returns_Cost]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_Run]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_Run]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_Setup]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_Setup]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_SubCon_Cost]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_SubCon_Cost]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_SubCon_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_SubCon_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_SubReturn_Cost]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_SubReturn_Cost]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_SubReturn_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_SubReturn_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Manu_PO]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Manu_PO]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Material_PO]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Material_PO]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Prod_Planned]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Prod_Planned]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_SubCon_PO]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_SubCon_PO]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Complete_Date]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Complete_Date]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_ISSUE_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_ISSUE_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_ISSUE_STock_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_ISSUE_STock_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Issue_Part_QTy]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Issue_Part_QTy]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Op_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Op_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Operations]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Operations]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Qty_Outstanding]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Qty_Outstanding]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_RETURN_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_RETURN_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Week_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Week_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WipTemp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WipTemp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Wo_Issue_Stock_Cost]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Wo_Issue_Stock_Cost]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Wo_Receipt_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Wo_Receipt_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Wo_Route_SChedule_drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Wo_Route_SChedule_drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Wo_Route_SChedule_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Wo_Route_SChedule_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Work_Centre_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Work_Centre_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Work_Order_LSD]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Work_Order_LSD]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Work_Order_OP20_Complete]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Work_Order_OP20_Complete]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Work_Order_Op10_Complete]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Work_Order_Op10_Complete]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Work_Orders_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Work_Orders_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Work_Orders_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Work_Orders_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Work_Orders_List_With_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Work_Orders_List_With_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Work_Orders_Required]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Work_Orders_Required]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Work_centre_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Work_centre_list]
GO


--Version 645 - report_formula.sql

INSERT INTO Report_Formulas
                      (Formula, Group_id_Report_Group_id)
VALUES     ('Record ID (Table) Save First', 'WO RECEIPT FRM')

--Version 646 - declined.sql

INSERT INTO ENQUIRY_STATUS (Enquiry_Status) VALUES ('Declined')

--Version 646 - pcd_qty_break1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.PCD_Qty_Break
    (
    PCD_Qty_Break_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.PCD_Qty_Break ADD CONSTRAINT
    PK_PCD_Qty_Break PRIMARY KEY CLUSTERED
    (
    PCD_Qty_Break_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 646 - pcd_qty_break2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.PCD_Qty_Break ADD
Discount_1 Float(53) NULL,
Discount_2 Float(53) NULL,
Discount_3 Float(53) NULL,
Min_Margin Float(53) NULL,
Modified datetime NULL,
Modified_By int NULL,
Parent__Part_Company_Discounts_ID int NULL,
Quantity Float(53) NULL
GO

ALTER TABLE dbo.PCD_Qty_Break ADD CONSTRAINT
DF_PCD_Qty_Break_Discount_1 DEFAULT 0 FOR Discount_1
GO

ALTER TABLE dbo.PCD_Qty_Break ADD CONSTRAINT
DF_PCD_Qty_Break_Discount_2 DEFAULT 0 FOR Discount_2
GO

ALTER TABLE dbo.PCD_Qty_Break ADD CONSTRAINT
DF_PCD_Qty_Break_Discount_3 DEFAULT 0 FOR Discount_3
GO

ALTER TABLE dbo.PCD_Qty_Break ADD CONSTRAINT
DF_PCD_Qty_Break_Min_Margin DEFAULT 0 FOR Min_Margin
GO

ALTER TABLE dbo.PCD_Qty_Break ADD CONSTRAINT
DF_PCD_Qty_Break_Quantity DEFAULT 0 FOR Quantity
GO

COMMIT
GO


--Version 646 - companys1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANYS ADD
Date_Created Datetime NULL,
EU_Country_Code Varchar( 2) NULL,
EU_VAT Bit NULL,
Third_Party_Contact Bit NULL
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_EU_VAT DEFAULT 0 FOR EU_VAT
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Third_Party_Contact DEFAULT 0 FOR Third_Party_Contact
GO

COMMIT
GO


--Version 646 - times1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.TIMES ADD
Costs_Split Bit NULL
GO

ALTER TABLE dbo.TIMES ADD CONSTRAINT
DF_TIMES_Costs_Split DEFAULT 0 FOR Costs_Split
GO

COMMIT
GO


--Version 646 - route1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Route ADD
Notes_Non_RTF Text NULL
GO

COMMIT
GO


--Version 646 - quote_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.QUOTE_LINES ADD
Alias__Supplier_Part_ID Int NULL
GO

ALTER TABLE dbo.QUOTE_LINES ADD CONSTRAINT
DF_QUOTE_LINES_Alias__Supplier_Part_ID DEFAULT 0 FOR Alias__Supplier_Part_ID
GO

COMMIT
GO


--Version 646 - enquiry_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.ENQUIRY_LINES ADD
Alias__Supplier_Part_ID Int NULL,
Decision_Date Datetime NULL
GO

ALTER TABLE dbo.ENQUIRY_LINES ADD CONSTRAINT
DF_ENQUIRY_LINES_Alias__Supplier_Part_ID DEFAULT 0 FOR Alias__Supplier_Part_ID
GO

COMMIT
GO


--Version 646 - enquiry_line_qty1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.ENQUIRY_LINE_QTY ADD
Discount__Part_Company_Discounts_ID Int NULL
GO

ALTER TABLE dbo.ENQUIRY_LINE_QTY ADD CONSTRAINT
DF_ENQUIRY_LINE_QTY_Discount__Part_Company_Discounts_ID DEFAULT 0 FOR Discount__Part_Company_Discounts_ID
GO

COMMIT
GO


--Version 646 - sales_order_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Sales_Order_Lines ADD
Alias__Supplier_Part_ID Int NULL,
Discount__Part_Company_Discounts_ID Int NULL
GO

ALTER TABLE dbo.Sales_Order_Lines ADD CONSTRAINT
DF_Sales_Order_Lines_Alias__Supplier_Part_ID DEFAULT 0 FOR Alias__Supplier_Part_ID
GO

ALTER TABLE dbo.Sales_Order_Lines ADD CONSTRAINT
DF_Sales_Order_Lines_Discount__Part_Company_Discounts_ID DEFAULT 0 FOR Discount__Part_Company_Discounts_ID
GO

COMMIT
GO


--Version 646 - supplier_part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Supplier_Part ADD
Supplier_Part_Description Varchar( 254) NULL
GO

COMMIT
GO


--Version 646 - worequired.sql

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Work_Orders_Required]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Work_Orders_Required]
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

CREATE VIEW dbo.Work_Orders_Required
AS
SELECT     dbo.Allocation_Outstanding.*, dbo.Parts_Required.*, dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name AS Customer, 
                      UDData_1.UDData_Data AS UserDefinable1, UDData_2.UDData_Data AS UserDefinable2, UDData_3.UDData_Data AS UserDefinable3, 
                      UDData_4.UDData_Data AS UserDefinable4, UDData_5.UDData_Data AS UserDefinable5, UDData_6.UDData_Data AS UserDefinable6, 
                      dbo.Allocation_Outstanding.Purchase_Enquiry_Raised AS [Purchase Enquiry Raised], dbo.Part_Status.Part_Status AS [Part Status], 
                      dbo.INDUSTRY.Industry AS Industry, dbo.Allocation_Outstanding.Qty - dbo.Allocation_Outstanding.[Qty Processed] AS Outstanding, 
                      dbo.SALES_ORDER_LINE_STATUS.Sales_Order_line_Status AS [SO Line Status], dbo.Sales_Order_Lines.Priority AS [SO Priority], 
                      dbo.SO_Delivery_Schedule.Firm AS Firm
FROM         dbo.SO_Delivery_Schedule RIGHT OUTER JOIN
                      dbo.Allocation_Outstanding ON 
                      dbo.SO_Delivery_Schedule.SO_Delivery_Schedule_ID = dbo.Allocation_Outstanding.SO_Delivery_Schedule_id LEFT OUTER JOIN
                      dbo.SALES_ORDERS LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.SALES_ORDERS.Customers_ID__Companys = dbo.COMPANYS.Company_Id RIGHT OUTER JOIN
                      dbo.SALES_ORDER_LINE_STATUS RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON 
                      dbo.SALES_ORDER_LINE_STATUS.Sales_order_line_Status_Id = dbo.Sales_Order_Lines.Status__Sales_Order_Line_Status_Id LEFT OUTER JOIN
                      dbo.INDUSTRY ON dbo.Sales_Order_Lines.Industry__INDUSTRY_ID = dbo.INDUSTRY.Industry_Id ON 
                      dbo.SALES_ORDERS.SALES_ORDERS_ID = dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID ON 
                      dbo.Allocation_Outstanding.SO__Sales_Order_Line_id = dbo.Sales_Order_Lines.Sales_Order_Lines_ID RIGHT OUTER JOIN
                      dbo.Parts_Required LEFT OUTER JOIN
                      dbo.UDData UDData_3 RIGHT OUTER JOIN
                      dbo.Part LEFT OUTER JOIN
                      dbo.UDData UDData_6 ON dbo.Part.UDF6__UDData_ID = UDData_6.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_5 ON dbo.Part.UDF5__UDData_ID = UDData_5.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_4 ON dbo.Part.UDF4__UDData_ID = UDData_4.UDData_ID ON 
                      UDData_3.UDData_ID = dbo.Part.UDF3__UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_2 ON dbo.Part.UDF2__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_1 ON dbo.Part.UDF1__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.Part_Status ON dbo.Part.Status__Part_status_id = dbo.Part_Status.Part_Status_id ON dbo.Parts_Required.Part_Id = dbo.Part.Part_Id ON 
                      dbo.Allocation_Outstanding.Part__Part_Id = dbo.Parts_Required.Part_Id
WHERE     (dbo.Parts_Required.Type__Part_Type_Id = 1 OR
                      dbo.Parts_Required.Type__Part_Type_Id = 6 OR
                      dbo.Parts_Required.Type__Part_Type_Id = 9 OR
                      dbo.Parts_Required.Type__Part_Type_Id = 10 OR
                      dbo.Parts_Required.Type__Part_Type_Id = 11 OR
                      dbo.Parts_Required.Type__Part_Type_Id = 12) AND (dbo.Allocation_Outstanding.Type IS NULL) OR
                      (dbo.Allocation_Outstanding.Type = 'Manufactured')

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO


--Version 646 - pcd_qty_break.sql

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[PCD_Qty_Break_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[PCD_Qty_Break_List]
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

CREATE VIEW dbo.PCD_Qty_Break_List
AS
SELECT     PCD_Qty_Break_ID, Quantity, Discount_1 AS [Discount 1], Discount_2 AS [Discount 2], Discount_3 AS [Discount 3], Min_Margin AS [Min Margin], 
                      Parent__Part_Company_Discounts_ID
FROM         dbo.PCD_Qty_Break

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO


--Version 646 - discounts_list.sql

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Discounts_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Discounts_List]
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

CREATE VIEW dbo.Discounts_List
AS
SELECT     dbo.PCD_Qty_Break.PCD_Qty_Break_ID, dbo.Part_Discount_Group.Part_Discount_Group AS [Part Discount Group], 
                      dbo.Company_Discount_Group.Company_Discount_Group AS [Company Discount Group], dbo.PCD_Qty_Break.Quantity, 
                      dbo.PCD_Qty_Break.Discount_1 AS [Discount 1], dbo.PCD_Qty_Break.Discount_2 AS [Discount 2], dbo.PCD_Qty_Break.Discount_3 AS [Discount 3], 
                      dbo.PCD_Qty_Break.Min_Margin AS [Min Margin], dbo.PCD_Qty_Break.Parent__Part_Company_Discounts_ID, 
                      dbo.Part_Company_Discounts.Company__Company_Discount_Group_ID, dbo.Part_Company_Discounts.Part__Part_Discount_Group_ID
FROM         dbo.Part_Discount_Group RIGHT OUTER JOIN
                      dbo.Part_Company_Discounts ON 
                      dbo.Part_Discount_Group.Part_Discount_Group_ID = dbo.Part_Company_Discounts.Part__Part_Discount_Group_ID LEFT OUTER JOIN
                      dbo.Company_Discount_Group ON 
                      dbo.Part_Company_Discounts.Company__Company_Discount_Group_ID = dbo.Company_Discount_Group.Company_Discount_Group_ID RIGHT OUTER
                       JOIN
                      dbo.PCD_Qty_Break ON dbo.Part_Company_Discounts.Part_Company_Discounts_ID = dbo.PCD_Qty_Break.Parent__Part_Company_Discounts_ID

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO


--Version 646 - grid widths.sql

DELETE FROM Grid_widths WHERE (Grid_id = 'Main_listGridEX1Part_Company_Discounts False')

--Version 647 - times1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.TIMES ADD
Calculated_Effective_Hours Float(53) NULL
GO

ALTER TABLE dbo.TIMES ADD CONSTRAINT
DF_TIMES_Calculated_Effective_Hours DEFAULT 0 FOR Calculated_Effective_Hours
GO

COMMIT
GO


--Version 647 - dropviews.sql

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accounts_Credits]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accounts_Credits]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accounts_Entry_Bill_Payments]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accounts_Entry_Bill_Payments]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accounts_Entry_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accounts_Entry_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accounts_Invoices]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accounts_Invoices]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accounts_Purchase_Invoices]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accounts_Purchase_Invoices]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accounts_entry_Balance]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accounts_entry_Balance]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accts_Credit_Nominals]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accts_Credit_Nominals]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accts_Credit_Vat]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accts_Credit_Vat]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accts_Invoice_Nominals]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accts_Invoice_Nominals]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accts_Invoice_Vat]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accts_Invoice_Vat]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accts_PI_Nominals]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accts_PI_Nominals]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accts_PI_Vat]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Accts_PI_Vat]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Action_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Action_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Action_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Action_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Active_Ops]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Active_Ops]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Active_Ops_Complete]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Active_Ops_Complete]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Activity_Control_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Activity_Control_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Activity_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Activity_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Activity_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Activity_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Activity_Related_Doc_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Activity_Related_Doc_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Activity_Type_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Activity_Type_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Activity_Type_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Activity_Type_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Allocation_Outstanding]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Allocation_Outstanding]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Allocations_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Allocations_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Answer_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Answer_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Answer_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Answer_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[BillPayments]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[BillPayments]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[BillPayments_Grouped]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[BillPayments_Grouped]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Bill_Payment_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Bill_Payment_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Bom_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Bom_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Building_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Building_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Building_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Building_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[COMPANY_ADDRESS_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[COMPANY_ADDRESS_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[COMPANY_AREA_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[COMPANY_AREA_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[COMPANY_AREA_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[COMPANY_AREA_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[COMPANY_POSITIONS_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[COMPANY_POSITIONS_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CONTACT_POSITION_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[CONTACT_POSITION_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CONTACT_POSITION_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[CONTACT_POSITION_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CREDIT_TERM_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[CREDIT_TERM_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CREDIT_TERM_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[CREDIT_TERM_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Calendar_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Calendar_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Calendar_Exception_type_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Calendar_Exception_type_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Calendar_Exception_type_drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Calendar_Exception_type_drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Calendar_Exceptions_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Calendar_Exceptions_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Calendar_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Calendar_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Calendar_Records_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Calendar_Records_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Campaign_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Campaign_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Campaign_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Campaign_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CashPayments]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[CashPayments]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CashPayments_Grouped]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[CashPayments_Grouped]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Category_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Category_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Category_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Category_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CofC_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[CofC_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CofC_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[CofC_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CofC_SpecTests_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[CofC_SpecTests_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CofC_related_Docs_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[CofC_related_Docs_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Company_Balance]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Company_Balance]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Company_Discount_Group_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Company_Discount_Group_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Company_Discount_Group_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Company_Discount_Group_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Company_Ledger]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Company_Ledger]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Company_Overdue]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Company_Overdue]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Company_Positions_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Company_Positions_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Companys_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Companys_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Companys_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Companys_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Con_NOtes_Test]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Con_NOtes_Test]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contact_Marketing_Category_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contact_Marketing_Category_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contact_Marketing_Category_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contact_Marketing_Category_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contacts_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contacts_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contacts_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contacts_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contract_Allocations_Bom]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contract_Allocations_Bom]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contract_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contract_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contract_Notes_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contract_Notes_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contract_Status_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contract_Status_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contract_Status_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contract_Status_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contract_View_Po_Count]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contract_View_Po_Count]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Contract_View_Temp_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Contract_View_Temp_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Conversions_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Conversions_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Conversions_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Conversions_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Cost_Centre_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Cost_Centre_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Cost_Centre_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Cost_Centre_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Credit_Part_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Credit_Part_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Credits_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Credits_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Credits_List_With_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Credits_List_With_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Customer_Return_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Customer_Return_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Cutting_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Cutting_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Delivery_Item_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Delivery_Item_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Delivery_Item_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Delivery_Item_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Delivery_Line_In_Stock]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Delivery_Line_In_Stock]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Delivery_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Delivery_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Delivery_TimeScales_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Delivery_TimeScales_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Delivery_TimeScales_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Delivery_TimeScales_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Delivery_item_Stock_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Delivery_item_Stock_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Delivery_list_With_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Delivery_list_With_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Department_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Department_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Department_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Department_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Discounts_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Discounts_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Distinct_Part_Trans_dates]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Distinct_Part_Trans_dates]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ENQUIRY_LINES_LIST]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[ENQUIRY_LINES_LIST]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ENQUIRY_LINE_QTY_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[ENQUIRY_LINE_QTY_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ENQUIRY_RELATED_DOC_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[ENQUIRY_RELATED_DOC_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[EXPENSES_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[EXPENSES_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[EXPENSES_TYPE_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[EXPENSES_TYPE_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[EXPENSES_TYPE_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[EXPENSES_TYPE_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Employee_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Employee_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Employee_Holidays_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Employee_Holidays_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Employee_Pics]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Employee_Pics]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Employee_Shifts_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Employee_Shifts_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Employee_Training_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Employee_Training_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Employee_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Employee_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Enquiry_Line_Group_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Enquiry_Line_Group_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Enquiry_Line_Group_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Enquiry_Line_Group_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Enquiry_Lost_Reasons_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Enquiry_Lost_Reasons_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Enquiry_Lost_Reasons_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Enquiry_Lost_Reasons_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Enquiry_Part_Alias]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Enquiry_Part_Alias]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Enquiry_State_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Enquiry_State_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Enquiry_State_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Enquiry_State_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Enquirys_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Enquirys_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Enquirys_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Enquirys_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Enquirys_list_with_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Enquirys_list_with_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Ext_Location_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Ext_Location_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Ext_location_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Ext_location_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[For_Nominal_Entry_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[For_Nominal_Entry_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[For_Nominal_entry_List_with_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[For_Nominal_entry_List_with_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Form_Headers_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Form_Headers_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Grn_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Grn_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Group_Code_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Group_Code_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Group_code_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Group_code_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Help_Button_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Help_Button_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Help_Buttons_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Help_Buttons_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Holiday_Type_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Holiday_Type_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Holiday_Type_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Holiday_Type_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[INDUSTRY_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[INDUSTRY_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[INDUSTRY_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[INDUSTRY_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[INVOICES_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[INVOICES_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Ind_Pro_Charge_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Ind_Pro_Charge_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Ind_WC_Charge_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Ind_WC_Charge_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Invoice_Part_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Invoice_Part_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Invoice_Part_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Invoice_Part_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Invoice_Payment_Lines_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Invoice_Payment_Lines_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Invoice_Payment_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Invoice_Payment_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Invoices_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Invoices_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Invoices_List_With_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Invoices_List_With_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Invoices_List_With_Parts_For_Reports]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Invoices_List_With_Parts_For_Reports]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Issues_Required]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Issues_Required]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Job_Costing_Expenses_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Job_Costing_Expenses_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Job_Costing_Mat_Retn_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Job_Costing_Mat_Retn_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Job_Costing_Material_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Job_Costing_Material_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Job_Costing_Plan_Hrs_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Job_Costing_Plan_Hrs_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Job_Costing_Plan_MatSubCon]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Job_Costing_Plan_MatSubCon]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Job_Costing_Quote_Hrs_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Job_Costing_Quote_Hrs_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Job_Costing_Times_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Job_Costing_Times_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Live_Operations]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Live_Operations]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Loaction_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Loaction_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Location_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Location_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Location_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Location_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[MRP_Allocations]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[MRP_Allocations]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[MULTICURRENCY_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[MULTICURRENCY_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[MULTICURRENCY_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[MULTICURRENCY_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Material_types_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Material_types_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Material_types_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Material_types_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Misc_Issue_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Misc_Issue_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Misc_Issue_Stock_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Misc_Issue_Stock_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Misc_Receipt_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Misc_Receipt_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[NCNoofRecByTypeLast12Mths]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[NCNoofRecByTypeLast12Mths]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[NC_Action_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[NC_Action_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[NC_Action_Type_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[NC_Action_Type_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[NC_Action_Type_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[NC_Action_Type_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[NC_Related_Docs_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[NC_Related_Docs_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[NCnoofRecsLast12MonthsByOrigin]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[NCnoofRecsLast12MonthsByOrigin]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Nominal_Cost_Centre_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Nominal_Cost_Centre_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Nominal_Cost_Centre_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Nominal_Cost_Centre_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Nominal_Entry_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Nominal_Entry_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Nominal_Entry_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Nominal_Entry_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Nominal_Sub_Type_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Nominal_Sub_Type_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Nominal_Sub_Type_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Nominal_Sub_Type_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Nominals_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Nominals_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Nominals_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Nominals_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Nominals_List_with_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Nominals_List_with_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Non_Conformance_Cause_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Non_Conformance_Cause_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Non_Conformance_Cause_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Non_Conformance_Cause_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Non_Conformance_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Non_Conformance_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Non_Conformance_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Non_Conformance_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Non_Conformance_List_With_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Non_Conformance_List_With_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Non_Conformance_Origin_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Non_Conformance_Origin_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Non_Conformance_Origin_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Non_Conformance_Origin_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Non_Conformance_Type_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Non_Conformance_Type_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Non_Conformance_Type_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Non_Conformance_Type_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[OP_Types_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[OP_Types_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Op_Types_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Op_Types_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[PCD_Qty_Break_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[PCD_Qty_Break_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[PI_Item_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[PI_Item_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[PI_Receipts_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[PI_Receipts_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[POR_Status_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[POR_Status_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[POR_Status_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[POR_Status_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[PO_Oustanding]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[PO_Oustanding]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[PO_Type_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[PO_Type_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[PO_lines_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[PO_lines_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[PackingNotesForSO]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[PackingNotesForSO]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Analysis_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Analysis_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Analysis_Recs_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Analysis_Recs_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Comodity_Codes_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Comodity_Codes_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Comodity_Codes_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Comodity_Codes_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Company_Discount_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Company_Discount_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Company_Discounts_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Company_Discounts_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Discount_Group_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Discount_Group_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Discount_Group_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Discount_Group_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Flat_BOM_Manu_dRoute]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Flat_BOM_Manu_dRoute]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_History_Delivery]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_History_Delivery]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_History_Enquiry]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_History_Enquiry]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_History_Invoice]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_History_Invoice]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_History_NC]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_History_NC]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_History_PO]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_History_PO]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_History_Stock]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_History_Stock]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_History_Trans]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_History_Trans]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_History_WO]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_History_WO]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_List_with_Company]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_List_with_Company]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_Related_Doc_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_Related_Doc_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_history_Req]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_history_Req]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_history_SO]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_history_SO]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Part_revisions_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Part_revisions_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Parts_Required]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Parts_Required]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Pay_Rates_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Pay_Rates_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Pay_Rates_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Pay_Rates_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Payment_method_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Payment_method_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Payment_method_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Payment_method_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Periods_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Periods_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Po_Line_Delivery_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Po_Line_Delivery_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Po_Line_Stock_Ids]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Po_Line_Stock_Ids]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Po_Lines_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Po_Lines_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Po_Receipt_Line_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Po_Receipt_Line_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Po_Receipt_Line_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Po_Receipt_Line_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Po_Receipt_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Po_Receipt_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Po_Receipt_List_With_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Po_Receipt_List_With_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Po_Type_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Po_Type_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Predefined_Material_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Predefined_Material_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Predefined_Material_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Predefined_Material_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[PriceList_PartQtyPrice_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[PriceList_PartQtyPrice_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Price_List_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Price_List_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Price_List_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Price_List_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Price_List_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Price_List_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Process_Calendar_Exceptions_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Process_Calendar_Exceptions_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Process_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Process_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Process_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Process_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Purchase_Enquiry_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Purchase_Enquiry_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Purchase_Enquiry_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Purchase_Enquiry_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Purchase_Enquiry_Qty_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Purchase_Enquiry_Qty_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Purchase_Enquiry_Qty_With_Prices]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Purchase_Enquiry_Qty_With_Prices]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Purchase_Invoice_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Purchase_Invoice_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Purchase_Invoice_list_with_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Purchase_Invoice_list_with_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Purchase_Order_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Purchase_Order_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Purchase_Order_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Purchase_Order_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Purchase_Order_List_With_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Purchase_Order_List_With_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Purchase_Orders_Required]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Purchase_Orders_Required]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[QUOTES_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[QUOTES_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Question_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Question_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Question_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Question_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Quote_Line_Qty_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Quote_Line_Qty_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Quote_Line_Qty_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Quote_Line_Qty_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Quote_Part_Alias]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Quote_Part_Alias]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Quotes_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Quotes_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Quotes_list_with_parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Quotes_list_with_parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[RFQ_Lines_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[RFQ_Lines_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[RFQ_Lines_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[RFQ_Lines_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Report_Groups_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Report_Groups_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Report_Groups_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Report_Groups_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Reports_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Reports_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Reports_Users_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Reports_Users_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Request_For_Quote_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Request_For_Quote_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Request_For_Quote_List_With_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Request_For_Quote_List_With_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Required_Reconcile]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Required_Reconcile]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Return_To_WO_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Return_To_WO_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Return_to_Wo_Stock_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Return_to_Wo_Stock_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Return_to_supplier_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Return_to_supplier_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Return_to_supplier_Stock_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Return_to_supplier_Stock_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Route_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Route_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Route_Versions_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Route_Versions_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Route_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Route_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Route_versions_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Route_versions_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SFDC_Transactions_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[SFDC_Transactions_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SO_Del_Complete_Date]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[SO_Del_Complete_Date]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SO_Delivery_Schedule_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[SO_Delivery_Schedule_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SO_Delivery_Schedule_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[SO_Delivery_Schedule_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SO_Line_Complete_Date]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[SO_Line_Complete_Date]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sales_Ledger]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sales_Ledger]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sales_Order_Lines_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sales_Order_Lines_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sales_Order_Lines_History_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sales_Order_Lines_History_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sales_Order_Lines_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sales_Order_Lines_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sales_Related_Docs_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sales_Related_Docs_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sales_order_Part_Alias]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sales_order_Part_Alias]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sales_orders_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sales_orders_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sales_orders_list_with_parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sales_orders_list_with_parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Scheduled_Deliveries]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Scheduled_Deliveries]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Scheduling_First_OPs]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Scheduling_First_OPs]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Scheduling_Last_Ops]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Scheduling_Last_Ops]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Scheduling_Live_Ops]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Scheduling_Live_Ops]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Scrap_Reasons_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Scrap_Reasons_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Scrap_Reasons_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Scrap_Reasons_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Scrap_Types_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Scrap_Types_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Scrap_Types_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Scrap_Types_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Serial_No_Group_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Serial_No_Group_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Serial_No_Group_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Serial_No_Group_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Shift_Patterns_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Shift_Patterns_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Shifts_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Shifts_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Shifts_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Shifts_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Site_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Site_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Site_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Site_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Adjustments_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Adjustments_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Full_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Full_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Issues_Delivery]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Issues_Delivery]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Issues_Misc]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Issues_Misc]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Issues_RTS]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Issues_RTS]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Issues_RTWO]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Issues_RTWO]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Issues_WO]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Issues_WO]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Location_Ids_Grouped]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Location_Ids_Grouped]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Related_Doc_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Related_Doc_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Take_Item_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Take_Item_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Transaction_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Transaction_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_by_Location]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_by_Location]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_list_All]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_list_All]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_take_total_by_part]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_take_total_by_part]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Supplier_Group_Code_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Supplier_Group_Code_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Supplier_Part_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Supplier_Part_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Supplier_Part_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Supplier_Part_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Supplier_Part_Qty_Price_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Supplier_Part_Qty_Price_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sy_Group_Options_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sy_Group_Options_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sy_Groups_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sy_Groups_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sy_Groups_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sy_Groups_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sy_Passwords_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Sy_Passwords_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[TIME_ENTRY_RATES_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[TIME_ENTRY_RATES_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Time_Entry_Rates_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Time_Entry_Rates_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Time_in_Attendance_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Time_in_Attendance_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Times_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Times_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UDData_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[UDData_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UDData_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[UDData_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UDField_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[UDField_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UOM_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[UOM_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UOM_From_Conversion_Id]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[UOM_From_Conversion_Id]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UOM_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[UOM_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[User Buttons Visible]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[User Buttons Visible]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[User_Button_Groups]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[User_Button_Groups]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[User_Button_Specific_Groups]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[User_Button_Specific_Groups]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[User_Button_info]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[User_Button_info]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[User_Buttons_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[User_Buttons_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[User_Buttons_Select]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[User_Buttons_Select]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[User_Buttons_Select_Distinct]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[User_Buttons_Select_Distinct]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[User_Buttons_Visible_Text]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[User_Buttons_Visible_Text]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[User_Menu_Info]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[User_Menu_Info]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[User_Menu_Info_Groups]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[User_Menu_Info_Groups]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[VAT_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[VAT_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[VAT_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[VAT_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WC_Calendar_exceptions_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WC_Calendar_exceptions_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WC_Process_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WC_Process_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WIP_Stock]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WIP_Stock]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_Expenses_Cost]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_Expenses_Cost]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_Manu_Cost]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_Manu_Cost]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_Manu_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_Manu_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_Material_Cost]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_Material_Cost]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_Material_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_Material_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_Return_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_Return_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_Returns_Cost]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_Returns_Cost]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_Run]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_Run]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_Setup]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_Setup]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_SubCon_Cost]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_SubCon_Cost]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_SubCon_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_SubCon_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_SubReturn_Cost]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_SubReturn_Cost]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Actual_SubReturn_Temp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Actual_SubReturn_Temp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Manu_PO]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Manu_PO]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Material_PO]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Material_PO]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_Prod_Planned]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_Prod_Planned]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Analysis_SubCon_PO]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Analysis_SubCon_PO]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Complete_Date]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Complete_Date]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_ISSUE_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_ISSUE_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_ISSUE_STock_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_ISSUE_STock_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Issue_Part_QTy]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Issue_Part_QTy]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Op_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Op_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Operations]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Operations]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_Qty_Outstanding]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_Qty_Outstanding]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WO_RETURN_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WO_RETURN_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Week_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Week_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WipTemp]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[WipTemp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Wo_Issue_Stock_Cost]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Wo_Issue_Stock_Cost]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Wo_Receipt_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Wo_Receipt_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Wo_Route_SChedule_drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Wo_Route_SChedule_drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Wo_Route_SChedule_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Wo_Route_SChedule_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Work_Centre_Drop_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Work_Centre_Drop_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Work_Order_LSD]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Work_Order_LSD]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Work_Order_OP20_Complete]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Work_Order_OP20_Complete]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Work_Order_Op10_Complete]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Work_Order_Op10_Complete]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Work_Orders_Drop_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Work_Orders_Drop_list]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Work_Orders_List]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Work_Orders_List]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Work_Orders_List_With_Parts]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Work_Orders_List_With_Parts]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Work_Orders_Required]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Work_Orders_Required]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Work_centre_list]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Work_centre_list]
GO


--Version 648 - sales_order_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Sales_Order_Lines ADD
Packing_Qty Float(53) NULL
GO

ALTER TABLE dbo.Sales_Order_Lines ADD CONSTRAINT
DF_Sales_Order_Lines_Packing_Qty DEFAULT 0 FOR Packing_Qty
GO

COMMIT
GO


--Version 648 - companys1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANYS ADD
Default_Price_List Int NULL
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Default_Price_List DEFAULT 0 FOR Default_Price_List
GO

COMMIT
GO


--Version 648 - work_orders1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.WORK_ORDERS ADD
LOC__Wo_Route_SChedule_ID Int NULL
GO

ALTER TABLE dbo.WORK_ORDERS ADD CONSTRAINT
DF_WORK_ORDERS_LOC__Wo_Route_SChedule_ID DEFAULT 0 FOR LOC__Wo_Route_SChedule_ID
GO

COMMIT
GO


--Version 648 - so_delivery_schedule1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SO_Delivery_Schedule ADD
Packing_Qty Float(53) NULL
GO

ALTER TABLE dbo.SO_Delivery_Schedule ADD CONSTRAINT
DF_SO_Delivery_Schedule_Packing_Qty DEFAULT 0 FOR Packing_Qty
GO

COMMIT
GO


--Version 648 - po_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Po_Lines ADD
Item_No Int NULL
GO

ALTER TABLE dbo.Po_Lines ADD CONSTRAINT
DF_Po_Lines_Item_No DEFAULT 0 FOR Item_No
GO

COMMIT
GO


--Version 648 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Generate_Sage_Account Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Generate_Sage_Account DEFAULT 0 FOR Generate_Sage_Account
GO

COMMIT
GO


--Version 648 - work_orders_analysis1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Work_Orders_Analysis ADD
Actual_Manu_Returns Float(53) NULL
GO

ALTER TABLE dbo.Work_Orders_Analysis ADD CONSTRAINT
DF_Work_Orders_Analysis_Actual_Manu_Returns DEFAULT 0 FOR Actual_Manu_Returns
GO

COMMIT
GO


--Version 648 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
Packing_Qty Float(53) NULL
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Packing_Qty DEFAULT 0 FOR Packing_Qty
GO

COMMIT
GO


--Version 648 - wo_route_schedule1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Wo_Route_SChedule ADD
Notes_Non_RTF Text NULL
GO

COMMIT
GO


--Version 648 - stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock ADD
From_Po_Lines__Po_Lines_id Int NULL
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_From_Po_Lines__Po_Lines_id DEFAULT 0 FOR From_Po_Lines__Po_Lines_id
GO

COMMIT
GO


--Version 648 - bom1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Bom ADD
Date_Required_Offset Float(53) NULL
GO

ALTER TABLE dbo.Bom ADD CONSTRAINT
DF_Bom_Date_Required_Offset DEFAULT 0 FOR Date_Required_Offset
GO

COMMIT
GO


--Version 648 - pricelist_partqtyprice1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.PriceList_PartQtyPrice ADD
No_Discounts Bit NULL
GO

ALTER TABLE dbo.PriceList_PartQtyPrice ADD CONSTRAINT
DF_PriceList_PartQtyPrice_No_Discounts DEFAULT 0 FOR No_Discounts
GO

COMMIT
GO


--Version 648 - stocklocation.sql

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Stock_Location_Ids_Grouped]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [dbo].[Stock_Location_Ids_Grouped]
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

CREATE VIEW dbo.Stock_Location_Ids_Grouped
AS
SELECT     Location__location_id, Part__Part_Id, SUM(Qty) AS Qty, SUM(Total_Qty) AS QLB
FROM         dbo.Stock
WHERE     (Qty > 0)
GROUP BY Location__location_id, Part__Part_Id

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO


--Version 649 - user_messages1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.User_Messages
    (
    User_Messages_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.User_Messages ADD CONSTRAINT
    PK_User_Messages PRIMARY KEY CLUSTERED
    (
    User_Messages_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 649 - user_messages2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.User_Messages ADD
Message Varchar( 254) NULL,
Modified datetime NULL,
Modified_By int NULL,
Title Varchar( 254) NULL
GO

COMMIT
GO


--Version 649 - companys1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANYS ADD
Credits__User_Messages_ID Int NULL,
Delivery__User_Messages_ID Int NULL,
Enquiry__User_Messages_ID Int NULL,
Invoice__User_Messages_ID Int NULL,
Purchase__User_Messages_ID Int NULL,
Sales__User_Messages_ID Int NULL
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Credits__User_Messages_ID DEFAULT 0 FOR Credits__User_Messages_ID
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Delivery__User_Messages_ID DEFAULT 0 FOR Delivery__User_Messages_ID
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Enquiry__User_Messages_ID DEFAULT 0 FOR Enquiry__User_Messages_ID
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Invoice__User_Messages_ID DEFAULT 0 FOR Invoice__User_Messages_ID
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Purchase__User_Messages_ID DEFAULT 0 FOR Purchase__User_Messages_ID
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Sales__User_Messages_ID DEFAULT 0 FOR Sales__User_Messages_ID
GO

COMMIT
GO


--Version 649 - non_conformance1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Non_Conformance ADD
GRN__Grn_ID Int NULL,
Stock__Stock_ID Int NULL
GO

ALTER TABLE dbo.Non_Conformance ADD CONSTRAINT
DF_Non_Conformance_GRN__Grn_ID DEFAULT 0 FOR GRN__Grn_ID
GO

COMMIT
GO


--Version 649 - invoices1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.INVOICES ADD
SalesPerson__Employee_ID Int NULL
GO

ALTER TABLE dbo.INVOICES ADD CONSTRAINT
DF_INVOICES_SalesPerson__Employee_ID DEFAULT 0 FOR SalesPerson__Employee_ID
GO

COMMIT
GO


--Version 649 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
WO_Receipt_Batches Bit NULL
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_WO_Receipt_Batches DEFAULT 0 FOR WO_Receipt_Batches
GO

COMMIT
GO


--Version 649 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Financial_Year_Date Datetime NULL
GO

COMMIT
GO


--Version 650 - answer1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Answer ADD
Auto_Number Bit NULL,
Auto_Number_Count Int NULL,
Description Text NULL
GO

ALTER TABLE dbo.Answer ADD CONSTRAINT
DF_Answer_Auto_Number DEFAULT 0 FOR Auto_Number
GO

ALTER TABLE dbo.Answer ADD CONSTRAINT
DF_Answer_Auto_Number_Count DEFAULT 0 FOR Auto_Number_Count
GO

COMMIT
GO


--Version 650 - question1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Question ADD
Default_Answer Int NULL
GO

ALTER TABLE dbo.Question ADD CONSTRAINT
DF_Question_Default_Answer DEFAULT 0 FOR Default_Answer
GO

COMMIT
GO


--Version 650 - companys1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANYS ADD
COFC__Form_Headers_ID Int NULL,
COFC_Footer__Form_Headers_ID Int NULL,
Credits__Form_Headers_ID Int NULL,
Credits_Footer__Form_Headers_ID Int NULL,
Delivery__Form_Headers_ID Int NULL,
Delivery_Footer__Form_Headers_ID Int NULL,
Enquiry__Form_Headers_ID Int NULL,
Enquiry_Footer__Form_Headers_ID Int NULL,
Invoice__Form_Headers_ID Int NULL,
Invoice_Footer__Form_Headers_ID Int NULL,
Purchase__Form_Headers_ID Int NULL,
Purchase_Enquiry__Form_Headers_ID Int NULL,
Purchase_Enquiry_Footer__Form_Headers_ID Int NULL,
Purchase_Footer__Form_Headers_ID Int NULL,
Sales__Form_Headers_ID Int NULL,
Sales_Footer__Form_Headers_ID Int NULL
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_COFC__Form_Headers_ID DEFAULT 0 FOR COFC__Form_Headers_ID
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_COFC_Footer__Form_Headers_ID DEFAULT 0 FOR COFC_Footer__Form_Headers_ID
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Credits__Form_Headers_ID DEFAULT 0 FOR Credits__Form_Headers_ID
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Credits_Footer__Form_Headers_ID DEFAULT 0 FOR Credits_Footer__Form_Headers_ID
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Delivery__Form_Headers_ID DEFAULT 0 FOR Delivery__Form_Headers_ID
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Delivery_Footer__Form_Headers_ID DEFAULT 0 FOR Delivery_Footer__Form_Headers_ID
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Enquiry__Form_Headers_ID DEFAULT 0 FOR Enquiry__Form_Headers_ID
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Enquiry_Footer__Form_Headers_ID DEFAULT 0 FOR Enquiry_Footer__Form_Headers_ID
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Invoice__Form_Headers_ID DEFAULT 0 FOR Invoice__Form_Headers_ID
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Invoice_Footer__Form_Headers_ID DEFAULT 0 FOR Invoice_Footer__Form_Headers_ID
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Purchase__Form_Headers_ID DEFAULT 0 FOR Purchase__Form_Headers_ID
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Purchase_Enquiry__Form_Headers_ID DEFAULT 0 FOR Purchase_Enquiry__Form_Headers_ID
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Purchase_Enquiry_Footer__Form_Headers_ID DEFAULT 0 FOR Purchase_Enquiry_Footer__Form_Headers_ID
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Purchase_Footer__Form_Headers_ID DEFAULT 0 FOR Purchase_Footer__Form_Headers_ID
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Sales__Form_Headers_ID DEFAULT 0 FOR Sales__Form_Headers_ID
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Sales_Footer__Form_Headers_ID DEFAULT 0 FOR Sales_Footer__Form_Headers_ID
GO

COMMIT
GO


--Version 650 - part_picture1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Part_Picture
    (
    Part_Picture_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Part_Picture ADD CONSTRAINT
    PK_Part_Picture PRIMARY KEY CLUSTERED
    (
    Part_Picture_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 650 - part_picture2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part_Picture ADD
FileExt Varchar( 50) NULL,
Modified Datetime NULL,
Modified_By Int NULL,
Part__Part_ID Int NULL,
Part_Picture Image NULL
GO

ALTER TABLE dbo.Part_Picture ADD CONSTRAINT
DF_Part_Picture_Modified_By DEFAULT 0 FOR Modified_By
GO

ALTER TABLE dbo.Part_Picture ADD CONSTRAINT
DF_Part_Picture_Part__Part_ID DEFAULT 0 FOR Part__Part_ID
GO

COMMIT
GO


--Version 650 - accounts_system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Accounts_System ADD
Profit_Loss__Nominals_ID Int NULL
GO

ALTER TABLE dbo.Accounts_System ADD CONSTRAINT
DF_Accounts_System_Profit_Loss__Nominals_ID DEFAULT 0 FOR Profit_Loss__Nominals_ID
GO

COMMIT
GO


--Version 650 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Excel_Schedule_Path Varchar( 254) NULL,
Force_Part_Uppercase Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Force_Part_Uppercase DEFAULT 0 FOR Force_Part_Uppercase
GO

COMMIT
GO


--Version 650 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
Part__Part_Picture_ID Int NULL
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Part__Part_Picture_ID DEFAULT 0 FOR Part__Part_Picture_ID
GO

COMMIT
GO


--Version 650 - partsp.sql

CREATE PROCEDURE SPPart_Picture @id int,@p1 image  AS
UPDATE    Part_Picture
SET              Part_Picture = @p1
WHERE     (Part_Picture_id =@id)
GO

--Version 651 - misc_issue1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Misc_Issue ADD
UDF1__UDData_ID Int NULL,
UDF2__UDData_ID Int NULL,
UDF3__UDData_ID Int NULL,
UDF4__UDData_ID Int NULL,
UDF5__UDData_ID Int NULL,
UDF6__UDData_ID Int NULL
GO

ALTER TABLE dbo.Misc_Issue ADD CONSTRAINT
DF_Misc_Issue_UDF1__UDData_ID DEFAULT 0 FOR UDF1__UDData_ID
GO

ALTER TABLE dbo.Misc_Issue ADD CONSTRAINT
DF_Misc_Issue_UDF2__UDData_ID DEFAULT 0 FOR UDF2__UDData_ID
GO

ALTER TABLE dbo.Misc_Issue ADD CONSTRAINT
DF_Misc_Issue_UDF3__UDData_ID DEFAULT 0 FOR UDF3__UDData_ID
GO

ALTER TABLE dbo.Misc_Issue ADD CONSTRAINT
DF_Misc_Issue_UDF4__UDData_ID DEFAULT 0 FOR UDF4__UDData_ID
GO

ALTER TABLE dbo.Misc_Issue ADD CONSTRAINT
DF_Misc_Issue_UDF5__UDData_ID DEFAULT 0 FOR UDF5__UDData_ID
GO

ALTER TABLE dbo.Misc_Issue ADD CONSTRAINT
DF_Misc_Issue_UDF6__UDData_ID DEFAULT 0 FOR UDF6__UDData_ID
GO

COMMIT
GO


--Version 651 - companys1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANYS ADD
PO_Receipt__User_Messages_ID Int NULL
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_PO_Receipt__User_Messages_ID DEFAULT 0 FOR PO_Receipt__User_Messages_ID
GO

COMMIT
GO


--Version 651 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
Fixed_Batch_Qty Float(53) NULL
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Fixed_Batch_Qty DEFAULT 0 FOR Fixed_Batch_Qty
GO

COMMIT
GO


--Version 651 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Ignore_Stock Bit NULL,
WO_Receipt_Deliveries Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Ignore_Stock DEFAULT 0 FOR Ignore_Stock
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_WO_Receipt_Deliveries DEFAULT 0 FOR WO_Receipt_Deliveries
GO

COMMIT
GO


--Version 651 - supplier_part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Supplier_Part ADD
Charge_Out_Full_Batch_Qty Bit NULL,
Minimum_Charge Float(53) NULL,
Supplier_Fixed_Batch_Qty Float(53) NULL
GO

ALTER TABLE dbo.Supplier_Part ADD CONSTRAINT
DF_Supplier_Part_Charge_Out_Full_Batch_Qty DEFAULT 0 FOR Charge_Out_Full_Batch_Qty
GO

ALTER TABLE dbo.Supplier_Part ADD CONSTRAINT
DF_Supplier_Part_Minimum_Charge DEFAULT 0 FOR Minimum_Charge
GO

ALTER TABLE dbo.Supplier_Part ADD CONSTRAINT
DF_Supplier_Part_Supplier_Fixed_Batch_Qty DEFAULT 0 FOR Supplier_Fixed_Batch_Qty
GO

COMMIT
GO


--Version 651 - wo_issue1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.WO_ISSUE ADD
For__Allocations_ID Int NULL,
Notes_Non_RTF Text NULL
GO

ALTER TABLE dbo.WO_ISSUE ADD CONSTRAINT
DF_WO_ISSUE_For__Allocations_ID DEFAULT 0 FOR For__Allocations_ID
GO

COMMIT
GO


--Version 652 - purchase_invoice.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_Contact_id__CONTACTS_ID
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_Recieved_by
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_Currency__Currency_Id
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_Currency_Rate
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_modified_by
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_Status__Purchase_Invoice_Status_Id
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_Supplier_Address__COMPANY_ADDRESS_ID
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_Supplier__COMPANYS_ID
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_Type__PI_Type_Id
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_Credited_Total_Exc_Vat
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_Credited_Total_Inc_Vat
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_Credited_Total_Vat
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_Currency_Total_Exc_Vat
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_Currency_Total_Inc_Vat
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_Currency_Total_Vat
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_Paid_Total_Exc_Vat
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_Paid_Total_Inc_Vat
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_Paid_Total_Vat
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_System_Total_Exc_Vat
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_System_Total_Inc_Vat
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_System_Total_Vat
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_Confirmed
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_Sent_To_Accounts
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_Credit
GO
ALTER TABLE dbo.Purchase_Invoice
	DROP CONSTRAINT DF_Purchase_Invoice_Posted
GO
CREATE TABLE dbo.Tmp_Purchase_Invoice
	(
	Purchase_Invoice_ID int NOT NULL IDENTITY (1, 1),
	Contact_id__CONTACTS_ID int NULL,
	Date_Recieved datetime NULL,
	Recieved_by int NULL,
	Currency__Currency_Id int NULL,
	Currency_Rate float(53) NULL,
	Due_Date datetime NULL,
	Internal_Notes text NULL,
	Internal_Notes_non_rtf text NULL,
	modified datetime NULL,
	modified_by int NULL,
	Reference varchar(255) NULL,
	Status__Purchase_Invoice_Status_Id int NULL,
	Supplier_Address__COMPANY_ADDRESS_ID int NULL,
	Supplier__COMPANYS_ID int NULL,
	Type__PI_Type_Id int NULL,
	Credited_Total_Exc_Vat float(53) NULL,
	Credited_Total_Inc_Vat float(53) NULL,
	Credited_Total_Vat float(53) NULL,
	Currency_Total_Exc_Vat float(53) NULL,
	Currency_Total_Inc_Vat float(53) NULL,
	Currency_Total_Vat float(53) NULL,
	Paid_Total_Exc_Vat float(53) NULL,
	Paid_Total_Inc_Vat float(53) NULL,
	Paid_Total_Vat float(53) NULL,
	System_Total_Exc_Vat float(53) NULL,
	System_Total_Inc_Vat float(53) NULL,
	System_Total_Vat float(53) NULL,
	Confirmed bit NULL,
	Sent_To_Accounts bit NULL,
	Tax_Date datetime NULL,
	Credit bit NULL,
	PI_NO varchar(50) NULL,
	Posted bit NULL
	)  ON [PRIMARY]
	 TEXTIMAGE_ON [PRIMARY]
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_Contact_id__CONTACTS_ID DEFAULT (0) FOR Contact_id__CONTACTS_ID
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_Recieved_by DEFAULT (0) FOR Recieved_by
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_Currency__Currency_Id DEFAULT (0) FOR Currency__Currency_Id
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_Currency_Rate DEFAULT (0) FOR Currency_Rate
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_modified_by DEFAULT (0) FOR modified_by
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_Status__Purchase_Invoice_Status_Id DEFAULT (1) FOR Status__Purchase_Invoice_Status_Id
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_Supplier_Address__COMPANY_ADDRESS_ID DEFAULT (0) FOR Supplier_Address__COMPANY_ADDRESS_ID
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_Supplier__COMPANYS_ID DEFAULT (0) FOR Supplier__COMPANYS_ID
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_Type__PI_Type_Id DEFAULT (0) FOR Type__PI_Type_Id
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_Credited_Total_Exc_Vat DEFAULT (0) FOR Credited_Total_Exc_Vat
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_Credited_Total_Inc_Vat DEFAULT (0) FOR Credited_Total_Inc_Vat
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_Credited_Total_Vat DEFAULT (0) FOR Credited_Total_Vat
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_Currency_Total_Exc_Vat DEFAULT (0) FOR Currency_Total_Exc_Vat
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_Currency_Total_Inc_Vat DEFAULT (0) FOR Currency_Total_Inc_Vat
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_Currency_Total_Vat DEFAULT (0) FOR Currency_Total_Vat
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_Paid_Total_Exc_Vat DEFAULT (0) FOR Paid_Total_Exc_Vat
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_Paid_Total_Inc_Vat DEFAULT (0) FOR Paid_Total_Inc_Vat
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_Paid_Total_Vat DEFAULT (0) FOR Paid_Total_Vat
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_System_Total_Exc_Vat DEFAULT (0) FOR System_Total_Exc_Vat
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_System_Total_Inc_Vat DEFAULT (0) FOR System_Total_Inc_Vat
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_System_Total_Vat DEFAULT (0) FOR System_Total_Vat
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_Confirmed DEFAULT (0) FOR Confirmed
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_Sent_To_Accounts DEFAULT (0) FOR Sent_To_Accounts
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_Credit DEFAULT (0) FOR Credit
GO
ALTER TABLE dbo.Tmp_Purchase_Invoice ADD CONSTRAINT
	DF_Purchase_Invoice_Posted DEFAULT (0) FOR Posted
GO
SET IDENTITY_INSERT dbo.Tmp_Purchase_Invoice ON
GO
IF EXISTS(SELECT * FROM dbo.Purchase_Invoice)
	 EXEC('INSERT INTO dbo.Tmp_Purchase_Invoice (Purchase_Invoice_ID, Contact_id__CONTACTS_ID, Date_Recieved, Recieved_by, Currency__Currency_Id, Currency_Rate, Due_Date, Internal_Notes, Internal_Notes_non_rtf, modified, modified_by, Reference, Status__Purchase_Invoice_Status_Id, Supplier_Address__COMPANY_ADDRESS_ID, Supplier__COMPANYS_ID, Type__PI_Type_Id, Credited_Total_Exc_Vat, Credited_Total_Inc_Vat, Credited_Total_Vat, Currency_Total_Exc_Vat, Currency_Total_Inc_Vat, Currency_Total_Vat, Paid_Total_Exc_Vat, Paid_Total_Inc_Vat, Paid_Total_Vat, System_Total_Exc_Vat, System_Total_Inc_Vat, System_Total_Vat, Confirmed, Sent_To_Accounts, Tax_Date, Credit, PI_NO, Posted)
		SELECT Purchase_Invoice_ID, Contact_id__CONTACTS_ID, Date_Recieved, Recieved_by, Currency__Currency_Id, Currency_Rate, Due_Date, Internal_Notes, Internal_Notes_non_rtf, modified, modified_by, Reference, Status__Purchase_Invoice_Status_Id, Supplier_Address__COMPANY_ADDRESS_ID, Supplier__COMPANYS_ID, Type__PI_Type_Id, Credited_Total_Exc_Vat, Credited_Total_Inc_Vat, Credited_Total_Vat, Currency_Total_Exc_Vat, Currency_Total_Inc_Vat, Currency_Total_Vat, Paid_Total_Exc_Vat, Paid_Total_Inc_Vat, Paid_Total_Vat, System_Total_Exc_Vat, System_Total_Inc_Vat, System_Total_Vat, Confirmed, Sent_To_Accounts, Tax_Date, Credit, PI_NO, Posted FROM dbo.Purchase_Invoice TABLOCKX')
GO
SET IDENTITY_INSERT dbo.Tmp_Purchase_Invoice OFF
GO
DROP TABLE dbo.Purchase_Invoice
GO
EXECUTE sp_rename N'dbo.Tmp_Purchase_Invoice', N'Purchase_Invoice', 'OBJECT'
GO
ALTER TABLE dbo.Purchase_Invoice ADD CONSTRAINT
	PK_Purchase_Invoice PRIMARY KEY CLUSTERED 
	(
	Purchase_Invoice_ID
	) ON [PRIMARY]

GO
COMMIT


--Version 652 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Play_Database Bit NULL,
Update_Prices_Supplier_Qty_Break Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Play_Database DEFAULT 0 FOR Play_Database
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Update_Prices_Supplier_Qty_Break DEFAULT 0 FOR Update_Prices_Supplier_Qty_Break
GO

COMMIT
GO


--Version 652 - wo_issue_stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.WO_ISSUE_STock ADD
Qty_Used Float(53) NULL
GO

ALTER TABLE dbo.WO_ISSUE_STock ADD CONSTRAINT
DF_WO_ISSUE_STock_Qty_Used DEFAULT 0 FOR Qty_Used
GO

COMMIT
GO


--Version 653 - system2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Get_External_Accounts_Balance Bit NULL,
Process_Time_Entry_Transactions Bit NULL,
Re_Sequence_All_Ops Bit NULL,
Reconcile_All_Parts Bit NULL,
Reconcile_Packing_Qty Bit NULL,
Reconcile_Sales_Orders Bit NULL,
ReSchedule_All_WOs Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Get_External_Accounts_Balance DEFAULT 0 FOR Get_External_Accounts_Balance
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Process_Time_Entry_Transactions DEFAULT 0 FOR Process_Time_Entry_Transactions
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Re_Sequence_All_Ops DEFAULT 0 FOR Re_Sequence_All_Ops
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Reconcile_All_Parts DEFAULT 0 FOR Reconcile_All_Parts
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Reconcile_Packing_Qty DEFAULT 0 FOR Reconcile_Packing_Qty
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Reconcile_Sales_Orders DEFAULT 0 FOR Reconcile_Sales_Orders
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_ReSchedule_All_WOs DEFAULT 0 FOR ReSchedule_All_WOs
GO

COMMIT
GO


--Version 653 - report_formula.sql

INSERT INTO Report_Formulas
                      (Formula, Group_id_Report_Group_id)
VALUES     ('Print Part Analysis', 'SALES ORDERS LIST')



--Version 653 - labelrecords.sql

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[LabelRecords]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table [dbo].[LabelRecords]
GO

CREATE TABLE [dbo].[LabelRecords] (
	[NoOfLabels] [int] NULL ,
	[LinkField] [int] NULL ,
	[ID] [int] IDENTITY (1, 1) NOT NULL 
) ON [PRIMARY]
GO


--Version 653 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Friday Bit NULL,
Monday Bit NULL,
Saturday Bit NULL,
Schedule_Date Datetime NULL,
Schedule_Reconcile Int NULL,
Schedule_Time Datetime NULL,
Schedule_Time_Once Datetime NULL,
Schedule_Time_Weekly Datetime NULL,
Sunday Bit NULL,
Thursday Bit NULL,
Tuesday Bit NULL,
Wednesday Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Friday DEFAULT 0 FOR Friday
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Monday DEFAULT 0 FOR Monday
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Saturday DEFAULT 0 FOR Saturday
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Schedule_Reconcile DEFAULT 0 FOR Schedule_Reconcile
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Sunday DEFAULT 0 FOR Sunday
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Thursday DEFAULT 0 FOR Thursday
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Tuesday DEFAULT 0 FOR Tuesday
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Wednesday DEFAULT 0 FOR Wednesday
GO

COMMIT
GO


--Version 653 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
Annual_Budgeted_Qty Float(53) NULL,
Annual_Budgeted_Value Float(53) NULL,
Box_Qty Float(53) NULL,
Credit__User_Messages_ID Int NULL,
Delivery__User_Messages_ID Int NULL,
Enquiry__User_Messages_ID Int NULL,
Invoice__User_Messages_ID Int NULL,
Purchase__User_Messages_ID Int NULL,
Sales__User_Messages_ID Int NULL,
UOM_Locked Bit NULL
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Annual_Budgeted_Qty DEFAULT 0 FOR Annual_Budgeted_Qty
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Annual_Budgeted_Value DEFAULT 0 FOR Annual_Budgeted_Value
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Box_Qty DEFAULT 0 FOR Box_Qty
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Credit__User_Messages_ID DEFAULT 0 FOR Credit__User_Messages_ID
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Delivery__User_Messages_ID DEFAULT 0 FOR Delivery__User_Messages_ID
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Enquiry__User_Messages_ID DEFAULT 0 FOR Enquiry__User_Messages_ID
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Invoice__User_Messages_ID DEFAULT 0 FOR Invoice__User_Messages_ID
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Purchase__User_Messages_ID DEFAULT 0 FOR Purchase__User_Messages_ID
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Sales__User_Messages_ID DEFAULT 0 FOR Sales__User_Messages_ID
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_UOM_Locked DEFAULT 0 FOR UOM_Locked
GO

COMMIT
GO


--Version 653 - group_code1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Group_Code ADD
Annual_budgeted_Value Float(53) NULL,
Credit__User_Messages_ID Int NULL,
Delivery__User_Messages_ID Int NULL,
Enquiry__User_Messages_ID Int NULL,
Invoice__User_Messages_ID Int NULL,
Purchase__User_Messages_ID Int NULL,
Sales__User_Messages_ID Int NULL
GO

ALTER TABLE dbo.Group_Code ADD CONSTRAINT
DF_Group_Code_Annual_budgeted_Value DEFAULT 0 FOR Annual_budgeted_Value
GO

ALTER TABLE dbo.Group_Code ADD CONSTRAINT
DF_Group_Code_Credit__User_Messages_ID DEFAULT 0 FOR Credit__User_Messages_ID
GO

ALTER TABLE dbo.Group_Code ADD CONSTRAINT
DF_Group_Code_Delivery__User_Messages_ID DEFAULT 0 FOR Delivery__User_Messages_ID
GO

ALTER TABLE dbo.Group_Code ADD CONSTRAINT
DF_Group_Code_Enquiry__User_Messages_ID DEFAULT 0 FOR Enquiry__User_Messages_ID
GO

ALTER TABLE dbo.Group_Code ADD CONSTRAINT
DF_Group_Code_Invoice__User_Messages_ID DEFAULT 0 FOR Invoice__User_Messages_ID
GO

ALTER TABLE dbo.Group_Code ADD CONSTRAINT
DF_Group_Code_Purchase__User_Messages_ID DEFAULT 0 FOR Purchase__User_Messages_ID
GO

ALTER TABLE dbo.Group_Code ADD CONSTRAINT
DF_Group_Code_Sales__User_Messages_ID DEFAULT 0 FOR Sales__User_Messages_ID
GO

COMMIT
GO


--Version 653 - sy_passwords1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SY_Passwords ADD
CRM Bit NULL
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_CRM DEFAULT 0 FOR CRM
GO

COMMIT
GO


--Version 653 - sales_order_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Sales_Order_Lines ADD
Contract__User_Messages_ID Int NULL,
On_Hire Bit NULL
GO

ALTER TABLE dbo.Sales_Order_Lines ADD CONSTRAINT
DF_Sales_Order_Lines_Contract__User_Messages_ID DEFAULT 0 FOR Contract__User_Messages_ID
GO

ALTER TABLE dbo.Sales_Order_Lines ADD CONSTRAINT
DF_Sales_Order_Lines_On_Hire DEFAULT 0 FOR On_Hire
GO

COMMIT
GO


--Version 653 - companys1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANYS ADD
Description Varchar( 254) NULL
GO

COMMIT
GO


--Version 653 - stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock ADD
On_Hire Bit NULL
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_On_Hire DEFAULT 0 FOR On_Hire
GO

COMMIT
GO


--Version 654 - wo_route_schedule1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Wo_Route_SChedule ADD
Outstanding_From_Date Datetime NULL,
Work_Centre_Set Bit NULL
GO

ALTER TABLE dbo.Wo_Route_SChedule ADD CONSTRAINT
DF_Wo_Route_SChedule_Work_Centre_Set DEFAULT 0 FOR Work_Centre_Set
GO

COMMIT
GO


--Version 654 - invoice_payment1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Invoice_Payment ADD
Method__Payment_Method_ID Int NULL,
Reference Varchar( 254) NULL
GO

ALTER TABLE dbo.Invoice_Payment ADD CONSTRAINT
DF_Invoice_Payment_Method__Payment_Method_ID DEFAULT 0 FOR Method__Payment_Method_ID
GO

COMMIT
GO


--Version 655 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Add_To_A_Closed_Delivery Bit NULL,
Calculate_Actuals Bit NULL,
Force_Supplier_Ref Bit NULL,
Show_Dashboard Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Add_To_A_Closed_Delivery DEFAULT 0 FOR Add_To_A_Closed_Delivery
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Calculate_Actuals DEFAULT 0 FOR Calculate_Actuals
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Force_Supplier_Ref DEFAULT 0 FOR Force_Supplier_Ref
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Show_Dashboard DEFAULT 0 FOR Show_Dashboard
GO

COMMIT
GO


--Version 655 - times1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.TIMES ADD
Process__Process_ID Int NULL
GO

ALTER TABLE dbo.TIMES ADD CONSTRAINT
DF_TIMES_Process__Process_ID DEFAULT 0 FOR Process__Process_ID
GO

COMMIT
GO


--Version 655 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
Duty_Percentage Float(53) NULL,
Transport_Percentage Float(53) NULL
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Duty_Percentage DEFAULT 0 FOR Duty_Percentage
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Transport_Percentage DEFAULT 0 FOR Transport_Percentage
GO

COMMIT
GO


--Version 655 - group_code1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Group_Code ADD
Duty_Percentage Float(53) NULL,
Transport_Percentage Float(53) NULL
GO

ALTER TABLE dbo.Group_Code ADD CONSTRAINT
DF_Group_Code_Duty_Percentage DEFAULT 0 FOR Duty_Percentage
GO

ALTER TABLE dbo.Group_Code ADD CONSTRAINT
DF_Group_Code_Transport_Percentage DEFAULT 0 FOR Transport_Percentage
GO

COMMIT
GO


--Version 655 - po_receipt1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Po_Receipt ADD
Marked_As_Invoiced Bit NULL
GO

ALTER TABLE dbo.Po_Receipt ADD CONSTRAINT
DF_Po_Receipt_Marked_As_Invoiced DEFAULT 0 FOR Marked_As_Invoiced
GO

COMMIT
GO


--Version 655 - sy_passwords1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SY_Passwords ADD
Show_Dashboard Bit NULL
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Show_Dashboard DEFAULT 0 FOR Show_Dashboard
GO

COMMIT
GO


--Version 655 - po_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Po_Lines ADD
Marked_As_Invoiced Bit NULL
GO

ALTER TABLE dbo.Po_Lines ADD CONSTRAINT
DF_Po_Lines_Marked_As_Invoiced DEFAULT 0 FOR Marked_As_Invoiced
GO

COMMIT
GO


--Version 655 - delivery_item_stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Delivery_item_Stock ADD
Qty_Returned Float(53) NULL,
Qty_To_Return Float(53) NULL
GO

ALTER TABLE dbo.Delivery_item_Stock ADD CONSTRAINT
DF_Delivery_item_Stock_Qty_Returned DEFAULT 0 FOR Qty_Returned
GO

ALTER TABLE dbo.Delivery_item_Stock ADD CONSTRAINT
DF_Delivery_item_Stock_Qty_To_Return DEFAULT 0 FOR Qty_To_Return
GO

COMMIT
GO


--Version 656 - part_profiles1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Part_Profiles
    (
    Part_Profiles_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
    PK_Part_Profiles PRIMARY KEY CLUSTERED
    (
    Part_Profiles_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 656 - d_type1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.D_Type
    (
    D_Type_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.D_Type ADD CONSTRAINT
    PK_D_Type PRIMARY KEY CLUSTERED
    (
    D_Type_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 656 - d_type_fields1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.D_Type_Fields
    (
    D_Type_Fields_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.D_Type_Fields ADD CONSTRAINT
    PK_D_Type_Fields PRIMARY KEY CLUSTERED
    (
    D_Type_Fields_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 656 - part_attributes1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Part_Attributes
    (
    Part_Attributes_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Part_Attributes ADD CONSTRAINT
    PK_Part_Attributes PRIMARY KEY CLUSTERED
    (
    Part_Attributes_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 656 - material1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Material
    (
    Material_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Material ADD CONSTRAINT
    PK_Material PRIMARY KEY CLUSTERED
    (
    Material_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 656 - technology1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Technology
    (
    Technology_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Technology ADD CONSTRAINT
    PK_Technology PRIMARY KEY CLUSTERED
    (
    Technology_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 656 - dialectric1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Dialectric
    (
    Dialectric_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Dialectric ADD CONSTRAINT
    PK_Dialectric PRIMARY KEY CLUSTERED
    (
    Dialectric_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 656 - part_profiles2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part_Profiles ADD
Add_Nitrogen Bit NULL,
Amended_Cost_Per_Tonne Float(53) NULL,
Angle Float(53) NULL,
Breadth Float(53) NULL,
Charge_Rate1 Float(53) NULL,
Charge_Rate2 Float(53) NULL,
Charge_Rate3 Float(53) NULL,
Charge_Rate4 Float(53) NULL,
Charge_Rate5 Float(53) NULL,
Charge_Rate6 Float(53) NULL,
Cost_Per_Tonne Float(53) NULL,
Dialectric__Dialectric_ID Int NULL,
Full_Import Bit NULL,
Height Float(53) NULL,
Hole_Breadth1 Float(53) NULL,
Hole_Breadth2 Float(53) NULL,
Hole_Breadth3 Float(53) NULL,
Hole_Breadth4 Float(53) NULL,
Hole_Breadth5 Float(53) NULL,
Hole_Diameter1 Float(53) NULL,
Hole_Diameter2 Float(53) NULL,
Hole_Diameter3 Float(53) NULL,
Hole_Diameter4 Float(53) NULL,
Hole_Diameter5 Float(53) NULL,
Hole_Length1 Float(53) NULL,
Hole_Length2 Float(53) NULL,
Hole_Length3 Float(53) NULL,
Hole_Length4 Float(53) NULL,
Hole_Length5 Float(53) NULL,
Hole_Qty1 Float(53) NULL,
Hole_Qty2 Float(53) NULL,
Hole_Qty3 Float(53) NULL,
Hole_Qty4 Float(53) NULL,
Hole_Qty5 Float(53) NULL,
Inner_Diameter Float(53) NULL,
Inter_OP_Days1 Float(53) NULL,
Inter_OP_Days2 Float(53) NULL,
Inter_OP_Days3 Float(53) NULL,
Inter_OP_Days4 Float(53) NULL,
Inter_OP_Days5 Float(53) NULL,
Inter_OP_Days6 Float(53) NULL,
Length Float(53) NULL,
Material_Type__Material_ID Int NULL,
Modified datetime NULL,
Modified_By int NULL,
Outer_Diameter Float(53) NULL,
Package_Size Text NULL,
PartProfiles__D_Type_ID Int NULL,
Power Text NULL,
Process1__Process_ID Int NULL,
Process2__Process_ID Int NULL,
Process3__Process_ID Int NULL,
Process4__Process_ID Int NULL,
Process5__Process_ID Int NULL,
Process6__Process_ID Int NULL,
ROSHE Bit NULL,
SMD Bit NULL,
Supplier1__COMPANYS_ID Int NULL,
Supplier2__COMPANYS_ID Int NULL,
Supplier3__COMPANYS_ID Int NULL,
Supplier4__COMPANYS_ID Int NULL,
Supplier5__COMPANYS_ID Int NULL,
Supplier6__COMPANYS_ID Int NULL,
Technology__Technology_ID Int NULL,
Tolerance_Code Text NULL,
Tolerance_Negative Float(53) NULL,
Tolerance_Positive Float(53) NULL,
Triangle Bit NULL,
Value_Absolute Float(53) NULL,
Value_Shorthand Text NULL,
Value1 Float(53) NULL,
Value2 Float(53) NULL,
Value3 Float(53) NULL,
Value4 Float(53) NULL,
Value5 Float(53) NULL,
Value6 Float(53) NULL
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Add_Nitrogen DEFAULT 0 FOR Add_Nitrogen
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Amended_Cost_Per_Tonne DEFAULT 0 FOR Amended_Cost_Per_Tonne
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Angle DEFAULT 0 FOR Angle
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Breadth DEFAULT 0 FOR Breadth
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Charge_Rate1 DEFAULT 0 FOR Charge_Rate1
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Charge_Rate2 DEFAULT 0 FOR Charge_Rate2
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Charge_Rate3 DEFAULT 0 FOR Charge_Rate3
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Charge_Rate4 DEFAULT 0 FOR Charge_Rate4
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Charge_Rate5 DEFAULT 0 FOR Charge_Rate5
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Charge_Rate6 DEFAULT 0 FOR Charge_Rate6
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Cost_Per_Tonne DEFAULT 0 FOR Cost_Per_Tonne
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Dialectric__Dialectric_ID DEFAULT 0 FOR Dialectric__Dialectric_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Full_Import DEFAULT 0 FOR Full_Import
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Height DEFAULT 0 FOR Height
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Hole_Breadth1 DEFAULT 0 FOR Hole_Breadth1
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Hole_Breadth2 DEFAULT 0 FOR Hole_Breadth2
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Hole_Breadth3 DEFAULT 0 FOR Hole_Breadth3
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Hole_Breadth4 DEFAULT 0 FOR Hole_Breadth4
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Hole_Breadth5 DEFAULT 0 FOR Hole_Breadth5
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Hole_Diameter1 DEFAULT 0 FOR Hole_Diameter1
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Hole_Diameter2 DEFAULT 0 FOR Hole_Diameter2
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Hole_Diameter3 DEFAULT 0 FOR Hole_Diameter3
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Hole_Diameter4 DEFAULT 0 FOR Hole_Diameter4
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Hole_Diameter5 DEFAULT 0 FOR Hole_Diameter5
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Hole_Length1 DEFAULT 0 FOR Hole_Length1
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Hole_Length2 DEFAULT 0 FOR Hole_Length2
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Hole_Length3 DEFAULT 0 FOR Hole_Length3
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Hole_Length4 DEFAULT 0 FOR Hole_Length4
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Hole_Length5 DEFAULT 0 FOR Hole_Length5
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Hole_Qty1 DEFAULT 0 FOR Hole_Qty1
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Hole_Qty2 DEFAULT 0 FOR Hole_Qty2
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Hole_Qty3 DEFAULT 0 FOR Hole_Qty3
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Hole_Qty4 DEFAULT 0 FOR Hole_Qty4
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Hole_Qty5 DEFAULT 0 FOR Hole_Qty5
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Inner_Diameter DEFAULT 0 FOR Inner_Diameter
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Inter_OP_Days1 DEFAULT 0 FOR Inter_OP_Days1
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Inter_OP_Days2 DEFAULT 0 FOR Inter_OP_Days2
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Inter_OP_Days3 DEFAULT 0 FOR Inter_OP_Days3
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Inter_OP_Days4 DEFAULT 0 FOR Inter_OP_Days4
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Inter_OP_Days5 DEFAULT 0 FOR Inter_OP_Days5
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Inter_OP_Days6 DEFAULT 0 FOR Inter_OP_Days6
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Length DEFAULT 0 FOR Length
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Material_Type__Material_ID DEFAULT 0 FOR Material_Type__Material_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Outer_Diameter DEFAULT 0 FOR Outer_Diameter
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_PartProfiles__D_Type_ID DEFAULT 0 FOR PartProfiles__D_Type_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Process1__Process_ID DEFAULT 0 FOR Process1__Process_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Process2__Process_ID DEFAULT 0 FOR Process2__Process_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Process3__Process_ID DEFAULT 0 FOR Process3__Process_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Process4__Process_ID DEFAULT 0 FOR Process4__Process_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Process5__Process_ID DEFAULT 0 FOR Process5__Process_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Process6__Process_ID DEFAULT 0 FOR Process6__Process_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_ROSHE DEFAULT 0 FOR ROSHE
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_SMD DEFAULT 0 FOR SMD
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Supplier1__COMPANYS_ID DEFAULT 0 FOR Supplier1__COMPANYS_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Supplier2__COMPANYS_ID DEFAULT 0 FOR Supplier2__COMPANYS_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Supplier3__COMPANYS_ID DEFAULT 0 FOR Supplier3__COMPANYS_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Supplier4__COMPANYS_ID DEFAULT 0 FOR Supplier4__COMPANYS_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Supplier5__COMPANYS_ID DEFAULT 0 FOR Supplier5__COMPANYS_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Supplier6__COMPANYS_ID DEFAULT 0 FOR Supplier6__COMPANYS_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Technology__Technology_ID DEFAULT 0 FOR Technology__Technology_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Tolerance_Negative DEFAULT 0 FOR Tolerance_Negative
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Tolerance_Positive DEFAULT 0 FOR Tolerance_Positive
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Triangle DEFAULT 0 FOR Triangle
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Value_Absolute DEFAULT 0 FOR Value_Absolute
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Value1 DEFAULT 0 FOR Value1
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Value2 DEFAULT 0 FOR Value2
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Value3 DEFAULT 0 FOR Value3
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Value4 DEFAULT 0 FOR Value4
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Value5 DEFAULT 0 FOR Value5
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Value6 DEFAULT 0 FOR Value6
GO

COMMIT
GO


--Version 656 - d_type2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.D_Type ADD
D_Type_Name Varchar( 255) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

COMMIT
GO


--Version 656 - d_type_fields2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.D_Type_Fields ADD
Field_Name Varchar( 254) NULL,
Modified datetime NULL,
Modified_By int NULL,
Order_No Int NULL,
Parent__D_Type_ID Int NULL,
Visible Bit NULL
GO

ALTER TABLE dbo.D_Type_Fields ADD CONSTRAINT
DF_D_Type_Fields_Order_No DEFAULT 0 FOR Order_No
GO

ALTER TABLE dbo.D_Type_Fields ADD CONSTRAINT
DF_D_Type_Fields_Parent__D_Type_ID DEFAULT 0 FOR Parent__D_Type_ID
GO

ALTER TABLE dbo.D_Type_Fields ADD CONSTRAINT
DF_D_Type_Fields_Visible DEFAULT 0 FOR Visible
GO

COMMIT
GO


--Version 656 - part_attributes2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part_Attributes ADD
Display_Type_ID Int NULL,
Modified datetime NULL,
Modified_By int NULL,
Part_ID Int NULL
GO

ALTER TABLE dbo.Part_Attributes ADD CONSTRAINT
DF_Part_Attributes_Display_Type_ID DEFAULT 0 FOR Display_Type_ID
GO

ALTER TABLE dbo.Part_Attributes ADD CONSTRAINT
DF_Part_Attributes_Part_ID DEFAULT 0 FOR Part_ID
GO

COMMIT
GO


--Version 656 - technology2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Technology ADD
Description Varchar( 255) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

COMMIT
GO


--Version 656 - material2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Material ADD
Cost_Per_Tonne Float(53) NULL,
Description Varchar( 255) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

ALTER TABLE dbo.Material ADD CONSTRAINT
DF_Material_Cost_Per_Tonne DEFAULT 0 FOR Cost_Per_Tonne
GO

COMMIT
GO


--Version 656 - dialectric2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Dialectric ADD
Description Varchar( 255) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

COMMIT
GO


--Version 656 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
Part_Profile_ID Int NULL
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Part_Profile_ID DEFAULT 0 FOR Part_Profile_ID
GO

COMMIT
GO


--Version 657 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
PO_Receipt__User_Messages_ID Int NULL,
Work_Orders__User_Messages_ID Int NULL
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_PO_Receipt__User_Messages_ID DEFAULT 0 FOR PO_Receipt__User_Messages_ID
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Work_Orders__User_Messages_ID DEFAULT 0 FOR Work_Orders__User_Messages_ID
GO

COMMIT
GO


--Version 658 - report_formula.sql

INSERT INTO Report_Formulas
                      (Formula, Group_id_Report_Group_id)
VALUES     ('Print Contract And BOM', 'SALES ORDERS LIST')

--Version 658 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Lock_Receive_And_Complete Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Lock_Receive_And_Complete DEFAULT 0 FOR Lock_Receive_And_Complete
GO

COMMIT
GO


--Version 659 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Add_Journal_Entries Bit NULL,
Use_Quick_WO_List Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Add_Journal_Entries DEFAULT 0 FOR Add_Journal_Entries
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Use_Quick_WO_List DEFAULT 0 FOR Use_Quick_WO_List
GO

COMMIT
GO


--Version 659 - part_profiles1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part_Profiles ADD
No_Of_Pins Float(53) NULL,
Machine_Assembly_Time Float(53) NULL,
Manual_Assembly_Time Float(53) NULL
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_No_Of_Pins DEFAULT 0 FOR No_Of_Pins
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Machine_Assembly_Time DEFAULT 0 FOR Machine_Assembly_Time
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Manual_Assembly_Time DEFAULT 0 FOR Manual_Assembly_Time
GO

COMMIT
GO


--Version 659 - invoice_payment1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Invoice_Payment ADD
Discount Float(53) NULL
GO

ALTER TABLE dbo.Invoice_Payment ADD CONSTRAINT
DF_Invoice_Payment_Discount DEFAULT 0 FOR Discount
GO

COMMIT
GO


--Version 659 - accounts_system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Accounts_System ADD
Discounts__Nominals_ID Int NULL
GO

ALTER TABLE dbo.Accounts_System ADD CONSTRAINT
DF_Accounts_System_Discounts__Nominals_ID DEFAULT 0 FOR Discounts__Nominals_ID
GO

COMMIT
GO


--Version 659 - cofc_material_temp.sql

CREATE TABLE [dbo].[CofC_Material_Temp] (
	[WO_Issue_Stock_ID] [int] NULL ,
	[User_ID] [int] NULL ,
	[ID] [int] IDENTITY (1, 1) NOT NULL 
) ON [PRIMARY]
GO


--Version 660 - po_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Po_Lines ADD
Value_Invoiced Float(53) NULL,
Value_Credited Float(53) NULL,
VAT_Invoiced Float(53) NULL,
VAT_Credited Float(53) NULL,
Qty_Credited Float(53) NULL,
Credited Bit NULL
GO

ALTER TABLE dbo.Po_Lines ADD CONSTRAINT
DF_Po_Lines_Value_Invoiced DEFAULT 0 FOR Value_Invoiced
GO

ALTER TABLE dbo.Po_Lines ADD CONSTRAINT
DF_Po_Lines_Value_Credited DEFAULT 0 FOR Value_Credited
GO

ALTER TABLE dbo.Po_Lines ADD CONSTRAINT
DF_Po_Lines_VAT_Invoiced DEFAULT 0 FOR VAT_Invoiced
GO

ALTER TABLE dbo.Po_Lines ADD CONSTRAINT
DF_Po_Lines_VAT_Credited DEFAULT 0 FOR VAT_Credited
GO

ALTER TABLE dbo.Po_Lines ADD CONSTRAINT
DF_Po_Lines_Qty_Credited DEFAULT 0 FOR Qty_Credited
GO

ALTER TABLE dbo.Po_Lines ADD CONSTRAINT
DF_Po_Lines_Credited DEFAULT 0 FOR Credited
GO

COMMIT
GO


--Version 660 - part_profiles1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part_Profiles ADD
Tube_Diameter Float(53) NULL,
Wall_Thickness Float(53) NULL,
Part_Length Float(53) NULL,
Tube_Length1 Float(53) NULL,
Tube_Length2 Float(53) NULL,
No_Mitres Float(53) NULL,
Profile_Qty Float(53) NULL,
Profile_Length Float(53) NULL,
Additional_Perimeter Float(53) NULL,
Additional_Piercings Float(53) NULL,
Feed_Rate Float(53) NULL
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Tube_Diameter DEFAULT 0 FOR Tube_Diameter
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Wall_Thickness DEFAULT 0 FOR Wall_Thickness
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Part_Length DEFAULT 0 FOR Part_Length
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Tube_Length1 DEFAULT 0 FOR Tube_Length1
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Tube_Length2 DEFAULT 0 FOR Tube_Length2
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_No_Mitres DEFAULT 0 FOR No_Mitres
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Profile_Qty DEFAULT 0 FOR Profile_Qty
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Profile_Length DEFAULT 0 FOR Profile_Length
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Additional_Perimeter DEFAULT 0 FOR Additional_Perimeter
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Additional_Piercings DEFAULT 0 FOR Additional_Piercings
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Feed_Rate DEFAULT 0 FOR Feed_Rate
GO

COMMIT
GO


--Version 660 - pi_item1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.PI_Item ADD
Value_Credited Float(53) NULL,
VAT_Credited Float(53) NULL
GO

ALTER TABLE dbo.PI_Item ADD CONSTRAINT
DF_PI_Item_Value_Credited DEFAULT 0 FOR Value_Credited
GO

ALTER TABLE dbo.PI_Item ADD CONSTRAINT
DF_PI_Item_VAT_Credited DEFAULT 0 FOR VAT_Credited
GO

COMMIT
GO


--Version 660 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Use_External_Scheduler Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Use_External_Scheduler DEFAULT 0 FOR Use_External_Scheduler
GO

COMMIT
GO


--Version 661 - stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock ADD
Part_Description_On_Receipt Text NULL,
On_Hire_Qty Float(53) NULL
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_On_Hire_Qty DEFAULT 0 FOR On_Hire_Qty
GO

COMMIT
GO


--Version 661 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Existing_Company_Account Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Existing_Company_Account DEFAULT 0 FOR Existing_Company_Account
GO

COMMIT
GO


--Version 661 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
Average_Stock_Cost Float(53) NULL
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Average_Stock_Cost DEFAULT 0 FOR Average_Stock_Cost
GO

COMMIT
GO


--Version 662 - stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock ADD
Part_Notes Text NULL
GO

COMMIT
GO


--Version 662 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
Std_Material_Cost Float(53) NULL,
Std_Labour_Cost Float(53) NULL,
Std_Overhead_Cost Float(53) NULL
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Std_Material_Cost DEFAULT 0 FOR Std_Material_Cost
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Std_Labour_Cost DEFAULT 0 FOR Std_Labour_Cost
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Std_Overhead_Cost DEFAULT 0 FOR Std_Overhead_Cost
GO

COMMIT
GO


--Version 662 - part_picture1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part_Picture ADD
Part_Picture2 Image NULL,
Part_Picture3 Image NULL,
Part_Picture4 Image NULL,
Part_Picture5 Image NULL,
Part_Picture6 Image NULL
GO

COMMIT
GO


--Version 662 - sppart_picture2.sql

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SPPart_Picture2]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[SPPart_Picture2]
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

CREATE PROCEDURE SPPart_Picture2 @id int,@p2 image  AS
UPDATE    Part_Picture
SET              Part_Picture2 = @p2
WHERE     (Part_Picture_id =@id)
GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO


--Version 662 - sppart_picture3.sql

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SPPart_Picture3]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[SPPart_Picture3]
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

CREATE PROCEDURE SPPart_Picture3 @id int,@p3 image  AS
UPDATE    Part_Picture
SET              Part_Picture3 = @p3
WHERE     (Part_Picture_id =@id)
GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO


--Version 662 - sppart_picture4.sql

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SPPart_Picture4]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[SPPart_Picture4]
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

CREATE PROCEDURE SPPart_Picture4 @id int,@p4 image  AS
UPDATE    Part_Picture
SET              Part_Picture4 = @p4
WHERE     (Part_Picture_id =@id)
GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO


--Version 662 - sppart_picture5.sql

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SPPart_Picture5]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[SPPart_Picture5]
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

CREATE PROCEDURE SPPart_Picture5 @id int,@p5 image  AS
UPDATE    Part_Picture
SET              Part_Picture5 = @p5
WHERE     (Part_Picture_id =@id)
GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO


--Version 662 - sppart_picture6.sql

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SPPart_Picture6]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[SPPart_Picture6]
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

CREATE PROCEDURE SPPart_Picture6 @id int,@p6 image  AS
UPDATE    Part_Picture
SET              Part_Picture6 = @p6
WHERE     (Part_Picture_id =@id)
GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO


--Version 663 - d_type_fields1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.D_Type_Fields ADD
Caption Varchar( 254) NULL,
Control_Type Text NULL
GO

COMMIT
GO


--Version 663 - sy_passwords1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SY_Passwords ADD
Receive_In_Full Bit NULL
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Receive_In_Full DEFAULT 0 FOR Receive_In_Full
GO

COMMIT
GO


--Version 664 - stock_transaction_type.sql

INSERT INTO Stock_Transaction_Type
                      (Transaction_Type)
VALUES     ('Stock Adjustment')


--Version 664 - stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock ADD
C_Min Float(53) NULL,
C_Max Float(53) NULL,
Si_Min Float(53) NULL,
Si_Max Float(53) NULL,
Mn_Min Float(53) NULL,
Mn_Max Float(53) NULL,
P_Min Float(53) NULL,
P_Max Float(53) NULL,
S_Min Float(53) NULL,
S_Max Float(53) NULL,
CR_Min Float(53) NULL,
CR_Max Float(53) NULL,
Ni_Min Float(53) NULL,
Ni_Max Float(53) NULL,
Al_Min Float(53) NULL,
Al_Max Float(53) NULL,
Cu_Min Float(53) NULL,
Cu_Max Float(53) NULL,
Sn_Min Float(53) NULL,
Sn_Max Float(53) NULL,
V_Min Float(53) NULL,
V_Max Float(53) NULL,
Nb_Min Float(53) NULL,
Nb_Max Float(53) NULL,
N_Min Float(53) NULL,
N_Max Float(53) NULL,
Co_Min Float(53) NULL,
Co_Max Float(53) NULL,
Ta_Min Float(53) NULL,
Ta_Max Float(53) NULL,
B_Min Float(53) NULL,
B_Max Float(53) NULL,
C_Eq_Min Float(53) NULL,
C_Eq_Max Float(53) NULL,
Material_Review_Board Bit NULL
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_C_Min DEFAULT 0 FOR C_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_C_Max DEFAULT 0 FOR C_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Si_Min DEFAULT 0 FOR Si_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Si_Max DEFAULT 0 FOR Si_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Mn_Min DEFAULT 0 FOR Mn_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Mn_Max DEFAULT 0 FOR Mn_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_P_Min DEFAULT 0 FOR P_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_P_Max DEFAULT 0 FOR P_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_S_Min DEFAULT 0 FOR S_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_S_Max DEFAULT 0 FOR S_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_CR_Min DEFAULT 0 FOR CR_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_CR_Max DEFAULT 0 FOR CR_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Ni_Min DEFAULT 0 FOR Ni_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Ni_Max DEFAULT 0 FOR Ni_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Al_Min DEFAULT 0 FOR Al_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Al_Max DEFAULT 0 FOR Al_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Cu_Min DEFAULT 0 FOR Cu_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Cu_Max DEFAULT 0 FOR Cu_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Sn_Min DEFAULT 0 FOR Sn_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Sn_Max DEFAULT 0 FOR Sn_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_V_Min DEFAULT 0 FOR V_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_V_Max DEFAULT 0 FOR V_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Nb_Min DEFAULT 0 FOR Nb_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Nb_Max DEFAULT 0 FOR Nb_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_N_Min DEFAULT 0 FOR N_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_N_Max DEFAULT 0 FOR N_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Co_Min DEFAULT 0 FOR Co_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Co_Max DEFAULT 0 FOR Co_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Ta_Min DEFAULT 0 FOR Ta_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Ta_Max DEFAULT 0 FOR Ta_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_B_Min DEFAULT 0 FOR B_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_B_Max DEFAULT 0 FOR B_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_C_Eq_Min DEFAULT 0 FOR C_Eq_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_C_Eq_Max DEFAULT 0 FOR C_Eq_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Material_Review_Board DEFAULT 0 FOR Material_Review_Board
GO

COMMIT
GO


--Version 664 - stock_transaction1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock_Transaction ADD
WO_ID Int NULL,
PO_Line_ID Int NULL,
Delivery_Item_ID Int NULL
GO

ALTER TABLE dbo.Stock_Transaction ADD CONSTRAINT
DF_Stock_Transaction_WO_ID DEFAULT 0 FOR WO_ID
GO

ALTER TABLE dbo.Stock_Transaction ADD CONSTRAINT
DF_Stock_Transaction_PO_Line_ID DEFAULT 0 FOR PO_Line_ID
GO

ALTER TABLE dbo.Stock_Transaction ADD CONSTRAINT
DF_Stock_Transaction_Delivery_Item_ID DEFAULT 0 FOR Delivery_Item_ID
GO

COMMIT
GO


--Version 664 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
PI__User_Messages_ID Int NULL
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_PI__User_Messages_ID DEFAULT 0 FOR PI__User_Messages_ID
GO

COMMIT
GO


--Version 664 - supplier_part_qty_price1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Supplier_Part_Qty_Price ADD
Price_Per_Tonne Float(53) NULL
GO

ALTER TABLE dbo.Supplier_Part_Qty_Price ADD CONSTRAINT
DF_Supplier_Part_Qty_Price_Price_Per_Tonne DEFAULT 0 FOR Price_Per_Tonne
GO

COMMIT
GO


--Version 664 - contacts1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.CONTACTS ADD
Left_Employment Bit NULL
GO

ALTER TABLE dbo.CONTACTS ADD CONSTRAINT
DF_CONTACTS_Left_Employment DEFAULT 0 FOR Left_Employment
GO

COMMIT
GO


--Version 664 - po_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Po_Lines ADD
Price_Per_Tonne Float(53) NULL
GO

ALTER TABLE dbo.Po_Lines ADD CONSTRAINT
DF_Po_Lines_Price_Per_Tonne DEFAULT 0 FOR Price_Per_Tonne
GO

COMMIT
GO


--Version 664 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Force_MRB Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Force_MRB DEFAULT 0 FOR Force_MRB
GO

COMMIT
GO


--Version 664 - companys1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANYS ADD
PI__User_Messages_ID Int NULL
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_PI__User_Messages_ID DEFAULT 0 FOR PI__User_Messages_ID
GO

COMMIT
GO


--Version 664 - sy_passwords1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SY_Passwords ADD
Force_MRB Bit NULL
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Force_MRB DEFAULT 0 FOR Force_MRB
GO

COMMIT
GO


--Version 665 - mrp_temp.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.MRP_Temp
	(
	Date_Required datetime NULL,
	Part_ID int NULL,
	Required float(53) NULL,
	WO float(53) NULL,
	POLine float(53) NULL,
	Stock float(53) NULL,
                LineBalance float(53) NULL,
	PWO float(53) NULL,
	PRequired float(53) NULL,
	PBalance float(53) NULL,
	Balance float(53) NULL
	)  ON [PRIMARY]
GO
COMMIT




--Version 665 - stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock ADD
Al_ThirdPartyResultsTwo Float(53) NULL,
B_ThirdPartyResultsTwo Float(53) NULL,
C_ThirdPartyResultsTwo Float(53) NULL,
Co_ThirdPartyResultsTwo Float(53) NULL,
CR_ThirdPartyResultsTwo Float(53) NULL,
Cu_ThirdPartyResultsTwo Float(53) NULL,
Mn_ThirdPartyResultsTwo Float(53) NULL,
Mo_ThirdPartyResultsTwo Float(53) NULL,
N_ThirdPartyResultsTwo Float(53) NULL,
Nb_ThirdPartyResultsTwo Float(53) NULL,
Ni_ThirdPartyResultsTwo Float(53) NULL,
P_ThirdPartyResultsTwo Float(53) NULL,
S_ThirdPartyResultsTwo Float(53) NULL,
Si_ThirdPartyResultsTwo Float(53) NULL,
Sn_ThirdPartyResultsTwo Float(53) NULL,
Ta_ThirdPartyResultsTwo Float(53) NULL,
Ti_SupplierResults Float(53) NULL,
Ti_ThirdPartyResultsOne Float(53) NULL,
Ti_ThirdPartyResultsTwo Float(53) NULL,
V_ThirdPartyResultsTwo Float(53) NULL,
ThirdPartyResultsOne__COMPANYS_ID Int NULL,
ThirdPartyResultsTwo__COMPANYS_ID Int NULL
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Al_ThirdPartyResultsTwo DEFAULT 0 FOR Al_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_B_ThirdPartyResultsTwo DEFAULT 0 FOR B_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_C_ThirdPartyResultsTwo DEFAULT 0 FOR C_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Co_ThirdPartyResultsTwo DEFAULT 0 FOR Co_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_CR_ThirdPartyResultsTwo DEFAULT 0 FOR CR_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Cu_ThirdPartyResultsTwo DEFAULT 0 FOR Cu_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Mn_ThirdPartyResultsTwo DEFAULT 0 FOR Mn_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Mo_ThirdPartyResultsTwo DEFAULT 0 FOR Mo_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_N_ThirdPartyResultsTwo DEFAULT 0 FOR N_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Nb_ThirdPartyResultsTwo DEFAULT 0 FOR Nb_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Ni_ThirdPartyResultsTwo DEFAULT 0 FOR Ni_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_P_ThirdPartyResultsTwo DEFAULT 0 FOR P_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_S_ThirdPartyResultsTwo DEFAULT 0 FOR S_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Si_ThirdPartyResultsTwo DEFAULT 0 FOR Si_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Sn_ThirdPartyResultsTwo DEFAULT 0 FOR Sn_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Ta_ThirdPartyResultsTwo DEFAULT 0 FOR Ta_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Ti_SupplierResults DEFAULT 0 FOR Ti_SupplierResults
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Ti_ThirdPartyResultsOne DEFAULT 0 FOR Ti_ThirdPartyResultsOne
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Ti_ThirdPartyResultsTwo DEFAULT 0 FOR Ti_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_V_ThirdPartyResultsTwo DEFAULT 0 FOR V_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_ThirdPartyResultsOne__COMPANYS_ID DEFAULT 0 FOR ThirdPartyResultsOne__COMPANYS_ID
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_ThirdPartyResultsTwo__COMPANYS_ID DEFAULT 0 FOR ThirdPartyResultsTwo__COMPANYS_ID
GO

COMMIT
GO


--Version 665 - part_profiles1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part_Profiles ADD
Info1__General_Info_ID Int NULL,
Info10__General_Info_ID Int NULL,
Info11__General_Info_ID Int NULL,
Info12__General_Info_ID Int NULL,
Info13__General_Info_ID Int NULL,
Info14__General_Info_ID Int NULL,
Info15__General_Info_ID Int NULL,
Info16__General_Info_ID Int NULL,
Info17__General_Info_ID Int NULL,
Info18__General_Info_ID Int NULL,
Info19__General_Info_ID Int NULL,
Info2__General_Info_ID Int NULL,
Info20__General_Info_ID Int NULL,
Info3__General_Info_ID Int NULL,
Info4__General_Info_ID Int NULL,
Info5__General_Info_ID Int NULL,
Info6__General_Info_ID Int NULL,
Info7__General_Info_ID Int NULL,
Info8__General_Info_ID Int NULL,
Info9__General_Info_ID Int NULL
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Info1__General_Info_ID DEFAULT 0 FOR Info1__General_Info_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Info10__General_Info_ID DEFAULT 0 FOR Info10__General_Info_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Info11__General_Info_ID DEFAULT 0 FOR Info11__General_Info_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Info12__General_Info_ID DEFAULT 0 FOR Info12__General_Info_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Info13__General_Info_ID DEFAULT 0 FOR Info13__General_Info_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Info14__General_Info_ID DEFAULT 0 FOR Info14__General_Info_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Info15__General_Info_ID DEFAULT 0 FOR Info15__General_Info_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Info16__General_Info_ID DEFAULT 0 FOR Info16__General_Info_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Info17__General_Info_ID DEFAULT 0 FOR Info17__General_Info_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Info18__General_Info_ID DEFAULT 0 FOR Info18__General_Info_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Info19__General_Info_ID DEFAULT 0 FOR Info19__General_Info_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Info2__General_Info_ID DEFAULT 0 FOR Info2__General_Info_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Info20__General_Info_ID DEFAULT 0 FOR Info20__General_Info_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Info3__General_Info_ID DEFAULT 0 FOR Info3__General_Info_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Info4__General_Info_ID DEFAULT 0 FOR Info4__General_Info_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Info5__General_Info_ID DEFAULT 0 FOR Info5__General_Info_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Info6__General_Info_ID DEFAULT 0 FOR Info6__General_Info_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Info7__General_Info_ID DEFAULT 0 FOR Info7__General_Info_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Info8__General_Info_ID DEFAULT 0 FOR Info8__General_Info_ID
GO

ALTER TABLE dbo.Part_Profiles ADD CONSTRAINT
DF_Part_Profiles_Info9__General_Info_ID DEFAULT 0 FOR Info9__General_Info_ID
GO

COMMIT
GO


--Version 665 - general_info1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.General_Info
    (
    General_Info_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.General_Info ADD CONSTRAINT
    PK_General_Info PRIMARY KEY CLUSTERED
    (
    General_Info_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 665 - general_info2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.General_Info ADD
Description Varchar( 255) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

COMMIT
GO


--Version 665 - purchase_enquiry1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Purchase_Enquiry ADD
Created Datetime NULL,
Created_By Int NULL
GO

ALTER TABLE dbo.Purchase_Enquiry ADD CONSTRAINT
DF_Purchase_Enquiry_Created_By DEFAULT 0 FOR Created_By
GO

COMMIT
GO


--Version 665 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Force_PO_Reference Bit NULL,
Force_ShowBatches_On_Delivery Bit NULL,
Price_Request_By_Employee Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Force_PO_Reference DEFAULT 0 FOR Force_PO_Reference
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Force_ShowBatches_On_Delivery DEFAULT 0 FOR Force_ShowBatches_On_Delivery
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Price_Request_By_Employee DEFAULT 0 FOR Price_Request_By_Employee
GO

COMMIT
GO


--Version 665 - request_for_quote1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Request_For_Quote ADD
Created Datetime NULL,
Created_By Int NULL
GO

ALTER TABLE dbo.Request_For_Quote ADD CONSTRAINT
DF_Request_For_Quote_Created_By DEFAULT 0 FOR Created_By
GO

COMMIT
GO


--Version 665 - wo_issue_stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.WO_ISSUE_STock ADD
Qty_Returned Float(53) NULL
GO

ALTER TABLE dbo.WO_ISSUE_STock ADD CONSTRAINT
DF_WO_ISSUE_STock_Qty_Returned DEFAULT 0 FOR Qty_Returned
GO

COMMIT
GO


--Version 665 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
Landed_Cost Float(53) NULL
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Landed_Cost DEFAULT 0 FOR Landed_Cost
GO

COMMIT
GO


--Version 667 - stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock ADD
Consignment_Stock Bit NULL
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Consignment_Stock DEFAULT 0 FOR Consignment_Stock
GO

COMMIT
GO


--Version 667 - po_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Po_Lines ADD
Consignment_Stock Bit NULL
GO

ALTER TABLE dbo.Po_Lines ADD CONSTRAINT
DF_Po_Lines_Consignment_Stock DEFAULT 0 FOR Consignment_Stock
GO

COMMIT
GO


--Version 667 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
Kit_Issue Bit NULL
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Kit_Issue DEFAULT 0 FOR Kit_Issue
GO

COMMIT
GO


--Version 667 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Force_PI_Reference Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Force_PI_Reference DEFAULT 0 FOR Force_PI_Reference
GO

COMMIT
GO


--Version 667 - kit_issue.sql

UPDATE Part SET Kit_Issue = 1

--Version 667 - stock_transaction1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock_Transaction ADD
Notes_Non_RTF Text NULL
GO

COMMIT
GO



--Version 668 - report_formulas.sql

INSERT INTO Report_Formulas
                      (Formula, Group_id_Report_Group_id, On_all)
VALUES     ('Print Part Costing', 'DELIVERY LIST', 0)



--Version 668 - report_formulas2.sql

INSERT INTO Report_Formulas
                      (Formula, Group_id_Report_Group_id, On_all)
VALUES     ('Run Calculate Actuals', 'WORK ORDERS LIST', 0)




--Version 668 - general_info31.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.General_Info3
    (
    General_Info3_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.General_Info3 ADD CONSTRAINT
    PK_General_Info3 PRIMARY KEY CLUSTERED
    (
    General_Info3_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 668 - general_info32.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.General_Info3 ADD
Description Varchar( 255) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

COMMIT
GO


--Version 668 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Building_Specific_Issues Bit NULL,
Stock_Take_With_Locations Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Building_Specific_Issues DEFAULT 0 FOR Building_Specific_Issues
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Stock_Take_With_Locations DEFAULT 0 FOR Stock_Take_With_Locations
GO

COMMIT
GO


--Version 668 - wo_issue1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.WO_ISSUE ADD
Building__Building_ID Int NULL
GO

ALTER TABLE dbo.WO_ISSUE ADD CONSTRAINT
DF_WO_ISSUE_Building__Building_ID DEFAULT 0 FOR Building__Building_ID
GO

COMMIT
GO


--Version 668 - misc_issue1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Misc_Issue ADD
Building__Building_ID Int NULL,
By_Stock_Take Bit NULL,
Scrap Bit NULL
GO

ALTER TABLE dbo.Misc_Issue ADD CONSTRAINT
DF_Misc_Issue_Building__Building_ID DEFAULT 0 FOR Building__Building_ID
GO

ALTER TABLE dbo.Misc_Issue ADD CONSTRAINT
DF_Misc_Issue_By_Stock_Take DEFAULT 0 FOR By_Stock_Take
GO

ALTER TABLE dbo.Misc_Issue ADD CONSTRAINT
DF_Misc_Issue_Scrap DEFAULT 0 FOR Scrap
GO

COMMIT
GO


--Version 668 - return_to_supplier1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Return_to_supplier ADD
Building__Building_ID Int NULL
GO

ALTER TABLE dbo.Return_to_supplier ADD CONSTRAINT
DF_Return_to_supplier_Building__Building_ID DEFAULT 0 FOR Building__Building_ID
GO

COMMIT
GO


--Version 668 - delivery_item1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Delivery_Item ADD
Building__Building_ID Int NULL
GO

ALTER TABLE dbo.Delivery_Item ADD CONSTRAINT
DF_Delivery_Item_Building__Building_ID DEFAULT 0 FOR Building__Building_ID
GO

COMMIT
GO


--Version 668 - return_to_wo1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Return_To_WO ADD
Building__Building_ID Int NULL
GO

ALTER TABLE dbo.Return_To_WO ADD CONSTRAINT
DF_Return_To_WO_Building__Building_ID DEFAULT 0 FOR Building__Building_ID
GO

COMMIT
GO


--Version 668 - stock_transaction1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock_Transaction ADD
By_Stock_Take Bit NULL,
Scrap Bit NULL
GO

ALTER TABLE dbo.Stock_Transaction ADD CONSTRAINT
DF_Stock_Transaction_By_Stock_Take DEFAULT 0 FOR By_Stock_Take
GO

ALTER TABLE dbo.Stock_Transaction ADD CONSTRAINT
DF_Stock_Transaction_Scrap DEFAULT 0 FOR Scrap
GO

COMMIT
GO


--Version 668 - stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock ADD
Building__Building_ID Int NULL
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Building__Building_ID DEFAULT 0 FOR Building__Building_ID
GO

COMMIT
GO


--Version 668 - activity1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Activity ADD
WORK_ORDERS__WORK_ORDERS_ID Int NULL
GO

ALTER TABLE dbo.Activity ADD CONSTRAINT
DF_Activity_WORK_ORDERS__WORK_ORDERS_ID DEFAULT 0 FOR WORK_ORDERS__WORK_ORDERS_ID
GO

COMMIT
GO


--Version 668 - work_orders1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.WORK_ORDERS ADD
Building__Building_ID Int NULL
GO

ALTER TABLE dbo.WORK_ORDERS ADD CONSTRAINT
DF_WORK_ORDERS_Building__Building_ID DEFAULT 0 FOR Building__Building_ID
GO

COMMIT
GO


--Version 668 - contacts1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.CONTACTS ADD
Next_Date Datetime NULL,
Note_RTF Text NULL
GO

COMMIT
GO


--Version 668 - general_info11.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.General_Info1
    (
    General_Info1_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.General_Info1 ADD CONSTRAINT
    PK_General_Info1 PRIMARY KEY CLUSTERED
    (
    General_Info1_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 668 - misc_receipt1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Misc_Receipt ADD
By_Stock_Take Bit NULL
GO

ALTER TABLE dbo.Misc_Receipt ADD CONSTRAINT
DF_Misc_Receipt_By_Stock_Take DEFAULT 0 FOR By_Stock_Take
GO

COMMIT
GO


--Version 668 - general_info21.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.General_Info2
    (
    General_Info2_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.General_Info2 ADD CONSTRAINT
    PK_General_Info2 PRIMARY KEY CLUSTERED
    (
    General_Info2_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 668 - stock_take_type1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Stock_Take_Type
    (
    Stock_Take_Type_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Stock_Take_Type ADD CONSTRAINT
    PK_Stock_Take_Type PRIMARY KEY CLUSTERED
    (
    Stock_Take_Type_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 668 - stock_take_type2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock_Take_Type ADD
Frequency Float(53) NULL,
Modified datetime NULL,
Modified_By int NULL,
Name Varchar( 254) NULL
GO

ALTER TABLE dbo.Stock_Take_Type ADD CONSTRAINT
DF_Stock_Take_Type_Frequency DEFAULT 0 FOR Frequency
GO

COMMIT
GO


--Version 668 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
Last_StockTake_Date Datetime NULL,
Qty_In_Stock_After_StockTake Float(53) NULL,
Qty_In_Stock_Before_StockTake Float(53) NULL,
StockTake__Stock_Take_Type_ID Int NULL
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Qty_In_Stock_After_StockTake DEFAULT 0 FOR Qty_In_Stock_After_StockTake
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Qty_In_Stock_Before_StockTake DEFAULT 0 FOR Qty_In_Stock_Before_StockTake
GO

COMMIT
GO


--Version 668 - general_info41.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.General_Info4
    (
    General_Info4_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.General_Info4 ADD CONSTRAINT
    PK_General_Info4 PRIMARY KEY CLUSTERED
    (
    General_Info4_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 668 - general_info51.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.General_Info5
    (
    General_Info5_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.General_Info5 ADD CONSTRAINT
    PK_General_Info5 PRIMARY KEY CLUSTERED
    (
    General_Info5_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 668 - kit_issue.sql

UPDATE Part SET Kit_Issue = 1

--Version 668 - general_info12.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.General_Info1 ADD
Description Varchar( 255) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

COMMIT
GO


--Version 668 - general_info22.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.General_Info2 ADD
Description Varchar( 255) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

COMMIT
GO


--Version 668 - general_info42.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.General_Info4 ADD
Description Varchar( 255) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

COMMIT
GO


--Version 668 - general_info52.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.General_Info5 ADD
Description Varchar( 255) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

COMMIT
GO


--Version 669 - sales_orders1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SALES_ORDERS ADD
End_User_Id__CONTACTS Int NULL,
UDF1__UDData_ID Int NULL,
UDF2__UDData_ID Int NULL,
UDF3__UDData_ID Int NULL,
UDF4__UDData_ID Int NULL,
UDF5__UDData_ID Int NULL,
UDF6__UDData_ID Int NULL
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_End_User_Id__CONTACTS DEFAULT 0 FOR End_User_Id__CONTACTS
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_UDF1__UDData_ID DEFAULT 0 FOR UDF1__UDData_ID
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_UDF2__UDData_ID DEFAULT 0 FOR UDF2__UDData_ID
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_UDF3__UDData_ID DEFAULT 0 FOR UDF3__UDData_ID
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_UDF4__UDData_ID DEFAULT 0 FOR UDF4__UDData_ID
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_UDF5__UDData_ID DEFAULT 0 FOR UDF5__UDData_ID
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_UDF6__UDData_ID DEFAULT 0 FOR UDF6__UDData_ID
GO

COMMIT
GO


--Version 669 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Resize_SO_For_UDFs Bit NULL,
Two_Decimal_Places_PI_Line_VAT Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Resize_SO_For_UDFs DEFAULT 0 FOR Resize_SO_For_UDFs
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Two_Decimal_Places_PI_Line_VAT DEFAULT 0 FOR Two_Decimal_Places_PI_Line_VAT
GO

COMMIT
GO


--Version 670 - stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock ADD
Austenise__Heat_Treatments_ID Int NULL,
Austenise_Degrees Float(53) NULL,
Austenise_Hours Float(53) NULL,
Elongation_Percentage Float(53) NULL,
Fe_Max Float(53) NULL,
Fe_Min Float(53) NULL,
Fe_ThirdPartyResultsTwo Float(53) NULL,
Hardness Float(53) NULL,
Hardness__Hardness_ID Int NULL,
Hardness_Max Float(53) NULL,
Hardness_Min Float(53) NULL,
HardnessMax__Hardness_ID Int NULL,
HardnessMin__Hardness_ID Int NULL,
Impact1 Float(53) NULL,
Impact1__Impact_ID Int NULL,
Impact2 Float(53) NULL,
Impact2__Impact_ID Int NULL,
Impact3 Float(53) NULL,
Impact3__Impact_ID Int NULL,
Mg_Max Float(53) NULL,
Mg_Min Float(53) NULL,
Mg_ThirdPartyResultsTwo Float(53) NULL,
Normalise__Heat_Treatments_ID Int NULL,
Normalise_Degrees Float(53) NULL,
Normalise_Hours Float(53) NULL,
Pb_Max Float(53) NULL,
Pb_Min Float(53) NULL,
Pb_ThirdPartyResultsTwo Float(53) NULL,
Reduction_Percentage Float(53) NULL,
Se_Max Float(53) NULL,
Se_Min Float(53) NULL,
Se_ThirdPartyResultsTwo Float(53) NULL,
Temper__Heat_Treatments_ID Int NULL,
Temper_Degrees Float(53) NULL,
Temper_Hours Float(53) NULL,
Tensile Float(53) NULL,
Tensile__Tensile_ID Int NULL,
W_Max Float(53) NULL,
W_Min Float(53) NULL,
W_ThirdPartyResultsTwo Float(53) NULL,
Yield1 Float(53) NULL,
Yield1__Tensile_ID Int NULL,
Yield2 Float(53) NULL,
Yield2__Tensile_ID Int NULL,
Zn_Max Float(53) NULL,
Zn_Min Float(53) NULL,
Zn_ThirdPartyResultsTwo Float(53) NULL
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Austenise__Heat_Treatments_ID DEFAULT 0 FOR Austenise__Heat_Treatments_ID
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Austenise_Degrees DEFAULT 0 FOR Austenise_Degrees
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Austenise_Hours DEFAULT 0 FOR Austenise_Hours
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Elongation_Percentage DEFAULT 0 FOR Elongation_Percentage
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Fe_Max DEFAULT 0 FOR Fe_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Fe_Min DEFAULT 0 FOR Fe_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Fe_ThirdPartyResultsTwo DEFAULT 0 FOR Fe_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Hardness DEFAULT 0 FOR Hardness
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Hardness__Hardness_ID DEFAULT 0 FOR Hardness__Hardness_ID
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Hardness_Max DEFAULT 0 FOR Hardness_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Hardness_Min DEFAULT 0 FOR Hardness_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_HardnessMax__Hardness_ID DEFAULT 0 FOR HardnessMax__Hardness_ID
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_HardnessMin__Hardness_ID DEFAULT 0 FOR HardnessMin__Hardness_ID
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Impact1 DEFAULT 0 FOR Impact1
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Impact1__Impact_ID DEFAULT 0 FOR Impact1__Impact_ID
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Impact2 DEFAULT 0 FOR Impact2
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Impact2__Impact_ID DEFAULT 0 FOR Impact2__Impact_ID
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Impact3 DEFAULT 0 FOR Impact3
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Impact3__Impact_ID DEFAULT 0 FOR Impact3__Impact_ID
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Mg_Max DEFAULT 0 FOR Mg_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Mg_Min DEFAULT 0 FOR Mg_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Mg_ThirdPartyResultsTwo DEFAULT 0 FOR Mg_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Normalise__Heat_Treatments_ID DEFAULT 0 FOR Normalise__Heat_Treatments_ID
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Normalise_Degrees DEFAULT 0 FOR Normalise_Degrees
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Normalise_Hours DEFAULT 0 FOR Normalise_Hours
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Pb_Max DEFAULT 0 FOR Pb_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Pb_Min DEFAULT 0 FOR Pb_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Pb_ThirdPartyResultsTwo DEFAULT 0 FOR Pb_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Reduction_Percentage DEFAULT 0 FOR Reduction_Percentage
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Se_Max DEFAULT 0 FOR Se_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Se_Min DEFAULT 0 FOR Se_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Se_ThirdPartyResultsTwo DEFAULT 0 FOR Se_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Temper__Heat_Treatments_ID DEFAULT 0 FOR Temper__Heat_Treatments_ID
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Temper_Degrees DEFAULT 0 FOR Temper_Degrees
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Temper_Hours DEFAULT 0 FOR Temper_Hours
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Tensile DEFAULT 0 FOR Tensile
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Tensile__Tensile_ID DEFAULT 0 FOR Tensile__Tensile_ID
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_W_Max DEFAULT 0 FOR W_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_W_Min DEFAULT 0 FOR W_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_W_ThirdPartyResultsTwo DEFAULT 0 FOR W_ThirdPartyResultsTwo
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Yield1 DEFAULT 0 FOR Yield1
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Yield1__Tensile_ID DEFAULT 0 FOR Yield1__Tensile_ID
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Yield2 DEFAULT 0 FOR Yield2
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Yield2__Tensile_ID DEFAULT 0 FOR Yield2__Tensile_ID
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Zn_Max DEFAULT 0 FOR Zn_Max
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Zn_Min DEFAULT 0 FOR Zn_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Zn_ThirdPartyResultsTwo DEFAULT 0 FOR Zn_ThirdPartyResultsTwo
GO

COMMIT
GO


--Version 670 - impact1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Impact
    (
    Impact_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Impact ADD CONSTRAINT
    PK_Impact PRIMARY KEY CLUSTERED
    (
    Impact_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 670 - impact2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Impact ADD
Modified datetime NULL,
Modified_By int NULL,
Unit Varchar( 254) NULL
GO

COMMIT
GO


--Version 670 - heat_treatments1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Heat_Treatments
    (
    Heat_Treatments_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Heat_Treatments ADD CONSTRAINT
    PK_Heat_Treatments PRIMARY KEY CLUSTERED
    (
    Heat_Treatments_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 670 - heat_treatments2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Heat_Treatments ADD
Modified datetime NULL,
Modified_By int NULL,
Value Varchar( 254) NULL
GO

COMMIT
GO


--Version 670 - tensile1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Tensile
    (
    Tensile_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Tensile ADD CONSTRAINT
    PK_Tensile PRIMARY KEY CLUSTERED
    (
    Tensile_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 670 - hardness1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Hardness
    (
    Hardness_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Hardness ADD CONSTRAINT
    PK_Hardness PRIMARY KEY CLUSTERED
    (
    Hardness_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 670 - hardness2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Hardness ADD
Modified datetime NULL,
Modified_By int NULL,
Unit Varchar( 254) NULL
GO

COMMIT
GO


--Version 670 - sy_passwords1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SY_Passwords ADD
WO_Quick_List Bit NULL
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_WO_Quick_List DEFAULT 0 FOR WO_Quick_List
GO

COMMIT
GO


--Version 670 - tensile2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Tensile ADD
Modified datetime NULL,
Modified_By int NULL,
Unit Varchar( 254) NULL
GO

COMMIT
GO


--Version 671 - buttongroup.sql

UPDATE Buttons SET [Group] = 15 WHERE ([Button id] = 43)



--Version 671 - specification1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Specification
    (
    Specification_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
    PK_Specification PRIMARY KEY CLUSTERED
    (
    Specification_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 671 - specification2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Specification ADD
Al Bit NULL,
Al_Max Float(53) NULL,
Al_Min Float(53) NULL,
Austenise Bit NULL,
Austenise_Max Float(53) NULL,
Austenise_Min Float(53) NULL,
B Bit NULL,
B_Max Float(53) NULL,
B_Min Float(53) NULL,
C Bit NULL,
C_Max Float(53) NULL,
C_Min Float(53) NULL,
Co Bit NULL,
Co_Max Float(53) NULL,
Co_Min Float(53) NULL,
CR Bit NULL,
CR_Max Float(53) NULL,
CR_Min Float(53) NULL,
Created Datetime NULL,
Created_By Int NULL,
Cu Bit NULL,
Cu_Max Float(53) NULL,
Cu_Min Float(53) NULL,
Elongation Bit NULL,
Elongation_Max Float(53) NULL,
Elongation_Min Float(53) NULL,
Fe Bit NULL,
Fe_Max Float(53) NULL,
Fe_Min Float(53) NULL,
Filter Text NULL,
Hardness Bit NULL,
Hardness_Max Float(53) NULL,
Hardness_Min Float(53) NULL,
Impact_Avg Bit NULL,
Impact_Avg_Max Float(53) NULL,
Impact_Avg_Min Float(53) NULL,
Impact_Min Bit NULL,
Impact_Min_Max Float(53) NULL,
Impact_Min_Min Float(53) NULL,
Impact_Temp Bit NULL,
Impact_Temp_Max Float(53) NULL,
Impact_Temp_Min Float(53) NULL,
Impact1 Bit NULL,
Impact1_Max Float(53) NULL,
Impact1_Min Float(53) NULL,
Impact2 Bit NULL,
Impact2_Max Float(53) NULL,
Impact2_Min Float(53) NULL,
Impact3 Bit NULL,
Impact3_Max Float(53) NULL,
Impact3_Min Float(53) NULL,
Max Bit NULL,
Max_Max Float(53) NULL,
Max_Min Float(53) NULL,
Mg Bit NULL,
Mg_Max Float(53) NULL,
Mg_Min Float(53) NULL,
Min Bit NULL,
Min_Max Float(53) NULL,
Min_Min Float(53) NULL,
Mn Bit NULL,
Mn_Max Float(53) NULL,
Mn_Min Float(53) NULL,
Mo Bit NULL,
Mo_Max Float(53) NULL,
Mo_Min Float(53) NULL,
Modified datetime NULL,
Modified_By int NULL,
N Bit NULL,
N_Max Float(53) NULL,
N_Min Float(53) NULL,
Name Varchar( 254) NULL,
Nb Bit NULL,
Nb_Max Float(53) NULL,
Nb_Min Float(53) NULL,
Ni Bit NULL,
Ni_Max Float(53) NULL,
Ni_Min Float(53) NULL,
Normalise Bit NULL,
Normalise_Max Float(53) NULL,
Normalise_Min Float(53) NULL,
P Bit NULL,
P_Max Float(53) NULL,
P_Min Float(53) NULL,
Pb Bit NULL,
Pb_Max Float(53) NULL,
Pb_Min Float(53) NULL,
Reduction Bit NULL,
Reduction_Max Float(53) NULL,
Reduction_Min Float(53) NULL,
S Bit NULL,
S_Max Float(53) NULL,
S_Min Float(53) NULL,
Se Bit NULL,
Se_Max Float(53) NULL,
Se_Min Float(53) NULL,
Si Bit NULL,
Si_Max Float(53) NULL,
Si_Min Float(53) NULL,
Sn Bit NULL,
Sn_Max Float(53) NULL,
Sn_Min Float(53) NULL,
Ta Bit NULL,
Ta_Max Float(53) NULL,
Ta_Min Float(53) NULL,
Temper Bit NULL,
Temper_Max Float(53) NULL,
Temper_Min Float(53) NULL,
Tensile Bit NULL,
Tensile_Max Float(53) NULL,
Tensile_Min Float(53) NULL,
Ti Bit NULL,
Ti_Max Float(53) NULL,
Ti_Min Float(53) NULL,
V Bit NULL,
V_Max Float(53) NULL,
V_Min Float(53) NULL,
W Bit NULL,
W_Max Float(53) NULL,
W_Min Float(53) NULL,
Yield1 Bit NULL,
Yield1_Max Float(53) NULL,
Yield1_Min Float(53) NULL,
Yield2 Bit NULL,
Yield2_Max Float(53) NULL,
Yield2_Min Float(53) NULL,
Zn Bit NULL,
Zn_Max Float(53) NULL,
Zn_Min Float(53) NULL
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Al DEFAULT 0 FOR Al
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Al_Max DEFAULT 0 FOR Al_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Al_Min DEFAULT 0 FOR Al_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Austenise DEFAULT 0 FOR Austenise
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Austenise_Max DEFAULT 0 FOR Austenise_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Austenise_Min DEFAULT 0 FOR Austenise_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_B DEFAULT 0 FOR B
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_B_Max DEFAULT 0 FOR B_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_B_Min DEFAULT 0 FOR B_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_C DEFAULT 0 FOR C
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_C_Max DEFAULT 0 FOR C_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_C_Min DEFAULT 0 FOR C_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Co DEFAULT 0 FOR Co
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Co_Max DEFAULT 0 FOR Co_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Co_Min DEFAULT 0 FOR Co_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_CR DEFAULT 0 FOR CR
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_CR_Max DEFAULT 0 FOR CR_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_CR_Min DEFAULT 0 FOR CR_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Created_By DEFAULT 0 FOR Created_By
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Cu DEFAULT 0 FOR Cu
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Cu_Max DEFAULT 0 FOR Cu_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Cu_Min DEFAULT 0 FOR Cu_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Elongation DEFAULT 0 FOR Elongation
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Elongation_Max DEFAULT 0 FOR Elongation_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Elongation_Min DEFAULT 0 FOR Elongation_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Fe DEFAULT 0 FOR Fe
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Fe_Max DEFAULT 0 FOR Fe_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Fe_Min DEFAULT 0 FOR Fe_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Hardness DEFAULT 0 FOR Hardness
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Hardness_Max DEFAULT 0 FOR Hardness_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Hardness_Min DEFAULT 0 FOR Hardness_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Impact_Avg DEFAULT 0 FOR Impact_Avg
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Impact_Avg_Max DEFAULT 0 FOR Impact_Avg_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Impact_Avg_Min DEFAULT 0 FOR Impact_Avg_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Impact_Min DEFAULT 0 FOR Impact_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Impact_Min_Max DEFAULT 0 FOR Impact_Min_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Impact_Min_Min DEFAULT 0 FOR Impact_Min_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Impact_Temp DEFAULT 0 FOR Impact_Temp
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Impact_Temp_Max DEFAULT 0 FOR Impact_Temp_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Impact_Temp_Min DEFAULT 0 FOR Impact_Temp_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Impact1 DEFAULT 0 FOR Impact1
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Impact1_Max DEFAULT 0 FOR Impact1_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Impact1_Min DEFAULT 0 FOR Impact1_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Impact2 DEFAULT 0 FOR Impact2
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Impact2_Max DEFAULT 0 FOR Impact2_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Impact2_Min DEFAULT 0 FOR Impact2_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Impact3 DEFAULT 0 FOR Impact3
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Impact3_Max DEFAULT 0 FOR Impact3_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Impact3_Min DEFAULT 0 FOR Impact3_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Max DEFAULT 0 FOR Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Max_Max DEFAULT 0 FOR Max_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Max_Min DEFAULT 0 FOR Max_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Mg DEFAULT 0 FOR Mg
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Mg_Max DEFAULT 0 FOR Mg_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Mg_Min DEFAULT 0 FOR Mg_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Min DEFAULT 0 FOR Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Min_Max DEFAULT 0 FOR Min_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Min_Min DEFAULT 0 FOR Min_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Mn DEFAULT 0 FOR Mn
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Mn_Max DEFAULT 0 FOR Mn_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Mn_Min DEFAULT 0 FOR Mn_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Mo DEFAULT 0 FOR Mo
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Mo_Max DEFAULT 0 FOR Mo_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Mo_Min DEFAULT 0 FOR Mo_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_N DEFAULT 0 FOR N
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_N_Max DEFAULT 0 FOR N_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_N_Min DEFAULT 0 FOR N_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Nb DEFAULT 0 FOR Nb
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Nb_Max DEFAULT 0 FOR Nb_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Nb_Min DEFAULT 0 FOR Nb_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Ni DEFAULT 0 FOR Ni
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Ni_Max DEFAULT 0 FOR Ni_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Ni_Min DEFAULT 0 FOR Ni_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Normalise DEFAULT 0 FOR Normalise
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Normalise_Max DEFAULT 0 FOR Normalise_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Normalise_Min DEFAULT 0 FOR Normalise_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_P DEFAULT 0 FOR P
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_P_Max DEFAULT 0 FOR P_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_P_Min DEFAULT 0 FOR P_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Pb DEFAULT 0 FOR Pb
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Pb_Max DEFAULT 0 FOR Pb_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Pb_Min DEFAULT 0 FOR Pb_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Reduction DEFAULT 0 FOR Reduction
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Reduction_Max DEFAULT 0 FOR Reduction_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Reduction_Min DEFAULT 0 FOR Reduction_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_S DEFAULT 0 FOR S
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_S_Max DEFAULT 0 FOR S_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_S_Min DEFAULT 0 FOR S_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Se DEFAULT 0 FOR Se
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Se_Max DEFAULT 0 FOR Se_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Se_Min DEFAULT 0 FOR Se_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Si DEFAULT 0 FOR Si
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Si_Max DEFAULT 0 FOR Si_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Si_Min DEFAULT 0 FOR Si_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Sn DEFAULT 0 FOR Sn
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Sn_Max DEFAULT 0 FOR Sn_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Sn_Min DEFAULT 0 FOR Sn_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Ta DEFAULT 0 FOR Ta
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Ta_Max DEFAULT 0 FOR Ta_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Ta_Min DEFAULT 0 FOR Ta_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Temper DEFAULT 0 FOR Temper
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Temper_Max DEFAULT 0 FOR Temper_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Temper_Min DEFAULT 0 FOR Temper_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Tensile DEFAULT 0 FOR Tensile
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Tensile_Max DEFAULT 0 FOR Tensile_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Tensile_Min DEFAULT 0 FOR Tensile_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Ti DEFAULT 0 FOR Ti
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Ti_Max DEFAULT 0 FOR Ti_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Ti_Min DEFAULT 0 FOR Ti_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_V DEFAULT 0 FOR V
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_V_Max DEFAULT 0 FOR V_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_V_Min DEFAULT 0 FOR V_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_W DEFAULT 0 FOR W
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_W_Max DEFAULT 0 FOR W_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_W_Min DEFAULT 0 FOR W_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Yield1 DEFAULT 0 FOR Yield1
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Yield1_Max DEFAULT 0 FOR Yield1_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Yield1_Min DEFAULT 0 FOR Yield1_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Yield2 DEFAULT 0 FOR Yield2
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Yield2_Max DEFAULT 0 FOR Yield2_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Yield2_Min DEFAULT 0 FOR Yield2_Min
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Zn DEFAULT 0 FOR Zn
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Zn_Max DEFAULT 0 FOR Zn_Max
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Zn_Min DEFAULT 0 FOR Zn_Min
GO

COMMIT
GO


--Version 671 - stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock ADD
Cert__Certification_Standard_ID Int NULL,
Impact_Avg Float(53) NULL,
Impact_Min Float(53) NULL,
Impact_Temp Float(53) NULL,
Material_Notes Text NULL,
Material_Notes_Non_Rtf Text NULL,
Sampling_Method Varchar( 254) NULL,
Ultrasonic_Tests Varchar( 254) NULL
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Cert__Certification_Standard_ID DEFAULT 0 FOR Cert__Certification_Standard_ID
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Impact_Avg DEFAULT 0 FOR Impact_Avg
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Impact_Min DEFAULT 0 FOR Impact_Min
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Impact_Temp DEFAULT 0 FOR Impact_Temp
GO

COMMIT
GO


--Version 671 - certification_standard1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Certification_Standard
    (
    Certification_Standard_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Certification_Standard ADD CONSTRAINT
    PK_Certification_Standard PRIMARY KEY CLUSTERED
    (
    Certification_Standard_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 671 - certification_standard2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Certification_Standard ADD
Modified datetime NULL,
Modified_By int NULL,
Unit Varchar( 254) NULL
GO

COMMIT
GO


--Version 671 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Part_Mask Varchar( 20) NULL,
System_Hardness__UOM_ID Int NULL,
System_Impact__UOM_ID Int NULL,
System_Tensile__UOM_ID Int NULL,
WO_Mask Varchar( 20) NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_System_Hardness__UOM_ID DEFAULT 0 FOR System_Hardness__UOM_ID
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_System_Tensile__UOM_ID DEFAULT 0 FOR System_Tensile__UOM_ID
GO

COMMIT
GO


--Version 671 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
Equivalent_Size Float(53) NULL
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Equivalent_Size DEFAULT 0 FOR Equivalent_Size
GO

COMMIT
GO


--Version 672 - drawing_related_docs1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Drawing_Related_Docs
    (
    Drawing_Related_Docs_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Drawing_Related_Docs ADD CONSTRAINT
    PK_Drawing_Related_Docs PRIMARY KEY CLUSTERED
    (
    Drawing_Related_Docs_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 672 - drawing_related_docs2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Drawing_Related_Docs ADD
Against__Drawing_No_ID Int NULL,
Description Varchar( 254) NULL,
Description_Path Varchar( 254) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

ALTER TABLE dbo.Drawing_Related_Docs ADD CONSTRAINT
DF_Drawing_Related_Docs_Against__Drawing_No_ID DEFAULT 0 FOR Against__Drawing_No_ID
GO

COMMIT
GO


--Version 672 - drawing_type1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Drawing_Type
    (
    Drawing_Type_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Drawing_Type ADD CONSTRAINT
    PK_Drawing_Type PRIMARY KEY CLUSTERED
    (
    Drawing_Type_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 672 - drawing_type2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Drawing_Type ADD
Modified datetime NULL,
Modified_By int NULL,
Type Varchar( 254) NULL
GO

COMMIT
GO


--Version 672 - drawing_no1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Drawing_No
    (
    Drawing_No_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Drawing_No ADD CONSTRAINT
    PK_Drawing_No PRIMARY KEY CLUSTERED
    (
    Drawing_No_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 672 - drawing_no2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Drawing_No ADD
Contact__Employee_ID Int NULL,
Customer__CONTACTS_ID Int NULL,
Customer_Approved Bit NULL,
Drawing_No Varchar( 254) NULL,
Goods_For_Production Bit NULL,
Internal_Use_Only Bit NULL,
Modified datetime NULL,
Modified_By int NULL,
Notes Text NULL,
Notes_Non_RTF Text NULL,
Reason_For_Change Text NULL,
Status__Drawing_Status_ID Int NULL,
Type__Drawing_Type_ID Int NULL
GO

ALTER TABLE dbo.Drawing_No ADD CONSTRAINT
DF_Drawing_No_Contact__Employee_ID DEFAULT 0 FOR Contact__Employee_ID
GO

ALTER TABLE dbo.Drawing_No ADD CONSTRAINT
DF_Drawing_No_Customer__CONTACTS_ID DEFAULT 0 FOR Customer__CONTACTS_ID
GO

ALTER TABLE dbo.Drawing_No ADD CONSTRAINT
DF_Drawing_No_Customer_Approved DEFAULT 0 FOR Customer_Approved
GO

ALTER TABLE dbo.Drawing_No ADD CONSTRAINT
DF_Drawing_No_Goods_For_Production DEFAULT 0 FOR Goods_For_Production
GO

ALTER TABLE dbo.Drawing_No ADD CONSTRAINT
DF_Drawing_No_Internal_Use_Only DEFAULT 0 FOR Internal_Use_Only
GO

ALTER TABLE dbo.Drawing_No ADD CONSTRAINT
DF_Drawing_No_Status__Drawing_Status_ID DEFAULT 0 FOR Status__Drawing_Status_ID
GO

ALTER TABLE dbo.Drawing_No ADD CONSTRAINT
DF_Drawing_No_Type__Drawing_Type_ID DEFAULT 0 FOR Type__Drawing_Type_ID
GO

COMMIT
GO


--Version 672 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
Drawing__Drawing_No_ID Int NULL,
Spec__Specification_ID Int NULL
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Drawing__Drawing_No_ID DEFAULT 0 FOR Drawing__Drawing_No_ID
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Spec__Specification_ID DEFAULT 0 FOR Spec__Specification_ID
GO

COMMIT
GO


--Version 672 - drawing_status1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Drawing_Status
    (
    Drawing_Status_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Drawing_Status ADD CONSTRAINT
    PK_Drawing_Status PRIMARY KEY CLUSTERED
    (
    Drawing_Status_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 672 - drawing_status2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Drawing_Status ADD
Modified datetime NULL,
Modified_By int NULL,
Status Varchar( 254) NULL
GO

COMMIT
GO


--Version 672 - ultrasonic1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Ultrasonic
    (
    Ultrasonic_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Ultrasonic ADD CONSTRAINT
    PK_Ultrasonic PRIMARY KEY CLUSTERED
    (
    Ultrasonic_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 672 - ultrasonic2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Ultrasonic ADD
Description Varchar( 254) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

COMMIT
GO


--Version 672 - stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock ADD
Specification__Specification_ID Int NULL,
Ultrasonic__Ultrasonic_ID Int NULL
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Specification__Specification_ID DEFAULT 0 FOR Specification__Specification_ID
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Ultrasonic__Ultrasonic_ID DEFAULT 0 FOR Ultrasonic__Ultrasonic_ID
GO

COMMIT
GO


--Version 672 - specification1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Specification ADD
Hardness__Conversions_ID Int NULL,
Impact__Conversions_ID Int NULL,
Tensile__Conversions_ID Int NULL
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Hardness__Conversions_ID DEFAULT 0 FOR Hardness__Conversions_ID
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Impact__Conversions_ID DEFAULT 0 FOR Impact__Conversions_ID
GO

ALTER TABLE dbo.Specification ADD CONSTRAINT
DF_Specification_Tensile__Conversions_ID DEFAULT 0 FOR Tensile__Conversions_ID
GO

COMMIT
GO


--Version 673 - purchase_order1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Purchase_Order ADD
Authorised_By Int NULL,
Authorised_Date Datetime NULL,
Purchase__Authorised Bit NULL
GO

ALTER TABLE dbo.Purchase_Order ADD CONSTRAINT
DF_Purchase_Order_Authorised_By DEFAULT 0 FOR Authorised_By
GO

ALTER TABLE dbo.Purchase_Order ADD CONSTRAINT
DF_Purchase_Order_Purchase__Authorised DEFAULT 0 FOR Purchase__Authorised
GO

COMMIT
GO


--Version 673 - sy_passwords1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SY_Passwords ADD
Licence_String Varchar( 50) NULL,
Logged_In Bit NULL,
Purchase_Limit Float(53) NULL
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Logged_In DEFAULT 0 FOR Logged_In
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Purchase_Limit DEFAULT 0 FOR Purchase_Limit
GO

COMMIT
GO


--Version 673 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Check_User_Purchase_Limit Bit NULL,
Show_Drawing_Register Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Check_User_Purchase_Limit DEFAULT 0 FOR Check_User_Purchase_Limit
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Show_Drawing_Register DEFAULT 0 FOR Show_Drawing_Register
GO

COMMIT
GO


--Version 673 - stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock ADD
Avg_Length Float(53) NULL
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Avg_Length DEFAULT 0 FOR Avg_Length
GO

COMMIT
GO


--Version 673 - button.sql

UPDATE Buttons SET [Category Name] = 'Drawing Register', Icon = 'Drawing Register.ico', Text = 'Drawing Register' WHERE ([Button id] = 71)

--Version 674 - times_type.sql

INSERT INTO Time_Type 
(Time_Type)
VALUES     ('Unmanned')

--Version 674 - report_formula.sql

INSERT INTO Report_Formulas
                      (Formula, Group_id_Report_Group_id)
VALUES     ('WO Costing - Calc Actuals', 'WORK ORDERS LIST')


--Version 674 - sy_passwords1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SY_Passwords ADD
Std_Costs Bit NULL,
Std_Costs_To_Pref_Supplier Bit NULL
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Std_Costs DEFAULT 0 FOR Std_Costs
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Std_Costs_To_Pref_Supplier DEFAULT 0 FOR Std_Costs_To_Pref_Supplier
GO

COMMIT
GO


--Version 674 - wo_related_doc1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.WO_Related_Doc
    (
    WO_Related_Doc_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.WO_Related_Doc ADD CONSTRAINT
    PK_WO_Related_Doc PRIMARY KEY CLUSTERED
    (
    WO_Related_Doc_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 674 - wo_related_doc2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.WO_Related_Doc ADD
Against__WORK_ORDERS_ID Int NULL,
Description Varchar( 254) NULL,
Document_Path Varchar( 254) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

ALTER TABLE dbo.WO_Related_Doc ADD CONSTRAINT
DF_WO_Related_Doc_Against__WORK_ORDERS_ID DEFAULT 0 FOR Against__WORK_ORDERS_ID
GO

COMMIT
GO


--Version 674 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
CofC_Charge Bit NULL,
CofCPart__Part_ID Int NULL,
Delivery_Charge Bit NULL,
DelPart__Part_ID Int NULL,
Filters__Filters_ID Int NULL,
MRP_Filter Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_CofC_Charge DEFAULT 0 FOR CofC_Charge
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_CofCPart__Part_ID DEFAULT 0 FOR CofCPart__Part_ID
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Delivery_Charge DEFAULT 0 FOR Delivery_Charge
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_DelPart__Part_ID DEFAULT 0 FOR DelPart__Part_ID
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Filters__Filters_ID DEFAULT 0 FOR Filters__Filters_ID
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_MRP_Filter DEFAULT 0 FOR MRP_Filter
GO

COMMIT
GO


--Version 674 - standard_costs1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Standard_Costs
    (
    Standard_Costs_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Standard_Costs ADD CONSTRAINT
    PK_Standard_Costs PRIMARY KEY CLUSTERED
    (
    Standard_Costs_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 674 - standard_costs2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Standard_Costs ADD
Created Datetime NULL,
Modified datetime NULL,
Modified_By int NULL,
Part_ID Int NULL,
Std_Labour_Cost Float(53) NULL,
Std_Material_Cost Float(53) NULL,
Std_OverHeads_Cost Float(53) NULL
GO

ALTER TABLE dbo.Standard_Costs ADD CONSTRAINT
DF_Standard_Costs_Part_ID DEFAULT 0 FOR Part_ID
GO

ALTER TABLE dbo.Standard_Costs ADD CONSTRAINT
DF_Standard_Costs_Std_Labour_Cost DEFAULT 0 FOR Std_Labour_Cost
GO

ALTER TABLE dbo.Standard_Costs ADD CONSTRAINT
DF_Standard_Costs_Std_Material_Cost DEFAULT 0 FOR Std_Material_Cost
GO

ALTER TABLE dbo.Standard_Costs ADD CONSTRAINT
DF_Standard_Costs_Std_OverHeads_Cost DEFAULT 0 FOR Std_OverHeads_Cost
GO

COMMIT
GO


--Version 674 - companys1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANYS ADD
CofC_Charge Float(53) NULL,
Delivery_Charge Float(53) NULL
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_CofC_Charge DEFAULT 0 FOR CofC_Charge
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_Delivery_Charge DEFAULT 0 FOR Delivery_Charge
GO

COMMIT
GO


--Version 674 - reset_material_balance_grid.sql

DELETE FROM Grid_widths WHERE (Grid_id = 'WORK_ORDERS_FrmWO_Material_Balance_Grid False')
--Version 675 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Copy_Instructions_To_Notes Bit NULL,
Delivery_Address_On_Activity Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Copy_Instructions_To_Notes DEFAULT 0 FOR Copy_Instructions_To_Notes
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Delivery_Address_On_Activity DEFAULT 0 FOR Delivery_Address_On_Activity
GO

COMMIT
GO


--Version 675 - employee_related_docs1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Employee_Related_Docs
    (
    Employee_Related_Docs_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Employee_Related_Docs ADD CONSTRAINT
    PK_Employee_Related_Docs PRIMARY KEY CLUSTERED
    (
    Employee_Related_Docs_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 675 - employee_related_docs2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Employee_Related_Docs ADD
Against__Employee_ID Int NULL,
Description Varchar( 254) NULL,
Document_Path Varchar( 254) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

COMMIT
GO


--Version 676 - stock_transaction1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock_Transaction ADD
Cost Float(53) NULL
GO

ALTER TABLE dbo.Stock_Transaction ADD CONSTRAINT
DF_Stock_Transaction_Cost DEFAULT 0 FOR Cost
GO

COMMIT
GO


--Version 676 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Disable_Sales_Price Bit NULL,
Total_BOM_Processes Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Disable_Sales_Price DEFAULT 0 FOR Disable_Sales_Price
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Total_BOM_Processes DEFAULT 0 FOR Total_BOM_Processes
GO

COMMIT
GO


--Version 676 - sy_passwords1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SY_Passwords ADD
Authorise_POs Bit NULL,
Force_PriceList_Price Bit NULL
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Authorise_POs DEFAULT 0 FOR Authorise_POs
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Force_PriceList_Price DEFAULT 0 FOR Force_PriceList_Price
GO

COMMIT
GO


--Version 676 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
MRP_Stock Float(53) NULL
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_MRP_Stock DEFAULT 0 FOR MRP_Stock
GO

COMMIT
GO


--Version 676 - building1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Building ADD
MRP_Stock Bit NULL
GO

ALTER TABLE dbo.Building ADD CONSTRAINT
DF_Building_MRP_Stock DEFAULT 0 FOR MRP_Stock
GO

COMMIT
GO


--Version 676 - calendar_exceptions1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Calendar_Exceptions ADD
Efficiency Float(53) NULL
GO

ALTER TABLE dbo.Calendar_Exceptions ADD CONSTRAINT
DF_Calendar_Exceptions_Efficiency DEFAULT 0 FOR Efficiency
GO

COMMIT
GO


--Version 676 - calendar_records1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Calendar_Records ADD
Efficiency Float(53) NULL
GO

ALTER TABLE dbo.Calendar_Records ADD CONSTRAINT
DF_Calendar_Records_Efficiency DEFAULT 0 FOR Efficiency
GO

COMMIT
GO


--Version 677 - mrp_temp.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.MRP_Temp ADD
	SO_No varchar(50) NULL,
	WO_No varchar(50) NULL,
	PO_No varchar(50) NULL
GO
COMMIT


--Version 677 - ret_to_supp_related_doc1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Ret_To_Supp_Related_Doc
    (
    Ret_To_Supp_Related_Doc_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Ret_To_Supp_Related_Doc ADD CONSTRAINT
    PK_Ret_To_Supp_Related_Doc PRIMARY KEY CLUSTERED
    (
    Ret_To_Supp_Related_Doc_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 677 - ret_to_supp_related_doc2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Ret_To_Supp_Related_Doc ADD
Against__Return_to_supplier_ID Int NULL,
Description Varchar( 254) NULL,
Document_Path Varchar( 254) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

ALTER TABLE dbo.Ret_To_Supp_Related_Doc ADD CONSTRAINT
DF_Ret_To_Supp_Related_Doc_Against__Return_to_supplier_ID DEFAULT 0 FOR Against__Return_to_supplier_ID
GO

COMMIT
GO


--Version 677 - cust_ret_related_doc1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Cust_Ret_Related_Doc
    (
    Cust_Ret_Related_Doc_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Cust_Ret_Related_Doc ADD CONSTRAINT
    PK_Cust_Ret_Related_Doc PRIMARY KEY CLUSTERED
    (
    Cust_Ret_Related_Doc_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 677 - cust_ret_related_doc2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Cust_Ret_Related_Doc ADD
Against__Customer_Return_ID Int NULL,
Description Varchar( 254) NULL,
Document_Path Varchar( 254) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

ALTER TABLE dbo.Cust_Ret_Related_Doc ADD CONSTRAINT
DF_Cust_Ret_Related_Doc_Against__Customer_Return_ID DEFAULT 0 FOR Against__Customer_Return_ID
GO

COMMIT
GO


--Version 677 - customer_return1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Customer_Return ADD
Complete Bit NULL,
NC__Non_Conformance_ID Int NULL,
UDF1__UDData_ID Int NULL,
UDF2__UDData_ID Int NULL,
UDF3__UDData_ID Int NULL,
UDF4__UDData_ID Int NULL,
UDF5__UDData_ID Int NULL,
UDF6__UDData_ID Int NULL
GO

ALTER TABLE dbo.Customer_Return ADD CONSTRAINT
DF_Customer_Return_Complete DEFAULT 0 FOR Complete
GO

ALTER TABLE dbo.Customer_Return ADD CONSTRAINT
DF_Customer_Return_NC__Non_Conformance_ID DEFAULT 0 FOR NC__Non_Conformance_ID
GO

ALTER TABLE dbo.Customer_Return ADD CONSTRAINT
DF_Customer_Return_UDF1__UDData_ID DEFAULT 0 FOR UDF1__UDData_ID
GO

ALTER TABLE dbo.Customer_Return ADD CONSTRAINT
DF_Customer_Return_UDF2__UDData_ID DEFAULT 0 FOR UDF2__UDData_ID
GO

ALTER TABLE dbo.Customer_Return ADD CONSTRAINT
DF_Customer_Return_UDF3__UDData_ID DEFAULT 0 FOR UDF3__UDData_ID
GO

ALTER TABLE dbo.Customer_Return ADD CONSTRAINT
DF_Customer_Return_UDF4__UDData_ID DEFAULT 0 FOR UDF4__UDData_ID
GO

ALTER TABLE dbo.Customer_Return ADD CONSTRAINT
DF_Customer_Return_UDF5__UDData_ID DEFAULT 0 FOR UDF5__UDData_ID
GO

ALTER TABLE dbo.Customer_Return ADD CONSTRAINT
DF_Customer_Return_UDF6__UDData_ID DEFAULT 0 FOR UDF6__UDData_ID
GO

COMMIT
GO


--Version 677 - return_to_supplier1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Return_to_supplier ADD
Complete Bit NULL,
NC__Non_Conformance_ID Int NULL,
UDF1__UDData_ID Int NULL,
UDF2__UDData_ID Int NULL,
UDF3__UDData_ID Int NULL,
UDF4__UDData_ID Int NULL,
UDF5__UDData_ID Int NULL,
UDF6__UDData_ID Int NULL
GO

ALTER TABLE dbo.Return_to_supplier ADD CONSTRAINT
DF_Return_to_supplier_Complete DEFAULT 0 FOR Complete
GO

ALTER TABLE dbo.Return_to_supplier ADD CONSTRAINT
DF_Return_to_supplier_NC__Non_Conformance_ID DEFAULT 0 FOR NC__Non_Conformance_ID
GO

ALTER TABLE dbo.Return_to_supplier ADD CONSTRAINT
DF_Return_to_supplier_UDF1__UDData_ID DEFAULT 0 FOR UDF1__UDData_ID
GO

ALTER TABLE dbo.Return_to_supplier ADD CONSTRAINT
DF_Return_to_supplier_UDF2__UDData_ID DEFAULT 0 FOR UDF2__UDData_ID
GO

ALTER TABLE dbo.Return_to_supplier ADD CONSTRAINT
DF_Return_to_supplier_UDF3__UDData_ID DEFAULT 0 FOR UDF3__UDData_ID
GO

ALTER TABLE dbo.Return_to_supplier ADD CONSTRAINT
DF_Return_to_supplier_UDF4__UDData_ID DEFAULT 0 FOR UDF4__UDData_ID
GO

ALTER TABLE dbo.Return_to_supplier ADD CONSTRAINT
DF_Return_to_supplier_UDF5__UDData_ID DEFAULT 0 FOR UDF5__UDData_ID
GO

ALTER TABLE dbo.Return_to_supplier ADD CONSTRAINT
DF_Return_to_supplier_UDF6__UDData_ID DEFAULT 0 FOR UDF6__UDData_ID
GO

COMMIT
GO


--Version 677 - non_conformance1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Non_Conformance ADD
Customer_Return__Customer_Return_ID Int NULL,
Supplier_Return__Return_to_supplier_ID Int NULL
GO

ALTER TABLE dbo.Non_Conformance ADD CONSTRAINT
DF_Non_Conformance_Customer_Return__Customer_Return_ID DEFAULT 0 FOR Customer_Return__Customer_Return_ID
GO

ALTER TABLE dbo.Non_Conformance ADD CONSTRAINT
DF_Non_Conformance_Supplier_Return__Return_to_supplier_ID DEFAULT 0 FOR Supplier_Return__Return_to_supplier_ID
GO

COMMIT
GO


--Version 677 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Edit_Returns Bit NULL,
Force_SO_Price_Each Bit NULL,
Percentage_Profit Float(53) NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Edit_Returns DEFAULT 0 FOR Edit_Returns
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Force_SO_Price_Each DEFAULT 0 FOR Force_SO_Price_Each
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Percentage_Profit DEFAULT 0 FOR Percentage_Profit
GO

COMMIT
GO


--Version 677 - sy_passwords1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SY_Passwords ADD
Calculate_Avg_Cost Bit NULL
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Calculate_Avg_Cost DEFAULT 0 FOR Calculate_Avg_Cost
GO

COMMIT
GO


--Version 678 - po_receipt_line1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Po_Receipt_Line ADD
Direct__Shipped_Direct_ID Int NULL,
Insp__Non_Conformance_ID Int NULL,
Inspected__Employee_ID Int NULL,
Inspection_Details Varchar( 254) NULL,
POR__SubContract_Delivery_ID Int NULL,
Result__Inspection_Result_ID Int NULL,
SubCon_Breadth Float(53) NULL,
SubCon_Length Float(53) NULL,
SubCon_Qty Float(53) NULL
GO

ALTER TABLE dbo.Po_Receipt_Line ADD CONSTRAINT
DF_Po_Receipt_Line_Direct__Shipped_Direct_ID DEFAULT 0 FOR Direct__Shipped_Direct_ID
GO

ALTER TABLE dbo.Po_Receipt_Line ADD CONSTRAINT
DF_Po_Receipt_Line_Insp__Non_Conformance_ID DEFAULT 0 FOR Insp__Non_Conformance_ID
GO

ALTER TABLE dbo.Po_Receipt_Line ADD CONSTRAINT
DF_Po_Receipt_Line_POR__SubContract_Delivery_ID DEFAULT 0 FOR POR__SubContract_Delivery_ID
GO

ALTER TABLE dbo.Po_Receipt_Line ADD CONSTRAINT
DF_Po_Receipt_Line_SubCon_Breadth DEFAULT 0 FOR SubCon_Breadth
GO

ALTER TABLE dbo.Po_Receipt_Line ADD CONSTRAINT
DF_Po_Receipt_Line_SubCon_Length DEFAULT 0 FOR SubCon_Length
GO

ALTER TABLE dbo.Po_Receipt_Line ADD CONSTRAINT
DF_Po_Receipt_Line_SubCon_Qty DEFAULT 0 FOR SubCon_Qty
GO

COMMIT
GO


--Version 678 - po_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Po_Lines ADD
Drawing_Revision Varchar( 254) NULL
GO

COMMIT
GO


--Version 678 - subcontract_delivery1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.SubContract_Delivery
    (
    SubContract_Delivery_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.SubContract_Delivery ADD CONSTRAINT
    PK_SubContract_Delivery PRIMARY KEY CLUSTERED
    (
    SubContract_Delivery_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 678 - subcontract_delivery2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SubContract_Delivery ADD
Address__COMPANY_ADDRESS_ID Int NULL,
Batch_No Varchar( 254) NULL,
Batch_Qty Float(53) NULL,
Company__COMPANYS_ID Int NULL,
Created_By Int NULL,
Date_Created Datetime NULL,
Modified datetime NULL,
Modified_By int NULL,
Notes Text NULL,
Notes_Non_RTF Text NULL,
Order_No Varchar( 254) NULL,
PO_Enable Bit NULL,
POD Bit NULL,
POD_Date Datetime NULL,
SubCon__Po_Lines_ID Int NULL
GO

ALTER TABLE dbo.SubContract_Delivery ADD CONSTRAINT
DF_SubContract_Delivery_Address__COMPANY_ADDRESS_ID DEFAULT 0 FOR Address__COMPANY_ADDRESS_ID
GO

ALTER TABLE dbo.SubContract_Delivery ADD CONSTRAINT
DF_SubContract_Delivery_Batch_Qty DEFAULT 0 FOR Batch_Qty
GO

ALTER TABLE dbo.SubContract_Delivery ADD CONSTRAINT
DF_SubContract_Delivery_Company__COMPANYS_ID DEFAULT 0 FOR Company__COMPANYS_ID
GO

ALTER TABLE dbo.SubContract_Delivery ADD CONSTRAINT
DF_SubContract_Delivery_Created_By DEFAULT 0 FOR Created_By
GO

ALTER TABLE dbo.SubContract_Delivery ADD CONSTRAINT
DF_SubContract_Delivery_PO_Enable DEFAULT 0 FOR PO_Enable
GO

ALTER TABLE dbo.SubContract_Delivery ADD CONSTRAINT
DF_SubContract_Delivery_POD DEFAULT 0 FOR POD
GO

ALTER TABLE dbo.SubContract_Delivery ADD CONSTRAINT
DF_SubContract_Delivery_SubCon__Po_Lines_ID DEFAULT 0 FOR SubCon__Po_Lines_ID
GO

COMMIT
GO


--Version 678 - shipped_direct1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Shipped_Direct
    (
    Shipped_Direct_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Shipped_Direct ADD CONSTRAINT
    PK_Shipped_Direct PRIMARY KEY CLUSTERED
    (
    Shipped_Direct_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 678 - shipped_direct2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Shipped_Direct ADD
Direct Varchar( 50) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

COMMIT
GO


--Version 678 - inspection_result1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Inspection_Result
    (
    Inspection_Result_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Inspection_Result ADD CONSTRAINT
    PK_Inspection_Result PRIMARY KEY CLUSTERED
    (
    Inspection_Result_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 678 - inspection_result2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Inspection_Result ADD
Modified datetime NULL,
Modified_By int NULL,
Result Varchar( 50) NULL
GO

COMMIT
GO


--Version 678 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Copy_Part_Desc Bit NULL,
Show_SubCon_Delivery Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Copy_Part_Desc DEFAULT 0 FOR Copy_Part_Desc
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Show_SubCon_Delivery DEFAULT 0 FOR Show_SubCon_Delivery
GO

COMMIT
GO


--Version 678 - shippeddirect.sql

INSERT INTO Shipped_Direct
                      (Direct)
VALUES     ('Yes')




--Version 678 - shippeddirect3.sql

INSERT INTO Shipped_Direct
                      (Direct)
VALUES     ('No')




--Version 678 - inspectionresult.sql

INSERT INTO Inspection_Result
                      (Result)
VALUES     ('Pass')



--Version 678 - inspectionresult3.sql

INSERT INTO Inspection_Result
                      (Result)
VALUES     ('Fail')




--Version 678 - cofcmattemp.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.CofC_Material_Temp ADD
ParentDel_ID int NULL
GO

COMMIT
GO







--Version 679 - stock_take_item1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock_Take_Item ADD
Qty_Outstanding Float(53) NULL
GO

ALTER TABLE dbo.Stock_Take_Item ADD CONSTRAINT
DF_Stock_Take_Item_Qty_Outstanding DEFAULT 0 FOR Qty_Outstanding
GO

COMMIT
GO


--Version 679 - stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock ADD
Qty_Remaining Float(53) NULL
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Qty_Remaining DEFAULT 0 FOR Qty_Remaining
GO

COMMIT
GO


--Version 680 - form_header.sql

INSERT INTO Form_Default_Context
                      (Context, [Form Id])
VALUES     ('Email', '9')


--Version 680 - sfdc_transactions1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SFDC_Transactions ADD
Scrap_Reason Varchar( 50) NULL
GO

COMMIT
GO


--Version 680 - wo_route_schedule1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Wo_Route_SChedule ADD
Instructions Text NULL,
Instructions_Non_RTF Text NULL
GO

COMMIT
GO


--Version 680 - scrap_reasons1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Scrap_Reasons ADD
Description Varchar( 254) NULL
GO

COMMIT
GO


--Version 680 - invoice_part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Invoice_Part ADD
Cust_Return Bit NULL
GO

ALTER TABLE dbo.Invoice_Part ADD CONSTRAINT
DF_Invoice_Part_Cust_Return DEFAULT 0 FOR Cust_Return
GO

COMMIT
GO


--Version 680 - customer_return1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Customer_Return ADD
Reject Bit NULL
GO

ALTER TABLE dbo.Customer_Return ADD CONSTRAINT
DF_Customer_Return_Reject DEFAULT 0 FOR Reject
GO

COMMIT
GO


--Version 681 - sales_order_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Sales_Order_Lines ADD
Price_Each Bit NULL,
PriceEach Float(53) NULL
GO

ALTER TABLE dbo.Sales_Order_Lines ADD CONSTRAINT
DF_Sales_Order_Lines_Price_Each DEFAULT 0 FOR Price_Each
GO

ALTER TABLE dbo.Sales_Order_Lines ADD CONSTRAINT
DF_Sales_Order_Lines_PriceEach DEFAULT 0 FOR PriceEach
GO

COMMIT
GO


--Version 681 - stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock ADD
Profile__Stock_Profile_ID Int NULL
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Profile__Stock_Profile_ID DEFAULT 0 FOR Profile__Stock_Profile_ID
GO

COMMIT
GO


--Version 681 - stock_profile1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Stock_Profile
    (
    Stock_Profile_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Stock_Profile ADD CONSTRAINT
    PK_Stock_Profile PRIMARY KEY CLUSTERED
    (
    Stock_Profile_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 681 - stock_profile2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock_Profile ADD
Profile Varchar( 254) NULL
GO

COMMIT
GO


--Version 681 - rectangleprofile.sql

INSERT INTO Stock_Profile
                      (Profile)
VALUES     ('Rectangle')




--Version 681 - triangleprofile.sql

INSERT INTO Stock_Profile
                      (Profile)
VALUES     ('Triangle')





--Version 681 - circleprofile.sql

INSERT INTO Stock_Profile
                      (Profile)
VALUES     ('Circle')





--Version 682 - customer_return.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Customer_Return
	DROP CONSTRAINT DF_Customer_Return_Contract__Sales_Order_Lines_ID
GO
ALTER TABLE dbo.Customer_Return
	DROP CONSTRAINT DF_Customer_Return_Customer__COMPANYS_ID
GO
ALTER TABLE dbo.Customer_Return
	DROP CONSTRAINT DF_Customer_Return_Delivery__Delivery_Item_ID
GO
ALTER TABLE dbo.Customer_Return
	DROP CONSTRAINT DF_Customer_Return_Grn__Grn_ID
GO
ALTER TABLE dbo.Customer_Return
	DROP CONSTRAINT DF_Customer_Return_Part__Part_id
GO
ALTER TABLE dbo.Customer_Return
	DROP CONSTRAINT DF_Customer_Return_Qty
GO
ALTER TABLE dbo.Customer_Return
	DROP CONSTRAINT DF_Customer_Return_Receipt_Qty
GO
ALTER TABLE dbo.Customer_Return
	DROP CONSTRAINT DF_Customer_Return_Receipt_UOM__Conversions_ID
GO
ALTER TABLE dbo.Customer_Return
	DROP CONSTRAINT DF_Customer_Return_Recieved_by
GO
ALTER TABLE dbo.Customer_Return
	DROP CONSTRAINT DF_Customer_Return_Transaction_Qty
GO
ALTER TABLE dbo.Customer_Return
	DROP CONSTRAINT DF_Customer_Return_Transaction_UOM__Conversions_ID
GO
ALTER TABLE dbo.Customer_Return
	DROP CONSTRAINT DF_Customer_Return_Modified_By
GO
ALTER TABLE dbo.Customer_Return
	DROP CONSTRAINT DF_Customer_Return_Complete
GO
ALTER TABLE dbo.Customer_Return
	DROP CONSTRAINT DF_Customer_Return_NC__Non_Conformance_ID
GO
ALTER TABLE dbo.Customer_Return
	DROP CONSTRAINT DF_Customer_Return_UDF1__UDData_ID
GO
ALTER TABLE dbo.Customer_Return
	DROP CONSTRAINT DF_Customer_Return_UDF2__UDData_ID
GO
ALTER TABLE dbo.Customer_Return
	DROP CONSTRAINT DF_Customer_Return_UDF3__UDData_ID
GO
ALTER TABLE dbo.Customer_Return
	DROP CONSTRAINT DF_Customer_Return_UDF4__UDData_ID
GO
ALTER TABLE dbo.Customer_Return
	DROP CONSTRAINT DF_Customer_Return_UDF5__UDData_ID
GO
ALTER TABLE dbo.Customer_Return
	DROP CONSTRAINT DF_Customer_Return_UDF6__UDData_ID
GO
ALTER TABLE dbo.Customer_Return
	DROP CONSTRAINT DF_Customer_Return_Reject
GO
CREATE TABLE dbo.Tmp_Customer_Return
	(
	Customer_Return_ID int NOT NULL IDENTITY (1, 1),
	Advice_No varchar(255) NULL,
	Contract__Sales_Order_Lines_ID int NULL,
	Customer__COMPANYS_ID int NULL,
	Date_in datetime NULL,
	Delivery__Delivery_Item_ID int NULL,
	Grn__Grn_ID int NULL,
	Notes text NULL,
	Part__Part_id int NULL,
	Qty float(53) NULL,
	Receipt_Qty float(53) NULL,
	Receipt_UOM__Conversions_ID int NULL,
	Recieved_by int NULL,
	Transaction_Qty float(53) NULL,
	Transaction_UOM__Conversions_ID int NULL,
	Modified datetime NULL,
	Modified_By int NULL,
	Complete bit NULL,
	NC__Non_Conformance_ID int NULL,
	UDF1__UDData_ID int NULL,
	UDF2__UDData_ID int NULL,
	UDF3__UDData_ID int NULL,
	UDF4__UDData_ID int NULL,
	UDF5__UDData_ID int NULL,
	UDF6__UDData_ID int NULL,
	Reject bit NULL
	)  ON [PRIMARY]
	 TEXTIMAGE_ON [PRIMARY]
GO
ALTER TABLE dbo.Tmp_Customer_Return ADD CONSTRAINT
	DF_Customer_Return_Contract__Sales_Order_Lines_ID DEFAULT (0) FOR Contract__Sales_Order_Lines_ID
GO
ALTER TABLE dbo.Tmp_Customer_Return ADD CONSTRAINT
	DF_Customer_Return_Customer__COMPANYS_ID DEFAULT (0) FOR Customer__COMPANYS_ID
GO
ALTER TABLE dbo.Tmp_Customer_Return ADD CONSTRAINT
	DF_Customer_Return_Delivery__Delivery_Item_ID DEFAULT (0) FOR Delivery__Delivery_Item_ID
GO
ALTER TABLE dbo.Tmp_Customer_Return ADD CONSTRAINT
	DF_Customer_Return_Grn__Grn_ID DEFAULT (0) FOR Grn__Grn_ID
GO
ALTER TABLE dbo.Tmp_Customer_Return ADD CONSTRAINT
	DF_Customer_Return_Part__Part_id DEFAULT (0) FOR Part__Part_id
GO
ALTER TABLE dbo.Tmp_Customer_Return ADD CONSTRAINT
	DF_Customer_Return_Qty DEFAULT (0) FOR Qty
GO
ALTER TABLE dbo.Tmp_Customer_Return ADD CONSTRAINT
	DF_Customer_Return_Receipt_Qty DEFAULT (0) FOR Receipt_Qty
GO
ALTER TABLE dbo.Tmp_Customer_Return ADD CONSTRAINT
	DF_Customer_Return_Receipt_UOM__Conversions_ID DEFAULT (0) FOR Receipt_UOM__Conversions_ID
GO
ALTER TABLE dbo.Tmp_Customer_Return ADD CONSTRAINT
	DF_Customer_Return_Recieved_by DEFAULT (0) FOR Recieved_by
GO
ALTER TABLE dbo.Tmp_Customer_Return ADD CONSTRAINT
	DF_Customer_Return_Transaction_Qty DEFAULT (0) FOR Transaction_Qty
GO
ALTER TABLE dbo.Tmp_Customer_Return ADD CONSTRAINT
	DF_Customer_Return_Transaction_UOM__Conversions_ID DEFAULT (0) FOR Transaction_UOM__Conversions_ID
GO
ALTER TABLE dbo.Tmp_Customer_Return ADD CONSTRAINT
	DF_Customer_Return_Modified_By DEFAULT (0) FOR Modified_By
GO
ALTER TABLE dbo.Tmp_Customer_Return ADD CONSTRAINT
	DF_Customer_Return_Complete DEFAULT (0) FOR Complete
GO
ALTER TABLE dbo.Tmp_Customer_Return ADD CONSTRAINT
	DF_Customer_Return_NC__Non_Conformance_ID DEFAULT (0) FOR NC__Non_Conformance_ID
GO
ALTER TABLE dbo.Tmp_Customer_Return ADD CONSTRAINT
	DF_Customer_Return_UDF1__UDData_ID DEFAULT (0) FOR UDF1__UDData_ID
GO
ALTER TABLE dbo.Tmp_Customer_Return ADD CONSTRAINT
	DF_Customer_Return_UDF2__UDData_ID DEFAULT (0) FOR UDF2__UDData_ID
GO
ALTER TABLE dbo.Tmp_Customer_Return ADD CONSTRAINT
	DF_Customer_Return_UDF3__UDData_ID DEFAULT (0) FOR UDF3__UDData_ID
GO
ALTER TABLE dbo.Tmp_Customer_Return ADD CONSTRAINT
	DF_Customer_Return_UDF4__UDData_ID DEFAULT (0) FOR UDF4__UDData_ID
GO
ALTER TABLE dbo.Tmp_Customer_Return ADD CONSTRAINT
	DF_Customer_Return_UDF5__UDData_ID DEFAULT (0) FOR UDF5__UDData_ID
GO
ALTER TABLE dbo.Tmp_Customer_Return ADD CONSTRAINT
	DF_Customer_Return_UDF6__UDData_ID DEFAULT (0) FOR UDF6__UDData_ID
GO
ALTER TABLE dbo.Tmp_Customer_Return ADD CONSTRAINT
	DF_Customer_Return_Reject DEFAULT (0) FOR Reject
GO
SET IDENTITY_INSERT dbo.Tmp_Customer_Return ON
GO
IF EXISTS(SELECT * FROM dbo.Customer_Return)
	 EXEC('INSERT INTO dbo.Tmp_Customer_Return (Customer_Return_ID, Advice_No, Contract__Sales_Order_Lines_ID, Customer__COMPANYS_ID, Date_in, Delivery__Delivery_Item_ID, Grn__Grn_ID, Notes, Part__Part_id, Qty, Receipt_Qty, Receipt_UOM__Conversions_ID, Recieved_by, Transaction_Qty, Transaction_UOM__Conversions_ID, Modified, Modified_By, Complete, NC__Non_Conformance_ID, UDF1__UDData_ID, UDF2__UDData_ID, UDF3__UDData_ID, UDF4__UDData_ID, UDF5__UDData_ID, UDF6__UDData_ID, Reject)
		SELECT Customer_Return_ID, Advice_No, Contract__Sales_Order_Lines_ID, Customer__COMPANYS_ID, Date_in, Delivery__Delivery_Item_ID, Grn__Grn_ID, Notes, Part__Part_id, CONVERT(float(53), Qty), Receipt_Qty, Receipt_UOM__Conversions_ID, Recieved_by, Transaction_Qty, Transaction_UOM__Conversions_ID, Modified, Modified_By, Complete, NC__Non_Conformance_ID, UDF1__UDData_ID, UDF2__UDData_ID, UDF3__UDData_ID, UDF4__UDData_ID, UDF5__UDData_ID, UDF6__UDData_ID, Reject FROM dbo.Customer_Return TABLOCKX')
GO
SET IDENTITY_INSERT dbo.Tmp_Customer_Return OFF
GO
DROP TABLE dbo.Customer_Return
GO
EXECUTE sp_rename N'dbo.Tmp_Customer_Return', N'Customer_Return', 'OBJECT'
GO
ALTER TABLE dbo.Customer_Return ADD CONSTRAINT
	PK_Customer_Return PRIMARY KEY CLUSTERED 
	(
	Customer_Return_ID
	) ON [PRIMARY]

GO
COMMIT


--Version 682 - report_formula.sql

INSERT INTO Report_Formulas
                      (Formula, Group_id_Report_Group_id)
VALUES     ('Print Multiple Labels', 'DELIVERY LIST')





--Version 682 - report_formula2.sql

INSERT INTO Report_Formulas
                      (Formula, Group_id_Report_Group_id)
VALUES     ('Print Multiple Labels', 'DELIVERY FRM')






--Version 682 - process1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Process ADD
Display_Order Int NULL
GO

ALTER TABLE dbo.Process ADD CONSTRAINT
DF_Process_Display_Order DEFAULT 0 FOR Display_Order
GO

COMMIT
GO


--Version 682 - customer_return1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Customer_Return ADD
Notes_Non_RTF Text NULL
GO

COMMIT
GO


--Version 682 - nc_action1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.NC_Action ADD
NC_Action_Description_Non_RTF Text NULL
GO

COMMIT
GO


--Version 682 - route1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Route ADD
No_RPMSH Bit NULL
GO

ALTER TABLE dbo.Route ADD CONSTRAINT
DF_Route_No_RPMSH DEFAULT 0 FOR No_RPMSH
GO

COMMIT
GO


--Version 682 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Auto_WO_Issue Bit NULL,
Scheduler_Path Varchar( 255) NULL,
Show_Delivery_Edit_List Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Auto_WO_Issue DEFAULT 0 FOR Auto_WO_Issue
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Show_Delivery_Edit_List DEFAULT 0 FOR Show_Delivery_Edit_List
GO

COMMIT
GO


--Version 682 - cal_rec_efficiency.sql

UPDATE Calendar_Records SET Efficiency = 100 WHERE (Efficiency = 0) OR (Efficiency IS NULL)


--Version 682 - cal_exc_efficiency.sql

UPDATE Calendar_Exceptions SET Efficiency = 100 WHERE (Efficiency = 0) OR (Efficiency IS NULL)


--Version 682 - no rpmsh.sql

UPDATE Route SET No_RPMSH = 0 WHERE (No_RPMSH IS NULL)

--Version 683 - sales_orders1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SALES_ORDERS ADD
Building__Building_ID Int NULL
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Building__Building_ID DEFAULT 0 FOR Building__Building_ID
GO

COMMIT
GO


--Version 683 - sy_passwords1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SY_Passwords ADD
Building__Building_ID Int NULL
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Building__Building_ID DEFAULT 0 FOR Building__Building_ID
GO

COMMIT
GO


--Version 683 - sales_order_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Sales_Order_Lines ADD
Building_ID Int NULL
GO

ALTER TABLE dbo.Sales_Order_Lines ADD CONSTRAINT
DF_Sales_Order_Lines_Building_ID DEFAULT 0 FOR Building_ID
GO

COMMIT
GO


--Version 683 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Enquiry_Prices_Update Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Enquiry_Prices_Update DEFAULT 0 FOR Enquiry_Prices_Update
GO

COMMIT
GO


--Version 684 - company_related_docs1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Company_Related_Docs
    (
    Company_Related_Docs_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Company_Related_Docs ADD CONSTRAINT
    PK_Company_Related_Docs PRIMARY KEY CLUSTERED
    (
    Company_Related_Docs_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 684 - company_related_docs2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Company_Related_Docs ADD
Against__COMPANYS_ID Int NULL,
Description Varchar( 254) NULL,
Document_Path Varchar( 254) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

ALTER TABLE dbo.Company_Related_Docs ADD CONSTRAINT
DF_Company_Related_Docs_Against__COMPANYS_ID DEFAULT 0 FOR Against__COMPANYS_ID
GO

COMMIT
GO


--Version 684 - delivery_related_docs1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Delivery_Related_Docs
    (
    Delivery_Related_Docs_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Delivery_Related_Docs ADD CONSTRAINT
    PK_Delivery_Related_Docs PRIMARY KEY CLUSTERED
    (
    Delivery_Related_Docs_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 684 - delivery_related_docs2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Delivery_Related_Docs ADD
Against__Delivery_ID Int NULL,
Description Varchar( 254) NULL,
Document_Path Varchar( 254) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

ALTER TABLE dbo.Delivery_Related_Docs ADD CONSTRAINT
DF_Delivery_Related_Docs_Against__Delivery_ID DEFAULT 0 FOR Against__Delivery_ID
GO

COMMIT
GO


--Version 684 - wc_related_docs1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.WC_Related_Docs
    (
    WC_Related_Docs_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.WC_Related_Docs ADD CONSTRAINT
    PK_WC_Related_Docs PRIMARY KEY CLUSTERED
    (
    WC_Related_Docs_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 684 - wc_related_docs2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.WC_Related_Docs ADD
Against__Work_Centre_ID Int NULL,
Description Varchar( 254) NULL,
Document_Path Varchar( 254) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

ALTER TABLE dbo.WC_Related_Docs ADD CONSTRAINT
DF_WC_Related_Docs_Against__Work_Centre_ID DEFAULT 0 FOR Against__Work_Centre_ID
GO

COMMIT
GO


--Version 684 - enqlines_related_docs1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.EnqLines_Related_Docs
    (
    EnqLines_Related_Docs_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.EnqLines_Related_Docs ADD CONSTRAINT
    PK_EnqLines_Related_Docs PRIMARY KEY CLUSTERED
    (
    EnqLines_Related_Docs_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 684 - enqlines_related_docs2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.EnqLines_Related_Docs ADD
Against__ENQUIRY_LINES_ID Int NULL,
Description Varchar( 254) NULL,
Document_Path Varchar( 254) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

ALTER TABLE dbo.EnqLines_Related_Docs ADD CONSTRAINT
DF_EnqLines_Related_Docs_Against__ENQUIRY_LINES_ID DEFAULT 0 FOR Against__ENQUIRY_LINES_ID
GO

COMMIT
GO


--Version 684 - sol_related_docs1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.SOL_Related_Docs
    (
    SOL_Related_Docs_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.SOL_Related_Docs ADD CONSTRAINT
    PK_SOL_Related_Docs PRIMARY KEY CLUSTERED
    (
    SOL_Related_Docs_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 684 - sol_related_docs2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SOL_Related_Docs ADD
Against__Sales_Order_Lines_ID Int NULL,
Description Varchar( 254) NULL,
Document_Path Varchar( 254) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

ALTER TABLE dbo.SOL_Related_Docs ADD CONSTRAINT
DF_SOL_Related_Docs_Against__Sales_Order_Lines_ID DEFAULT 0 FOR Against__Sales_Order_Lines_ID
GO

COMMIT
GO


--Version 684 - po_related_docs1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.PO_Related_Docs
    (
    PO_Related_Docs_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.PO_Related_Docs ADD CONSTRAINT
    PK_PO_Related_Docs PRIMARY KEY CLUSTERED
    (
    PO_Related_Docs_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 684 - po_related_docs2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.PO_Related_Docs ADD
Against__Purchase_Order_ID Int NULL,
Description Varchar( 254) NULL,
Document_Path Varchar( 254) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

ALTER TABLE dbo.PO_Related_Docs ADD CONSTRAINT
DF_PO_Related_Docs_Against__Purchase_Order_ID DEFAULT 0 FOR Against__Purchase_Order_ID
GO

COMMIT
GO


--Version 684 - stock_movement1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Stock_Movement
    (
    Stock_Movement_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Stock_Movement ADD CONSTRAINT
    PK_Stock_Movement PRIMARY KEY CLUSTERED
    (
    Stock_Movement_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 684 - stock_movement2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock_Movement ADD
From_Build_ID Int NULL,
From_Loc_ID Int NULL,
Modified datetime NULL,
Modified_By int NULL,
Movement_Date Datetime NULL,
Original_Stock_ID Int NULL,
Part_ID Int NULL,
Stock_ID Int NULL,
To_Build_ID Int NULL,
To_Loc_ID Int NULL
GO

ALTER TABLE dbo.Stock_Movement ADD CONSTRAINT
DF_Stock_Movement_From_Build_ID DEFAULT 0 FOR From_Build_ID
GO

ALTER TABLE dbo.Stock_Movement ADD CONSTRAINT
DF_Stock_Movement_From_Loc_ID DEFAULT 0 FOR From_Loc_ID
GO

ALTER TABLE dbo.Stock_Movement ADD CONSTRAINT
DF_Stock_Movement_Original_Stock_ID DEFAULT 0 FOR Original_Stock_ID
GO

ALTER TABLE dbo.Stock_Movement ADD CONSTRAINT
DF_Stock_Movement_Part_ID DEFAULT 0 FOR Part_ID
GO

ALTER TABLE dbo.Stock_Movement ADD CONSTRAINT
DF_Stock_Movement_Stock_ID DEFAULT 0 FOR Stock_ID
GO

ALTER TABLE dbo.Stock_Movement ADD CONSTRAINT
DF_Stock_Movement_To_Build_ID DEFAULT 0 FOR To_Build_ID
GO

ALTER TABLE dbo.Stock_Movement ADD CONSTRAINT
DF_Stock_Movement_To_Loc_ID DEFAULT 0 FOR To_Loc_ID
GO

COMMIT
GO


--Version 684 - cofc_status5.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.CofC_Status
    (
    CofC_Status_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.CofC_Status ADD CONSTRAINT
    PK_CofC_Status PRIMARY KEY CLUSTERED
    (
    CofC_Status_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 684 - cofc_status6.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.CofC_Status ADD
Modified datetime NULL,
Modified_By int NULL,
Status Varchar( 50) NULL
GO

COMMIT
GO


--Version 684 - cofc1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.CofC ADD
Status__CofC_Status_ID Int NULL
GO

ALTER TABLE dbo.CofC ADD CONSTRAINT
DF_CofC_Status__CofC_Status_ID DEFAULT 1 FOR Status__CofC_Status_ID
GO

COMMIT
GO


--Version 684 - companys1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANYS ADD
WO__User_Messages_ID Int NULL
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_WO__User_Messages_ID DEFAULT 0 FOR WO__User_Messages_ID
GO

COMMIT
GO


--Version 684 - process1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Process ADD
Deleted Bit NULL
GO

ALTER TABLE dbo.Process ADD CONSTRAINT
DF_Process_Deleted DEFAULT 0 FOR Deleted
GO

COMMIT
GO


--Version 684 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Copy_Related_Docs Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Copy_Related_Docs DEFAULT 0 FOR Copy_Related_Docs
GO

COMMIT
GO


--Version 684 - cofc_status1.sql

INSERT INTO CofC_Status
                      (Status)
VALUES     ('New')









--Version 684 - cofc_status2.sql

INSERT INTO CofC_Status
                      (Status)
VALUES     ('Actioned')










--Version 684 - cofc_status3.sql

INSERT INTO CofC_Status
                      (Status)
VALUES     ('Printed')









--Version 684 - cofc_status4.sql

INSERT INTO CofC_Status
                      (Status)
VALUES     ('Cancelled')









--Version 685 - production_plan1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Production_Plan
    (
    Production_Plan_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Production_Plan ADD CONSTRAINT
    PK_Production_Plan PRIMARY KEY CLUSTERED
    (
    Production_Plan_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 685 - production_plan2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Production_Plan ADD
Actual_Run Float(53) NULL,
Actual_Setup Float(53) NULL,
Actual_Total Float(53) NULL,
Complete Bit NULL,
From_Date Datetime NULL,
Fully_Planned Bit NULL,
Modified datetime NULL,
Modified_By int NULL,
Notes Text NULL,
Notes_Non_RTF Text NULL,
Number_Ops_Comp Int NULL,
OS_Run Float(53) NULL,
OS_Setup Float(53) NULL,
OS_Total Float(53) NULL,
Percentage_Ops_Comp Float(53) NULL,
Percentage_Time_Comp Float(53) NULL,
Plan__Department_ID Int NULL,
Plan__Employee_ID Int NULL,
Plan_Days Float(53) NULL,
Plan_Hrs Float(53) NULL,
Status__Production_Plan_Status_ID Int NULL,
To_Date Datetime NULL,
UDF1__UDData_ID Int NULL,
UDF2__UDData_ID Int NULL
GO

ALTER TABLE dbo.Production_Plan ADD CONSTRAINT
DF_Production_Plan_Actual_Run DEFAULT 0 FOR Actual_Run
GO

ALTER TABLE dbo.Production_Plan ADD CONSTRAINT
DF_Production_Plan_Actual_Setup DEFAULT 0 FOR Actual_Setup
GO

ALTER TABLE dbo.Production_Plan ADD CONSTRAINT
DF_Production_Plan_Actual_Total DEFAULT 0 FOR Actual_Total
GO

ALTER TABLE dbo.Production_Plan ADD CONSTRAINT
DF_Production_Plan_Complete DEFAULT 0 FOR Complete
GO

ALTER TABLE dbo.Production_Plan ADD CONSTRAINT
DF_Production_Plan_Fully_Planned DEFAULT 0 FOR Fully_Planned
GO

ALTER TABLE dbo.Production_Plan ADD CONSTRAINT
DF_Production_Plan_Number_Ops_Comp DEFAULT 0 FOR Number_Ops_Comp
GO

ALTER TABLE dbo.Production_Plan ADD CONSTRAINT
DF_Production_Plan_OS_Run DEFAULT 0 FOR OS_Run
GO

ALTER TABLE dbo.Production_Plan ADD CONSTRAINT
DF_Production_Plan_OS_Setup DEFAULT 0 FOR OS_Setup
GO

ALTER TABLE dbo.Production_Plan ADD CONSTRAINT
DF_Production_Plan_OS_Total DEFAULT 0 FOR OS_Total
GO

ALTER TABLE dbo.Production_Plan ADD CONSTRAINT
DF_Production_Plan_Percentage_Ops_Comp DEFAULT 0 FOR Percentage_Ops_Comp
GO

ALTER TABLE dbo.Production_Plan ADD CONSTRAINT
DF_Production_Plan_Percentage_Time_Comp DEFAULT 0 FOR Percentage_Time_Comp
GO

ALTER TABLE dbo.Production_Plan ADD CONSTRAINT
DF_Production_Plan_Plan__Department_ID DEFAULT 0 FOR Plan__Department_ID
GO

ALTER TABLE dbo.Production_Plan ADD CONSTRAINT
DF_Production_Plan_Plan__Employee_ID DEFAULT 0 FOR Plan__Employee_ID
GO

ALTER TABLE dbo.Production_Plan ADD CONSTRAINT
DF_Production_Plan_Plan_Days DEFAULT 0 FOR Plan_Days
GO

ALTER TABLE dbo.Production_Plan ADD CONSTRAINT
DF_Production_Plan_Plan_Hrs DEFAULT 0 FOR Plan_Hrs
GO

ALTER TABLE dbo.Production_Plan ADD CONSTRAINT
DF_Production_Plan_Status__Production_Plan_Status_ID DEFAULT 1 FOR Status__Production_Plan_Status_ID
GO

ALTER TABLE dbo.Production_Plan ADD CONSTRAINT
DF_Production_Plan_UDF1__UDData_ID DEFAULT 0 FOR UDF1__UDData_ID
GO

ALTER TABLE dbo.Production_Plan ADD CONSTRAINT
DF_Production_Plan_UDF2__UDData_ID DEFAULT 0 FOR UDF2__UDData_ID
GO

COMMIT
GO


--Version 685 - prod_related_docs1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Prod_Related_Docs
    (
    Prod_Related_Docs_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Prod_Related_Docs ADD CONSTRAINT
    PK_Prod_Related_Docs PRIMARY KEY CLUSTERED
    (
    Prod_Related_Docs_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 685 - prod_related_docs2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Prod_Related_Docs ADD
Against__Production_Plan_ID Int NULL,
Description Varchar( 254) NULL,
Document_Path Varchar( 254) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

ALTER TABLE dbo.Prod_Related_Docs ADD CONSTRAINT
DF_Prod_Related_Docs_Against__Production_Plan_ID DEFAULT 0 FOR Against__Production_Plan_ID
GO

COMMIT
GO


--Version 685 - po_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Po_Lines ADD
Price_Each Bit NULL,
PriceEach Float(53) NULL
GO

ALTER TABLE dbo.Po_Lines ADD CONSTRAINT
DF_Po_Lines_Price_Each DEFAULT 0 FOR Price_Each
GO

ALTER TABLE dbo.Po_Lines ADD CONSTRAINT
DF_Po_Lines_PriceEach DEFAULT 0 FOR PriceEach
GO

COMMIT
GO


--Version 685 - production_plan_status1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Production_Plan_Status
    (
    Production_Plan_Status_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Production_Plan_Status ADD CONSTRAINT
    PK_Production_Plan_Status PRIMARY KEY CLUSTERED
    (
    Production_Plan_Status_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 685 - production_plan_status2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Production_Plan_Status ADD
Modified datetime NULL,
Modified_By int NULL,
Status Varchar( 50) NULL
GO

COMMIT
GO


--Version 685 - production_ops1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Production_Ops
    (
    Production_Ops_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Production_Ops ADD CONSTRAINT
    PK_Production_Ops PRIMARY KEY CLUSTERED
    (
    Production_Ops_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 685 - production_ops2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Production_Ops ADD
Modified datetime NULL,
Modified_By int NULL,
Production_Plan_ID Int NULL,
Wo_Route_SChedule_ID Int NULL
GO

ALTER TABLE dbo.Production_Ops ADD CONSTRAINT
DF_Production_Ops_Production_Plan_ID DEFAULT 0 FOR Production_Plan_ID
GO

ALTER TABLE dbo.Production_Ops ADD CONSTRAINT
DF_Production_Ops_Wo_Route_SChedule_ID DEFAULT 0 FOR Wo_Route_SChedule_ID
GO

COMMIT
GO


--Version 685 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Add_Cust_PO_Date Bit NULL,
Invoice_From_SO Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Add_Cust_PO_Date DEFAULT 0 FOR Add_Cust_PO_Date
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Invoice_From_SO DEFAULT 0 FOR Invoice_From_SO
GO

COMMIT
GO


--Version 685 - enquirys1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.ENQUIRYS ADD
UDF1__UDData_ID Int NULL,
UDF2__UDData_ID Int NULL,
UDF3__UDData_ID Int NULL,
UDF4__UDData_ID Int NULL,
UDF5__UDData_ID Int NULL,
UDF6__UDData_ID Int NULL
GO

ALTER TABLE dbo.ENQUIRYS ADD CONSTRAINT
DF_ENQUIRYS_UDF1__UDData_ID DEFAULT 0 FOR UDF1__UDData_ID
GO

ALTER TABLE dbo.ENQUIRYS ADD CONSTRAINT
DF_ENQUIRYS_UDF2__UDData_ID DEFAULT 0 FOR UDF2__UDData_ID
GO

ALTER TABLE dbo.ENQUIRYS ADD CONSTRAINT
DF_ENQUIRYS_UDF3__UDData_ID DEFAULT 0 FOR UDF3__UDData_ID
GO

ALTER TABLE dbo.ENQUIRYS ADD CONSTRAINT
DF_ENQUIRYS_UDF4__UDData_ID DEFAULT 0 FOR UDF4__UDData_ID
GO

ALTER TABLE dbo.ENQUIRYS ADD CONSTRAINT
DF_ENQUIRYS_UDF5__UDData_ID DEFAULT 0 FOR UDF5__UDData_ID
GO

ALTER TABLE dbo.ENQUIRYS ADD CONSTRAINT
DF_ENQUIRYS_UDF6__UDData_ID DEFAULT 0 FOR UDF6__UDData_ID
GO

COMMIT
GO


--Version 685 - companys1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANYS ADD
CofC_Required Bit NULL,
Last_Order_Date  Datetime NULL,
Last_Quote_Date  Datetime NULL
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_CofC_Required DEFAULT 0 FOR CofC_Required
GO

COMMIT
GO


--Version 685 - wo_route_schedule1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Wo_Route_SChedule ADD
Display_Order Float(53) NULL,
Exists_On_Plan Bit NULL
GO

ALTER TABLE dbo.Wo_Route_SChedule ADD CONSTRAINT
DF_Wo_Route_SChedule_Display_Order DEFAULT 0 FOR Display_Order
GO

ALTER TABLE dbo.Wo_Route_SChedule ADD CONSTRAINT
DF_Wo_Route_SChedule_Exists_On_Plan DEFAULT 0 FOR Exists_On_Plan
GO

COMMIT
GO


--Version 685 - purchase_enquiry1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Purchase_Enquiry ADD
Enq__ENQUIRY_LINES_ID Int NULL,
Sales__Sales_Order_Lines_ID Int NULL
GO

ALTER TABLE dbo.Purchase_Enquiry ADD CONSTRAINT
DF_Purchase_Enquiry_Enq__ENQUIRY_LINES_ID DEFAULT 0 FOR Enq__ENQUIRY_LINES_ID
GO

COMMIT
GO


--Version 685 - plan_status1 .sql

INSERT INTO Production_Plan_Status
                      (Status)
VALUES     ('New')












--Version 685 - plan_status2.sql

INSERT INTO Production_Plan_Status
                      (Status)
VALUES     ('Fully Planned')














--Version 685 - plan_status3.sql

INSERT INTO Production_Plan_Status
                      (Status)
VALUES     ('Complete')












--Version 686 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Zero_Qty_On_BOM Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Zero_Qty_On_BOM DEFAULT 0 FOR Zero_Qty_On_BOM
GO

COMMIT
GO


--Version 687 - sales_orders_ud1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Sales_Orders_UD
    (
    Sales_Orders_UD_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Sales_Orders_UD ADD CONSTRAINT
    PK_Sales_Orders_UD PRIMARY KEY CLUSTERED
    (
    Sales_Orders_UD_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 687 - sales_order_profile1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Sales_Order_Profile
    (
    Sales_Order_Profile_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
    PK_Sales_Order_Profile PRIMARY KEY CLUSTERED
    (
    Sales_Order_Profile_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 687 - sales_order_profile2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Sales_Order_Profile ADD
Modified datetime NULL,
Modified_By int NULL,
Date_Field_Caption_1 Varchar( 254) NULL,
Date_Field_Caption_2 Varchar( 254) NULL,
Date_Field_Caption_3 Varchar( 254) NULL,
Date_Field_Caption_4 Varchar( 254) NULL,
Date_Field_Caption_5 Varchar( 254) NULL,
Date_Field_Caption_6 Varchar( 254) NULL,
Date_Field_Caption_7 Varchar( 254) NULL,
Date_Field_Caption_8 Varchar( 254) NULL,
Date_Field_Caption_9 Varchar( 254) NULL,
Date_Field_Caption_10 Varchar( 254) NULL,
Date_Field_Order_1 Int NULL,
Date_Field_Order_2 Int NULL,
Date_Field_Order_3 Int NULL,
Date_Field_Order_4 Int NULL,
Date_Field_Order_5 Int NULL,
Date_Field_Order_6 Int NULL,
Date_Field_Order_7 Int NULL,
Date_Field_Order_8 Int NULL,
Date_Field_Order_9 Int NULL,
Date_Field_Order_10 Int NULL,
Date_Field_Visible_1 Bit NULL,
Date_Field_Visible_2 Bit NULL,
Date_Field_Visible_3 Bit NULL,
Date_Field_Visible_4 Bit NULL,
Date_Field_Visible_5 Bit NULL,
Date_Field_Visible_6 Bit NULL,
Date_Field_Visible_7 Bit NULL,
Date_Field_Visible_8 Bit NULL,
Date_Field_Visible_9 Bit NULL,
Date_Field_Visible_10 Bit NULL,
Number_Field_Caption_1 Varchar( 254) NULL,
Number_Field_Caption_2 Varchar( 254) NULL,
Number_Field_Caption_3 Varchar( 254) NULL,
Number_Field_Caption_4 Varchar( 254) NULL,
Number_Field_Caption_5 Varchar( 254) NULL,
Number_Field_Caption_6 Varchar( 254) NULL,
Number_Field_Caption_7 Varchar( 254) NULL,
Number_Field_Caption_8 Varchar( 254) NULL,
Number_Field_Caption_9 Varchar( 254) NULL,
Number_Field_Caption_10 Varchar( 254) NULL,
Number_Field_Order_1 Int NULL,
Number_Field_Order_2 Int NULL,
Number_Field_Order_3 Int NULL,
Number_Field_Order_4 Int NULL,
Number_Field_Order_5 Int NULL,
Number_Field_Order_6 Int NULL,
Number_Field_Order_7 Int NULL,
Number_Field_Order_8 Int NULL,
Number_Field_Order_9 Int NULL,
Number_Field_Order_10 Int NULL,
Number_Field_Visible_1 Bit NULL,
Number_Field_Visible_2 Bit NULL,
Number_Field_Visible_3 Bit NULL,
Number_Field_Visible_4 Bit NULL,
Number_Field_Visible_5 Bit NULL,
Number_Field_Visible_6 Bit NULL,
Number_Field_Visible_7 Bit NULL,
Number_Field_Visible_8 Bit NULL,
Number_Field_Visible_9 Bit NULL,
Number_Field_Visible_10 Bit NULL,
Text_Field_Caption_1 Varchar( 254) NULL,
Text_Field_Caption_2 Varchar( 254) NULL,
Text_Field_Caption_3 Varchar( 254) NULL,
Text_Field_Caption_4 Varchar( 254) NULL,
Text_Field_Caption_5 Varchar( 254) NULL,
Text_Field_Caption_6 Varchar( 254) NULL,
Text_Field_Caption_7 Varchar( 254) NULL,
Text_Field_Caption_8 Varchar( 254) NULL,
Text_Field_Caption_9 Varchar( 254) NULL,
Text_Field_Caption_10 Varchar( 254) NULL,
Text_Field_Order_1 Int NULL,
Text_Field_Order_2 Int NULL,
Text_Field_Order_3 Int NULL,
Text_Field_Order_4 Int NULL,
Text_Field_Order_5 Int NULL,
Text_Field_Order_6 Int NULL,
Text_Field_Order_7 Int NULL,
Text_Field_Order_8 Int NULL,
Text_Field_Order_9 Int NULL,
Text_Field_Order_10 Int NULL,
Text_Field_Visible_1 Bit NULL,
Text_Field_Visible_2 Bit NULL,
Text_Field_Visible_3 Bit NULL,
Text_Field_Visible_4 Bit NULL,
Text_Field_Visible_5 Bit NULL,
Text_Field_Visible_6 Bit NULL,
Text_Field_Visible_7 Bit NULL,
Text_Field_Visible_8 Bit NULL,
Text_Field_Visible_9 Bit NULL,
Text_Field_Visible_10 Bit NULL
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_1 DEFAULT 0 FOR Date_Field_Visible_1
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_2 DEFAULT 0 FOR Date_Field_Visible_2
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_3 DEFAULT 0 FOR Date_Field_Visible_3
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_4 DEFAULT 0 FOR Date_Field_Visible_4
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_5 DEFAULT 0 FOR Date_Field_Visible_5
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_6 DEFAULT 0 FOR Date_Field_Visible_6
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_7 DEFAULT 0 FOR Date_Field_Visible_7
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_8 DEFAULT 0 FOR Date_Field_Visible_8
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_9 DEFAULT 0 FOR Date_Field_Visible_9
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_10 DEFAULT 0 FOR Date_Field_Visible_10
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_1 DEFAULT 0 FOR Number_Field_Visible_1
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_2 DEFAULT 0 FOR Number_Field_Visible_2
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_3 DEFAULT 0 FOR Number_Field_Visible_3
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_4 DEFAULT 0 FOR Number_Field_Visible_4
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_5 DEFAULT 0 FOR Number_Field_Visible_5
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_6 DEFAULT 0 FOR Number_Field_Visible_6
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_7 DEFAULT 0 FOR Number_Field_Visible_7
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_8 DEFAULT 0 FOR Number_Field_Visible_8
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_9 DEFAULT 0 FOR Number_Field_Visible_9
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_10 DEFAULT 0 FOR Number_Field_Visible_10
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_1 DEFAULT 0 FOR Text_Field_Visible_1
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_2 DEFAULT 0 FOR Text_Field_Visible_2
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_3 DEFAULT 0 FOR Text_Field_Visible_3
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_4 DEFAULT 0 FOR Text_Field_Visible_4
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_5 DEFAULT 0 FOR Text_Field_Visible_5
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_6 DEFAULT 0 FOR Text_Field_Visible_6
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_7 DEFAULT 0 FOR Text_Field_Visible_7
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_8 DEFAULT 0 FOR Text_Field_Visible_8
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_9 DEFAULT 0 FOR Text_Field_Visible_9
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_10 DEFAULT 0 FOR Text_Field_Visible_10
GO

COMMIT
GO


--Version 687 - sales_orders1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SALES_ORDERS ADD
Date_Field_1_Value Datetime NULL,
Date_Field_2_Value Datetime NULL,
Date_Field_3_Value Datetime NULL,
Date_Field_4_Value Datetime NULL,
Date_Field_5_Value Datetime NULL,
Date_Field_6_Value Datetime NULL,
Date_Field_7_Value Datetime NULL,
Date_Field_8_Value Datetime NULL,
Date_Field_9_Value Datetime NULL,
Date_Field_10_Value Datetime NULL,
Number_Field_1_Value Float(53) NULL,
Number_Field_2_Value Float(53) NULL,
Number_Field_3_Value Float(53) NULL,
Number_Field_4_Value Float(53) NULL,
Number_Field_5_Value Float(53) NULL,
Number_Field_6_Value Float(53) NULL,
Number_Field_7_Value Float(53) NULL,
Number_Field_8_Value Float(53) NULL,
Number_Field_9_Value Float(53) NULL,
Number_Field_10_Value Float(53) NULL,
Text_Field_1_Value Int NULL,
Text_Field_2_Value Int NULL,
Text_Field_3_Value Int NULL,
Text_Field_4_Value Int NULL,
Text_Field_5_Value Int NULL,
Text_Field_6_Value Int NULL,
Text_Field_7_Value Int NULL,
Text_Field_8_Value Int NULL,
Text_Field_9_Value Int NULL,
Text_Field_10_Value Int NULL
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_1_Value DEFAULT 0 FOR Number_Field_1_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_2_Value DEFAULT 0 FOR Number_Field_2_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_3_Value DEFAULT 0 FOR Number_Field_3_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_4_Value DEFAULT 0 FOR Number_Field_4_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_5_Value DEFAULT 0 FOR Number_Field_5_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_6_Value DEFAULT 0 FOR Number_Field_6_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_7_Value DEFAULT 0 FOR Number_Field_7_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_8_Value DEFAULT 0 FOR Number_Field_8_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_9_Value DEFAULT 0 FOR Number_Field_9_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_10_Value DEFAULT 0 FOR Number_Field_10_Value
GO

COMMIT
GO


--Version 687 - sales_orders_ud2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Sales_Orders_UD ADD
Modified datetime NULL,
Modified_By int NULL,
Data Varchar( 254) NULL,
Field Int NULL
GO

COMMIT
GO


--Version 687 - supplier_part_qty_price1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Supplier_Part_Qty_Price ADD
Notes Text NULL
GO

COMMIT
GO


--Version 688 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Confirm_Part_Notes_Copy Bit NULL,
Credit_Note_Authorisation Bit NULL,
NC_Authorisation Bit NULL,
Supplier_Authorisation Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Confirm_Part_Notes_Copy DEFAULT 0 FOR Confirm_Part_Notes_Copy
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Credit_Note_Authorisation DEFAULT 0 FOR Credit_Note_Authorisation
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_NC_Authorisation DEFAULT 0 FOR NC_Authorisation
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Supplier_Authorisation DEFAULT 0 FOR Supplier_Authorisation
GO

COMMIT
GO


--Version 688 - sy_passwords1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SY_Passwords ADD
Authorise_Credit_Notes Bit NULL,
Authorise_Suppliers Bit NULL,
Authorise_NC Bit NULL
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Authorise_Credit_Notes DEFAULT 0 FOR Authorise_Credit_Notes
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Authorise_Suppliers DEFAULT 0 FOR Authorise_Suppliers
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Authorise_NC DEFAULT 0 FOR Authorise_NC
GO

COMMIT
GO


--Version 688 - non_conformance1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Non_Conformance ADD
Total_Cost Float(53) NULL
GO

ALTER TABLE dbo.Non_Conformance ADD CONSTRAINT
DF_Non_Conformance_Total_Cost DEFAULT 0 FOR Total_Cost
GO

COMMIT
GO


--Version 688 - work_orders1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.WORK_ORDERS ADD
WO_Nest_Complete Bit NULL
GO

ALTER TABLE dbo.WORK_ORDERS ADD CONSTRAINT
DF_WORK_ORDERS_WO_Nest_Complete DEFAULT 0 FOR WO_Nest_Complete
GO

COMMIT
GO


--Version 688 - credits1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.CREDITS ADD
Authorised Bit NULL,
Authorised_By Int NULL
GO

ALTER TABLE dbo.CREDITS ADD CONSTRAINT
DF_CREDITS_Authorised DEFAULT 0 FOR Authorised
GO

COMMIT
GO


--Version 688 - sys_group.sql

UPDATE  dbo.Sy_Group_Options
 SET AddNew=1, [Update]=1, List=1, [Print]=1, [View]=1, [Delete]=1 WHERE (Object = 'Sales_Order_Profile')

--Version 689 - pi_item_history1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.PI_Item_History
    (
    PI_Item_History_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.PI_Item_History ADD CONSTRAINT
    PK_PI_Item_History PRIMARY KEY CLUSTERED
    (
    PI_Item_History_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 689 - pi_item_history2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.PI_Item_History ADD
Modified datetime NULL,
Modified_By int NULL,
Price_Change Float(53) NULL,
Qty_Change Float(53) NULL,
Total_Change Float(53) NULL,
Vat_Rate Float(53) NULL,
Vat_Amount Float(53) NULL,
History_Date Datetime NULL,
User_ID Int NULL,
PI_Item Int NULL,
PartID Int NULL
GO

ALTER TABLE dbo.PI_Item_History ADD CONSTRAINT
DF_PI_Item_History_Price_Change DEFAULT 0 FOR Price_Change
GO

ALTER TABLE dbo.PI_Item_History ADD CONSTRAINT
DF_PI_Item_History_Qty_Change DEFAULT 0 FOR Qty_Change
GO

ALTER TABLE dbo.PI_Item_History ADD CONSTRAINT
DF_PI_Item_History_Total_Change DEFAULT 0 FOR Total_Change
GO

ALTER TABLE dbo.PI_Item_History ADD CONSTRAINT
DF_PI_Item_History_Vat_Rate DEFAULT 0 FOR Vat_Rate
GO

ALTER TABLE dbo.PI_Item_History ADD CONSTRAINT
DF_PI_Item_History_Vat_Amount DEFAULT 0 FOR Vat_Amount
GO

COMMIT
GO


--Version 689 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
PITolerance Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_PITolerance DEFAULT 0 FOR PITolerance
GO

COMMIT
GO


--Version 690 - po_lines_history1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.PO_Lines_History
    (
    PO_Lines_History_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.PO_Lines_History ADD CONSTRAINT
    PK_PO_Lines_History PRIMARY KEY CLUSTERED
    (
    PO_Lines_History_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 690 - po_lines_history2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.PO_Lines_History ADD
Modified datetime NULL,
Modified_By int NULL,
Part_ID Int NULL,
History_Date Datetime NULL,
Price_Quoted Float(53) NULL,
Qty Float(53) NULL,
Qty_Delivered Float(53) NULL,
Qty_Invoiced Float(53) NULL,
Qty_Returned Float(53) NULL,
System_Price Float(53) NULL,
Vat_Rate_ID Int NULL,
Vat_Rate Float(53) NULL,
Vat_Amount Float(53) NULL,
Complete Bit NULL,
Cancelled Bit NULL,
Deleted Bit NULL,
Invoiced Bit NULL,
PO_Line Int NULL
GO

ALTER TABLE dbo.PO_Lines_History ADD CONSTRAINT
DF_PO_Lines_History_Price_Quoted DEFAULT 0 FOR Price_Quoted
GO

ALTER TABLE dbo.PO_Lines_History ADD CONSTRAINT
DF_PO_Lines_History_Qty DEFAULT 0 FOR Qty
GO

ALTER TABLE dbo.PO_Lines_History ADD CONSTRAINT
DF_PO_Lines_History_Qty_Delivered DEFAULT 0 FOR Qty_Delivered
GO

ALTER TABLE dbo.PO_Lines_History ADD CONSTRAINT
DF_PO_Lines_History_Qty_Invoiced DEFAULT 0 FOR Qty_Invoiced
GO

ALTER TABLE dbo.PO_Lines_History ADD CONSTRAINT
DF_PO_Lines_History_Qty_Returned DEFAULT 0 FOR Qty_Returned
GO

ALTER TABLE dbo.PO_Lines_History ADD CONSTRAINT
DF_PO_Lines_History_System_Price DEFAULT 0 FOR System_Price
GO

ALTER TABLE dbo.PO_Lines_History ADD CONSTRAINT
DF_PO_Lines_History_Vat_Rate DEFAULT 0 FOR Vat_Rate
GO

ALTER TABLE dbo.PO_Lines_History ADD CONSTRAINT
DF_PO_Lines_History_Vat_Amount DEFAULT 0 FOR Vat_Amount
GO

ALTER TABLE dbo.PO_Lines_History ADD CONSTRAINT
DF_PO_Lines_History_Complete DEFAULT 0 FOR Complete
GO

ALTER TABLE dbo.PO_Lines_History ADD CONSTRAINT
DF_PO_Lines_History_Cancelled DEFAULT 0 FOR Cancelled
GO

ALTER TABLE dbo.PO_Lines_History ADD CONSTRAINT
DF_PO_Lines_History_Deleted DEFAULT 0 FOR Deleted
GO

ALTER TABLE dbo.PO_Lines_History ADD CONSTRAINT
DF_PO_Lines_History_Invoiced DEFAULT 0 FOR Invoiced
GO

COMMIT
GO


--Version 690 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
PIToleranceValue Int NULL
GO

COMMIT
GO


--Version 690 - sales_order_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Sales_Order_Lines ADD
Run_No Varchar( 254) NULL
GO

COMMIT
GO


--Version 690 - sysgroup1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Sy_Group_Options ADD
Category Varchar( 254) NULL
GO

COMMIT
GO


--Version 691 - on_hire1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.On_Hire
    (
    On_Hire_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.On_Hire ADD CONSTRAINT
    PK_On_Hire PRIMARY KEY CLUSTERED
    (
    On_Hire_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 691 - on_hire2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.On_Hire ADD
Modified datetime NULL,
Modified_By int NULL,
Part Int NULL,
SalesOrderLine Int NULL,
Location Int NULL,
SerialNo Int NULL,
Date_Returned Datetime NULL,
Last_Invoiced_Date Datetime NULL,
Date_Out Datetime NULL,
Status Text NULL,
Customer Int NULL,
Total_Days Int NULL,
WO_NO Text NULL
GO

COMMIT
GO


--Version 691 - sales_order_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Sales_Order_Lines ADD
On_Hire_ID Int NULL
GO

COMMIT
GO


--Version 691 - work_orders1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.WORK_ORDERS ADD
On_Hire_Serial_No_ID Int NULL,
On_Hire_ID Int NULL
GO

COMMIT
GO


--Version 691 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
On_Hire Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_On_Hire DEFAULT 0 FOR On_Hire
GO

COMMIT
GO


--Version 692 - stock_costs_temp1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Stock_Costs_Temp
    (
    Stock_Costs_Temp_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
    PK_Stock_Costs_Temp PRIMARY KEY CLUSTERED
    (
    Stock_Costs_Temp_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 692 - stock_costs_temp2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock_Costs_Temp ADD
Modified datetime NULL,
Modified_By int NULL,
Stock_ID Int NULL,
Planned_Setup_Hrs Float(53) NULL,
Planned_Run_Hrs Float(53) NULL,
Planned_Setup_Machine_Cost Float(53) NULL,
Planned_Run_Machine_Cost Float(53) NULL,
Planned_Setup_Labour_Cost Float(53) NULL,
Planned_Run_Labour_Cost Float(53) NULL,
Planned_Total_Cost Float(53) NULL,
Actual_Setup_hrs Float(53) NULL,
Actual_Run_Hrs Float(53) NULL,
Actual_Setup_Machine_Cost Float(53) NULL,
Actual_Run_Machine_Cost Float(53) NULL,
Actual_Setup_Labour_Cost Float(53) NULL,
Actual_Run_Labour_Cost Float(53) NULL,
Actual_Total_Cost Float(53) NULL,
Planned_Material_Cost Float(53) NULL,
Actual_Material_Cost Float(53) NULL,
Planned_Sub_Con_Cost Float(53) NULL,
Actual_Sub_Con_Costs Float(53) NULL,
Planned_Expenses Float(53) NULL,
Actual_Expenses Float(53) NULL,
Planned_Sub_Ass_Man_Cost Float(53) NULL,
Actual_Sub_Ass_Man_Cost Float(53) NULL
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Planned_Setup_Hrs DEFAULT 0 FOR Planned_Setup_Hrs
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Planned_Run_Hrs DEFAULT 0 FOR Planned_Run_Hrs
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Planned_Setup_Machine_Cost DEFAULT 0 FOR Planned_Setup_Machine_Cost
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Planned_Run_Machine_Cost DEFAULT 0 FOR Planned_Run_Machine_Cost
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Planned_Setup_Labour_Cost DEFAULT 0 FOR Planned_Setup_Labour_Cost
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Planned_Run_Labour_Cost DEFAULT 0 FOR Planned_Run_Labour_Cost
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Planned_Total_Cost DEFAULT 0 FOR Planned_Total_Cost
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Actual_Setup_hrs DEFAULT 0 FOR Actual_Setup_hrs
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Actual_Run_Hrs DEFAULT 0 FOR Actual_Run_Hrs
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Actual_Setup_Machine_Cost DEFAULT 0 FOR Actual_Setup_Machine_Cost
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Actual_Run_Machine_Cost DEFAULT 0 FOR Actual_Run_Machine_Cost
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Actual_Setup_Labour_Cost DEFAULT 0 FOR Actual_Setup_Labour_Cost
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Actual_Run_Labour_Cost DEFAULT 0 FOR Actual_Run_Labour_Cost
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Actual_Total_Cost DEFAULT 0 FOR Actual_Total_Cost
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Planned_Material_Cost DEFAULT 0 FOR Planned_Material_Cost
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Actual_Material_Cost DEFAULT 0 FOR Actual_Material_Cost
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Planned_Sub_Con_Cost DEFAULT 0 FOR Planned_Sub_Con_Cost
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Actual_Sub_Con_Costs DEFAULT 0 FOR Actual_Sub_Con_Costs
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Planned_Expenses DEFAULT 0 FOR Planned_Expenses
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Actual_Expenses DEFAULT 0 FOR Actual_Expenses
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Planned_Sub_Ass_Man_Cost DEFAULT 0 FOR Planned_Sub_Ass_Man_Cost
GO

ALTER TABLE dbo.Stock_Costs_Temp ADD CONSTRAINT
DF_Stock_Costs_Temp_Actual_Sub_Ass_Man_Cost DEFAULT 0 FOR Actual_Sub_Ass_Man_Cost
GO

COMMIT
GO


--Version 692 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
MRP_Forecast_Last_Run Datetime NULL
GO

COMMIT
GO


--Version 693 - mrp_list.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.MRP_Temp ADD
Contract_No VARCHAR(50) NULL
GO

COMMIT
GO


--Version 693 - employee_targets1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Employee_Targets
    (
    Employee_Targets_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Employee_Targets ADD CONSTRAINT
    PK_Employee_Targets PRIMARY KEY CLUSTERED
    (
    Employee_Targets_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 693 - employee_targets2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Employee_Targets ADD
Daily Bit NULL,
Date_From Datetime NULL,
Date_Until Datetime NULL,
Modified datetime NULL,
Modified_By int NULL,
Monthly Bit NULL,
Parent__Employee_ID Int NULL,
Quarterly Bit NULL,
Target_Name Varchar( 254) NULL,
Target_Value Float(53) NULL,
Weekly Bit NULL,
Yearly Bit NULL
GO

ALTER TABLE dbo.Employee_Targets ADD CONSTRAINT
DF_Employee_Targets_Daily DEFAULT 0 FOR Daily
GO

ALTER TABLE dbo.Employee_Targets ADD CONSTRAINT
DF_Employee_Targets_Monthly DEFAULT 0 FOR Monthly
GO

ALTER TABLE dbo.Employee_Targets ADD CONSTRAINT
DF_Employee_Targets_Quarterly DEFAULT 0 FOR Quarterly
GO

ALTER TABLE dbo.Employee_Targets ADD CONSTRAINT
DF_Employee_Targets_Target_Value DEFAULT 0 FOR Target_Value
GO

ALTER TABLE dbo.Employee_Targets ADD CONSTRAINT
DF_Employee_Targets_Weekly DEFAULT 0 FOR Weekly
GO

ALTER TABLE dbo.Employee_Targets ADD CONSTRAINT
DF_Employee_Targets_Yearly DEFAULT 0 FOR Yearly
GO

COMMIT
GO


--Version 693 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
Invoice_Unit_of_measure__Uom_id Int NULL
GO

COMMIT
GO


--Version 693 - employee_holidays1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Employee_Holidays ADD
Out_Of_Office Bit NULL
GO

ALTER TABLE dbo.Employee_Holidays ADD CONSTRAINT
DF_Employee_Holidays_Out_Of_Office DEFAULT 0 FOR Out_Of_Office
GO

COMMIT
GO


--Version 693 - employee1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Employee ADD
Holidays_Taken Float(53) NULL
GO

ALTER TABLE dbo.Employee ADD CONSTRAINT
DF_Employee_Holidays_Taken DEFAULT 0 FOR Holidays_Taken
GO

COMMIT
GO


--Version 693 - invoice_part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Invoice_Part ADD
Use_Part_Invoice_UOM Bit NULL
GO

ALTER TABLE dbo.Invoice_Part ADD CONSTRAINT
DF_Invoice_Part_Use_Part_Invoice_UOM DEFAULT 0 FOR Use_Part_Invoice_UOM
GO

COMMIT
GO


--Version 693 - temp_stock_costs.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock_Costs_Temp ADD
WO_ID Int NULL
GO

COMMIT
GO


--Version 694 - wcc.sql


CREATE TABLE [dbo].[WCC_Temp_Print](
	[PK_ID] [int] IDENTITY(1,1) NOT NULL,
	[Item_Name] [nvarchar](200) NULL,
	[Previous_Load] [float] NULL,
	[W1_Load] [float] NULL,
	[W2_Load] [float] NULL,
	[W3_Load] [float] NULL,
	[W4_Load] [float] NULL,
	[W5_Load] [float] NULL,
	[W6_Load] [float] NULL,
	[W7_Load] [float] NULL,
	[W8_Load] [float] NULL,
	[W9_Load] [float] NULL,
	[W10_Load] [float] NULL,
	[W11_Load] [float] NULL,
	[W12_Load] [float] NULL,
	[W13_Load] [float] NULL,
	[W14_Load] [float] NULL,
	[W15_Load] [float] NULL,
	[W16_Load] [float] NULL,
	[W17_Load] [float] NULL,
	[W18_Load] [float] NULL,
	[W19_Load] [float] NULL,
	[W20_Load] [float] NULL,
	[W21_Load] [float] NULL,
	[W22_Load] [float] NULL,
	[W23_Load] [float] NULL,
	[W24_Load] [float] NULL,
	[W25_Load] [float] NULL,
	[W26_Load] [float] NULL,
	[Later_Load] [float] NULL,
	[Previous_Capacity] [float] NULL,
	[W1_Capacity] [float] NULL,
	[W2_Capacity] [float] NULL,
	[W3_Capacity] [float] NULL,
	[W4_Capacity] [float] NULL,
	[W5_Capacity] [float] NULL,
	[W6_Capacity] [float] NULL,
	[W7_Capacity] [float] NULL,
	[W8_Capacity] [float] NULL,
	[W9_Capacity] [float] NULL,
	[W10_Capacity] [float] NULL,
	[W11_Capacity] [float] NULL,
	[W12_Capacity] [float] NULL,
	[W13_Capacity] [float] NULL,
	[W14_Capacity] [float] NULL,
	[W15_Capacity] [float] NULL,
	[W16_Capacity] [float] NULL,
	[W17_Capacity] [float] NULL,
	[W18_Capacity] [float] NULL,
	[W19_Capacity] [float] NULL,
	[W20_Capacity] [float] NULL,
	[W21_Capacity] [float] NULL,
	[W22_Capacity] [float] NULL,
	[W23_Capacity] [float] NULL,
	[W24_Capacity] [float] NULL,
	[W25_Capacity] [float] NULL,
	[W26_Capacity] [float] NULL,
	[Later_Capacity] [float] NULL,
	[Previous_Cum] [float] NULL,
	[W1_Cum] [float] NULL,
	[W2_Cum] [float] NULL,
	[W3_Cum] [float] NULL,
	[W4_Cum] [float] NULL,
	[W5_Cum] [float] NULL,
	[W6_Cum] [float] NULL,
	[W7_Cum] [float] NULL,
	[W8_Cum] [float] NULL,
	[W9_Cum] [float] NULL,
	[W10_Cum] [float] NULL,
	[W11_Cum] [float] NULL,
	[W12_Cum] [float] NULL,
	[W13_Cum] [float] NULL,
	[W14_Cum] [float] NULL,
	[W15_Cum] [float] NULL,
	[W16_Cum] [float] NULL,
	[W17_Cum] [float] NULL,
	[W18_Cum] [float] NULL,
	[W19_Cum] [float] NULL,
	[W20_Cum] [float] NULL,
	[W21_Cum] [float] NULL,
	[W22_Cum] [float] NULL,
	[W23_Cum] [float] NULL,
	[W24_Cum] [float] NULL,
	[W25_Cum] [float] NULL,
	[W26_Cum] [float] NULL,
	[Later_Cum] [float] NULL,
 CONSTRAINT [PK_WCC_Temp] PRIMARY KEY CLUSTERED 
(
	[PK_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO



CREATE TABLE [dbo].[WCC_Custom_Values](
	[PK_ID] [int] IDENTITY(1,1) NOT NULL,
	[Item_ID] [int] NULL,
	[Type] [nvarchar](200) NULL,
	[Date] [DateTime] NULL,
	[Capacity] [float] NULL,
	[Notes] [text] NULL,
 CONSTRAINT [PK_WCC_Custom] PRIMARY KEY CLUSTERED 
(
	[PK_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO




CREATE TABLE [dbo].[WCC_Filters](
	[PK_ID] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](200) NULL,
	[Item_IDs] [text] NULL,
	[Type] [nvarchar](200) NULL,
 CONSTRAINT [PK_WCC_Filters] PRIMARY KEY CLUSTERED 
(
	[PK_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO



--Version 694 - work_orders1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.WORK_ORDERS ADD
Notes Text NULL
GO

COMMIT
GO


--Version 694 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
PE_Import Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_PE_Import DEFAULT 0 FOR PE_Import
GO

COMMIT
GO


--Version 695 - declined.sql

INSERT INTO Request_For_Quote_Status VALUES('Declined')
--Version 695 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Barcoding Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Barcoding DEFAULT 0 FOR Barcoding
GO

COMMIT
GO


--Version 695 - barcodes1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Barcodes
    (
    Barcodes_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Barcodes ADD CONSTRAINT
    PK_Barcodes PRIMARY KEY CLUSTERED
    (
    Barcodes_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 695 - barcodes2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Barcodes ADD
Modified datetime NULL,
Modified_By int NULL,
Barcode Varchar( 254) NULL,
Part Int NULL
GO

COMMIT
GO


--Version 695 - delivery_item1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Delivery_Item ADD
Barcode_Checked Bit NULL,
Barcode_Checked_By Int NULL,
Barcode_Checked_Date Datetime NULL
GO

ALTER TABLE dbo.Delivery_Item ADD CONSTRAINT
DF_Delivery_Item_Barcode_Checked DEFAULT 0 FOR Barcode_Checked
GO

ALTER TABLE dbo.Delivery_Item ADD CONSTRAINT
DF_Delivery_Item_Barcode_Checked_By DEFAULT 0 FOR Barcode_Checked_By
GO

COMMIT
GO


--Version 695 - supplier_part_qty_price1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Supplier_Part_Qty_Price ADD
Notes_Non_RTF Text NULL,
Complies_With_Spec Bit NULL,
Supplier_Quote_Ref Varchar( 254) NULL
GO

ALTER TABLE dbo.Supplier_Part_Qty_Price ADD CONSTRAINT
DF_Supplier_Part_Qty_Price_Complies_With_Spec DEFAULT 0 FOR Complies_With_Spec
GO

COMMIT
GO


--Version 695 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
Barcode Varchar( 254) NULL
GO

COMMIT
GO


--Version 696 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
Master_Part_No Varchar( 254) NULL,
Master_Part_Serial Int NULL
GO

COMMIT
GO


--Version 696 - invoices1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.INVOICES ADD
Paid Bit NULL
GO

ALTER TABLE dbo.INVOICES ADD CONSTRAINT
DF_INVOICES_Paid DEFAULT 0 FOR Paid
GO

COMMIT
GO


--Version 696 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
FlagColor Varchar( 254) NULL,
FlagName Varchar( 254) NULL
GO

COMMIT
GO


--Version 696 - question1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Question ADD
Copy_Part Bit NULL
GO

ALTER TABLE dbo.Question ADD CONSTRAINT
DF_Question_Copy_Part DEFAULT 0 FOR Copy_Part
GO

COMMIT
GO


--Version 697 - request_for_quote1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Request_For_Quote ADD
Notes_Non_RTF Text NULL
GO

COMMIT
GO


--Version 697 - companys1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANYS ADD
County Varchar( 254) NULL
GO

COMMIT
GO


--Version 697 - wcc_delete.sql


DELETE FROM         dbo.User_Buttons
WHERE     ([Button Id] = 74)
--Version 697 - part_costing_analysis1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Part_Costing_Analysis
    (
    Part_Costing_Analysis_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
    PK_Part_Costing_Analysis PRIMARY KEY CLUSTERED
    (
    Part_Costing_Analysis_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 697 - part_costing_analysis2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part_Costing_Analysis ADD
Enquiry_Line_ID Int NULL,
Enquiry_Line_Qty_ID Int NULL,
Manual_Entry_Material_Cost_BOM_Total Float(53) NULL,
Manual_Entry_Material_Cost_This_Part Float(53) NULL,
Manual_Entry_Run_Hours_BOM_Total Float(53) NULL,
Manual_Entry_Run_Hours_This_Part Float(53) NULL,
Manual_Entry_Setup_Hours_BOM_Total Float(53) NULL,
Manual_Entry_Setup_Hours_This_Part Float(53) NULL,
Manual_Entry_Sub_Con_Cost_BOM_Total Float(53) NULL,
Manual_Entry_Sub_Con_Cost_This_Part Float(53) NULL,
Modified datetime NULL,
Modified_By int NULL,
Part_ID Int NULL,
Price_Calculator_ACPH Float(53) NULL,
Price_Calculator_Admin_Charge Float(53) NULL,
Price_Calculator_Calc_Price_UOM Float(53) NULL,
Price_Calculator_Charge_Tonne Float(53) NULL,
Price_Calculator_Currency Int NULL,
Price_Calculator_Gross_Margin Float(53) NULL,
Price_Calculator_Price_Unit_Of_Sale Float(53) NULL,
Price_Calculator_Profit Float(53) NULL,
Price_Calculator_Programming Float(53) NULL,
Price_Calculator_RPMSH Float(53) NULL,
Price_Calculator_Tooling Float(53) NULL,
Price_Calculator_Total_Price Float(53) NULL,
Price_Calculator_Trans Float(53) NULL,
Price_Calculator_Unit_Of_Sale Int NULL,
Price_Calculator_UOS_Quantity Float(53) NULL,
Price_Calculator_Weight Float(53) NULL,
Total_Material_Cost_Charge_Out Float(53) NULL,
Total_Material_Costs_Cost Float(53) NULL,
Total_Material_Costs_Uplift Float(53) NULL,
Total_Programming_Charge_Out Float(53) NULL,
Total_Programming_Cost Float(53) NULL,
Total_Programming_Hours Float(53) NULL,
Total_Programming_Uplift Float(53) NULL,
Total_Run_Cost_Charge_Out Float(53) NULL,
Total_Run_Cost_Cost Float(53) NULL,
Total_Run_Cost_Hours Float(53) NULL,
Total_Run_Cost_Uplift Float(53) NULL,
Total_Setup_Cost_Charge_Out Float(53) NULL,
Total_Setup_Cost_Cost Float(53) NULL,
Total_Setup_Cost_Hours Float(53) NULL,
Total_Setup_Cost_Uplift Float(53) NULL,
Total_Sub_Con_Cost_Charge_Out Float(53) NULL,
Total_Sub_Con_Costs_Cost Float(53) NULL,
Total_Sub_Con_Costs_Uplift Float(53) NULL,
Total_Surface_Charge_Out Float(53) NULL,
Total_Tooling_Costs_Charge_Out Float(53) NULL,
Total_Tooling_Costs_Cost Float(53) NULL,
Total_Tooling_Costs_Uplift Float(53) NULL,
Total_Weight_Charge_Out Float(53) NULL
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Manual_Entry_Material_Cost_BOM_Total DEFAULT 0 FOR Manual_Entry_Material_Cost_BOM_Total
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Manual_Entry_Material_Cost_This_Part DEFAULT 0 FOR Manual_Entry_Material_Cost_This_Part
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Manual_Entry_Run_Hours_BOM_Total DEFAULT 0 FOR Manual_Entry_Run_Hours_BOM_Total
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Manual_Entry_Run_Hours_This_Part DEFAULT 0 FOR Manual_Entry_Run_Hours_This_Part
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Manual_Entry_Setup_Hours_BOM_Total DEFAULT 0 FOR Manual_Entry_Setup_Hours_BOM_Total
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Manual_Entry_Setup_Hours_This_Part DEFAULT 0 FOR Manual_Entry_Setup_Hours_This_Part
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Manual_Entry_Sub_Con_Cost_BOM_Total DEFAULT 0 FOR Manual_Entry_Sub_Con_Cost_BOM_Total
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Manual_Entry_Sub_Con_Cost_This_Part DEFAULT 0 FOR Manual_Entry_Sub_Con_Cost_This_Part
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Price_Calculator_ACPH DEFAULT 0 FOR Price_Calculator_ACPH
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Price_Calculator_Admin_Charge DEFAULT 0 FOR Price_Calculator_Admin_Charge
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Price_Calculator_Calc_Price_UOM DEFAULT 0 FOR Price_Calculator_Calc_Price_UOM
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Price_Calculator_Charge_Tonne DEFAULT 0 FOR Price_Calculator_Charge_Tonne
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Price_Calculator_Gross_Margin DEFAULT 0 FOR Price_Calculator_Gross_Margin
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Price_Calculator_Price_Unit_Of_Sale DEFAULT 0 FOR Price_Calculator_Price_Unit_Of_Sale
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Price_Calculator_Profit DEFAULT 0 FOR Price_Calculator_Profit
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Price_Calculator_Programming DEFAULT 0 FOR Price_Calculator_Programming
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Price_Calculator_RPMSH DEFAULT 0 FOR Price_Calculator_RPMSH
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Price_Calculator_Tooling DEFAULT 0 FOR Price_Calculator_Tooling
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Price_Calculator_Total_Price DEFAULT 0 FOR Price_Calculator_Total_Price
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Price_Calculator_Trans DEFAULT 0 FOR Price_Calculator_Trans
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Price_Calculator_UOS_Quantity DEFAULT 0 FOR Price_Calculator_UOS_Quantity
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Price_Calculator_Weight DEFAULT 0 FOR Price_Calculator_Weight
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Material_Cost_Charge_Out DEFAULT 0 FOR Total_Material_Cost_Charge_Out
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Material_Costs_Cost DEFAULT 0 FOR Total_Material_Costs_Cost
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Material_Costs_Uplift DEFAULT 0 FOR Total_Material_Costs_Uplift
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Programming_Charge_Out DEFAULT 0 FOR Total_Programming_Charge_Out
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Programming_Cost DEFAULT 0 FOR Total_Programming_Cost
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Programming_Hours DEFAULT 0 FOR Total_Programming_Hours
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Programming_Uplift DEFAULT 0 FOR Total_Programming_Uplift
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Run_Cost_Charge_Out DEFAULT 0 FOR Total_Run_Cost_Charge_Out
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Run_Cost_Cost DEFAULT 0 FOR Total_Run_Cost_Cost
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Run_Cost_Hours DEFAULT 0 FOR Total_Run_Cost_Hours
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Run_Cost_Uplift DEFAULT 0 FOR Total_Run_Cost_Uplift
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Setup_Cost_Charge_Out DEFAULT 0 FOR Total_Setup_Cost_Charge_Out
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Setup_Cost_Cost DEFAULT 0 FOR Total_Setup_Cost_Cost
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Setup_Cost_Hours DEFAULT 0 FOR Total_Setup_Cost_Hours
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Setup_Cost_Uplift DEFAULT 0 FOR Total_Setup_Cost_Uplift
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Sub_Con_Cost_Charge_Out DEFAULT 0 FOR Total_Sub_Con_Cost_Charge_Out
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Sub_Con_Costs_Cost DEFAULT 0 FOR Total_Sub_Con_Costs_Cost
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Sub_Con_Costs_Uplift DEFAULT 0 FOR Total_Sub_Con_Costs_Uplift
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Surface_Charge_Out DEFAULT 0 FOR Total_Surface_Charge_Out
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Tooling_Costs_Charge_Out DEFAULT 0 FOR Total_Tooling_Costs_Charge_Out
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Tooling_Costs_Cost DEFAULT 0 FOR Total_Tooling_Costs_Cost
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Tooling_Costs_Uplift DEFAULT 0 FOR Total_Tooling_Costs_Uplift
GO

ALTER TABLE dbo.Part_Costing_Analysis ADD CONSTRAINT
DF_Part_Costing_Analysis_Total_Weight_Charge_Out DEFAULT 0 FOR Total_Weight_Charge_Out
GO

COMMIT
GO


--Version 697 - allocations1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Allocations ADD
SO_Line_ID Int NULL,
WO_ID Int NULL
GO

COMMIT
GO


--Version 697 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
WorkCentre_Prefix Varchar( 254) NULL,
WorkCentreNo Int NULL,
PreventOverInvoicing Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_PreventOverInvoicing DEFAULT 0 FOR PreventOverInvoicing
GO

COMMIT
GO


--Version 698 - contacts1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.CONTACTS ADD
Delivery_Address Int NULL,
IM_Address Varchar( 254) NULL
GO

COMMIT
GO


--Version 698 - companys1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANYS ADD
Building Int NULL,
Export_Location Varchar( 500) NULL
GO

COMMIT
GO


--Version 698 - reports1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Reports ADD
Email_Body Text NULL,
Email_Subject Varchar( 254) NULL
GO

COMMIT
GO


--Version 698 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Export_Delivery_CSV Bit NULL,
Top_Level_Kit Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Export_Delivery_CSV DEFAULT 0 FOR Export_Delivery_CSV
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Top_Level_Kit DEFAULT 0 FOR Top_Level_Kit
GO

COMMIT
GO


--Version 698 - sales_order_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Sales_Order_Lines ADD
Sub_Level Bit NULL,
Top_Level Bit NULL,
Top_Level_SOL_ID Int NULL
GO

ALTER TABLE dbo.Sales_Order_Lines ADD CONSTRAINT
DF_Sales_Order_Lines_Sub_Level DEFAULT 0 FOR Sub_Level
GO

ALTER TABLE dbo.Sales_Order_Lines ADD CONSTRAINT
DF_Sales_Order_Lines_Top_Level DEFAULT 0 FOR Top_Level
GO

COMMIT
GO


--Version 698 - building1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Building ADD
Account_Path Varchar( 500) NULL
GO

COMMIT
GO


--Version 698 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
Invoice_UOM_Conv Int NULL
GO

COMMIT
GO


--Version 698 - report_formulas.sql

INSERT INTO Report_Formulas (Formula,Group_id_Report_Group_id)
VALUES ('Email Report','SALES ORDERS LIST')

INSERT INTO Report_Formulas (Formula,Group_id_Report_Group_id)
VALUES ('Email Report','INVOICES LIST')
--Version 699 - companys1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANYS ADD
Social_Network_1 Varchar( 254) NULL,
Social_Network_2 Varchar( 254) NULL
GO

COMMIT
GO


--Version 699 - work_orders1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.WORK_ORDERS ADD
WO_Group Varchar( 254) NULL
GO

COMMIT
GO


--Version 699 - location1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.LOCATION ADD
Quarantine Bit NULL
GO

ALTER TABLE dbo.LOCATION ADD CONSTRAINT
DF_LOCATION_Quarantine DEFAULT 0 FOR Quarantine
GO

COMMIT
GO


--Version 699 - stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock ADD
Quarantine_Qty Float(53) NULL
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Quarantine_Qty DEFAULT 0 FOR Quarantine_Qty
GO

COMMIT
GO


--Version 699 - rfq_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.RFQ_Lines ADD
Declined Bit NULL
GO

ALTER TABLE dbo.RFQ_Lines ADD CONSTRAINT
DF_RFQ_Lines_Declined DEFAULT 0 FOR Declined
GO

COMMIT
GO


--Version 699 - bom1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Bom ADD
Cir_Des Varchar( 254) NULL,
Safety_Critical Bit NULL,
TB Varchar( 254) NULL
GO

ALTER TABLE dbo.Bom ADD CONSTRAINT
DF_Bom_Safety_Critical DEFAULT 0 FOR Safety_Critical
GO

COMMIT
GO


--Version 699 - delivery_item1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Delivery_Item ADD
Line_Scanned Bit NULL
GO

ALTER TABLE dbo.Delivery_Item ADD CONSTRAINT
DF_Delivery_Item_Line_Scanned DEFAULT 0 FOR Line_Scanned
GO

COMMIT
GO


--Version 699 - company_address1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANY_ADDRESS ADD
County Varchar( 254) NULL
GO

COMMIT
GO


--Version 700 - delivery_item1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Delivery_Item ADD
Scanned_Processed Bit NULL
GO

ALTER TABLE dbo.Delivery_Item ADD CONSTRAINT
DF_Delivery_Item_Scanned_Processed DEFAULT 0 FOR Scanned_Processed
GO

COMMIT
GO


--Version 700 - bom1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Bom ADD
Last_Op Bit NULL
GO

ALTER TABLE dbo.Bom ADD CONSTRAINT
DF_Bom_Last_Op DEFAULT 0 FOR Last_Op
GO

COMMIT
GO


--Version 700 - times1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.TIMES ADD
Time_Split Float(53) NULL
GO

ALTER TABLE dbo.TIMES ADD CONSTRAINT
DF_TIMES_Time_Split DEFAULT 0 FOR Time_Split
GO

COMMIT
GO


--Version 701 - reports_companies1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Reports_Companies
    (
    Reports_Companies_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Reports_Companies ADD CONSTRAINT
    PK_Reports_Companies PRIMARY KEY CLUSTERED
    (
    Reports_Companies_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 701 - reports_companies2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Reports_Companies ADD
Modified datetime NULL,
Modified_By int NULL,
Report_ID Int NULL,
Company_ID Int NULL
GO

ALTER TABLE dbo.Reports_Companies ADD CONSTRAINT
DF_Reports_Companies_Company_ID DEFAULT 0 FOR Company_ID
GO

COMMIT
GO


--Version 701 - companys1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANYS ADD
DefaultShipper Bit NULL
GO

ALTER TABLE dbo.COMPANYS ADD CONSTRAINT
DF_COMPANYS_DefaultShipper DEFAULT 0 FOR DefaultShipper
GO

COMMIT
GO


--Version 701 - reports_parts1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Reports_Parts
    (
    Reports_Parts_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Reports_Parts ADD CONSTRAINT
    PK_Reports_Parts PRIMARY KEY CLUSTERED
    (
    Reports_Parts_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 701 - delivery1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Delivery ADD
PalletLoad Bit NULL
GO

ALTER TABLE dbo.Delivery ADD CONSTRAINT
DF_Delivery_PalletLoad DEFAULT 0 FOR PalletLoad
GO

COMMIT
GO


--Version 701 - reports1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Reports ADD
Customer_Specific Bit NULL,
Part_Specific Bit NULL
GO

ALTER TABLE dbo.Reports ADD CONSTRAINT
DF_Reports_Customer_Specific DEFAULT 0 FOR Customer_Specific
GO

ALTER TABLE dbo.Reports ADD CONSTRAINT
DF_Reports_Part_Specific DEFAULT 0 FOR Part_Specific
GO

COMMIT
GO


--Version 701 - reports_parts2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Reports_Parts ADD
Modified datetime NULL,
Modified_By int NULL,
Report_ID Int NULL,
Part_ID Int NULL
GO

COMMIT
GO


--Version 702 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Specific_Label Bit NULL,
email_Company Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Specific_Label DEFAULT 0 FOR Specific_Label
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_email_Company DEFAULT 0 FOR email_Company
GO

COMMIT
GO


--Version 702 - company_address1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANY_ADDRESS ADD
Mobile Varchar( 254) NULL,
email Varchar( 254) NULL
GO

COMMIT
GO


--Version 702 - work_orders1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.WORK_ORDERS ADD
UDF7__UDData_ID Int NULL,
Notes_Non_RTF Text NULL,
UDF8__UDData_ID Int NULL,
UDF10__UDData_ID Int NULL,
UDF9__UDData_ID Int NULL
GO

ALTER TABLE dbo.WORK_ORDERS ADD CONSTRAINT
DF_WORK_ORDERS_UDF7__UDData_ID DEFAULT 0 FOR UDF7__UDData_ID
GO

ALTER TABLE dbo.WORK_ORDERS ADD CONSTRAINT
DF_WORK_ORDERS_UDF8__UDData_ID DEFAULT 0 FOR UDF8__UDData_ID
GO

ALTER TABLE dbo.WORK_ORDERS ADD CONSTRAINT
DF_WORK_ORDERS_UDF10__UDData_ID DEFAULT 0 FOR UDF10__UDData_ID
GO

ALTER TABLE dbo.WORK_ORDERS ADD CONSTRAINT
DF_WORK_ORDERS_UDF9__UDData_ID DEFAULT 0 FOR UDF9__UDData_ID
GO

COMMIT
GO


--Version 702 - sales_orders1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SALES_ORDERS ADD
packaging_non_rtf Text NULL
GO

COMMIT
GO


--Version 702 - companys1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANYS ADD
Shipping_Company_ID Int NULL
GO

COMMIT
GO


--Version 703 - wo_receipt1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Wo_Receipt ADD
Receipted_By Varchar( 254) NULL
GO

COMMIT
GO


--Version 703 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Lock_All_Parts Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Lock_All_Parts DEFAULT 0 FOR Lock_All_Parts
GO

COMMIT
GO


--Version 704 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Stock_Order_CSV_Dir Varchar( 254) NULL,
StockOrderCSV Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_StockOrderCSV DEFAULT 0 FOR StockOrderCSV
GO

COMMIT
GO


--Version 705 - invoices1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.INVOICES ADD
Locked_By Int NULL
GO

COMMIT
GO


--Version 705 - companys1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANYS ADD
Locked_By Int NULL
GO

COMMIT
GO


--Version 705 - sales_orders1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SALES_ORDERS ADD
Locked_By Int NULL
GO

COMMIT
GO


--Version 705 - sy_passwords1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SY_Passwords ADD
Can_Unlock_Screen Bit NULL,
Deleted Bit NULL
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Can_Unlock_Screen DEFAULT 0 FOR Can_Unlock_Screen
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Deleted DEFAULT 0 FOR Deleted
GO

COMMIT
GO


--Version 705 - group_code1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Group_Code ADD
Part_Type_ID Int NULL,
UOM_ID Int NULL,
Tracability_ID Int NULL
GO

COMMIT
GO


--Version 705 - purchase_order1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Purchase_Order ADD
Locked_By Int NULL
GO

COMMIT
GO


--Version 705 - customer_return1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Customer_Return ADD
Location_Id Int NULL
GO

COMMIT
GO


--Version 705 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Screen_Lock Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Screen_Lock DEFAULT 0 FOR Screen_Lock
GO

COMMIT
GO


--Version 706 - machines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Machines
    (
    Machines_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Machines ADD CONSTRAINT
    PK_Machines PRIMARY KEY CLUSTERED
    (
    Machines_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 706 - machines2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Machines ADD
Machine_Name Varchar( 254) NULL,
Model Varchar( 254) NULL,
Description Varchar( 254) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

COMMIT
GO


--Version 706 - comp_machines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Comp_Machines
    (
    Comp_Machines_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Comp_Machines ADD CONSTRAINT
    PK_Comp_Machines PRIMARY KEY CLUSTERED
    (
    Comp_Machines_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 706 - comp_machines2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Comp_Machines ADD
Modified datetime NULL,
Modified_By int NULL,
Company_ID Int NULL,
Machine_ID Int NULL
GO

COMMIT
GO


--Version 706 - system2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Related_Docs_Copy Bit NULL,
SO_Line_Date_Default Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Related_Docs_Copy DEFAULT 0 FOR Related_Docs_Copy
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_SO_Line_Date_Default DEFAULT 0 FOR SO_Line_Date_Default
GO

COMMIT
GO


--Version 706 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
Locked_By Int NULL
GO

COMMIT
GO


--Version 707 - incidents1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Incidents
    (
    Incidents_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Incidents ADD CONSTRAINT
    PK_Incidents PRIMARY KEY CLUSTERED
    (
    Incidents_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 707 - incidents2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Incidents ADD
Eng_Work_End_Date Datetime NULL,
Eng_Work_End_Time Datetime NULL,
Eng_Work_Start_Time Datetime NULL,
Production_Stopped Bit NULL,
Eng_Work_Start_Date Datetime NULL,
Mach_Fault_Characterisation Text NULL,
Root_Cause Text NULL,
Mach_Comp_Fault Text NULL,
Maint_Dept_Data Text NULL,
Status_Id Int NULL,
Requested_By Int NULL,
Incident_Date Datetime NULL,
Modified datetime NULL,
Modified_By int NULL,
Incident_Time Datetime NULL,
Asset_No Int NULL,
Priority Int NULL,
Machine_Id Int NULL,
Position Varchar( 254) NULL
GO

ALTER TABLE dbo.Incidents ADD CONSTRAINT
DF_Incidents_Production_Stopped DEFAULT 0 FOR Production_Stopped
GO

COMMIT
GO


--Version 707 - bom_version1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Bom_Version
    (
    Bom_Version_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Bom_Version ADD CONSTRAINT
    PK_Bom_Version PRIMARY KEY CLUSTERED
    (
    Bom_Version_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 707 - bom_version2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Bom_Version ADD
Released Bit NULL,
Spare_Qty Float(53) NULL,
Sundry Bit NULL,
Main_Part__part_id Int NULL,
Notes Text NULL,
Qty Float(53) NULL,
Cir_Des Varchar( 254) NULL,
Last_Op Bit NULL,
Route_Version_Id Int NULL,
Date_Required_Offset Float(53) NULL,
Safety_Critical Bit NULL,
TB Varchar( 254) NULL,
Main_material Bit NULL,
Bom_Part__part_id Int NULL,
Bom_Version__Bom_Versions_id Int NULL,
Bom_Order Int NULL,
Modified datetime NULL,
Modified_By int NULL,
BomSupplier__Company_id Int NULL,
For_Version__Bom_versions_id Int NULL,
Length Float(53) NULL,
Extra_Qty Float(53) NULL,
Breadth Float(53) NULL,
Deleted Bit NULL
GO

ALTER TABLE dbo.Bom_Version ADD CONSTRAINT
DF_Bom_Version_Released DEFAULT 0 FOR Released
GO

ALTER TABLE dbo.Bom_Version ADD CONSTRAINT
DF_Bom_Version_Spare_Qty DEFAULT 0 FOR Spare_Qty
GO

ALTER TABLE dbo.Bom_Version ADD CONSTRAINT
DF_Bom_Version_Sundry DEFAULT 0 FOR Sundry
GO

ALTER TABLE dbo.Bom_Version ADD CONSTRAINT
DF_Bom_Version_Qty DEFAULT 0 FOR Qty
GO

ALTER TABLE dbo.Bom_Version ADD CONSTRAINT
DF_Bom_Version_Last_Op DEFAULT 0 FOR Last_Op
GO

ALTER TABLE dbo.Bom_Version ADD CONSTRAINT
DF_Bom_Version_Date_Required_Offset DEFAULT 0 FOR Date_Required_Offset
GO

ALTER TABLE dbo.Bom_Version ADD CONSTRAINT
DF_Bom_Version_Safety_Critical DEFAULT 0 FOR Safety_Critical
GO

ALTER TABLE dbo.Bom_Version ADD CONSTRAINT
DF_Bom_Version_Main_material DEFAULT 0 FOR Main_material
GO

ALTER TABLE dbo.Bom_Version ADD CONSTRAINT
DF_Bom_Version_Length DEFAULT 0 FOR Length
GO

ALTER TABLE dbo.Bom_Version ADD CONSTRAINT
DF_Bom_Version_Extra_Qty DEFAULT 0 FOR Extra_Qty
GO

ALTER TABLE dbo.Bom_Version ADD CONSTRAINT
DF_Bom_Version_Breadth DEFAULT 0 FOR Breadth
GO

ALTER TABLE dbo.Bom_Version ADD CONSTRAINT
DF_Bom_Version_Deleted DEFAULT 0 FOR Deleted
GO

COMMIT
GO


--Version 707 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
Delivery_Part Bit NULL
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_Delivery_Part DEFAULT 0 FOR Delivery_Part
GO

COMMIT
GO


--Version 707 - sales_orders1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SALES_ORDERS ADD
PalletLoad Bit NULL,
Hide_Del_Button Bit NULL
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_PalletLoad DEFAULT 0 FOR PalletLoad
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Hide_Del_Button DEFAULT 0 FOR Hide_Del_Button
GO

COMMIT
GO


--Version 707 - bom_versions1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Bom_Versions
    (
    Bom_Versions_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Bom_Versions ADD CONSTRAINT
    PK_Bom_Versions PRIMARY KEY CLUSTERED
    (
    Bom_Versions_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 707 - bom_versions2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Bom_Versions ADD
Version_Name Varchar( 254) NULL,
Version_Description Varchar( 254) NULL,
Part__Part_Id Int NULL,
Modified datetime NULL,
Modified_By int NULL
GO

COMMIT
GO


--Version 707 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Hide_Del_Button Bit NULL,
Default_SO_Del_Addr Int NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Hide_Del_Button DEFAULT 0 FOR Hide_Del_Button
GO

COMMIT
GO


--Version 707 - delivery1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Delivery ADD
SO_Number Varchar( 254) NULL
GO

COMMIT
GO


--Version 707 - sy_passwords1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SY_Passwords ADD
Cannot_Complete_Ops Bit NULL
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Cannot_Complete_Ops DEFAULT 0 FOR Cannot_Complete_Ops
GO

COMMIT
GO


--Version 707 - invoices1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.INVOICES ADD
SO_Number Varchar( 254) NULL,
Del_Number Varchar( 254) NULL
GO

COMMIT
GO


--Version 707 - system2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
autoRunPartRecon Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_autoRunPartRecon DEFAULT 0 FOR autoRunPartRecon
GO

COMMIT
GO


--Version 707 - expenses1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.EXPENSES ADD
Incident__Incident_Id Int NULL
GO

COMMIT
GO


--Version 707 - times1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.TIMES ADD
Incident__Incident_Id Int NULL
GO

COMMIT
GO


--Version 707 - system3.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Maint__WORK_ORDERS_ID Int NULL
GO

COMMIT
GO


--Version 707 - wo_issue1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.WO_ISSUE ADD
Incident__Incident_Id Int NULL
GO

COMMIT
GO


--Version 708 - bom_route_versions1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Bom_Route_Versions
    (
    Bom_Route_Versions_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Bom_Route_Versions ADD CONSTRAINT
    PK_Bom_Route_Versions PRIMARY KEY CLUSTERED
    (
    Bom_Route_Versions_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 708 - bom_route_versions2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Bom_Route_Versions ADD
Modified datetime NULL,
Modified_By int NULL,
Part__Part_ID Int NULL,
Route_Version__Route_Version_ID Int NULL
GO

COMMIT
GO


--Version 708 - bom1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Bom ADD
enabled Bit NULL
GO

ALTER TABLE dbo.Bom ADD CONSTRAINT
DF_Bom_enabled DEFAULT 0 FOR enabled
GO

COMMIT
GO


--Version 708 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Bom_Versions Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Bom_Versions DEFAULT 0 FOR Bom_Versions
GO

COMMIT
GO


--Version 709 - employee1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Employee ADD
Emp_WC1 Int NULL,
Emp_WC2 Int NULL,
Emp_WC3 Int NULL,
Emp_Process1 Int NULL
GO

COMMIT
GO


--Version 709 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
WO_Leading_Zero Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_WO_Leading_Zero DEFAULT 0 FOR WO_Leading_Zero
GO

COMMIT
GO


--Version 710 - employee1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Employee ADD
Restrict_Right_Click Bit NULL
GO

ALTER TABLE dbo.Employee ADD CONSTRAINT
DF_Employee_Restrict_Right_Click DEFAULT 0 FOR Restrict_Right_Click
GO

COMMIT
GO


--Version 710 - sy_passwords1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SY_Passwords ADD
RestrictRightClick Bit NULL
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_RestrictRightClick DEFAULT 0 FOR RestrictRightClick
GO

COMMIT
GO


--Version 710 - sales_order_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Sales_Order_Lines ADD
Item_No Varchar( 254) NULL
GO

COMMIT
GO


--Version 711 - workflow_questions1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Workflow_Questions
    (
    Workflow_Questions_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Workflow_Questions ADD CONSTRAINT
    PK_Workflow_Questions PRIMARY KEY CLUSTERED
    (
    Workflow_Questions_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 711 - workflow_questions2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Workflow_Questions ADD
Modified datetime NULL,
Modified_By int NULL,
Question Varchar( 254) NULL,
Question_Type Varchar( 254) NULL,
Deleted Bit NULL,
Question_Num Varchar( 254) NULL,
Quality Bit NULL,
Commercial Bit NULL,
Production Bit NULL,
Finance Bit NULL,
Planning Bit NULL
GO

ALTER TABLE dbo.Workflow_Questions ADD CONSTRAINT
DF_Workflow_Questions_Deleted DEFAULT 0 FOR Deleted
GO

ALTER TABLE dbo.Workflow_Questions ADD CONSTRAINT
DF_Workflow_Questions_Quality DEFAULT 0 FOR Quality
GO

ALTER TABLE dbo.Workflow_Questions ADD CONSTRAINT
DF_Workflow_Questions_Commercial DEFAULT 0 FOR Commercial
GO

ALTER TABLE dbo.Workflow_Questions ADD CONSTRAINT
DF_Workflow_Questions_Production DEFAULT 0 FOR Production
GO

ALTER TABLE dbo.Workflow_Questions ADD CONSTRAINT
DF_Workflow_Questions_Finance DEFAULT 0 FOR Finance
GO

ALTER TABLE dbo.Workflow_Questions ADD CONSTRAINT
DF_Workflow_Questions_Planning DEFAULT 0 FOR Planning
GO

COMMIT
GO


--Version 711 - sy_passwords1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SY_Passwords ADD
Workflow_Quality Bit NULL,
Workflow_Commercial Bit NULL,
Workflow_Production Bit NULL,
Workflow_Finance Bit NULL,
Workflow_Planning Bit NULL
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Workflow_Quality DEFAULT 0 FOR Workflow_Quality
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Workflow_Commercial DEFAULT 0 FOR Workflow_Commercial
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Workflow_Production DEFAULT 0 FOR Workflow_Production
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Workflow_Finance DEFAULT 0 FOR Workflow_Finance
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Workflow_Planning DEFAULT 0 FOR Workflow_Planning
GO

COMMIT
GO


--Version 711 - workflow1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Workflow
    (
    Workflow_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Workflow ADD CONSTRAINT
    PK_Workflow PRIMARY KEY CLUSTERED
    (
    Workflow_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 711 - workflow2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Workflow ADD
Modified datetime NULL,
Modified_By int NULL,
Contract_ID Int NULL,
Workflow_Question Int NULL,
Response Varchar( 254) NULL,
Caveat Varchar( 254) NULL
GO

COMMIT
GO


--Version 711 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Workflow Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Workflow DEFAULT 0 FOR Workflow
GO

COMMIT
GO


--Version 711 - po_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Po_Lines ADD
Use_Price_Tonne Bit NULL
GO

ALTER TABLE dbo.Po_Lines ADD CONSTRAINT
DF_Po_Lines_Use_Price_Tonne DEFAULT 0 FOR Use_Price_Tonne
GO

COMMIT
GO


--Version 712 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Force_Batch_No Bit NULL,
Aloow_Vat_Edit Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Force_Batch_No DEFAULT 0 FOR Force_Batch_No
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Aloow_Vat_Edit DEFAULT 0 FOR Aloow_Vat_Edit
GO

COMMIT
GO


--Version 712 - invoice_part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Invoice_Part ADD
Vat_Adjustment Float(53) NULL
GO

ALTER TABLE dbo.Invoice_Part ADD CONSTRAINT
DF_Invoice_Part_Vat_Adjustment DEFAULT 0 FOR Vat_Adjustment
GO

COMMIT
GO


--Version 712 - stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock ADD
Supplier_CofC Varchar( 254) NULL
GO

COMMIT
GO


--Version 712 - invoices1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.INVOICES ADD
Vat_Adjustment Float(53) NULL
GO

ALTER TABLE dbo.INVOICES ADD CONSTRAINT
DF_INVOICES_Vat_Adjustment DEFAULT 0 FOR Vat_Adjustment
GO

COMMIT
GO


--Version 713 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
WO_Single_Cast_Issue Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_WO_Single_Cast_Issue DEFAULT 0 FOR WO_Single_Cast_Issue
GO

COMMIT
GO


--Version 714 - uom1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.UOM ADD
For_Spec Bit NULL
GO

ALTER TABLE dbo.UOM ADD CONSTRAINT
DF_UOM_For_Spec DEFAULT 0 FOR For_Spec
GO

COMMIT
GO


--Version 714 - conversions1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Conversions ADD
For_Spec Bit NULL
GO

ALTER TABLE dbo.Conversions ADD CONSTRAINT
DF_Conversions_For_Spec DEFAULT 0 FOR For_Spec
GO

COMMIT
GO


--Version 714 - stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock ADD
Part_Notes_Non_RTF Varchar( 254) NULL
GO

COMMIT
GO


--Version 714 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
SO_Num_Sequential Bit NULL,
Supp_Addr_On_PO Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_SO_Num_Sequential DEFAULT 0 FOR SO_Num_Sequential
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Supp_Addr_On_PO DEFAULT 0 FOR Supp_Addr_On_PO
GO

COMMIT
GO


--Version 714 - script1.sql



CREATE TABLE [dbo].[SFDC_Settings](
	[PK_SFDC_Settings_ID] [int] IDENTITY(1,1) NOT NULL,
	[Use_Barcode_Masks] [bit] NULL,
	[Employee_No_Mask] [nvarchar](50) NULL,
	[WO_No_Mask] [nvarchar](50) NULL,
	[Op_No_Mask] [nvarchar](50) NULL,
	[WC_No_Mask] [nvarchar](50) NULL,
	[Job_Option] [int] NULL,
	[Clock_Off_On_Clock_Out] [bit] NULL,
	[Allow_Scrap] [bit] NULL,
	[Password] [nvarchar](50) NULL,
 CONSTRAINT [PK_SFDC_Settings] PRIMARY KEY CLUSTERED 
(
	[PK_SFDC_Settings_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO



--Version 714 - script2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Time_In_Attendance
ADD
Absence_Type nvarchar(50) NULL
GO

ALTER TABLE dbo.Time_In_Attendance
ADD
Paid Bit NULL
GO

ALTER TABLE dbo.Time_In_Attendance
ADD
Notes nvarchar(MAX) NULL
GO


COMMIT
GO

--Version 714 - script3.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SFDC_Transactions
ADD
Absence_Type nvarchar(50) NULL
GO

ALTER TABLE dbo.SFDC_Transactions 
ADD
Paid Bit NULL
GO

ALTER TABLE dbo.SFDC_Transactions 
ADD
Notes nvarchar(MAX) NULL
GO


COMMIT
GO

--Version 714 - sfdc.sql


INSERT INTO [SFDC_Settings] ([Use_Barcode_Masks], [Employee_No_Mask], [WO_No_Mask], [Op_No_Mask], [WC_No_Mask], [Job_Option], [Clock_Off_On_Clock_Out], [Allow_Scrap], [Password]) VALUES (0, N'$', N'%', N'/', N'&', 1, 1, 0, N'sfdc')
GO


--Version 715 - sales_orders1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SALES_ORDERS ADD
Can_Deliver Bit NULL,
Total_Weight Float(53) NULL
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Can_Deliver DEFAULT 0 FOR Can_Deliver
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Total_Weight DEFAULT 0 FOR Total_Weight
GO

COMMIT
GO


--Version 715 - enquirys1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.ENQUIRYS ADD
Total_Weight Float(53) NULL
GO

ALTER TABLE dbo.ENQUIRYS ADD CONSTRAINT
DF_ENQUIRYS_Total_Weight DEFAULT 0 FOR Total_Weight
GO

COMMIT
GO


--Version 715 - delivery1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Delivery ADD
Total_Weight Float(53) NULL
GO

ALTER TABLE dbo.Delivery ADD CONSTRAINT
DF_Delivery_Total_Weight DEFAULT 0 FOR Total_Weight
GO

COMMIT
GO


--Version 715 - stock_cost_changes1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Stock_Cost_Changes
    (
    Stock_Cost_Changes_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Stock_Cost_Changes ADD CONSTRAINT
    PK_Stock_Cost_Changes PRIMARY KEY CLUSTERED
    (
    Stock_Cost_Changes_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 715 - stock_cost_changes2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock_Cost_Changes ADD
Modified datetime NULL,
Modified_By int NULL,
Changed_From Float(53) NULL,
Changed_To Float(53) NULL
GO

ALTER TABLE dbo.Stock_Cost_Changes ADD CONSTRAINT
DF_Stock_Cost_Changes_Changed_From DEFAULT 0 FOR Changed_From
GO

ALTER TABLE dbo.Stock_Cost_Changes ADD CONSTRAINT
DF_Stock_Cost_Changes_Changed_To DEFAULT 0 FOR Changed_To
GO

COMMIT
GO


--Version 715 - route1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Route ADD
Instructions_Non_RTF Text NULL
GO

COMMIT
GO


--Version 715 - sales_order_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Sales_Order_Lines ADD
Can_Deliver Bit NULL
GO

ALTER TABLE dbo.Sales_Order_Lines ADD CONSTRAINT
DF_Sales_Order_Lines_Can_Deliver DEFAULT 0 FOR Can_Deliver
GO

COMMIT
GO


--Version 715 - work_orders1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.WORK_ORDERS ADD
Can_Deliver Bit NULL
GO

ALTER TABLE dbo.WORK_ORDERS ADD CONSTRAINT
DF_WORK_ORDERS_Can_Deliver DEFAULT 0 FOR Can_Deliver
GO

COMMIT
GO


--Version 715 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Delivery_Days Int NULL,
Add_Sched_SOLine_To_Existing_Del Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Delivery_Days DEFAULT 0 FOR Delivery_Days
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Add_Sched_SOLine_To_Existing_Del DEFAULT 0 FOR Add_Sched_SOLine_To_Existing_Del
GO

COMMIT
GO


--Version 715 - allocations1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Allocations ADD
Can_Issue Bit NULL
GO

ALTER TABLE dbo.Allocations ADD CONSTRAINT
DF_Allocations_Can_Issue DEFAULT 0 FOR Can_Issue
GO

COMMIT
GO


--Version 715 - report_formulas1.sql

INSERT INTO Report_Formulas
                      (Formula, Group_id_Report_Group_id)
VALUES     ('Email Multiple Invoices', 'INVOICES LIST')
--Version 716 - company_address1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANY_ADDRESS ADD
Hidden Bit NULL
GO

ALTER TABLE dbo.COMPANY_ADDRESS ADD CONSTRAINT
DF_COMPANY_ADDRESS_Hidden DEFAULT 0 FOR Hidden
GO

COMMIT
GO


--Version 716 - companys1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANYS ADD
Copy_Of_Address_ID Int NULL
GO

COMMIT
GO


--Version 716 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
SO_Copy_First_Line_Dates Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_SO_Copy_First_Line_Dates DEFAULT 0 FOR SO_Copy_First_Line_Dates
GO

COMMIT
GO


--Version 717 - sy_password1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SY_Passwords ADD
Can_Send_User_Messages Bit NULL
GO

COMMIT
GO



--Version 717 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION

ALTER TABLE dbo.System ADD
User_Message Text NULL
GO

COMMIT
GO



--Version 717 - system2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION

ALTER TABLE dbo.System ADD
System_Lockdown bit NULL
GO

COMMIT
GO



--Version 717 - supplierpartprice1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Supplier_Part_Qty_Price ADD
Manual_Selling_Price Float NULL
GO

COMMIT
GO



--Version 717 - system3.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION

ALTER TABLE dbo.System ADD
No_Qty_On_Receipts bit NULL
GO

COMMIT
GO



--Version 717 - ncaction.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION

ALTER TABLE dbo.NC_Action ADD
WORK_ORDERS__WORK_ORDERS_ID int NULL
GO

COMMIT
GO



--Version 717 - system4.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION

ALTER TABLE dbo.System ADD
Allow_Work_Orders_On_Non_Firm_Orders bit NULL
GO

COMMIT
GO



--Version 718 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION

ALTER TABLE dbo.System ADD
Alternative__Stock_Costing Bit NULL
GO

COMMIT
GO



--Version 718 - work_orders1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION

ALTER TABLE dbo.Work_Orders ADD
Post_Completion_Costs Float NULL
GO

COMMIT
GO



--Version 718 - system2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION

ALTER TABLE dbo.System ADD
One_Contract_Review_Per_SO Bit NULL
GO

COMMIT
GO



--Version 718 - system3.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION

ALTER TABLE dbo.System ADD
No_Invoice_From_SO Bit NULL
GO

COMMIT
GO



--Version 718 - part_picture1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION

ALTER TABLE dbo.Part_Picture ADD
Picture_1_Name NVarchar(300) NULL
GO
ALTER TABLE dbo.Part_Picture ADD
Picture_2_Name NVarchar(300) NULL
GO
ALTER TABLE dbo.Part_Picture ADD
Picture_3_Name NVarchar(300) NULL
GO
ALTER TABLE dbo.Part_Picture ADD
Picture_4_Name NVarchar(300) NULL
GO
ALTER TABLE dbo.Part_Picture ADD
Picture_5_Name NVarchar(300) NULL
GO
ALTER TABLE dbo.Part_Picture ADD
Picture_6_Name NVarchar(300) NULL
GO
COMMIT
GO



--Version 719 - filler.sql

SELECT        Part_No
FROM            dbo.Part
WHERE        (Part_No = '')
--Version 720 - multi_scrap1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Multi_Scrap
    (
    Multi_Scrap_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Multi_Scrap ADD CONSTRAINT
    PK_Multi_Scrap PRIMARY KEY CLUSTERED
    (
    Multi_Scrap_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 720 - multi_scrap2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Multi_Scrap ADD
Modified datetime NULL,
Modified_By int NULL,
Scrap_Qty Float(53) NULL,
Scrap_Reason Text NULL,
Times_Id Int NULL
GO

ALTER TABLE dbo.Multi_Scrap ADD CONSTRAINT
DF_Multi_Scrap_Scrap_Qty DEFAULT 0 FOR Scrap_Qty
GO

COMMIT
GO


--Version 720 - production_ops1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Production_Ops ADD
Sort_Order Int NULL
GO

COMMIT
GO


--Version 720 - production_plan1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Production_Plan ADD
Plan__Work_Centre_ID Int NULL
GO

COMMIT
GO


--Version 720 - sales_orders1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SALES_ORDERS ADD
Date_Field_11_Value Datetime NULL,
Date_Field_12_Value Datetime NULL,
Date_Field_13_Value Datetime NULL,
Date_Field_14_Value Datetime NULL,
Date_Field_15_Value Datetime NULL,
Date_Field_16_Value Datetime NULL,
Date_Field_17_Value Datetime NULL,
Date_Field_18_Value Datetime NULL,
Date_Field_19_Value Datetime NULL,
Date_Field_20_Value Datetime NULL,
Number_Field_11_Value Float(53) NULL,
Number_Field_12_Value Float(53) NULL,
Number_Field_13_Value Float(53) NULL,
Number_Field_14_Value Float(53) NULL,
Number_Field_15_Value Float(53) NULL,
Number_Field_16_Value Float(53) NULL,
Number_Field_17_Value Float(53) NULL,
Number_Field_18_Value Float(53) NULL,
Number_Field_19_Value Float(53) NULL,
Number_Field_20_Value Float(53) NULL,
Text_Field_11_Value Int NULL,
Text_Field_12_Value Int NULL,
Text_Field_13_Value Int NULL,
Text_Field_14_Value Int NULL,
Text_Field_15_Value Int NULL,
Text_Field_16_Value Int NULL,
Text_Field_17_Value Int NULL,
Text_Field_18_Value Int NULL,
Text_Field_19_Value Int NULL,
Text_Field_20_Value Int NULL,
Date_Field_21_Value Datetime NULL,
Date_Field_22_Value Datetime NULL,
Date_Field_23_Value Datetime NULL,
Date_Field_24_Value Datetime NULL,
Date_Field_25_Value Datetime NULL,
Date_Field_26_Value Datetime NULL,
Date_Field_27_Value Datetime NULL,
Date_Field_28_Value Datetime NULL,
Date_Field_29_Value Datetime NULL,
Date_Field_30_Value Datetime NULL,
Number_Field_21_Value Float(53) NULL,
Number_Field_22_Value Float(53) NULL,
Number_Field_23_Value Float(53) NULL,
Number_Field_24_Value Float(53) NULL,
Number_Field_25_Value Float(53) NULL,
Number_Field_26_Value Float(53) NULL,
Number_Field_27_Value Float(53) NULL,
Number_Field_28_Value Float(53) NULL,
Number_Field_29_Value Float(53) NULL,
Number_Field_30_Value Float(53) NULL,
Text_Field_21_Value Int NULL,
Text_Field_22_Value Int NULL,
Text_Field_23_Value Int NULL,
Text_Field_24_Value Int NULL,
Text_Field_25_Value Int NULL,
Text_Field_26_Value Int NULL,
Text_Field_27_Value Int NULL,
Text_Field_28_Value Int NULL,
Text_Field_29_Value Int NULL,
Text_Field_30_Value Int NULL
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_11_Value DEFAULT 0 FOR Number_Field_11_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_12_Value DEFAULT 0 FOR Number_Field_12_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_13_Value DEFAULT 0 FOR Number_Field_13_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_14_Value DEFAULT 0 FOR Number_Field_14_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_15_Value DEFAULT 0 FOR Number_Field_15_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_16_Value DEFAULT 0 FOR Number_Field_16_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_17_Value DEFAULT 0 FOR Number_Field_17_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_18_Value DEFAULT 0 FOR Number_Field_18_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_19_Value DEFAULT 0 FOR Number_Field_19_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_20_Value DEFAULT 0 FOR Number_Field_20_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_21_Value DEFAULT 0 FOR Number_Field_21_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_22_Value DEFAULT 0 FOR Number_Field_22_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_23_Value DEFAULT 0 FOR Number_Field_23_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_24_Value DEFAULT 0 FOR Number_Field_24_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_25_Value DEFAULT 0 FOR Number_Field_25_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_26_Value DEFAULT 0 FOR Number_Field_26_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_27_Value DEFAULT 0 FOR Number_Field_27_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_28_Value DEFAULT 0 FOR Number_Field_28_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_29_Value DEFAULT 0 FOR Number_Field_29_Value
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Number_Field_30_Value DEFAULT 0 FOR Number_Field_30_Value
GO

COMMIT
GO


--Version 720 - sales_orders2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SALES_ORDERS ADD
Contract_Reviewed Bit NULL
GO

ALTER TABLE dbo.SALES_ORDERS ADD CONSTRAINT
DF_SALES_ORDERS_Contract_Reviewed DEFAULT 0 FOR Contract_Reviewed
GO

COMMIT
GO


--Version 720 - sales_order_profile1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Sales_Order_Profile ADD

Date_Field_Caption_11 Varchar( 254) NULL,
Date_Field_Caption_12 Varchar( 254) NULL,
Date_Field_Caption_13 Varchar( 254) NULL,
Date_Field_Caption_14 Varchar( 254) NULL,
Date_Field_Caption_15 Varchar( 254) NULL,
Date_Field_Caption_16 Varchar( 254) NULL,
Date_Field_Caption_17 Varchar( 254) NULL,
Date_Field_Caption_18 Varchar( 254) NULL,
Date_Field_Caption_19 Varchar( 254) NULL,
Date_Field_Caption_20 Varchar( 254) NULL,
Date_Field_Order_11 Int NULL,
Date_Field_Order_12 Int NULL,
Date_Field_Order_13 Int NULL,
Date_Field_Order_14 Int NULL,
Date_Field_Order_15 Int NULL,
Date_Field_Order_16 Int NULL,
Date_Field_Order_17 Int NULL,
Date_Field_Order_18 Int NULL,
Date_Field_Order_19 Int NULL,
Date_Field_Order_20 Int NULL,
Date_Field_Visible_11 Bit NULL,
Date_Field_Visible_12 Bit NULL,
Date_Field_Visible_13 Bit NULL,
Date_Field_Visible_14 Bit NULL,
Date_Field_Visible_15 Bit NULL,
Date_Field_Visible_16 Bit NULL,
Date_Field_Visible_17 Bit NULL,
Date_Field_Visible_18 Bit NULL,
Date_Field_Visible_19 Bit NULL,
Date_Field_Visible_20 Bit NULL,
Number_Field_Caption_11 Varchar( 254) NULL,
Number_Field_Caption_12 Varchar( 254) NULL,
Number_Field_Caption_13 Varchar( 254) NULL,
Number_Field_Caption_14 Varchar( 254) NULL,
Number_Field_Caption_15 Varchar( 254) NULL,
Number_Field_Caption_16 Varchar( 254) NULL,
Number_Field_Caption_17 Varchar( 254) NULL,
Number_Field_Caption_18 Varchar( 254) NULL,
Number_Field_Caption_19 Varchar( 254) NULL,
Number_Field_Caption_20 Varchar( 254) NULL,
Number_Field_Order_11 Int NULL,
Number_Field_Order_12 Int NULL,
Number_Field_Order_13 Int NULL,
Number_Field_Order_14 Int NULL,
Number_Field_Order_15 Int NULL,
Number_Field_Order_16 Int NULL,
Number_Field_Order_17 Int NULL,
Number_Field_Order_18 Int NULL,
Number_Field_Order_19 Int NULL,
Number_Field_Order_20 Int NULL,
Number_Field_Visible_11 Bit NULL,
Number_Field_Visible_12 Bit NULL,
Number_Field_Visible_13 Bit NULL,
Number_Field_Visible_14 Bit NULL,
Number_Field_Visible_15 Bit NULL,
Number_Field_Visible_16 Bit NULL,
Number_Field_Visible_17 Bit NULL,
Number_Field_Visible_18 Bit NULL,
Number_Field_Visible_19 Bit NULL,
Number_Field_Visible_20 Bit NULL,
Text_Field_Caption_11 Varchar( 254) NULL,
Text_Field_Caption_12 Varchar( 254) NULL,
Text_Field_Caption_13 Varchar( 254) NULL,
Text_Field_Caption_14 Varchar( 254) NULL,
Text_Field_Caption_15 Varchar( 254) NULL,
Text_Field_Caption_16 Varchar( 254) NULL,
Text_Field_Caption_17 Varchar( 254) NULL,
Text_Field_Caption_18 Varchar( 254) NULL,
Text_Field_Caption_19 Varchar( 254) NULL,
Text_Field_Caption_20 Varchar( 254) NULL,
Text_Field_Order_11 Int NULL,
Text_Field_Order_12 Int NULL,
Text_Field_Order_13 Int NULL,
Text_Field_Order_14 Int NULL,
Text_Field_Order_15 Int NULL,
Text_Field_Order_16 Int NULL,
Text_Field_Order_17 Int NULL,
Text_Field_Order_18 Int NULL,
Text_Field_Order_19 Int NULL,
Text_Field_Order_20 Int NULL,
Text_Field_Visible_11 Bit NULL,
Text_Field_Visible_12 Bit NULL,
Text_Field_Visible_13 Bit NULL,
Text_Field_Visible_14 Bit NULL,
Text_Field_Visible_15 Bit NULL,
Text_Field_Visible_16 Bit NULL,
Text_Field_Visible_17 Bit NULL,
Text_Field_Visible_18 Bit NULL,
Text_Field_Visible_19 Bit NULL,
Text_Field_Visible_20 Bit NULL,
Date_Field_Caption_21 Varchar( 254) NULL,
Date_Field_Caption_22 Varchar( 254) NULL,
Date_Field_Caption_23 Varchar( 254) NULL,
Date_Field_Caption_24 Varchar( 254) NULL,
Date_Field_Caption_25 Varchar( 254) NULL,
Date_Field_Caption_26 Varchar( 254) NULL,
Date_Field_Caption_27 Varchar( 254) NULL,
Date_Field_Caption_28 Varchar( 254) NULL,
Date_Field_Caption_29 Varchar( 254) NULL,
Date_Field_Caption_30 Varchar( 254) NULL,
Date_Field_Order_21 Int NULL,
Date_Field_Order_22 Int NULL,
Date_Field_Order_23 Int NULL,
Date_Field_Order_24 Int NULL,
Date_Field_Order_25 Int NULL,
Date_Field_Order_26 Int NULL,
Date_Field_Order_27 Int NULL,
Date_Field_Order_28 Int NULL,
Date_Field_Order_29 Int NULL,
Date_Field_Order_30 Int NULL,
Date_Field_Visible_21 Bit NULL,
Date_Field_Visible_22 Bit NULL,
Date_Field_Visible_23 Bit NULL,
Date_Field_Visible_24 Bit NULL,
Date_Field_Visible_25 Bit NULL,
Date_Field_Visible_26 Bit NULL,
Date_Field_Visible_27 Bit NULL,
Date_Field_Visible_28 Bit NULL,
Date_Field_Visible_29 Bit NULL,
Date_Field_Visible_30 Bit NULL,
Number_Field_Caption_21 Varchar( 254) NULL,
Number_Field_Caption_22 Varchar( 254) NULL,
Number_Field_Caption_23 Varchar( 254) NULL,
Number_Field_Caption_24 Varchar( 254) NULL,
Number_Field_Caption_25 Varchar( 254) NULL,
Number_Field_Caption_26 Varchar( 254) NULL,
Number_Field_Caption_27 Varchar( 254) NULL,
Number_Field_Caption_28 Varchar( 254) NULL,
Number_Field_Caption_29 Varchar( 254) NULL,
Number_Field_Caption_30 Varchar( 254) NULL,
Number_Field_Order_21 Int NULL,
Number_Field_Order_22 Int NULL,
Number_Field_Order_23 Int NULL,
Number_Field_Order_24 Int NULL,
Number_Field_Order_25 Int NULL,
Number_Field_Order_26 Int NULL,
Number_Field_Order_27 Int NULL,
Number_Field_Order_28 Int NULL,
Number_Field_Order_29 Int NULL,
Number_Field_Order_30 Int NULL,
Number_Field_Visible_21 Bit NULL,
Number_Field_Visible_22 Bit NULL,
Number_Field_Visible_23 Bit NULL,
Number_Field_Visible_24 Bit NULL,
Number_Field_Visible_25 Bit NULL,
Number_Field_Visible_26 Bit NULL,
Number_Field_Visible_27 Bit NULL,
Number_Field_Visible_28 Bit NULL,
Number_Field_Visible_29 Bit NULL,
Number_Field_Visible_30 Bit NULL,
Text_Field_Caption_21 Varchar( 254) NULL,
Text_Field_Caption_22 Varchar( 254) NULL,
Text_Field_Caption_23 Varchar( 254) NULL,
Text_Field_Caption_24 Varchar( 254) NULL,
Text_Field_Caption_25 Varchar( 254) NULL,
Text_Field_Caption_26 Varchar( 254) NULL,
Text_Field_Caption_27 Varchar( 254) NULL,
Text_Field_Caption_28 Varchar( 254) NULL,
Text_Field_Caption_29 Varchar( 254) NULL,
Text_Field_Caption_30 Varchar( 254) NULL,
Text_Field_Order_21 Int NULL,
Text_Field_Order_22 Int NULL,
Text_Field_Order_23 Int NULL,
Text_Field_Order_24 Int NULL,
Text_Field_Order_25 Int NULL,
Text_Field_Order_26 Int NULL,
Text_Field_Order_27 Int NULL,
Text_Field_Order_28 Int NULL,
Text_Field_Order_29 Int NULL,
Text_Field_Order_30 Int NULL,
Text_Field_Visible_21 Bit NULL,
Text_Field_Visible_22 Bit NULL,
Text_Field_Visible_23 Bit NULL,
Text_Field_Visible_24 Bit NULL,
Text_Field_Visible_25 Bit NULL,
Text_Field_Visible_26 Bit NULL,
Text_Field_Visible_27 Bit NULL,
Text_Field_Visible_28 Bit NULL,
Text_Field_Visible_29 Bit NULL,
Text_Field_Visible_30 Bit NULL
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_11 DEFAULT 0 FOR Date_Field_Visible_11
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_12 DEFAULT 0 FOR Date_Field_Visible_12
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_13 DEFAULT 0 FOR Date_Field_Visible_13
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_14 DEFAULT 0 FOR Date_Field_Visible_14
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_15 DEFAULT 0 FOR Date_Field_Visible_15
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_16 DEFAULT 0 FOR Date_Field_Visible_16
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_17 DEFAULT 0 FOR Date_Field_Visible_17
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_18 DEFAULT 0 FOR Date_Field_Visible_18
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_19 DEFAULT 0 FOR Date_Field_Visible_19
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_20 DEFAULT 0 FOR Date_Field_Visible_20
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_11 DEFAULT 0 FOR Number_Field_Visible_11
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_12 DEFAULT 0 FOR Number_Field_Visible_12
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_13 DEFAULT 0 FOR Number_Field_Visible_13
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_14 DEFAULT 0 FOR Number_Field_Visible_14
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_15 DEFAULT 0 FOR Number_Field_Visible_15
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_16 DEFAULT 0 FOR Number_Field_Visible_16
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_17 DEFAULT 0 FOR Number_Field_Visible_17
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_18 DEFAULT 0 FOR Number_Field_Visible_18
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_19 DEFAULT 0 FOR Number_Field_Visible_19
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_20 DEFAULT 0 FOR Number_Field_Visible_20
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_11 DEFAULT 0 FOR Text_Field_Visible_11
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_12 DEFAULT 0 FOR Text_Field_Visible_12
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_13 DEFAULT 0 FOR Text_Field_Visible_13
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_14 DEFAULT 0 FOR Text_Field_Visible_14
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_15 DEFAULT 0 FOR Text_Field_Visible_15
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_16 DEFAULT 0 FOR Text_Field_Visible_16
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_17 DEFAULT 0 FOR Text_Field_Visible_17
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_18 DEFAULT 0 FOR Text_Field_Visible_18
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_19 DEFAULT 0 FOR Text_Field_Visible_19
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_20 DEFAULT 0 FOR Text_Field_Visible_20
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_21 DEFAULT 0 FOR Date_Field_Visible_21
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_22 DEFAULT 0 FOR Date_Field_Visible_22
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_23 DEFAULT 0 FOR Date_Field_Visible_23
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_24 DEFAULT 0 FOR Date_Field_Visible_24
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_25 DEFAULT 0 FOR Date_Field_Visible_25
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_26 DEFAULT 0 FOR Date_Field_Visible_26
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_27 DEFAULT 0 FOR Date_Field_Visible_27
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_28 DEFAULT 0 FOR Date_Field_Visible_28
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_29 DEFAULT 0 FOR Date_Field_Visible_29
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Date_Field_Visible_30 DEFAULT 0 FOR Date_Field_Visible_30
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_21 DEFAULT 0 FOR Number_Field_Visible_21
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_22 DEFAULT 0 FOR Number_Field_Visible_22
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_23 DEFAULT 0 FOR Number_Field_Visible_23
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_24 DEFAULT 0 FOR Number_Field_Visible_24
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_25 DEFAULT 0 FOR Number_Field_Visible_25
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_26 DEFAULT 0 FOR Number_Field_Visible_26
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_27 DEFAULT 0 FOR Number_Field_Visible_27
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_28 DEFAULT 0 FOR Number_Field_Visible_28
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_29 DEFAULT 0 FOR Number_Field_Visible_29
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Number_Field_Visible_30 DEFAULT 0 FOR Number_Field_Visible_30
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_21 DEFAULT 0 FOR Text_Field_Visible_21
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_22 DEFAULT 0 FOR Text_Field_Visible_22
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_23 DEFAULT 0 FOR Text_Field_Visible_23
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_24 DEFAULT 0 FOR Text_Field_Visible_24
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_25 DEFAULT 0 FOR Text_Field_Visible_25
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_26 DEFAULT 0 FOR Text_Field_Visible_26
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_27 DEFAULT 0 FOR Text_Field_Visible_27
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_28 DEFAULT 0 FOR Text_Field_Visible_28
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_29 DEFAULT 0 FOR Text_Field_Visible_29
GO

ALTER TABLE dbo.Sales_Order_Profile ADD CONSTRAINT
DF_Sales_Order_Profile_Text_Field_Visible_30 DEFAULT 0 FOR Text_Field_Visible_30
GO

COMMIT
GO


--Version 720 - so_delivery_schedule1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SO_Delivery_Schedule ADD
Grid_Sort_Order Int NULL
GO

COMMIT
GO


--Version 720 - sy_passwords1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SY_Passwords ADD
Disable_Uses_Stock Bit NULL
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Disable_Uses_Stock DEFAULT 0 FOR Disable_Uses_Stock
GO

COMMIT
GO


--Version 720 - sy_passwords2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SY_Passwords ADD
Enable_WO_Num_Edit Bit NULL
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Enable_WO_Num_Edit DEFAULT 0 FOR Enable_WO_Num_Edit
GO

COMMIT
GO


--Version 720 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Print_Multi_Batch_Reciepts Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Print_Multi_Batch_Reciepts DEFAULT 0 FOR Print_Multi_Batch_Reciepts
GO

COMMIT
GO


--Version 720 - wo_route_schedule1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Wo_Route_SChedule ADD
Current_Op Bit NULL,
Interop_Time_From_Beginning Bit NULL,
Interop_Time_Uses_Calendars Bit NULL,
Next_Op Int NULL,
Grid_Sort_Order Int NULL
GO

ALTER TABLE dbo.Wo_Route_SChedule ADD CONSTRAINT
DF_Wo_Route_SChedule_Current_Op DEFAULT 0 FOR Current_Op
GO

ALTER TABLE dbo.Wo_Route_SChedule ADD CONSTRAINT
DF_Wo_Route_SChedule_Interop_Time_From_Beginning DEFAULT 0 FOR Interop_Time_From_Beginning
GO

ALTER TABLE dbo.Wo_Route_SChedule ADD CONSTRAINT
DF_Wo_Route_SChedule_Interop_Time_Uses_Calendars DEFAULT 0 FOR Interop_Time_Uses_Calendars
GO

COMMIT
GO


--Version 720 - credits1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.CREDITS ADD
Do_Not_Post Bit NULL
GO

ALTER TABLE dbo.CREDITS ADD CONSTRAINT
DF_CREDITS_Do_Not_Post DEFAULT 0 FOR Do_Not_Post
GO

COMMIT
GO


--Version 721 - credit_term1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.CREDIT_TERM ADD
End_Of_Next_Month Bit NULL
GO

ALTER TABLE dbo.CREDIT_TERM ADD CONSTRAINT
DF_CREDIT_TERM_End_Of_Next_Month DEFAULT 0 FOR End_Of_Next_Month
GO

COMMIT
GO


--Version 721 - route1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Route ADD
Interop_Time_From_Beginning Bit NULL
GO

ALTER TABLE dbo.Route ADD CONSTRAINT
DF_Route_Interop_Time_From_Beginning DEFAULT 0 FOR Interop_Time_From_Beginning
GO

COMMIT
GO


--Version 721 - stock_transaction1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock_Transaction ADD
Previous_Qty Float(53) NULL
GO

ALTER TABLE dbo.Stock_Transaction ADD CONSTRAINT
DF_Stock_Transaction_Previous_Qty DEFAULT 0 FOR Previous_Qty
GO

COMMIT
GO


--Version 721 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
No_Parent_WO_Issue_Prompt Bit NULL,
No_WO_Next_Level_Auto_Issue Bit NULL,
Unique_Employee_Num Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_No_Parent_WO_Issue_Prompt DEFAULT 0 FOR No_Parent_WO_Issue_Prompt
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_No_WO_Next_Level_Auto_Issue DEFAULT 0 FOR No_WO_Next_Level_Auto_Issue
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Unique_Employee_Num DEFAULT 0 FOR Unique_Employee_Num
GO

COMMIT
GO


--Version 721 - system2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Route_Ver_Change_With_Issues Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Route_Ver_Change_With_Issues DEFAULT 0 FOR Route_Ver_Change_With_Issues
GO

COMMIT
GO


--Version 722 - companys1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.COMPANYS ADD
Balance_Updated_Date Datetime NULL
GO

COMMIT
GO


--Version 722 - invoice_part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Invoice_Part ADD
Notes_Non_RTF Text NULL
GO

COMMIT
GO


--Version 722 - part_related_doc1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part_Related_Doc ADD
SFDC_Doc_Visible Bit NULL
GO

ALTER TABLE dbo.Part_Related_Doc ADD CONSTRAINT
DF_Part_Related_Doc_SFDC_Doc_Visible DEFAULT 0 FOR SFDC_Doc_Visible
GO

COMMIT
GO


--Version 722 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
No_Over_Deliveries Bit NULL,
WO_Receipt_Actual_Cost_Rollup Bit NULL,
Alt_Invoice_Numbering Bit NULL,
SO_Line_Multi_Raise_PO Bit NULL,
WO_Auto_Print_Related_Docs Bit NULL,
Auto_Complete_WOs Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_No_Over_Deliveries DEFAULT 0 FOR No_Over_Deliveries
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_WO_Receipt_Actual_Cost_Rollup DEFAULT 0 FOR WO_Receipt_Actual_Cost_Rollup
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Alt_Invoice_Numbering DEFAULT 0 FOR Alt_Invoice_Numbering
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_SO_Line_Multi_Raise_PO DEFAULT 0 FOR SO_Line_Multi_Raise_PO
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_WO_Auto_Print_Related_Docs DEFAULT 0 FOR WO_Auto_Print_Related_Docs
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Auto_Complete_WOs DEFAULT 0 FOR Auto_Complete_WOs
GO

COMMIT
GO


--Version 722 - sales_order_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Sales_Order_Lines ADD
Direct_PO Bit NULL
GO

ALTER TABLE dbo.Sales_Order_Lines ADD CONSTRAINT
DF_Sales_Order_Lines_Direct_PO DEFAULT 0 FOR Direct_PO
GO

COMMIT
GO


--Version 722 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
SFDC_Allow_Drawings Bit NULL
GO

ALTER TABLE dbo.Part ADD CONSTRAINT
DF_Part_SFDC_Allow_Drawings DEFAULT 0 FOR SFDC_Allow_Drawings
GO

COMMIT
GO


--Version 723 - system_settings1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.System_Settings
    (
    System_Settings_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.System_Settings ADD CONSTRAINT
    PK_System_Settings PRIMARY KEY CLUSTERED
    (
    System_Settings_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 723 - system_settings2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System_Settings ADD
Description Varchar( 254) NULL,
Label Varchar( 254) NULL,
Modified datetime NULL,
Modified_By int NULL,
Setting Varchar( 254) NULL,
Value Bit NULL
GO

ALTER TABLE dbo.System_Settings ADD CONSTRAINT
DF_System_Settings_Value DEFAULT 0 FOR Value
GO

COMMIT
GO


--Version 723 - work_centre1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Work_Centre ADD
Serial_Number Varchar( 254) NULL
GO

COMMIT
GO


--Version 723 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Allow_Negative_PI_Lines Bit NULL,
Edit_SO_Line_Part Bit NULL,
Stock_Cost_From_Del_On_Rtn Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Allow_Negative_PI_Lines DEFAULT 0 FOR Allow_Negative_PI_Lines
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Edit_SO_Line_Part DEFAULT 0 FOR Edit_SO_Line_Part
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Stock_Cost_From_Del_On_Rtn DEFAULT 0 FOR Stock_Cost_From_Del_On_Rtn
GO

COMMIT
GO


--Version 724 - part1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Part ADD
Template_Part_ID Int NULL
GO

COMMIT
GO


--Version 724 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Auto_Issue_Sub_Con Bit NULL,
Auto_Update_Days Varchar( 254) NULL,
Maint_WO_Num_Prefix Varchar( 20) NULL,
Maint_WO_Number Varchar( 254) NULL,
No_Kit_Issue_Area_Parts Bit NULL,
Planned_Cost_To_WDV Bit NULL,
Process_Time_Split Bit NULL,
SO_Chk_Fully_Inv_Line_Val Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Auto_Issue_Sub_Con DEFAULT 0 FOR Auto_Issue_Sub_Con
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_No_Kit_Issue_Area_Parts DEFAULT 0 FOR No_Kit_Issue_Area_Parts
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Planned_Cost_To_WDV DEFAULT 0 FOR Planned_Cost_To_WDV
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Process_Time_Split DEFAULT 0 FOR Process_Time_Split
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_SO_Chk_Fully_Inv_Line_Val DEFAULT 0 FOR SO_Chk_Fully_Inv_Line_Val
GO

COMMIT
GO


--Version 724 - flat_bom_compare_temp1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Flat_Bom_Compare_Temp
    (
    Flat_Bom_Compare_Temp_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Flat_Bom_Compare_Temp ADD CONSTRAINT
    PK_Flat_Bom_Compare_Temp PRIMARY KEY CLUSTERED
    (
    Flat_Bom_Compare_Temp_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 724 - flat_bom_compare_temp2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Flat_Bom_Compare_Temp ADD
Added_Removed Varchar( 1) NULL,
Compare_Part__Main_Part_ID Int NULL,
Compare_Part_ID Int NULL,
Modified datetime NULL,
Modified_By int NULL,
Template_Part_ID Int NULL,
User_ID Int NULL
GO

COMMIT
GO


--Version 724 - work_orders1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.WORK_ORDERS ADD
Maintenance Bit NULL,
Maintenance__Work_Centre_ID Int NULL,
Maintenenace__Machine_Type_ID Int NULL,
Maintenence__Machine_Stopped Bit NULL
GO

ALTER TABLE dbo.WORK_ORDERS ADD CONSTRAINT
DF_WORK_ORDERS_Maintenance DEFAULT 0 FOR Maintenance
GO

ALTER TABLE dbo.WORK_ORDERS ADD CONSTRAINT
DF_WORK_ORDERS_Maintenence__Machine_Stopped DEFAULT 0 FOR Maintenence__Machine_Stopped
GO

COMMIT
GO


--Version 724 - location1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.LOCATION ADD
Consignment Bit NULL
GO

ALTER TABLE dbo.LOCATION ADD CONSTRAINT
DF_LOCATION_Consignment DEFAULT 0 FOR Consignment
GO

COMMIT
GO


--Version 724 - sy_passwords1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SY_Passwords ADD
Can_SO_Import Bit NULL,
Style_Index Int NULL
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Can_SO_Import DEFAULT 0 FOR Can_SO_Import
GO

COMMIT
GO


--Version 724 - stock1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Stock ADD
Consignment_Qty Float(53) NULL
GO

ALTER TABLE dbo.Stock ADD CONSTRAINT
DF_Stock_Consignment_Qty DEFAULT 0 FOR Consignment_Qty
GO

COMMIT
GO


--Version 724 - activity_control1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Activity_Control ADD
Position Int NULL
GO

COMMIT
GO


--Version 724 - route_versions1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Route_versions ADD
Deleted Bit NULL
GO

ALTER TABLE dbo.Route_versions ADD CONSTRAINT
DF_Route_versions_Deleted DEFAULT 0 FOR Deleted
GO

COMMIT
GO


--Version 725 - datepromised_memo1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.DatePromised_Memo
    (
    DatePromised_Memo_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.DatePromised_Memo ADD CONSTRAINT
    PK_DatePromised_Memo PRIMARY KEY CLUSTERED
    (
    DatePromised_Memo_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 725 - datepromised_memo2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.DatePromised_Memo ADD
Memo Varchar( 254) NULL,
Modified datetime NULL,
Modified_By int NULL
GO

COMMIT
GO


--Version 725 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Force_SO_Customer_PO Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Force_SO_Customer_PO DEFAULT 0 FOR Force_SO_Customer_PO
GO

COMMIT
GO


--Version 725 - po_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Po_Lines ADD
Date_Promied_Memo_ID Int NULL
GO

COMMIT
GO


--Version 726 - test1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
CREATE TABLE dbo.Test
    (
    Test_ID int NOT NULL IDENTITY (1, 1)
    )  ON [PRIMARY]
GO

ALTER TABLE dbo.Test ADD CONSTRAINT
    PK_Test PRIMARY KEY CLUSTERED
    (
    Test_ID
    ) ON [PRIMARY]

GO

COMMIT
GO


--Version 726 - test2.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Test ADD
Route__Route_ID Int NULL,
Part__Part_ID Int NULL,
Notes Varchar( 254) NULL,
Modified_By int NULL,
Modified datetime NULL,
Companys__Testing_Company_ID Int NULL
GO

COMMIT
GO


--Version 726 - purchase_order1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Purchase_Order ADD
Chase_Date Datetime NULL
GO

COMMIT
GO


--Version 726 - purchase_invoice1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Purchase_Invoice ADD
Vat_Adjustment Float(53) NULL
GO

ALTER TABLE dbo.Purchase_Invoice ADD CONSTRAINT
DF_Purchase_Invoice_Vat_Adjustment DEFAULT 0 FOR Vat_Adjustment
GO

COMMIT
GO


--Version 726 - system1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.System ADD
Force_Emp_Grp_Code Bit NULL
GO

ALTER TABLE dbo.System ADD CONSTRAINT
DF_System_Force_Emp_Grp_Code DEFAULT 0 FOR Force_Emp_Grp_Code
GO

COMMIT
GO


--Version 726 - sy_passwords1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.SY_Passwords ADD
Sub_Con_Visible_On_Bom Bit NULL,
Purchased_Visible_On_Bom Bit NULL,
Can_Approve_PI_Payment Bit NULL
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Sub_Con_Visible_On_Bom DEFAULT 0 FOR Sub_Con_Visible_On_Bom
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Purchased_Visible_On_Bom DEFAULT 0 FOR Purchased_Visible_On_Bom
GO

ALTER TABLE dbo.SY_Passwords ADD CONSTRAINT
DF_SY_Passwords_Can_Approve_PI_Payment DEFAULT 0 FOR Can_Approve_PI_Payment
GO

COMMIT
GO


--Version 726 - employee1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Employee ADD
Middle_Name Varchar( 254) NULL,
Contact_Mob Varchar( 254) NULL
GO

COMMIT
GO


--Version 726 - wo_return1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.WO_RETURN ADD
Notes_Non_RTF Text NULL
GO

COMMIT
GO


--Version 726 - po_lines1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Po_Lines ADD
Chase_Date Datetime NULL
GO

COMMIT
GO


--Version 726 - wo_route_schedule1.sql

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
ALTER TABLE dbo.Wo_Route_SChedule ADD
Purchase_Order__PO_ID Int NULL
GO

COMMIT
GO


--Version 726 - drop_views.sql

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Transaction_Max_Misc_Receipt]'))
DROP VIEW [dbo].[Stock_Transaction_Max_Misc_Receipt]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[vw_Part_With_Weekly_Balances_Dates]'))
DROP VIEW [dbo].[vw_Part_With_Weekly_Balances_Dates]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[NC_Related_Docs_List]'))
DROP VIEW [dbo].[NC_Related_Docs_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[COMPANY_ADDRESS_List]'))
DROP VIEW [dbo].[COMPANY_ADDRESS_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquiry_Part_Alias]'))
DROP VIEW [dbo].[Enquiry_Part_Alias]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PO_Oustanding]'))
DROP VIEW [dbo].[PO_Oustanding]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[AccountsDebtorsCreditorsBalance]'))
DROP VIEW [dbo].[AccountsDebtorsCreditorsBalance]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Process_list]'))
DROP VIEW [dbo].[Process_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Misc_Issue_Stock_List]'))
DROP VIEW [dbo].[Misc_Issue_Stock_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Question_Drop_List]'))
DROP VIEW [dbo].[Question_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SubContract_Delivery_Drop_List]'))
DROP VIEW [dbo].[SubContract_Delivery_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[AccountsNominalDIffs]'))
DROP VIEW [dbo].[AccountsNominalDIffs]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Settings_List]'))
DROP VIEW [dbo].[Settings_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Report_Groups_Drop_List]'))
DROP VIEW [dbo].[Report_Groups_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Issues_RTS]'))
DROP VIEW [dbo].[Stock_Issues_RTS]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Inv_UOM]'))
DROP VIEW [dbo].[Part_Inv_UOM]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Calendar_List]'))
DROP VIEW [dbo].[Calendar_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Company_Discount_Group_List]'))
DROP VIEW [dbo].[Company_Discount_Group_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Question_List]'))
DROP VIEW [dbo].[Question_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Machines_List]'))
DROP VIEW [dbo].[Machines_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Report_Groups_List]'))
DROP VIEW [dbo].[Report_Groups_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[NC_Action_List]'))
DROP VIEW [dbo].[NC_Action_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[AccEntryProblems]'))
DROP VIEW [dbo].[AccEntryProblems]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Machines_Drop_List]'))
DROP VIEW [dbo].[Machines_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Material_types_Drop_List]'))
DROP VIEW [dbo].[Material_types_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[D_Type_Drop_List]'))
DROP VIEW [dbo].[D_Type_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Scheduling_First_OPs]'))
DROP VIEW [dbo].[Scheduling_First_OPs]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Bom_Versions_Drop_List]'))
DROP VIEW [dbo].[Bom_Versions_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Material_types_List]'))
DROP VIEW [dbo].[Material_types_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[D_Type_List]'))
DROP VIEW [dbo].[D_Type_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Report_Labels_List]'))
DROP VIEW [dbo].[Report_Labels_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[CofC_related_Docs_List]'))
DROP VIEW [dbo].[CofC_related_Docs_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accounts_Entry_Bill_Payments]'))
DROP VIEW [dbo].[Accounts_Entry_Bill_Payments]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info1_Drop_List]'))
DROP VIEW [dbo].[General_Info1_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Material_PO]'))
DROP VIEW [dbo].[WO_Analysis_Material_PO]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Transaction_Max_PO_Receipt]'))
DROP VIEW [dbo].[Stock_Transaction_Max_PO_Receipt]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Company_Related_Docs_list]'))
DROP VIEW [dbo].[Company_Related_Docs_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Company_Address_Drop_List]'))
DROP VIEW [dbo].[Company_Address_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info1_List]'))
DROP VIEW [dbo].[General_Info1_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Transaction_Max_WO_Receipt]'))
DROP VIEW [dbo].[Stock_Transaction_Max_WO_Receipt]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Integrity]'))
DROP VIEW [dbo].[Integrity]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[CofC_SpecTests_List]'))
DROP VIEW [dbo].[CofC_SpecTests_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contacts_list]'))
DROP VIEW [dbo].[Contacts_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquiry_Lines_Drop_List]'))
DROP VIEW [dbo].[Enquiry_Lines_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Campaign_Drop_List]'))
DROP VIEW [dbo].[Campaign_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_List]'))
DROP VIEW [dbo].[Work_Orders_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Related_Doc_list]'))
DROP VIEW [dbo].[Stock_Related_Doc_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Campaign_List]'))
DROP VIEW [dbo].[Campaign_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Companys_Deleted_list]'))
DROP VIEW [dbo].[Companys_Deleted_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[D_Type_Fields_List]'))
DROP VIEW [dbo].[D_Type_Fields_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Issues_Misc]'))
DROP VIEW [dbo].[Stock_Issues_Misc]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Related_Docs_list]'))
DROP VIEW [dbo].[Delivery_Related_Docs_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contacts_Drop_List]'))
DROP VIEW [dbo].[Contacts_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Week_List]'))
DROP VIEW [dbo].[Week_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Drawing_Type_Drop_List]'))
DROP VIEW [dbo].[Drawing_Type_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Non_Conformance_Origin_Drop_List]'))
DROP VIEW [dbo].[Non_Conformance_Origin_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Comp_Machines_list]'))
DROP VIEW [dbo].[Comp_Machines_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info2_Drop_List]'))
DROP VIEW [dbo].[General_Info2_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_orders_list_with_parts]'))
DROP VIEW [dbo].[Sales_orders_list_with_parts]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Drawing_No_List]'))
DROP VIEW [dbo].[Drawing_No_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Non_Conformance_Origin_List]'))
DROP VIEW [dbo].[Non_Conformance_Origin_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Companys_Drop_list]'))
DROP VIEW [dbo].[Companys_Drop_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info2_List]'))
DROP VIEW [dbo].[General_Info2_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Form_Headers_Drop_List]'))
DROP VIEW [dbo].[Form_Headers_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Drawing_No_Drop_List]'))
DROP VIEW [dbo].[Drawing_No_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Category_Drop_List]'))
DROP VIEW [dbo].[Category_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Activity_Drop_List]'))
DROP VIEW [dbo].[Activity_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Menu_Info_Groups]'))
DROP VIEW [dbo].[User_Menu_Info_Groups]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Required_With_Parts]'))
DROP VIEW [dbo].[Work_Orders_Required_With_Parts]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Drawing_Type_List]'))
DROP VIEW [dbo].[Drawing_Type_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Category_list]'))
DROP VIEW [dbo].[Category_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Flat_BOM_Manu_dRoute]'))
DROP VIEW [dbo].[Part_Flat_BOM_Manu_dRoute]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_ISSUE_List]'))
DROP VIEW [dbo].[WO_ISSUE_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WC_Related_Docs_list]'))
DROP VIEW [dbo].[WC_Related_Docs_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Return_to_supplier_Stock_List]'))
DROP VIEW [dbo].[Return_to_supplier_Stock_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Quote_Part_Alias]'))
DROP VIEW [dbo].[Quote_Part_Alias]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PO_Total_By_WO]'))
DROP VIEW [dbo].[PO_Total_By_WO]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_list_With_Parts]'))
DROP VIEW [dbo].[Delivery_list_With_Parts]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Non_Conformance_Cause_List]'))
DROP VIEW [dbo].[Non_Conformance_Cause_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Group_code_Drop_List]'))
DROP VIEW [dbo].[Group_code_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SO_Credit_List]'))
DROP VIEW [dbo].[SO_Credit_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_List_With_Weekly_Balances]'))
DROP VIEW [dbo].[Part_List_With_Weekly_Balances]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Issues_Required]'))
DROP VIEW [dbo].[Issues_Required]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Non_Conformance_Cause_Drop_List]'))
DROP VIEW [dbo].[Non_Conformance_Cause_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Group_Code_List]'))
DROP VIEW [dbo].[Group_Code_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accounts_Credits]'))
DROP VIEW [dbo].[Accounts_Credits]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Button_info]'))
DROP VIEW [dbo].[User_Button_info]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[On_Hire_List]'))
DROP VIEW [dbo].[On_Hire_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Ext_Location_List]'))
DROP VIEW [dbo].[Ext_Location_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[AccountsCompanyBalance]'))
DROP VIEW [dbo].[AccountsCompanyBalance]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Times_List]'))
DROP VIEW [dbo].[Times_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Ext_location_Drop_List]'))
DROP VIEW [dbo].[Ext_location_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[MULTICURRENCY_Drop_List]'))
DROP VIEW [dbo].[MULTICURRENCY_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Flat_Bom_Temp_List]'))
DROP VIEW [dbo].[Part_Flat_Bom_Temp_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_Ledger]'))
DROP VIEW [dbo].[Sales_Ledger]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Manu_PO]'))
DROP VIEW [dbo].[WO_Analysis_Manu_PO]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Company_Ledger]'))
DROP VIEW [dbo].[Company_Ledger]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Non_Conformance_Type_List]'))
DROP VIEW [dbo].[Non_Conformance_Type_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accts_Credit_Vat]'))
DROP VIEW [dbo].[Accts_Credit_Vat]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Bom_Order]'))
DROP VIEW [dbo].[Bom_Order]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Purchase_Invoice_list_with_Parts]'))
DROP VIEW [dbo].[Purchase_Invoice_list_with_Parts]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Drop_list]'))
DROP VIEW [dbo].[Work_Orders_Drop_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[EnqLines_Related_Docs_list]'))
DROP VIEW [dbo].[EnqLines_Related_Docs_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accts_Credit_Nominals]'))
DROP VIEW [dbo].[Accts_Credit_Nominals]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Bom_list]'))
DROP VIEW [dbo].[Bom_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_History_Trans]'))
DROP VIEW [dbo].[Part_History_Trans]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Last_Op_Process]'))
DROP VIEW [dbo].[Last_Op_Process]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Purchase_Order_Drop_List]'))
DROP VIEW [dbo].[Purchase_Order_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Non_Conformance_Type_Drop_List]'))
DROP VIEW [dbo].[Non_Conformance_Type_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[MULTICURRENCY_List]'))
DROP VIEW [dbo].[MULTICURRENCY_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Conversions_Drop_List]'))
DROP VIEW [dbo].[Conversions_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Supplier_Group_Code_List]'))
DROP VIEW [dbo].[Supplier_Group_Code_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Action_List]'))
DROP VIEW [dbo].[Action_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[UOM_List]'))
DROP VIEW [dbo].[UOM_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Cost_Centre_Drop_List]'))
DROP VIEW [dbo].[Cost_Centre_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[NC_Action_Type_Drop_List]'))
DROP VIEW [dbo].[NC_Action_Type_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_List_With_Parts]'))
DROP VIEW [dbo].[Work_Orders_List_With_Parts]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Distinct_Part_Trans_dates]'))
DROP VIEW [dbo].[Distinct_Part_Trans_dates]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Action_Drop_List]'))
DROP VIEW [dbo].[Action_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Conversions_List]'))
DROP VIEW [dbo].[Conversions_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Nominal_Cost_Centre_List]'))
DROP VIEW [dbo].[Nominal_Cost_Centre_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Request_For_Quote_List_With_Parts]'))
DROP VIEW [dbo].[Request_For_Quote_List_With_Parts]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_History_PO]'))
DROP VIEW [dbo].[Part_History_PO]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SOL_Related_Docs_list]'))
DROP VIEW [dbo].[SOL_Related_Docs_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[UOM_Drop_List]'))
DROP VIEW [dbo].[UOM_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_history_SO]'))
DROP VIEW [dbo].[Part_history_SO]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Nominal_Cost_Centre_Drop_List]'))
DROP VIEW [dbo].[Nominal_Cost_Centre_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_History_WO]'))
DROP VIEW [dbo].[Part_History_WO]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Job_Costing_Mat_Retn_Temp]'))
DROP VIEW [dbo].[Job_Costing_Mat_Retn_Temp]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[NC_Action_Type_List]'))
DROP VIEW [dbo].[NC_Action_Type_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Return_to_Wo_Stock_List]'))
DROP VIEW [dbo].[Return_to_Wo_Stock_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[StockTake_Type_Drop_List]'))
DROP VIEW [dbo].[StockTake_Type_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[POR_Status_Drop_List]'))
DROP VIEW [dbo].[POR_Status_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Ret_To_Supp_Related_Doc_List]'))
DROP VIEW [dbo].[Ret_To_Supp_Related_Doc_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[StockTake_Type_List]'))
DROP VIEW [dbo].[StockTake_Type_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_List_with_Company]'))
DROP VIEW [dbo].[Part_List_with_Company]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_RETURN_List]'))
DROP VIEW [dbo].[WO_RETURN_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[POR_Status_List]'))
DROP VIEW [dbo].[POR_Status_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Nominals_Drop_List]'))
DROP VIEW [dbo].[Nominals_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Run]'))
DROP VIEW [dbo].[WO_Analysis_Actual_Run]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WCC_Active_Ops]'))
DROP VIEW [dbo].[WCC_Active_Ops]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Building_List]'))
DROP VIEW [dbo].[Stock_Building_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Prod_Related_Docs_list]'))
DROP VIEW [dbo].[Prod_Related_Docs_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_item_Stock_List]'))
DROP VIEW [dbo].[Delivery_item_Stock_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Job_Costing_Times_Temp]'))
DROP VIEW [dbo].[Job_Costing_Times_Temp]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Time_Entry_Rates_List]'))
DROP VIEW [dbo].[Time_Entry_Rates_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Price_List_Drop_List]'))
DROP VIEW [dbo].[Price_List_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Item_Stock_Total_Qty]'))
DROP VIEW [dbo].[Delivery_Item_Stock_Total_Qty]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Setup_Alt]'))
DROP VIEW [dbo].[WO_Analysis_Actual_Setup_Alt]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[TIME_ENTRY_RATES_Drop_list]'))
DROP VIEW [dbo].[TIME_ENTRY_RATES_Drop_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PO_Related_Docs_list]'))
DROP VIEW [dbo].[PO_Related_Docs_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Item_Customer_Return_List]'))
DROP VIEW [dbo].[Delivery_Item_Customer_Return_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Setup]'))
DROP VIEW [dbo].[WO_Analysis_Actual_Setup]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Activity_Control_List]'))
DROP VIEW [dbo].[Activity_Control_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Employee_Related_Docs_List]'))
DROP VIEW [dbo].[Employee_Related_Docs_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contract_Allocations_Bom]'))
DROP VIEW [dbo].[Contract_Allocations_Bom]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Ind_Pro_Charge_List]'))
DROP VIEW [dbo].[Ind_Pro_Charge_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Activity_Type_List]'))
DROP VIEW [dbo].[Activity_Type_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Related_Docs_List]'))
DROP VIEW [dbo].[WO_Related_Docs_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Issue_Part_QTy]'))
DROP VIEW [dbo].[WO_Issue_Part_QTy]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Activity_Type_Drop_list]'))
DROP VIEW [dbo].[Activity_Type_Drop_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Cust_Ret_Related_Doc_List]'))
DROP VIEW [dbo].[Cust_Ret_Related_Doc_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Material_List]'))
DROP VIEW [dbo].[Material_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[COMPANY_AREA_Drop_list]'))
DROP VIEW [dbo].[COMPANY_AREA_Drop_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Material_Drop_List]'))
DROP VIEW [dbo].[Material_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_history_Req]'))
DROP VIEW [dbo].[Part_history_Req]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[COMPANY_AREA_List]'))
DROP VIEW [dbo].[COMPANY_AREA_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[UDData_Drop_List]'))
DROP VIEW [dbo].[UDData_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Material_Type_List]'))
DROP VIEW [dbo].[Material_Type_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sy_Groups_List]'))
DROP VIEW [dbo].[Sy_Groups_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[UDData_List]'))
DROP VIEW [dbo].[UDData_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Material_Type_Drop_List]'))
DROP VIEW [dbo].[Material_Type_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Required_Reconcile]'))
DROP VIEW [dbo].[Required_Reconcile]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sy_Groups_Drop_List]'))
DROP VIEW [dbo].[Sy_Groups_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Production_Plan_Drop_List]'))
DROP VIEW [dbo].[Production_Plan_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Location_Drop_list]'))
DROP VIEW [dbo].[Location_Drop_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Activity_Related_Doc_List]'))
DROP VIEW [dbo].[Activity_Related_Doc_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Buttons_Visible_Text]'))
DROP VIEW [dbo].[User_Buttons_Visible_Text]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Site_List]'))
DROP VIEW [dbo].[Site_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Costs_Temp_List]'))
DROP VIEW [dbo].[Stock_Costs_Temp_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Buttons_List]'))
DROP VIEW [dbo].[User_Buttons_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Building_Drop_List]'))
DROP VIEW [dbo].[Building_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Mat_Balance]'))
DROP VIEW [dbo].[WO_Mat_Balance]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[COMPANY_POSITIONS_Drop_List]'))
DROP VIEW [dbo].[COMPANY_POSITIONS_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Buttons_Select_Distinct]'))
DROP VIEW [dbo].[User_Buttons_Select_Distinct]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Loaction_Drop_list]'))
DROP VIEW [dbo].[Loaction_Drop_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Wo_Issue_Stock_Cost]'))
DROP VIEW [dbo].[Wo_Issue_Stock_Cost]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Company_Positions_List]'))
DROP VIEW [dbo].[Company_Positions_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Button_Specific_Groups]'))
DROP VIEW [dbo].[User_Button_Specific_Groups]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Building_List]'))
DROP VIEW [dbo].[Building_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[MRP_Allocations]'))
DROP VIEW [dbo].[MRP_Allocations]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquiry_Lost_Reasons_Drop_List]'))
DROP VIEW [dbo].[Enquiry_Lost_Reasons_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Menu_Info]'))
DROP VIEW [dbo].[User_Menu_Info]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Site_Drop_List]'))
DROP VIEW [dbo].[Site_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WipTemp]'))
DROP VIEW [dbo].[WipTemp]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Process_Drop_List]'))
DROP VIEW [dbo].[Process_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[UDField_List]'))
DROP VIEW [dbo].[UDField_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Scrap_Reasons_List]'))
DROP VIEW [dbo].[Scrap_Reasons_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Issues_Required_Temp]'))
DROP VIEW [dbo].[Issues_Required_Temp]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Issues_WO]'))
DROP VIEW [dbo].[Stock_Issues_WO]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[ENQUIRY_RELATED_DOC_list]'))
DROP VIEW [dbo].[ENQUIRY_RELATED_DOC_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Employee_Drop_List]'))
DROP VIEW [dbo].[Employee_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Scrap_Reasons_Drop_List]'))
DROP VIEW [dbo].[Scrap_Reasons_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Job_Costing_Material_Temp]'))
DROP VIEW [dbo].[Job_Costing_Material_Temp]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquiry_Lost_Reasons_List]'))
DROP VIEW [dbo].[Enquiry_Lost_Reasons_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Location_list]'))
DROP VIEW [dbo].[Location_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Return_To_WO_List]'))
DROP VIEW [dbo].[Return_To_WO_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[CREDIT_TERM_Drop_List]'))
DROP VIEW [dbo].[CREDIT_TERM_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Department_List]'))
DROP VIEW [dbo].[Department_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Technology_Drop_List]'))
DROP VIEW [dbo].[Technology_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Issues_RTWO]'))
DROP VIEW [dbo].[Stock_Issues_RTWO]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[CREDIT_TERM_List]'))
DROP VIEW [dbo].[CREDIT_TERM_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Department_Drop_List]'))
DROP VIEW [dbo].[Department_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Technology_List]'))
DROP VIEW [dbo].[Technology_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Comodity_Codes_list]'))
DROP VIEW [dbo].[Part_Comodity_Codes_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Employee_Training_List]'))
DROP VIEW [dbo].[Employee_Training_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Time_In_Attendance_List]'))
DROP VIEW [dbo].[Time_In_Attendance_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[OP_Types_List]'))
DROP VIEW [dbo].[OP_Types_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Comodity_Codes_Drop_List]'))
DROP VIEW [dbo].[Part_Comodity_Codes_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquiry_Line_Group_Drop_List]'))
DROP VIEW [dbo].[Enquiry_Line_Group_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Employee_list]'))
DROP VIEW [dbo].[Employee_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Op_Types_Drop_List]'))
DROP VIEW [dbo].[Op_Types_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Deleted_list]'))
DROP VIEW [dbo].[Part_Deleted_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquiry_Line_Group_List]'))
DROP VIEW [dbo].[Enquiry_Line_Group_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Impact_List]'))
DROP VIEW [dbo].[Impact_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Operations]'))
DROP VIEW [dbo].[WO_Operations]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Messages_Drop_List]'))
DROP VIEW [dbo].[User_Messages_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_take_total_by_part]'))
DROP VIEW [dbo].[Stock_take_total_by_part]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Help_Buttons_List]'))
DROP VIEW [dbo].[Help_Buttons_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[EXPENSES_TYPE_List]'))
DROP VIEW [dbo].[EXPENSES_TYPE_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_revisions_List]'))
DROP VIEW [dbo].[Part_revisions_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PO_Lines_History_list]'))
DROP VIEW [dbo].[PO_Lines_History_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Drawing_Related_Docs_List]'))
DROP VIEW [dbo].[Drawing_Related_Docs_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Help_Button_List]'))
DROP VIEW [dbo].[Help_Button_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Dialectric_List]'))
DROP VIEW [dbo].[Dialectric_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Scrap_Types_Drop_List]'))
DROP VIEW [dbo].[Scrap_Types_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Grn_List]'))
DROP VIEW [dbo].[Grn_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Production_Plan_List_With_Parts]'))
DROP VIEW [dbo].[Production_Plan_List_With_Parts]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Messages_List]'))
DROP VIEW [dbo].[User_Messages_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_take_total_by_location]'))
DROP VIEW [dbo].[Stock_take_total_by_location]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Impact_Drop_List]'))
DROP VIEW [dbo].[Impact_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[EXPENSES_TYPE_Drop_List]'))
DROP VIEW [dbo].[EXPENSES_TYPE_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Production_Ops_list]'))
DROP VIEW [dbo].[Production_Ops_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PCD_Qty_Break_List]'))
DROP VIEW [dbo].[PCD_Qty_Break_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Purchase_Enquiry_Drop_List]'))
DROP VIEW [dbo].[Purchase_Enquiry_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Po_Line_Stock_Ids]'))
DROP VIEW [dbo].[Po_Line_Stock_Ids]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Nominals_List_with_Parts]'))
DROP VIEW [dbo].[Nominals_List_with_Parts]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Discounts_List]'))
DROP VIEW [dbo].[Discounts_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Dialectric_Drop_List]'))
DROP VIEW [dbo].[Dialectric_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Scrap_Types_List]'))
DROP VIEW [dbo].[Scrap_Types_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Return_To_supplier_Drop_List]'))
DROP VIEW [dbo].[Return_To_supplier_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Consignment_Qty_By_Part]'))
DROP VIEW [dbo].[Consignment_Qty_By_Part]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info4_List]'))
DROP VIEW [dbo].[General_Info4_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SO_Invoice_List]'))
DROP VIEW [dbo].[SO_Invoice_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info4_Drop_List]'))
DROP VIEW [dbo].[General_Info4_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_History_Invoice]'))
DROP VIEW [dbo].[Part_History_Invoice]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Po_Receipt_Line_Drop_List]'))
DROP VIEW [dbo].[Po_Receipt_Line_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Manu_Cost_Alt]'))
DROP VIEW [dbo].[WO_Analysis_Actual_Manu_Cost_Alt]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Total_Cost]'))
DROP VIEW [dbo].[Stock_Total_Cost]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquiry_State_List]'))
DROP VIEW [dbo].[Enquiry_State_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[INVOICES_Drop_List]'))
DROP VIEW [dbo].[INVOICES_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Return_to_supplier_List]'))
DROP VIEW [dbo].[Return_to_supplier_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Over_Issue]'))
DROP VIEW [dbo].[WO_Over_Issue]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Average_Stock_Cost_Over_180]'))
DROP VIEW [dbo].[Average_Stock_Cost_Over_180]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquirys_Drop_List]'))
DROP VIEW [dbo].[Enquirys_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Invoice_Part_Drop_List]'))
DROP VIEW [dbo].[Invoice_Part_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Calendar_Records_List]'))
DROP VIEW [dbo].[Calendar_Records_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Works_Orders_Detailed_List]'))
DROP VIEW [dbo].[Works_Orders_Detailed_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Analysis_List]'))
DROP VIEW [dbo].[Part_Analysis_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sy_Group_Options_List]'))
DROP VIEW [dbo].[Sy_Group_Options_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Invoices_List_With_Parts_For_Reports]'))
DROP VIEW [dbo].[Invoices_List_With_Parts_For_Reports]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Shift_Patterns_List]'))
DROP VIEW [dbo].[Shift_Patterns_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Purchase_Enquiry_Qty_With_Prices]'))
DROP VIEW [dbo].[Purchase_Enquiry_Qty_With_Prices]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[MSG_Non_Conformance_MK]'))
DROP VIEW [dbo].[MSG_Non_Conformance_MK]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Customer_Return_Drop_list]'))
DROP VIEW [dbo].[Customer_Return_Drop_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[First_SO_On_Inv]'))
DROP VIEW [dbo].[First_SO_On_Inv]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[DatePromised_Memo_list]'))
DROP VIEW [dbo].[DatePromised_Memo_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Purchase_Enquiry_Qty_List]'))
DROP VIEW [dbo].[Purchase_Enquiry_Qty_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PI_Item_History_List]'))
DROP VIEW [dbo].[PI_Item_History_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Customer_Return_List]'))
DROP VIEW [dbo].[Customer_Return_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Drop_List]'))
DROP VIEW [dbo].[Stock_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[DatePromised_Memo_Drop_List]'))
DROP VIEW [dbo].[DatePromised_Memo_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Material_Cost_Alt]'))
DROP VIEW [dbo].[WO_Analysis_Actual_Material_Cost_Alt]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquiry_State_Drop_List]'))
DROP VIEW [dbo].[Enquiry_State_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Ind_WC_Charge_List]'))
DROP VIEW [dbo].[Ind_WC_Charge_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Misc_Issue_List]'))
DROP VIEW [dbo].[Misc_Issue_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contract_Status_List]'))
DROP VIEW [dbo].[Contract_Status_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info5_List]'))
DROP VIEW [dbo].[General_Info5_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Full_List]'))
DROP VIEW [dbo].[Stock_Full_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Payment_method_Drop_List]'))
DROP VIEW [dbo].[Payment_method_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Last_Purchased_Part_PO]'))
DROP VIEW [dbo].[Last_Purchased_Part_PO]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contract_Status_Drop_List]'))
DROP VIEW [dbo].[Contract_Status_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info5_Drop_List]'))
DROP VIEW [dbo].[General_Info5_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accounts_Invoices]'))
DROP VIEW [dbo].[Accounts_Invoices]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Calendar_Exceptions_List]'))
DROP VIEW [dbo].[Calendar_Exceptions_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Invoice_Payment_List]'))
DROP VIEW [dbo].[Invoice_Payment_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sy_Passwords_List]'))
DROP VIEW [dbo].[Sy_Passwords_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Discount_Group_List]'))
DROP VIEW [dbo].[Part_Discount_Group_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[BillPayments_Grouped]'))
DROP VIEW [dbo].[BillPayments_Grouped]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Payment_method_List]'))
DROP VIEW [dbo].[Payment_method_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Price_List_List]'))
DROP VIEW [dbo].[Price_List_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Adjustments_List]'))
DROP VIEW [dbo].[Stock_Adjustments_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[BillPayments]'))
DROP VIEW [dbo].[BillPayments]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Bill_Payment_List]'))
DROP VIEW [dbo].[Bill_Payment_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Item_List]'))
DROP VIEW [dbo].[Delivery_Item_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contract_Notes_List]'))
DROP VIEW [dbo].[Contract_Notes_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Discount_Group_Drop_List]'))
DROP VIEW [dbo].[Part_Discount_Group_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[CashPayments]'))
DROP VIEW [dbo].[CashPayments]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[View_1]'))
DROP VIEW [dbo].[View_1]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Employee_Pics]'))
DROP VIEW [dbo].[Employee_Pics]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[QUOTES_Drop_List]'))
DROP VIEW [dbo].[QUOTES_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[CashPayments_Grouped]'))
DROP VIEW [dbo].[CashPayments_Grouped]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_Orders_UD_Drop_list]'))
DROP VIEW [dbo].[Sales_Orders_UD_Drop_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Nominal_Entry_Drop_List]'))
DROP VIEW [dbo].[Nominal_Entry_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_Orders_UD_list]'))
DROP VIEW [dbo].[Sales_Orders_UD_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_Order_Lines_Drop_List]'))
DROP VIEW [dbo].[Sales_Order_Lines_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Heat_Treatments_List]'))
DROP VIEW [dbo].[Heat_Treatments_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Activity_List]'))
DROP VIEW [dbo].[Activity_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Route_Versions_Drop_list]'))
DROP VIEW [dbo].[Route_Versions_Drop_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Heat_Treatments_Drop_List]'))
DROP VIEW [dbo].[Heat_Treatments_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[ENQUIRY_LINE_QTY_List]'))
DROP VIEW [dbo].[ENQUIRY_LINE_QTY_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[INDUSTRY_List]'))
DROP VIEW [dbo].[INDUSTRY_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Route_versions_List]'))
DROP VIEW [dbo].[Route_versions_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SO_Line_Complete_Date]'))
DROP VIEW [dbo].[SO_Line_Complete_Date]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PO_lines_Drop_List]'))
DROP VIEW [dbo].[PO_lines_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[INDUSTRY_Drop_List]'))
DROP VIEW [dbo].[INDUSTRY_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Analysis_Recs_List]'))
DROP VIEW [dbo].[Part_Analysis_Recs_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SO_Delivery_Schedule_List]'))
DROP VIEW [dbo].[SO_Delivery_Schedule_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Po_Lines_List]'))
DROP VIEW [dbo].[Po_Lines_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Process_Capacity]'))
DROP VIEW [dbo].[Process_Capacity]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Supplier_Part_Drop_List]'))
DROP VIEW [dbo].[Supplier_Part_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Certification_Standard_Drop_List]'))
DROP VIEW [dbo].[Certification_Standard_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SO_Delivery_Schedule_Drop_List]'))
DROP VIEW [dbo].[SO_Delivery_Schedule_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Invoice_Part_List]'))
DROP VIEW [dbo].[Invoice_Part_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Tensile_Drop_List]'))
DROP VIEW [dbo].[Tensile_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Supplier_Part_List]'))
DROP VIEW [dbo].[Supplier_Part_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Cert_Std_List]'))
DROP VIEW [dbo].[Cert_Std_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Quotes_list_with_parts]'))
DROP VIEW [dbo].[Quotes_list_with_parts]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Tensile_List]'))
DROP VIEW [dbo].[Tensile_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Pay_Rates_Drop_List]'))
DROP VIEW [dbo].[Pay_Rates_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Cert_Std_Drop_List]'))
DROP VIEW [dbo].[Cert_Std_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Quick_Work_Orders_List_With_Parts]'))
DROP VIEW [dbo].[Quick_Work_Orders_List_With_Parts]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Quote_Line_Qty_Drop_list]'))
DROP VIEW [dbo].[Quote_Line_Qty_Drop_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Pay_Rates_List]'))
DROP VIEW [dbo].[Pay_Rates_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Certification_Standard_List]'))
DROP VIEW [dbo].[Certification_Standard_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Job_Costing_Plan_Hrs_Temp]'))
DROP VIEW [dbo].[Job_Costing_Plan_Hrs_Temp]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Quote_Line_Qty_List]'))
DROP VIEW [dbo].[Quote_Line_Qty_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Movement_List]'))
DROP VIEW [dbo].[Stock_Movement_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Job_Costing_Charges_Temp]'))
DROP VIEW [dbo].[Job_Costing_Charges_Temp]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contract_List]'))
DROP VIEW [dbo].[Contract_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Take_Item_List]'))
DROP VIEW [dbo].[Stock_Take_Item_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accts_Invoice_Vat]'))
DROP VIEW [dbo].[Accts_Invoice_Vat]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Job_Costing_Plan_MatSubCon]'))
DROP VIEW [dbo].[Job_Costing_Plan_MatSubCon]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PriceList_PartQtyPrice_List]'))
DROP VIEW [dbo].[PriceList_PartQtyPrice_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Building_List_All]'))
DROP VIEW [dbo].[Stock_Building_List_All]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Credit_Part_List]'))
DROP VIEW [dbo].[Credit_Part_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_Related_Docs_List]'))
DROP VIEW [dbo].[Sales_Related_Docs_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Misc_Receipt_List]'))
DROP VIEW [dbo].[Misc_Receipt_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Companys_list]'))
DROP VIEW [dbo].[Companys_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Invoice_Payment_Lines_List]'))
DROP VIEW [dbo].[Invoice_Payment_Lines_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_Order_Profile_List]'))
DROP VIEW [dbo].[Sales_Order_Profile_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Complete_Date]'))
DROP VIEW [dbo].[WO_Complete_Date]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Internal_Companies]'))
DROP VIEW [dbo].[Internal_Companies]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accts_Invoice_Nominals]'))
DROP VIEW [dbo].[Accts_Invoice_Nominals]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[EXPENSES_List]'))
DROP VIEW [dbo].[EXPENSES_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Scheduled_Deliveries]'))
DROP VIEW [dbo].[Scheduled_Deliveries]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Prod_Planned]'))
DROP VIEW [dbo].[WO_Analysis_Prod_Planned]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Item_Scanned_Lines]'))
DROP VIEW [dbo].[Delivery_Item_Scanned_Lines]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Predefined_Material_List]'))
DROP VIEW [dbo].[Predefined_Material_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Expenses_Cost]'))
DROP VIEW [dbo].[WO_Analysis_Actual_Expenses_Cost]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquirys_list_with_Parts]'))
DROP VIEW [dbo].[Enquirys_list_with_Parts]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Periods_List]'))
DROP VIEW [dbo].[Periods_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Predefined_Material_Drop_List]'))
DROP VIEW [dbo].[Predefined_Material_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Job_Costing_Expenses_Temp]'))
DROP VIEW [dbo].[Job_Costing_Expenses_Temp]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Po_Receipt_List_With_Parts]'))
DROP VIEW [dbo].[Po_Receipt_List_With_Parts]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Max_Invoice]'))
DROP VIEW [dbo].[Max_Invoice]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_ManuReturn_Cost]'))
DROP VIEW [dbo].[WO_Analysis_Actual_ManuReturn_Cost]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Employee_Targets_List]'))
DROP VIEW [dbo].[Employee_Targets_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Label_List_3]'))
DROP VIEW [dbo].[WO_Label_List_3]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[System_List]'))
DROP VIEW [dbo].[System_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Invoices_List_With_Parts]'))
DROP VIEW [dbo].[Invoices_List_With_Parts]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Order_LSD]'))
DROP VIEW [dbo].[Work_Order_LSD]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Version]'))
DROP VIEW [dbo].[Version]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Material_Balance]'))
DROP VIEW [dbo].[WO_Material_Balance]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Drawing_Status_Drop_List]'))
DROP VIEW [dbo].[Drawing_Status_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Item_Stock_Qty]'))
DROP VIEW [dbo].[Delivery_Item_Stock_Qty]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_History_NC]'))
DROP VIEW [dbo].[Part_History_NC]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Label_List_4]'))
DROP VIEW [dbo].[WO_Label_List_4]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Job_Costing_Quote_Hrs_Temp]'))
DROP VIEW [dbo].[Job_Costing_Quote_Hrs_Temp]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Po_Type_Drop_List]'))
DROP VIEW [dbo].[Po_Type_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PO_Type_List]'))
DROP VIEW [dbo].[PO_Type_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Purchase_Orders_Required]'))
DROP VIEW [dbo].[Purchase_Orders_Required]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Answer_List]'))
DROP VIEW [dbo].[Answer_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Ultrasonic_Drop_List]'))
DROP VIEW [dbo].[Ultrasonic_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_SubReturn_Cost]'))
DROP VIEW [dbo].[WO_Analysis_Actual_SubReturn_Cost]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Label_List]'))
DROP VIEW [dbo].[WO_Label_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Answer_Drop_List]'))
DROP VIEW [dbo].[Answer_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Ultrasonic_List]'))
DROP VIEW [dbo].[Ultrasonic_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Drawing_Status_List]'))
DROP VIEW [dbo].[Drawing_Status_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Returns_Cost]'))
DROP VIEW [dbo].[WO_Analysis_Actual_Returns_Cost]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Label_List_2]'))
DROP VIEW [dbo].[WO_Label_List_2]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Label_List_1]'))
DROP VIEW [dbo].[WO_Label_List_1]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_History_Delivery]'))
DROP VIEW [dbo].[Part_History_Delivery]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contract_View_Temp_List]'))
DROP VIEW [dbo].[Contract_View_Temp_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PackingNotesForSO]'))
DROP VIEW [dbo].[PackingNotesForSO]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info_Drop_List]'))
DROP VIEW [dbo].[General_Info_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_list_All]'))
DROP VIEW [dbo].[Stock_list_All]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Live_Operations]'))
DROP VIEW [dbo].[Live_Operations]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SO_Del_Complete_Date]'))
DROP VIEW [dbo].[SO_Del_Complete_Date]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Issues_Delivery]'))
DROP VIEW [dbo].[Stock_Issues_Delivery]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info_List]'))
DROP VIEW [dbo].[General_Info_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Chemistry_list_All]'))
DROP VIEW [dbo].[Stock_Chemistry_list_All]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[CofC_Drop_List]'))
DROP VIEW [dbo].[CofC_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Chemistry_List]'))
DROP VIEW [dbo].[Stock_Chemistry_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Qty_Outstanding]'))
DROP VIEW [dbo].[WO_Qty_Outstanding]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_PackingQty]'))
DROP VIEW [dbo].[Part_PackingQty]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Profiles_List]'))
DROP VIEW [dbo].[Part_Profiles_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_History_Stock]'))
DROP VIEW [dbo].[Part_History_Stock]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Wo_Receipt_List]'))
DROP VIEW [dbo].[Wo_Receipt_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[CofC_List]'))
DROP VIEW [dbo].[CofC_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info3_List]'))
DROP VIEW [dbo].[General_Info3_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[AllocationQtyComplete]'))
DROP VIEW [dbo].[AllocationQtyComplete]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Scheduling_Last_Ops]'))
DROP VIEW [dbo].[Scheduling_Last_Ops]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Item_Drop_List]'))
DROP VIEW [dbo].[Delivery_Item_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Route_Drop_List]'))
DROP VIEW [dbo].[Route_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Run_Alt]'))
DROP VIEW [dbo].[WO_Analysis_Actual_Run_Alt]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contact_Marketing_Category_Drop_List]'))
DROP VIEW [dbo].[Contact_Marketing_Category_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_List_Barcoding]'))
DROP VIEW [dbo].[Delivery_List_Barcoding]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Centre_Capacity]'))
DROP VIEW [dbo].[Work_Centre_Capacity]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accounts_Entry_List]'))
DROP VIEW [dbo].[Accounts_Entry_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contact_Marketing_Category_List]'))
DROP VIEW [dbo].[Contact_Marketing_Category_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[ENQUIRY_LINES_LIST]'))
DROP VIEW [dbo].[ENQUIRY_LINES_LIST]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Route_list]'))
DROP VIEW [dbo].[Route_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Credits_List_With_Parts]'))
DROP VIEW [dbo].[Credits_List_With_Parts]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Hardness_Drop_List]'))
DROP VIEW [dbo].[Hardness_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info3_Drop_List]'))
DROP VIEW [dbo].[General_Info3_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Button_Groups]'))
DROP VIEW [dbo].[User_Button_Groups]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accts_PI_Vat]'))
DROP VIEW [dbo].[Accts_PI_Vat]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Hardness_List]'))
DROP VIEW [dbo].[Hardness_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accounts_Purchase_Invoices]'))
DROP VIEW [dbo].[Accounts_Purchase_Invoices]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_centre_list]'))
DROP VIEW [dbo].[Work_centre_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_SubCon_Cost]'))
DROP VIEW [dbo].[WO_Analysis_Actual_SubCon_Cost]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_TimeScales_List]'))
DROP VIEW [dbo].[Delivery_TimeScales_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accts_PI_Nominals]'))
DROP VIEW [dbo].[Accts_PI_Nominals]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Non_Conformance_Drop_List]'))
DROP VIEW [dbo].[Non_Conformance_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_TimeScales_Drop_List]'))
DROP VIEW [dbo].[Delivery_TimeScales_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Specification_list]'))
DROP VIEW [dbo].[Specification_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SFDC_Transactions_List]'))
DROP VIEW [dbo].[SFDC_Transactions_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Manu_Cost]'))
DROP VIEW [dbo].[WO_Analysis_Actual_Manu_Cost]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[CONTACT_POSITION_Drop_List]'))
DROP VIEW [dbo].[CONTACT_POSITION_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Specification_Drop_list]'))
DROP VIEW [dbo].[Specification_Drop_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WC_Process_list]'))
DROP VIEW [dbo].[WC_Process_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Material_Cost]'))
DROP VIEW [dbo].[WO_Analysis_Actual_Material_Cost]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[CONTACT_POSITION_List]'))
DROP VIEW [dbo].[CONTACT_POSITION_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_Order_Lines_History_list]'))
DROP VIEW [dbo].[Sales_Order_Lines_History_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Centre_Drop_List]'))
DROP VIEW [dbo].[Work_Centre_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_by_Location]'))
DROP VIEW [dbo].[Stock_by_Location]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[NCNoofRecByTypeLast12Mths]'))
DROP VIEW [dbo].[NCNoofRecByTypeLast12Mths]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[NCnoofRecsLast12MonthsByOrigin]'))
DROP VIEW [dbo].[NCnoofRecsLast12MonthsByOrigin]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Wo_Route_SChedule_drop_List]'))
DROP VIEW [dbo].[Wo_Route_SChedule_drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[RFQ_Lines_Drop_List]'))
DROP VIEW [dbo].[RFQ_Lines_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Incidents_Drop_List]'))
DROP VIEW [dbo].[Incidents_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Drop_list]'))
DROP VIEW [dbo].[Part_Drop_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Wo_Route_SChedule_list]'))
DROP VIEW [dbo].[Wo_Route_SChedule_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Cutting_List]'))
DROP VIEW [dbo].[Cutting_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Incidents_list]'))
DROP VIEW [dbo].[Incidents_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[MRP_List]'))
DROP VIEW [dbo].[MRP_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Related_Doc_Drop_List]'))
DROP VIEW [dbo].[Part_Related_Doc_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Buttons_Select]'))
DROP VIEW [dbo].[User_Buttons_Select]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Related_Doc_List]'))
DROP VIEW [dbo].[Part_Related_Doc_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Po_Line_Delivery_List]'))
DROP VIEW [dbo].[Po_Line_Delivery_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_History_Enquiry]'))
DROP VIEW [dbo].[Part_History_Enquiry]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Workflow_Questions_list]'))
DROP VIEW [dbo].[Workflow_Questions_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Holiday_Type_List]'))
DROP VIEW [dbo].[Holiday_Type_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Workflow_List]'))
DROP VIEW [dbo].[Workflow_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Employee_Holidays_List]'))
DROP VIEW [dbo].[Employee_Holidays_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_SubCon_PO]'))
DROP VIEW [dbo].[WO_Analysis_SubCon_PO]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Main_Mat]'))
DROP VIEW [dbo].[Main_Mat]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VAT_List]'))
DROP VIEW [dbo].[VAT_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Holiday_Type_Drop_List]'))
DROP VIEW [dbo].[Holiday_Type_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PI_Receipts_List]'))
DROP VIEW [dbo].[PI_Receipts_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VAT_Drop_List]'))
DROP VIEW [dbo].[VAT_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_order_Part_Alias]'))
DROP VIEW [dbo].[Sales_order_Part_Alias]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[For_Nominal_Entry_List]'))
DROP VIEW [dbo].[For_Nominal_Entry_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Multi_Scrap_list]'))
DROP VIEW [dbo].[Multi_Scrap_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[For_Nominal_entry_List_with_Parts]'))
DROP VIEW [dbo].[For_Nominal_entry_List_with_Parts]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Calendar_Exception_type_drop_List]'))
DROP VIEW [dbo].[Calendar_Exception_type_drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Nominal_Sub_Type_List]'))
DROP VIEW [dbo].[Nominal_Sub_Type_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Serial_No_Group_List]'))
DROP VIEW [dbo].[Serial_No_Group_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Company_Discounts_List]'))
DROP VIEW [dbo].[Part_Company_Discounts_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Calendar_Exception_type_List]'))
DROP VIEW [dbo].[Calendar_Exception_type_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Nominal_Sub_Type_Drop_List]'))
DROP VIEW [dbo].[Nominal_Sub_Type_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Serial_No_Group_Drop_List]'))
DROP VIEW [dbo].[Serial_No_Group_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Count_SO_For_Part]'))
DROP VIEW [dbo].[Count_SO_For_Part]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_SO_UOM]'))
DROP VIEW [dbo].[Part_SO_UOM]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WC_Calendar_exceptions_List]'))
DROP VIEW [dbo].[WC_Calendar_exceptions_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Form_Headers_list]'))
DROP VIEW [dbo].[Form_Headers_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Non_Conformance_List_With_Parts]'))
DROP VIEW [dbo].[Non_Conformance_List_With_Parts]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Process_Calendar_Exceptions_List]'))
DROP VIEW [dbo].[Process_Calendar_Exceptions_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Employee_Shifts_List]'))
DROP VIEW [dbo].[Employee_Shifts_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[AccountsPostingErrors]'))
DROP VIEW [dbo].[AccountsPostingErrors]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Con_NOtes_Test]'))
DROP VIEW [dbo].[Con_NOtes_Test]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Shifts_list]'))
DROP VIEW [dbo].[Shifts_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Calendar_Drop_List]'))
DROP VIEW [dbo].[Calendar_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Company_Discount_Group_Drop_list]'))
DROP VIEW [dbo].[Company_Discount_Group_Drop_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Shifts_Drop_List]'))
DROP VIEW [dbo].[Shifts_Drop_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SubContract_Delivery_List]'))
DROP VIEW [dbo].[SubContract_Delivery_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_UOM_Conversion_Invoice]'))
DROP VIEW [dbo].[Part_UOM_Conversion_Invoice]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[AccountsNominalBalance]'))
DROP VIEW [dbo].[AccountsNominalBalance]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[AccEntryTotals]'))
DROP VIEW [dbo].[AccEntryTotals]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Scheduling_Live_Ops]'))
DROP VIEW [dbo].[Scheduling_Live_Ops]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Reports_Users_List]'))
DROP VIEW [dbo].[Reports_Users_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Reports_List]'))
DROP VIEW [dbo].[Reports_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Reports_Parts_List]'))
DROP VIEW [dbo].[Reports_Parts_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Reports_Companies_List]'))
DROP VIEW [dbo].[Reports_Companies_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Transaction_List]'))
DROP VIEW [dbo].[Stock_Transaction_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Order_Op10_Complete]'))
DROP VIEW [dbo].[Work_Order_Op10_Complete]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Order_OP20_Complete]'))
DROP VIEW [dbo].[Work_Order_OP20_Complete]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_orders_list]'))
DROP VIEW [dbo].[Sales_orders_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Parts_Required_2]'))
DROP VIEW [dbo].[Parts_Required_2]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Required]'))
DROP VIEW [dbo].[Work_Orders_Required]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_List]'))
DROP VIEW [dbo].[Delivery_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_List_Weekly_Balance]'))
DROP VIEW [dbo].[Part_List_Weekly_Balance]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_Order_Lines_List]'))
DROP VIEW [dbo].[Sales_Order_Lines_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[AccountsCompanyBalanceTemp]'))
DROP VIEW [dbo].[AccountsCompanyBalanceTemp]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Company_Balance]'))
DROP VIEW [dbo].[Company_Balance]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Purchase_Invoice_list]'))
DROP VIEW [dbo].[Purchase_Invoice_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PI_Item_List]'))
DROP VIEW [dbo].[PI_Item_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[RFQ_Lines_With_Prices]'))
DROP VIEW [dbo].[RFQ_Lines_With_Prices]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Supplier_Part_Qty_Price_List]'))
DROP VIEW [dbo].[Supplier_Part_Qty_Price_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Purchase_Order_List_With_Parts]'))
DROP VIEW [dbo].[Purchase_Order_List_With_Parts]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SO_Last_Delivery_Date]'))
DROP VIEW [dbo].[SO_Last_Delivery_Date]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Active_Ops]'))
DROP VIEW [dbo].[Active_Ops]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_list]'))
DROP VIEW [dbo].[Part_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_List]'))
DROP VIEW [dbo].[Stock_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Production_Plan_List]'))
DROP VIEW [dbo].[Production_Plan_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Active_Ops_Complete]'))
DROP VIEW [dbo].[Active_Ops_Complete]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Cost_Centre_List]'))
DROP VIEW [dbo].[Cost_Centre_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Nominals_List]'))
DROP VIEW [dbo].[Nominals_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Allocations_List]'))
DROP VIEW [dbo].[Allocations_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Total_Issues]'))
DROP VIEW [dbo].[WO_Total_Issues]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Material_Temp]'))
DROP VIEW [dbo].[WO_Analysis_Actual_Material_Temp]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Order_Main_Material]'))
DROP VIEW [dbo].[Work_Order_Main_Material]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_30_Details]'))
DROP VIEW [dbo].[Work_Orders_Op_30_Details]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_130_Details]'))
DROP VIEW [dbo].[Work_Orders_Op_130_Details]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_160_Details]'))
DROP VIEW [dbo].[Work_Orders_Op_160_Details]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_150_Details]'))
DROP VIEW [dbo].[Work_Orders_Op_150_Details]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_10_Details]'))
DROP VIEW [dbo].[Work_Orders_Op_10_Details]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_80_Details]'))
DROP VIEW [dbo].[Work_Orders_Op_80_Details]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_50_Details]'))
DROP VIEW [dbo].[Work_Orders_Op_50_Details]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_100_Details]'))
DROP VIEW [dbo].[Work_Orders_Op_100_Details]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_60_Details]'))
DROP VIEW [dbo].[Work_Orders_Op_60_Details]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_40_Details]'))
DROP VIEW [dbo].[Work_Orders_Op_40_Details]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_120_Details]'))
DROP VIEW [dbo].[Work_Orders_Op_120_Details]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_20_Details]'))
DROP VIEW [dbo].[Work_Orders_Op_20_Details]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_70_Details]'))
DROP VIEW [dbo].[Work_Orders_Op_70_Details]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_90_Details]'))
DROP VIEW [dbo].[Work_Orders_Op_90_Details]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_140_Details]'))
DROP VIEW [dbo].[Work_Orders_Op_140_Details]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_110_Details]'))
DROP VIEW [dbo].[Work_Orders_Op_110_Details]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[First_PO]'))
DROP VIEW [dbo].[First_PO]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Price_List_Temp]'))
DROP VIEW [dbo].[Price_List_Temp]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Quotes_list]'))
DROP VIEW [dbo].[Quotes_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Quick_Work_Orders_List]'))
DROP VIEW [dbo].[Quick_Work_Orders_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Line_In_Stock]'))
DROP VIEW [dbo].[Delivery_Line_In_Stock]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquirys_list]'))
DROP VIEW [dbo].[Enquirys_list]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Po_Receipt_List]'))
DROP VIEW [dbo].[Po_Receipt_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_ManuReturn_Temp]'))
DROP VIEW [dbo].[WO_Analysis_Actual_ManuReturn_Temp]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Invoices_List]'))
DROP VIEW [dbo].[Invoices_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Issue_Total]'))
DROP VIEW [dbo].[WO_Issue_Total]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Return_Total]'))
DROP VIEW [dbo].[WO_Return_Total]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Item_Stock_Total_Batch_Qty]'))
DROP VIEW [dbo].[Delivery_Item_Stock_Total_Batch_Qty]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Return_Temp]'))
DROP VIEW [dbo].[WO_Analysis_Actual_Return_Temp]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_SubReturn_Temp]'))
DROP VIEW [dbo].[WO_Analysis_Actual_SubReturn_Temp]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contract_View_Po_Count]'))
DROP VIEW [dbo].[Contract_View_Po_Count]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User Buttons Visible]'))
DROP VIEW [dbo].[User Buttons Visible]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_ISSUE_STock_List]'))
DROP VIEW [dbo].[WO_ISSUE_STock_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_LABOUR_COST_TOTAL_SETUP]'))
DROP VIEW [dbo].[WO_LABOUR_COST_TOTAL_SETUP]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accounts_entry_Balance]'))
DROP VIEW [dbo].[Accounts_entry_Balance]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Credits_List]'))
DROP VIEW [dbo].[Credits_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_SubCon_Temp]'))
DROP VIEW [dbo].[WO_Analysis_Actual_SubCon_Temp]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Manu_Temp]'))
DROP VIEW [dbo].[WO_Analysis_Actual_Manu_Temp]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Location_Ids_Grouped]'))
DROP VIEW [dbo].[Stock_Location_Ids_Grouped]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Op_List]'))
DROP VIEW [dbo].[WO_Op_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[First_Purchased_Mat]'))
DROP VIEW [dbo].[First_Purchased_Mat]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Po_Receipt_Line_List]'))
DROP VIEW [dbo].[Po_Receipt_Line_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Nominal_Entry_List]'))
DROP VIEW [dbo].[Nominal_Entry_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Company_Discount_Temp]'))
DROP VIEW [dbo].[Part_Company_Discount_Temp]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_UOM_Conversion]'))
DROP VIEW [dbo].[Part_UOM_Conversion]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Non_Conformance_List]'))
DROP VIEW [dbo].[Non_Conformance_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[AccountsPostedtoDebtorsCreditors]'))
DROP VIEW [dbo].[AccountsPostedtoDebtorsCreditors]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PO_Receipt_Date_Rcvd]'))
DROP VIEW [dbo].[PO_Receipt_Date_Rcvd]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Purchase_Order_List]'))
DROP VIEW [dbo].[Purchase_Order_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PO_Receipt_Line_Received]'))
DROP VIEW [dbo].[PO_Receipt_Line_Received]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Last_Op_Complete]'))
DROP VIEW [dbo].[Last_Op_Complete]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Min_Times]'))
DROP VIEW [dbo].[Min_Times]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PrevOPTemp]'))
DROP VIEW [dbo].[PrevOPTemp]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[UOM_From_Conversion_Id]'))
DROP VIEW [dbo].[UOM_From_Conversion_Id]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[RFQ_Lines_List]'))
DROP VIEW [dbo].[RFQ_Lines_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WIP_Total]'))
DROP VIEW [dbo].[WIP_Total]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Consignment]'))
DROP VIEW [dbo].[Part_Consignment]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Quarantine]'))
DROP VIEW [dbo].[Part_Quarantine]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Allocation_Outstanding]'))
DROP VIEW [dbo].[Allocation_Outstanding]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W4]'))
DROP VIEW [dbo].[PLWWB_PO_W4]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W13]'))
DROP VIEW [dbo].[PLWWB_PO_W13]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W24]'))
DROP VIEW [dbo].[PLWWB_PO_W24]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W26]'))
DROP VIEW [dbo].[PLWWB_PO_W26]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W22]'))
DROP VIEW [dbo].[PLWWB_PO_W22]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W23]'))
DROP VIEW [dbo].[PLWWB_PO_W23]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W5]'))
DROP VIEW [dbo].[PLWWB_PO_W5]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W8]'))
DROP VIEW [dbo].[PLWWB_PO_W8]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W12]'))
DROP VIEW [dbo].[PLWWB_PO_W12]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W11]'))
DROP VIEW [dbo].[PLWWB_PO_W11]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W3]'))
DROP VIEW [dbo].[PLWWB_PO_W3]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W2]'))
DROP VIEW [dbo].[PLWWB_PO_W2]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W19]'))
DROP VIEW [dbo].[PLWWB_PO_W19]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W17]'))
DROP VIEW [dbo].[PLWWB_PO_W17]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W22]'))
DROP VIEW [dbo].[PLWWB_WR_W22]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W11]'))
DROP VIEW [dbo].[PLWWB_WR_W11]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W20]'))
DROP VIEW [dbo].[PLWWB_PO_W20]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W10]'))
DROP VIEW [dbo].[PLWWB_PO_W10]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W7]'))
DROP VIEW [dbo].[PLWWB_WR_W7]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W16]'))
DROP VIEW [dbo].[PLWWB_WR_W16]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W17]'))
DROP VIEW [dbo].[PLWWB_WR_W17]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W5]'))
DROP VIEW [dbo].[PLWWB_WR_W5]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W13]'))
DROP VIEW [dbo].[PLWWB_WR_W13]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W20]'))
DROP VIEW [dbo].[PLWWB_WR_W20]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W9]'))
DROP VIEW [dbo].[PLWWB_WR_W9]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W1]'))
DROP VIEW [dbo].[PLWWB_WR_W1]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W14]'))
DROP VIEW [dbo].[PLWWB_WR_W14]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W15]'))
DROP VIEW [dbo].[PLWWB_WO_W15]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W2]'))
DROP VIEW [dbo].[PLWWB_WO_W2]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W2]'))
DROP VIEW [dbo].[PLWWB_WR_W2]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W12]'))
DROP VIEW [dbo].[PLWWB_WR_W12]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W6]'))
DROP VIEW [dbo].[PLWWB_WR_W6]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W8]'))
DROP VIEW [dbo].[PLWWB_WR_W8]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W3]'))
DROP VIEW [dbo].[PLWWB_WR_W3]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W15]'))
DROP VIEW [dbo].[PLWWB_WR_W15]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W18]'))
DROP VIEW [dbo].[PLWWB_WR_W18]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W4]'))
DROP VIEW [dbo].[PLWWB_WR_W4]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W10]'))
DROP VIEW [dbo].[PLWWB_WR_W10]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W23]'))
DROP VIEW [dbo].[PLWWB_WR_W23]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W25]'))
DROP VIEW [dbo].[PLWWB_WR_W25]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W21]'))
DROP VIEW [dbo].[PLWWB_WR_W21]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W24]'))
DROP VIEW [dbo].[PLWWB_WR_W24]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W19]'))
DROP VIEW [dbo].[PLWWB_WR_W19]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W26]'))
DROP VIEW [dbo].[PLWWB_WR_W26]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W1]'))
DROP VIEW [dbo].[PLWWB_PO_W1]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W18]'))
DROP VIEW [dbo].[PLWWB_PO_W18]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W7]'))
DROP VIEW [dbo].[PLWWB_PO_W7]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W21]'))
DROP VIEW [dbo].[PLWWB_PO_W21]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W16]'))
DROP VIEW [dbo].[PLWWB_PO_W16]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W15]'))
DROP VIEW [dbo].[PLWWB_PO_W15]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W7]'))
DROP VIEW [dbo].[PLWWB_WO_W7]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W6]'))
DROP VIEW [dbo].[PLWWB_PO_W6]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W26]'))
DROP VIEW [dbo].[PLWWB_WO_W26]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W16]'))
DROP VIEW [dbo].[PLWWB_WO_W16]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W18]'))
DROP VIEW [dbo].[PLWWB_WO_W18]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W12]'))
DROP VIEW [dbo].[PLWWB_WO_W12]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W11]'))
DROP VIEW [dbo].[PLWWB_WO_W11]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W22]'))
DROP VIEW [dbo].[PLWWB_WO_W22]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W13]'))
DROP VIEW [dbo].[PLWWB_WO_W13]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W19]'))
DROP VIEW [dbo].[PLWWB_WO_W19]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W17]'))
DROP VIEW [dbo].[PLWWB_WO_W17]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W9]'))
DROP VIEW [dbo].[PLWWB_PO_W9]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W23]'))
DROP VIEW [dbo].[PLWWB_WO_W23]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W20]'))
DROP VIEW [dbo].[PLWWB_WO_W20]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W14]'))
DROP VIEW [dbo].[PLWWB_WO_W14]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W25]'))
DROP VIEW [dbo].[PLWWB_WO_W25]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W14]'))
DROP VIEW [dbo].[PLWWB_PO_W14]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W4]'))
DROP VIEW [dbo].[PLWWB_WO_W4]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W3]'))
DROP VIEW [dbo].[PLWWB_WO_W3]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W25]'))
DROP VIEW [dbo].[PLWWB_PO_W25]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W24]'))
DROP VIEW [dbo].[PLWWB_WO_W24]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W8]'))
DROP VIEW [dbo].[PLWWB_WO_W8]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W10]'))
DROP VIEW [dbo].[PLWWB_WO_W10]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W9]'))
DROP VIEW [dbo].[PLWWB_WO_W9]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W6]'))
DROP VIEW [dbo].[PLWWB_WO_W6]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W1]'))
DROP VIEW [dbo].[PLWWB_WO_W1]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W5]'))
DROP VIEW [dbo].[PLWWB_WO_W5]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W21]'))
DROP VIEW [dbo].[PLWWB_WO_W21]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Kilos]'))
DROP VIEW [dbo].[Stock_Kilos]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Per_Tonne]'))
DROP VIEW [dbo].[Stock_Per_Tonne]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_In_Feet]'))
DROP VIEW [dbo].[Stock_In_Feet]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Non_Firm_Allocations]'))
DROP VIEW [dbo].[Non_Firm_Allocations]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Parts_Required]'))
DROP VIEW [dbo].[Parts_Required]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Company_Overdue]'))
DROP VIEW [dbo].[Company_Overdue]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Scanned]'))
DROP VIEW [dbo].[Delivery_Scanned]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[First_SO_On_Del]'))
DROP VIEW [dbo].[First_SO_On_Del]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Address]'))
DROP VIEW [dbo].[Delivery_Address]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_List_With_Weekly_Balances_Dates]'))
DROP VIEW [dbo].[Part_List_With_Weekly_Balances_Dates]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Ops_Complete]'))
DROP VIEW [dbo].[WO_Ops_Complete]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Request_For_Quote_List]'))
DROP VIEW [dbo].[Request_For_Quote_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Purchase_Enquiry_List]'))
DROP VIEW [dbo].[Purchase_Enquiry_List]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PO_Receipt_Received]'))
DROP VIEW [dbo].[PO_Receipt_Received]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Consignment]'))
DROP VIEW [dbo].[Stock_Consignment]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WIP_Stock]'))
DROP VIEW [dbo].[WIP_Stock]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Quarantine]'))
DROP VIEW [dbo].[Stock_Quarantine]

--Version 726 - views.sql

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Integrity]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Integrity]
AS
SELECT     TOP (100) PERCENT c.TABLE_NAME, c.COLUMN_NAME
FROM         INFORMATION_SCHEMA.COLUMNS AS c INNER JOIN
                      INFORMATION_SCHEMA.TABLES AS t ON t.TABLE_CATALOG = c.TABLE_CATALOG AND t.TABLE_SCHEMA = c.TABLE_SCHEMA AND 
                      t.TABLE_NAME = c.TABLE_NAME AND t.TABLE_TYPE = ''BASE TABLE''
ORDER BY c.TABLE_NAME, c.COLUMN_NAME
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Integrity', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "c"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 286
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "t"
            Begin Extent = 
               Top = 6
               Left = 324
               Bottom = 125
               Right = 496
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Integrity'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Integrity', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Integrity'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[vw_Part_With_Weekly_Balances_Dates]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[vw_Part_With_Weekly_Balances_Dates]
AS
SELECT     DATEADD(dd, 1 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_1_Earlier, DATEADD(dd, 8 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_1_End, 
                      DATEADD(dd, 8 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_2_Start, DATEADD(dd, 15 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_2_End, 
                      DATEADD(dd, 15 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_3_Start, DATEADD(dd, 22 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_3_End, 
                      DATEADD(dd, 22 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_4_Start, DATEADD(dd, 29 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_4_End, 
                      DATEADD(dd, 29 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_5_Start, DATEADD(dd, 36 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_5_End, 
                      DATEADD(dd, 36 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_6_Start, DATEADD(dd, 43 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_6_End, 
                      DATEADD(dd, 43 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_7_Start, DATEADD(dd, 50 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_7_End, 
                      DATEADD(dd, 50 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_8_Start, DATEADD(dd, 57 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_8_End, 
                      DATEADD(dd, 57 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_9_Start, DATEADD(dd, 64 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_9_End, 
                      DATEADD(dd, 64 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_10_Start, DATEADD(dd, 71 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_10_End, 
                      DATEADD(dd, 71 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_11_Start, DATEADD(dd, 78 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_11_End, 
                      DATEADD(dd, 78 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_12_Start, DATEADD(dd, 85 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_12_End, 
                      DATEADD(dd, 85 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_13_Start, DATEADD(dd, 92 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_13_End, 
                      DATEADD(dd, 92 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_14_Start, DATEADD(dd, 99 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_14_End, 
                      DATEADD(dd, 99 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_15_Start, DATEADD(dd, 106 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_15_End, 
                      DATEADD(dd, 106 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_16_Start, DATEADD(dd, 113 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_16_End, 
                      DATEADD(dd, 113 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_17_Start, DATEADD(dd, 120 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_17_End, 
                      DATEADD(dd, 120 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_18_Start, DATEADD(dd, 127 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_18_End, 
                      DATEADD(dd, 127 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_19_Start, DATEADD(dd, 134 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_19_End, 
                      DATEADD(dd, 134 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_20_Start, DATEADD(dd, 141 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_20_End, 
                      DATEADD(dd, 141 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_21_Start, DATEADD(dd, 148 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_21_End, 
                      DATEADD(dd, 148 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_22_Start, DATEADD(dd, 155 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_22_End, 
                      DATEADD(dd, 155 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_23_Start, DATEADD(dd, 162 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_23_End, 
                      DATEADD(dd, 162 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_24_Start, DATEADD(dd, 169 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_24_End, 
                      DATEADD(dd, 169 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_25_Start, DATEADD(dd, 176 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_25_End, 
                      DATEADD(dd, 176 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS Week_26_Start, DATEADD(dd, 183 - DATEPART(dw, GETDATE()), GETDATE()) AS Week_26_End
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_List_With_Weekly_Balances_Dates]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_List_With_Weekly_Balances_Dates]
AS
SELECT     CAST(FLOOR(CAST(DATEADD(dd, 1 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_1_Earlier, CAST(FLOOR(CAST(DATEADD(dd, 
                      8 - DATEPART(dw, GETDATE()), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_1_End, CAST(FLOOR(CAST(DATEADD(dd, 8 - (DATEPART(dw, GETDATE()) - 1), 
                      GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_2_Start, CAST(FLOOR(CAST(DATEADD(dd, 15 - DATEPART(dw, GETDATE()), GETDATE()) AS FLOAT)) AS DATETIME) 
                      AS WEEK_2_End, CAST(FLOOR(CAST(DATEADD(dd, 15 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_3_Start, 
                      CAST(FLOOR(CAST(DATEADD(dd, 22 - DATEPART(dw, GETDATE()), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_3_End, CAST(FLOOR(CAST(DATEADD(dd, 
                      22 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_4_Start, CAST(FLOOR(CAST(DATEADD(dd, 29 - DATEPART(dw, GETDATE()), 
                      GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_4_End, CAST(FLOOR(CAST(DATEADD(dd, 29 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS FLOAT)) AS DATETIME) 
                      AS WEEK_5_Start, CAST(FLOOR(CAST(DATEADD(dd, 36 - DATEPART(dw, GETDATE()), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_5_End, 
                      CAST(FLOOR(CAST(DATEADD(dd, 36 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_6_Start, CAST(FLOOR(CAST(DATEADD(dd, 
                      43 - DATEPART(dw, GETDATE()), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_6_End, CAST(FLOOR(CAST(DATEADD(dd, 43 - (DATEPART(dw, GETDATE()) - 1), 
                      GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_7_Start, CAST(FLOOR(CAST(DATEADD(dd, 50 - DATEPART(dw, GETDATE()), GETDATE()) AS FLOAT)) AS DATETIME) 
                      AS WEEK_7_End, CAST(FLOOR(CAST(DATEADD(dd, 50 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_8_Start, 
                      CAST(FLOOR(CAST(DATEADD(dd, 57 - DATEPART(dw, GETDATE()), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_8_End, CAST(FLOOR(CAST(DATEADD(dd, 
                      57 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_9_Start, CAST(FLOOR(CAST(DATEADD(dd, 64 - DATEPART(dw, GETDATE()), 
                      GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_9_End, CAST(FLOOR(CAST(DATEADD(dd, 64 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS FLOAT)) AS DATETIME) 
                      AS WEEK_10_Start, CAST(FLOOR(CAST(DATEADD(dd, 71 - DATEPART(dw, GETDATE()), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_10_End, 
                      CAST(FLOOR(CAST(DATEADD(dd, 71 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_11_Start, CAST(FLOOR(CAST(DATEADD(dd, 
                      77 - DATEPART(dw, GETDATE()), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_11_End, CAST(FLOOR(CAST(DATEADD(dd, 77 - (DATEPART(dw, GETDATE()) - 1), 
                      GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_12_Start, CAST(FLOOR(CAST(DATEADD(dd, 84 - DATEPART(dw, GETDATE()), GETDATE()) AS FLOAT)) AS DATETIME) 
                      AS WEEK_12_End, CAST(FLOOR(CAST(DATEADD(dd, 84 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_13_Start, 
                      CAST(FLOOR(CAST(DATEADD(dd, 91 - DATEPART(dw, GETDATE()), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_13_End, CAST(FLOOR(CAST(DATEADD(dd, 
                      91 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_14_Start, CAST(FLOOR(CAST(DATEADD(dd, 98 - DATEPART(dw, GETDATE()), 
                      GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_14_End, CAST(FLOOR(CAST(DATEADD(dd, 98 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS FLOAT)) AS DATETIME) 
                      AS WEEK_15_Start, CAST(FLOOR(CAST(DATEADD(dd, 105 - DATEPART(dw, GETDATE()), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_15_End, 
                      CAST(FLOOR(CAST(DATEADD(dd, 105 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_16_Start, CAST(FLOOR(CAST(DATEADD(dd, 
                      112 - DATEPART(dw, GETDATE()), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_16_End, CAST(FLOOR(CAST(DATEADD(dd, 112 - (DATEPART(dw, GETDATE()) - 1), 
                      GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_17_Start, CAST(FLOOR(CAST(DATEADD(dd, 119 - DATEPART(dw, GETDATE()), GETDATE()) AS FLOAT)) AS DATETIME) 
                      AS WEEK_17_End, CAST(FLOOR(CAST(DATEADD(dd, 119 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_18_Start, 
                      CAST(FLOOR(CAST(DATEADD(dd, 126 - DATEPART(dw, GETDATE()), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_18_End, CAST(FLOOR(CAST(DATEADD(dd, 
                      126 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_19_Start, CAST(FLOOR(CAST(DATEADD(dd, 133 - DATEPART(dw, GETDATE()), 
                      GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_19_End, CAST(FLOOR(CAST(DATEADD(dd, 133 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS FLOAT)) 
                      AS DATETIME) AS WEEK_20_Start, CAST(FLOOR(CAST(DATEADD(dd, 140 - DATEPART(dw, GETDATE()), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_20_End, 
                      CAST(FLOOR(CAST(DATEADD(dd, 140 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_21_Start, CAST(FLOOR(CAST(DATEADD(dd, 
                      147 - DATEPART(dw, GETDATE()), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_21_End, CAST(FLOOR(CAST(DATEADD(dd, 147 - (DATEPART(dw, GETDATE()) - 1), 
                      GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_22_Start, CAST(FLOOR(CAST(DATEADD(dd, 154 - DATEPART(dw, GETDATE()), GETDATE()) AS FLOAT)) AS DATETIME) 
                      AS WEEK_22_End, CAST(FLOOR(CAST(DATEADD(dd, 154 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_23_Start, 
                      CAST(FLOOR(CAST(DATEADD(dd, 161 - DATEPART(dw, GETDATE()), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_23_End, CAST(FLOOR(CAST(DATEADD(dd, 
                      161 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_24_Start, CAST(FLOOR(CAST(DATEADD(dd, 168 - DATEPART(dw, GETDATE()), 
                      GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_24_End, CAST(FLOOR(CAST(DATEADD(dd, 168 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS FLOAT)) 
                      AS DATETIME) AS WEEK_25_Start, CAST(FLOOR(CAST(DATEADD(dd, 175 - DATEPART(dw, GETDATE()), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_25_End, 
                      CAST(FLOOR(CAST(DATEADD(dd, 175 - (DATEPART(dw, GETDATE()) - 1), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_26_Start, CAST(FLOOR(CAST(DATEADD(dd, 
                      182 - DATEPART(dw, GETDATE()), GETDATE()) AS FLOAT)) AS DATETIME) AS WEEK_26_End
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Related_Doc_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Related_Doc_list]
AS
SELECT     Stock_Related_Doc_ID, AgainstStock__Stock_ID, Description, Document_Path AS [Document Path]
FROM         dbo.Stock_Related_Doc
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Issues_Misc]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Issues_Misc]
AS
SELECT     dbo.Misc_Issue_Stock.Stock__Stock_id, dbo.Misc_Issue_Stock.Total_Qty AS Qty, dbo.Misc_Issue_Stock.Total_Length AS Length, 
                      dbo.Misc_Issue_Stock.Total_Breadth AS Breadth, dbo.Misc_Issue_Stock.QLB AS Total, dbo.Misc_Issue.Modified AS [Date Issued], 
                      dbo.Employee.Name AS [Issued By], dbo.Misc_Issue.Misc_Issue_ID, dbo.Misc_Issue.By_Stock_Take AS [By Stock Take], dbo.Misc_Issue.Scrap, 
                      dbo.Building.Building
FROM         dbo.Building RIGHT OUTER JOIN
                      dbo.Misc_Issue ON dbo.Building.Building_Id = dbo.Misc_Issue.Building__Building_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.Misc_Issue.Modified_By = dbo.Employee.Employee_Id RIGHT OUTER JOIN
                      dbo.Misc_Issue_Stock ON dbo.Misc_Issue.Misc_Issue_ID = dbo.Misc_Issue_Stock.Issue__Misc_issue_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Drawing_No_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Drawing_No_Drop_List]
AS
SELECT     dbo.Drawing_No.Drawing_No_ID, dbo.Drawing_No.Drawing_No AS [Drawing No], dbo.CONTACTS.Name AS [Customer Contact], 
                      dbo.Employee.Name AS [Internal Contact], dbo.Drawing_Type.Type AS [Drawing Type], dbo.Drawing_Status.Status AS [Drawing Status], 
                      dbo.Drawing_No.Internal_Use_Only AS [Internal Use Only], dbo.Drawing_No.Notes, dbo.Drawing_No.Customer_Approved AS [Customer Approved], 
                      dbo.Drawing_No.Goods_For_Production AS [Goods For Production]
FROM         dbo.Drawing_No LEFT OUTER JOIN
                      dbo.Drawing_Type ON dbo.Drawing_No.Type__Drawing_Type_ID = dbo.Drawing_Type.Drawing_Type_ID LEFT OUTER JOIN
                      dbo.Drawing_Status ON dbo.Drawing_No.Status__Drawing_Status_ID = dbo.Drawing_Status.Drawing_Status_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.Drawing_No.Contact__Employee_ID = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.CONTACTS ON dbo.Drawing_No.Customer__CONTACTS_ID = dbo.CONTACTS.Contact_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Drawing_No_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Drawing_No_List]
AS
SELECT     dbo.Drawing_No.Drawing_No_ID, dbo.Drawing_No.Drawing_No AS [Drawing No], dbo.CONTACTS.Name AS [Customer Contact], 
                      dbo.Employee.Name AS [Internal Contact], dbo.Drawing_Type.Type AS [Drawing Type], dbo.Drawing_Status.Status AS [Drawing Status], 
                      dbo.Drawing_No.Reason_For_Change AS [Reason For Change], dbo.Drawing_No.Internal_Use_Only AS [Internal Use Only], dbo.Drawing_No.Notes, 
                      dbo.Drawing_No.Customer_Approved AS [Customer Approved], dbo.Drawing_No.Goods_For_Production AS [Goods For Production]
FROM         dbo.Drawing_No LEFT OUTER JOIN
                      dbo.Drawing_Status ON dbo.Drawing_No.Status__Drawing_Status_ID = dbo.Drawing_Status.Drawing_Status_ID LEFT OUTER JOIN
                      dbo.Drawing_Type ON dbo.Drawing_No.Type__Drawing_Type_ID = dbo.Drawing_Type.Drawing_Type_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.Drawing_No.Contact__Employee_ID = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.CONTACTS ON dbo.Drawing_No.Customer__CONTACTS_ID = dbo.CONTACTS.Contact_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Drawing_Type_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Drawing_Type_Drop_List]
AS
SELECT     Drawing_Type_ID, Type, Modified, Modified_By
FROM         dbo.Drawing_Type
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Drawing_Type_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Drawing_Type_List]
AS
SELECT     Drawing_Type_ID, Type, Modified, Modified_By
FROM         dbo.Drawing_Type
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_ISSUE_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_ISSUE_List]
AS
SELECT     dbo.WO_ISSUE.WO_ISSUE_ID, dbo.WO_ISSUE.ForWO__WORK_ORDERS_ID, dbo.WO_ISSUE.Issue_Date AS Date, dbo.WO_ISSUE.Qty AS [Total Issue Qty], 
                      dbo.Part.Part_No AS [Part No], dbo.WORK_ORDERS.WO_No AS [WO No], dbo.Employee.Name AS [To Employee], dbo.WO_ISSUE.Notes_Non_RTF AS Notes, 
                      dbo.WORK_ORDERS.Complete_Date AS [Date Complete], dbo.WO_STATUS.Wo_Status AS [WO Status], dbo.Part_Revision.Revision AS [Part Revision], 
                      dbo.Part.Description, dbo.Stock.Batch_no, dbo.Stock.Cast_Heat_No, dbo.Stock.Serial_no, dbo.WO_ISSUE_STock.Qty_Returned AS [Qty Returned], 
                      dbo.WO_ISSUE.Qty - dbo.WO_ISSUE_STock.Qty_Returned AS [Qty Balance], dbo.Stock.Stock_ID, dbo.WO_ISSUE_STock.Total_Qty AS Qty
FROM         dbo.Employee RIGHT OUTER JOIN
                      dbo.Stock RIGHT OUTER JOIN
                      dbo.WO_ISSUE_STock ON dbo.Stock.Stock_ID = dbo.WO_ISSUE_STock.Stock__Stock_id RIGHT OUTER JOIN
                      dbo.WO_ISSUE ON dbo.WO_ISSUE_STock.Issue__WO_issue_id = dbo.WO_ISSUE.WO_ISSUE_ID ON 
                      dbo.Employee.Employee_Id = dbo.WO_ISSUE.To_Employee__Employee_id LEFT OUTER JOIN
                      dbo.Part ON dbo.WO_ISSUE.Part__Part_Id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Part_Revision RIGHT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Part_Revision.Part_revision_Id = dbo.WORK_ORDERS.Revision_Id__Revision_id LEFT OUTER JOIN
                      dbo.WO_STATUS ON dbo.WORK_ORDERS.Status__Wo_Status_Id = dbo.WO_STATUS.WO_status_Id ON 
                      dbo.WO_ISSUE.ForWO__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'WO_ISSUE_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[31] 4[19] 2[11] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Employee"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Stock"
            Begin Extent = 
               Top = 154
               Left = 944
               Bottom = 273
               Right = 1227
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WO_ISSUE_STock"
            Begin Extent = 
               Top = 138
               Left = 467
               Bottom = 356
               Right = 660
            End
            DisplayFlags = 280
            TopColumn = 1
         End
         Begin Table = "WO_ISSUE"
            Begin Extent = 
               Top = 166
               Left = 38
               Bottom = 383
               Right = 270
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part_Revision"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 254
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 726
               Left = 38
               Bottom = 845
               Right = 319
            End
            Disp' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_ISSUE_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'WO_ISSUE_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'layFlags = 280
            TopColumn = 0
         End
         Begin Table = "WO_STATUS"
            Begin Extent = 
               Top = 6
               Left = 305
               Bottom = 95
               Right = 465
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 21
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 4545
         Alias = 1560
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_ISSUE_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'WO_ISSUE_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_ISSUE_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Allocation_Outstanding]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Allocation_Outstanding]
AS
SELECT     dbo.Allocations.Allocations_ID, dbo.Allocations.Breadth, dbo.Allocations.Cancelled, dbo.Allocations.Complete, dbo.Allocations.Date_Created AS [Date Created], 
                      dbo.Allocations.Date_Required AS [Date Required], dbo.Allocations.Length, dbo.Allocations.Qty, dbo.Allocations.Qty_Complete AS [Qty Complete], 
                      dbo.Allocations.Qty_Processed AS [Qty Processed], dbo.Allocations.Total_Qty AS [Total Qty], dbo.Allocation_Part_type.Part_Type AS Type, 
                      dbo.Allocations_Type.Type AS Source, dbo.Allocations.WO__Works_order_Id, dbo.WORK_ORDERS.WO_No AS [For WO], 
                      dbo.Sales_Order_Lines.Contract_No AS [For Contract No], dbo.Allocations.Confirmed AS Released, dbo.Employee.Name AS [Created By], 
                      dbo.Bom.Deleted AS [Deleted From BOM], COMPANYS_1.Name AS [BOM Supplier], dbo.Allocations.Part__Part_Id, CAST(dbo.Allocations.Bom_No__Bom_Id AS bit) 
                      AS [On Part BOM], dbo.Allocations.SO__Sales_Order_Line_id, dbo.Allocations.SO_Delivery_Schedule_id, dbo.Allocations.Purchase_Enquiry_Raised, 
                      dbo.Allocations.Notes, dbo.Allocations.Week_No AS [Week No], dbo.WO_STATUS.Wo_Status AS [Wo Status]
FROM         dbo.Employee RIGHT OUTER JOIN
                      dbo.WO_STATUS RIGHT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.WO_STATUS.WO_status_Id = dbo.WORK_ORDERS.Status__Wo_Status_Id RIGHT OUTER JOIN
                      dbo.Allocations LEFT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.Allocations.SO__Sales_Order_Line_id = dbo.Sales_Order_Lines.Sales_Order_Lines_ID ON 
                      dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Allocations.WO__Works_order_Id LEFT OUTER JOIN
                      dbo.COMPANYS AS COMPANYS_1 RIGHT OUTER JOIN
                      dbo.Bom ON COMPANYS_1.Company_Id = dbo.Bom.BomSupplier__Company_id ON dbo.Allocations.Bom_No__Bom_Id = dbo.Bom.Bom_id ON 
                      dbo.Employee.Employee_Id = dbo.Allocations.Created_by LEFT OUTER JOIN
                      dbo.Allocations_Type ON dbo.Allocations.Type__Allocation_Type_Id = dbo.Allocations_Type.Allocations_Type_Id LEFT OUTER JOIN
                      dbo.Allocation_Part_type ON dbo.Allocations.Part_type__Allocation_Part_type_id = dbo.Allocation_Part_type.Allocation_Part_type_id
WHERE     (dbo.Allocations.Qty_Complete < dbo.Allocations.Total_Qty) AND (dbo.Allocations.Qty_Processed < dbo.Allocations.Total_Qty) AND (dbo.Allocations.Cancelled = 0) AND 
                      (dbo.Allocations.Complete = 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Allocations_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Allocations_List]
AS
SELECT     TOP (100) PERCENT dbo.Allocations.Allocations_ID, dbo.Allocations.Breadth, dbo.Allocations.Cancelled, dbo.Allocations.Complete, 
                      dbo.Allocations.Date_Created AS [Date Created], dbo.Allocations.Date_Required AS [Date Required], dbo.Allocations.Length, dbo.Allocations.Qty, 
                      dbo.Allocations.Qty_Complete AS [Qty Complete], dbo.Allocations.Qty_Processed AS [Qty Processed], dbo.Allocations.Total_Qty AS [Total Qty], 
                      dbo.Allocation_Part_type.Part_Type AS Type, dbo.Allocations_Type.Type AS Source, dbo.Allocations.WO__Works_order_Id, dbo.WORK_ORDERS.WO_No AS [For WO],
                       dbo.Sales_Order_Lines.Contract_No AS [For Contract No], dbo.Allocations.Confirmed AS Released, dbo.Employee.Name AS [Created By], 
                      Bom_1.Deleted AS [Deleted From BOM], dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.COMPANYS.Name AS [Pref. Supplier], 
                      COMPANYS_1.Name AS [BOM Supplier], dbo.Allocations.Part__Part_Id, CAST(dbo.Allocations.Bom_No__Bom_Id AS bit) AS [On Part BOM], 
                      dbo.Allocations.Issue_Qty AS [Kit Issue Qty], dbo.Allocations.Qty_In_Process AS [Qty In Process], dbo.Part.In_Stock AS [In Stock], dbo.Allocations.Notes, 
                      dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete AS [Kit Outstanding], dbo.Allocations.SO__Sales_Order_Line_id AS [SO Line ID], 
                      dbo.WO_STATUS.Wo_Status AS [WO Status], dbo.SALES_ORDER_LINE_STATUS.Sales_Order_line_Status AS [SO Status], 
                      dbo.WORK_ORDERS.Start_Date AS [WO Start Date], dbo.WORK_ORDERS.Date_Required AS [WO Date Required], Bom_1.Date_Required_Offset, 
                      dbo.Allocations.Can_Issue, dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID AS [SO Id], dbo.Part.Uses_Stock
FROM         dbo.SALES_ORDER_LINE_STATUS RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON 
                      dbo.SALES_ORDER_LINE_STATUS.Sales_order_line_Status_Id = dbo.Sales_Order_Lines.Status__Sales_Order_Line_Status_Id RIGHT OUTER JOIN
                      dbo.COMPANYS RIGHT OUTER JOIN
                      dbo.Part ON dbo.COMPANYS.Company_Id = dbo.Part.Supplier__Company_id RIGHT OUTER JOIN
                      dbo.Allocations ON dbo.Part.Part_Id = dbo.Allocations.Part__Part_Id LEFT OUTER JOIN
                      dbo.COMPANYS AS COMPANYS_1 RIGHT OUTER JOIN
                      dbo.Bom AS Bom_1 ON COMPANYS_1.Company_Id = Bom_1.BomSupplier__Company_id ON dbo.Allocations.Bom_No__Bom_Id = Bom_1.Bom_id LEFT OUTER JOIN
                      dbo.Employee ON dbo.Allocations.Created_by = dbo.Employee.Employee_Id ON 
                      dbo.Sales_Order_Lines.Sales_Order_Lines_ID = dbo.Allocations.SO__Sales_Order_Line_id LEFT OUTER JOIN
                      dbo.WORK_ORDERS LEFT OUTER JOIN
                      dbo.WO_STATUS ON dbo.WORK_ORDERS.Status__Wo_Status_Id = dbo.WO_STATUS.WO_status_Id ON 
                      dbo.Allocations.WO__Works_order_Id = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Allocations_Type ON dbo.Allocations.Type__Allocation_Type_Id = dbo.Allocations_Type.Allocations_Type_Id LEFT OUTER JOIN
                      dbo.Allocation_Part_type ON dbo.Allocations.Part_type__Allocation_Part_type_id = dbo.Allocation_Part_type.Allocation_Part_type_id
ORDER BY dbo.Allocations.Allocations_ID
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Allocations_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[25] 4[36] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -384
         Left = 0
      End
      Begin Tables = 
         Begin Table = "SALES_ORDER_LINE_STATUS"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 259
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 320
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 72
         End
         Begin Table = "Allocations"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 301
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS_1"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Bom_1"
            Begin Extent = 
               Top = 726
               Left = 38
               Bottom = 845
               Right = 280
            End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Allocations_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Allocations_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Employee"
            Begin Extent = 
               Top = 846
               Left = 38
               Bottom = 965
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 966
               Left = 38
               Bottom = 1085
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WO_STATUS"
            Begin Extent = 
               Top = 6
               Left = 297
               Bottom = 95
               Right = 457
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Allocations_Type"
            Begin Extent = 
               Top = 1086
               Left = 38
               Bottom = 1175
               Right = 224
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Allocation_Part_type"
            Begin Extent = 
               Top = 1086
               Left = 262
               Bottom = 1175
               Right = 465
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 39
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 2115
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Allocations_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Allocations_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Allocations_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Times_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Times_List]
AS
SELECT     dbo.TIMES.TIMES_ID, dbo.TIMES.Complete, dbo.TIMES.Date_Entered AS [Date Entered], dbo.TIMES.Employee__employee_Id, dbo.TIMES.End_Date AS [End Date], 
                      dbo.TIMES.End_Time AS [End Time], dbo.TIMES.Error, dbo.TIMES.Error_Log AS [Error Log], dbo.TIMES.Qty, dbo.TIMES.ScrapQty, dbo.TIMES.Start_Date AS [Start Date],
                       dbo.TIMES.Start_Time AS [Start Time], dbo.TIMES.time_worked_1 AS Time1, dbo.TIMES.time_worked_2 AS Time2, dbo.TIMES.time_worked_3 AS Time3, 
                      dbo.TIMES.time_worked_4 AS Time4, dbo.TIMES.time_worked_5 AS Time5, dbo.TIMES.time_worked_6 AS Time6, dbo.Work_Centre.WC_Name AS [WC Name], 
                      dbo.Work_Centre.Work_Centre_No AS [Work Centre No], dbo.Scrap_Reasons.Scrap_Reason AS [Scrap Reason], dbo.WORK_ORDERS.WO_No AS [WO No], 
                      dbo.Time_Type.Time_Type AS [Time Type], dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.TIMES.WorkOrder__WORK_ORDERS_ID, 
                      dbo.Sales_Order_Lines.Contract_No AS [Contract No], dbo.Employee.Name AS [Employee Name], dbo.Department.Department, 
                      dbo.TIMES.Notes_non_rtf AS [List Notes], dbo.Route.Op_No AS [Op No], dbo.Group_Code.Group_Code AS [Group Code], dbo.TIMES.Notes, 
                      dbo.Work_Centre.Work_Centre_id, dbo.TIMES.Op__Wo_Route_SChedule_ID, dbo.TIMES.ReWork_Code AS [ReWork Code], dbo.TIMES.Costs_Split AS [Costs Split], 
                      dbo.Route.Significant_OP AS [Significant OP], dbo.WO_STATUS.Wo_Status AS [Wo Status], dbo.WORK_ORDERS.Complete_Date AS [Complete Date], 
                      dbo.Employee.Forename, dbo.Employee.Surname, dbo.Route.Run_Time / 3600 AS [Run Time], dbo.Route.Setup_Time / 3600 AS [SetUp Time], 
                      dbo.Process.Process_Name AS Process, dbo.Op_types.Description AS [Op Description], dbo.Employee.Position, dbo.TIMES.Time_Split
FROM         dbo.Process RIGHT OUTER JOIN
                      dbo.TIMES ON dbo.Process.Process_Id = dbo.TIMES.Process__Process_ID LEFT OUTER JOIN
                      dbo.Route LEFT OUTER JOIN
                      dbo.Op_types ON dbo.Route.OP_type__op_types_id = dbo.Op_types.op_types_id ON dbo.TIMES.Route__Route_Id = dbo.Route.Route_id LEFT OUTER JOIN
                      dbo.WORK_ORDERS LEFT OUTER JOIN
                      dbo.WO_STATUS ON dbo.WORK_ORDERS.Status__Wo_Status_Id = dbo.WO_STATUS.WO_status_Id LEFT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.WORK_ORDERS.So_Line_Id = dbo.Sales_Order_Lines.Sales_Order_Lines_ID LEFT OUTER JOIN
                      dbo.Group_Code RIGHT OUTER JOIN
                      dbo.Part ON dbo.Group_Code.Groupcode_Id = dbo.Part.Groupcode__Groupcode_id ON dbo.WORK_ORDERS.Part_ID__Part_id = dbo.Part.Part_Id ON 
                      dbo.TIMES.WorkOrder__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Work_Centre ON dbo.TIMES.WorkCentrNo__Work_Centre_id = dbo.Work_Centre.Work_Centre_id LEFT OUTER JOIN
                      dbo.Time_Type ON dbo.TIMES.Type__Time_Type_ID = dbo.Time_Type.type_ID LEFT OUTER JOIN
                      dbo.Scrap_Reasons ON dbo.TIMES.Scrap__Scrap_Reasons_ID = dbo.Scrap_Reasons.Scrap_Reasons_ID LEFT OUTER JOIN
                      dbo.Department RIGHT OUTER JOIN
                      dbo.Employee ON dbo.Department.Department_id = dbo.Employee.Department__Department_id ON 
                      dbo.TIMES.Employee__employee_Id = dbo.Employee.Employee_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Quick_Work_Orders_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Quick_Work_Orders_List]
AS
SELECT     WORK_ORDERS_2.WORK_ORDERS_ID, WORK_ORDERS_2.WO_No AS [WO No], WORK_ORDERS_2.Total_Qty AS [Total Qty], 
                      WORK_ORDERS_2.Total_Production_Qty AS [Total Production Qty], WORK_ORDERS_2.Start_Date AS [Start Date], 
                      dbo.Sales_Order_Lines.Contract_No AS [Contract No], dbo.WO_STATUS.Wo_Status AS [Wo Status], dbo.Part.Part_No AS [Part No], dbo.Part.Description, 
                      WORK_ORDERS_2.Qty_Complete AS [Qty Complete], WORK_ORDERS_2.Released, WORK_ORDERS_2.Printed, 
                      WORK_ORDERS_2.Material_Released AS [Material Released], WORK_ORDERS_2.Date_Raised AS [Date Raised], 
                      WORK_ORDERS_2.Date_Required AS [Date Required], WORK_ORDERS_2.Date_Started AS [Date Started], WORK_ORDERS_1.WO_No AS [For WO No], 
                      dbo.CATEGORY.Category, dbo.Group_Code.Group_Code AS [Group Code], UDData_1.UDData_Data AS UserDefinable1, UDData_2.UDData_Data AS UserDefinable2, 
                      UDData_3.UDData_Data AS UserDefinable3, UDData_4.UDData_Data AS UserDefinable4, UDData_5.UDData_Data AS UserDefinable5, 
                      UDData_6.UDData_Data AS UserDefinable6, WORK_ORDERS_2.Ops_Scheduled AS [Ops Scheduled], dbo.COMPANYS.Company_No AS [Company No], 
                      dbo.COMPANYS.Name AS [SO Customer], WORK_ORDERS_2.Complete, WORK_ORDERS_2.Complete_Date AS [Complete Date], WORK_ORDERS_2.Cancelled, 
                      dbo.Employee.Name AS FAO, dbo.Sales_Order_Lines.Sales_Order_Lines_ID, dbo.INDUSTRY.Industry, 
                      dbo.SALES_ORDER_LINE_STATUS.Sales_Order_line_Status AS [SO Line Status], dbo.Sales_Order_Lines.Priority AS [SO Priority], 
                      WORK_ORDERS_2.Part_ID__Part_id AS Part_ID_Part, WORK_ORDERS_2.On_Hold AS [On Hold], WORK_ORDERS_1.wo_breadth AS Length, 
                      WORK_ORDERS_1.wo_length AS Breadth, dbo.Part.In_Stock AS [Part In Stock], dbo.Part.On_Order AS [Part On Order], dbo.Part.Required AS [Part Required], 
                      dbo.Part.Lead_Time AS [Lead Time], WORK_ORDERS_2.Scheduled_Complete_Date AS [Scheduled Complete Date], WORK_ORDERS_2.Priority, 
                      dbo.Part_Revision.Revision, WORK_ORDERS_2.Week_No AS [Week No], dbo.SALES_ORDERS.Customers_PO AS [Customers PO], 
                      dbo.Sales_Order_Lines.Qty_Delivered, dbo.Sales_Order_Lines.Qty_Returned, dbo.Sales_Order_Lines.CofC_Required, 
                      dbo.Sales_Order_Lines.Requested_Date AS [Requested Date], WORK_ORDERS_3.WO_No AS [Manufactured On]
FROM         dbo.UDData AS UDData_4 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_5 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_6 RIGHT OUTER JOIN
                      dbo.WORK_ORDERS AS WORK_ORDERS_2 LEFT OUTER JOIN
                      dbo.WORK_ORDERS AS WORK_ORDERS_3 ON 
                      WORK_ORDERS_2.Manufactured_on__WORK_ORDERS_ID = WORK_ORDERS_3.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Part_Revision ON WORK_ORDERS_2.Revision_Id__Revision_id = dbo.Part_Revision.Part_revision_Id LEFT OUTER JOIN
                      dbo.Employee ON WORK_ORDERS_2.For_Attention_Of_id = dbo.Employee.Employee_Id ON UDData_6.UDData_ID = WORK_ORDERS_2.UDF6__UDData_ID ON 
                      UDData_5.UDData_ID = WORK_ORDERS_2.UDF5__UDData_ID ON UDData_4.UDData_ID = WORK_ORDERS_2.UDF4__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_3 ON WORK_ORDERS_2.UDF3__UDData_ID = UDData_3.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON WORK_ORDERS_2.UDF2__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON WORK_ORDERS_2.UDF1__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.WORK_ORDERS AS WORK_ORDERS_1 ON WORK_ORDERS_2.For_Wo_Id = WORK_ORDERS_1.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.WO_STATUS ON WORK_ORDERS_2.Status__Wo_Status_Id = dbo.WO_STATUS.WO_status_Id LEFT OUTER JOIN
                      dbo.INDUSTRY RIGHT OUTER JOIN
                      dbo.SALES_ORDER_LINE_STATUS RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.SALES_ORDER_LINE_STATUS.Sales_order_line_Status_Id = dbo.Sales_Order_Lines.Status__Sales_Order_Line_Status_Id ON 
                      dbo.INDUSTRY.Industry_Id = dbo.Sales_Order_Lines.Industry__INDUSTRY_ID LEFT OUTER JOIN
                      dbo.SALES_ORDERS ON dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID = dbo.SALES_ORDERS.SALES_ORDERS_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.SALES_ORDERS.Customers_ID__Companys = dbo.COMPANYS.Company_Id ON 
                      WORK_ORDERS_2.So_Line_Id = dbo.Sales_Order_Lines.Sales_Order_Lines_ID LEFT OUTER JOIN
                      dbo.Part LEFT OUTER JOIN
                      dbo.Group_Code ON dbo.Part.Groupcode__Groupcode_id = dbo.Group_Code.Groupcode_Id LEFT OUTER JOIN
                      dbo.CATEGORY ON dbo.Group_Code.Category__category_id = dbo.CATEGORY.Category_Id ON WORK_ORDERS_2.Part_ID__Part_id = dbo.Part.Part_Id
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Quick_Work_Orders_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -192
         Left = 0
      End
      Begin Tables = 
         Begin Table = "UDData_2"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_3"
            Begin Extent = 
               Top = 6
               Left = 252
               Bottom = 125
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_4"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part_Revision"
            Begin Extent = 
               Top = 126
               Left = 252
               Bottom = 245
               Right = 468
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS_2"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 406
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 55
         End
         Begin Table = "Employee"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_6"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 214
            End
            ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Quick_Work_Orders_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Quick_Work_Orders_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_5"
            Begin Extent = 
               Top = 486
               Left = 252
               Bottom = 605
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_1"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS_1"
            Begin Extent = 
               Top = 726
               Left = 38
               Bottom = 845
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WO_STATUS"
            Begin Extent = 
               Top = 366
               Left = 305
               Bottom = 455
               Right = 465
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "INDUSTRY"
            Begin Extent = 
               Top = 606
               Left = 252
               Bottom = 725
               Right = 412
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDER_LINE_STATUS"
            Begin Extent = 
               Top = 846
               Left = 38
               Bottom = 965
               Right = 259
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines"
            Begin Extent = 
               Top = 966
               Left = 38
               Bottom = 1085
               Right = 320
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDERS"
            Begin Extent = 
               Top = 1086
               Left = 38
               Bottom = 1205
               Right = 282
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 1206
               Left = 38
               Bottom = 1325
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 1326
               Left = 38
               Bottom = 1445
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Group_Code"
            Begin Extent = 
               Top = 1446
               Left = 38
               Bottom = 1565
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "CATEGORY"
            Begin Extent = 
               Top = 846
               Left = 297
               Bottom = 965
               Right = 457
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS_3"
            Begin Extent = 
               Top = 388
               Left = 815
               Bottom = 507
               Right = 1096
            End
            DisplayFlags = 280
            TopColumn = 36
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         A' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Quick_Work_Orders_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane3' , N'SCHEMA',N'dbo', N'VIEW',N'Quick_Work_Orders_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane3', @value=N'lias = 900
         Table = 2895
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Quick_Work_Orders_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Quick_Work_Orders_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=3 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Quick_Work_Orders_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Issues_Required]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Issues_Required]
AS
SELECT     dbo.Allocations.Allocations_ID, dbo.Allocations.Date_Created AS [Date Created], dbo.Allocations.Date_Required AS [Date Required], Part_2.Part_No AS [Part No], 
                      Part_2.Description, Part_2.In_Stock AS [In Stock], Part_2.On_Order AS [On Order], Part_2.Part_Id, Part_2.Required, dbo.Part_type.Part_type AS [Part Type], 
                      dbo.WORK_ORDERS.WORK_ORDERS_ID, dbo.WORK_ORDERS.WO_No AS [WO No], Part_1.Part_No AS [WO Part  No], Part_1.Description AS [WO Part Description], 
                      Part_1.Cost AS [WO Part Cost / UOM], dbo.Group_Code.Group_Code AS [WO Part Groupcode], dbo.Allocations.Qty, dbo.Allocations.Qty_Complete AS [Qty Complete], 
                      dbo.Allocations.Qty_Processed AS [Qty Processed], dbo.Allocations.Total_Qty AS [Total Qty], dbo.Po_Lines.Po_Lines_ID, dbo.Purchase_Order.Po_No AS [On PO No], 
                      dbo.Allocations.Breadth, dbo.Allocations.Length, 
                      dbo.Allocations.Total_Qty / dbo.WORK_ORDERS.Total_Qty * dbo.WORK_ORDERS.Qty_Complete - dbo.Allocations.Qty_Complete AS [Qty Not Issued], 
                      dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete AS Outstanding, dbo.WO_STATUS.Wo_Status AS [WO Status], dbo.LOCATION.Location, 
                      dbo.COMPANYS.Name AS Customer, COMPANYS_1.Name AS [Preferred Supplier], Part_2.Uses_Stock, Group_Code_1.Group_Code
FROM         dbo.Purchase_Order RIGHT OUTER JOIN
                      dbo.Po_Lines ON dbo.Purchase_Order.Purchase_Order_ID = dbo.Po_Lines.Po__PO_ID RIGHT OUTER JOIN
                      dbo.WORK_ORDERS LEFT OUTER JOIN
                      dbo.Sales_Order_Lines LEFT OUTER JOIN
                      dbo.COMPANYS RIGHT OUTER JOIN
                      dbo.SALES_ORDERS ON dbo.COMPANYS.Company_Id = dbo.SALES_ORDERS.Customers_ID__Companys ON 
                      dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID = dbo.SALES_ORDERS.SALES_ORDERS_ID ON 
                      dbo.WORK_ORDERS.So_Line_Id = dbo.Sales_Order_Lines.Sales_Order_Lines_ID LEFT OUTER JOIN
                      dbo.Group_Code RIGHT OUTER JOIN
                      dbo.Part AS Part_1 ON dbo.Group_Code.Groupcode_Id = Part_1.Groupcode__Groupcode_id ON 
                      dbo.WORK_ORDERS.Part_ID__Part_id = Part_1.Part_Id RIGHT OUTER JOIN
                      dbo.Allocations ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Allocations.WO__Works_order_Id ON 
                      dbo.Po_Lines.Allocation__Allocations_ID = dbo.Allocations.Allocations_ID LEFT OUTER JOIN
                      dbo.LOCATION RIGHT OUTER JOIN
                      dbo.Group_Code AS Group_Code_1 RIGHT OUTER JOIN
                      dbo.Part AS Part_2 ON Group_Code_1.Groupcode_Id = Part_2.Groupcode__Groupcode_id LEFT OUTER JOIN
                      dbo.Part_type ON Part_2.Type__Part_Type_Id = dbo.Part_type.part_type_id LEFT OUTER JOIN
                      dbo.COMPANYS AS COMPANYS_1 RIGHT OUTER JOIN
                      dbo.Supplier_Part ON COMPANYS_1.Company_Id = dbo.Supplier_Part.Supplier__Companys_id ON Part_2.Part_Id = dbo.Supplier_Part.Part__Part_id AND 
                      Part_2.Supplier__Company_id = dbo.Supplier_Part.Supplier__Companys_id ON dbo.LOCATION.Location_id = Part_2.Preferred_Location__Location_id ON 
                      dbo.Allocations.Part__Part_Id = Part_2.Part_Id LEFT OUTER JOIN
                      dbo.WO_STATUS ON dbo.WORK_ORDERS.Status__Wo_Status_Id = dbo.WO_STATUS.WO_status_Id
WHERE     (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0) AND (dbo.Allocations.Confirmed <> 0) AND 
                      (dbo.Allocations.Qty_Complete < dbo.Allocations.Total_Qty) AND (dbo.Allocations.Type__Allocation_Type_Id <> 1) AND 
                      (dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete > 0) AND (Part_2.Uses_Stock = 1)
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Issues_Required', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -1035
         Left = 0
      End
      Begin Tables = 
         Begin Table = "WO_STATUS"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 95
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Purchase_Order"
            Begin Extent = 
               Top = 96
               Left = 38
               Bottom = 215
               Right = 341
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Po_Lines"
            Begin Extent = 
               Top = 216
               Left = 38
               Bottom = 335
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 336
               Left = 38
               Bottom = 455
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines"
            Begin Extent = 
               Top = 456
               Left = 38
               Bottom = 575
               Right = 320
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 576
               Left = 38
               Bottom = 695
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDERS"
            Begin Extent = 
               Top = 696
               Left = 38
               Bottom = 815
               Right = 282
            End
 ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Issues_Required'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Issues_Required', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'           DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Group_Code"
            Begin Extent = 
               Top = 809
               Left = 470
               Bottom = 928
               Right = 731
            End
            DisplayFlags = 280
            TopColumn = 6
         End
         Begin Table = "Part_1"
            Begin Extent = 
               Top = 936
               Left = 38
               Bottom = 1055
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 11
         End
         Begin Table = "Allocations"
            Begin Extent = 
               Top = 1056
               Left = 38
               Bottom = 1175
               Right = 301
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part_type"
            Begin Extent = 
               Top = 6
               Left = 236
               Bottom = 95
               Right = 396
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part_2"
            Begin Extent = 
               Top = 1176
               Left = 38
               Bottom = 1295
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 12
         End
         Begin Table = "COMPANYS_1"
            Begin Extent = 
               Top = 1296
               Left = 38
               Bottom = 1415
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Supplier_Part"
            Begin Extent = 
               Top = 1416
               Left = 38
               Bottom = 1535
               Right = 265
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "LOCATION"
            Begin Extent = 
               Top = 1536
               Left = 38
               Bottom = 1655
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Group_Code_1"
            Begin Extent = 
               Top = 1084
               Left = 458
               Bottom = 1304
               Right = 719
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 2130
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Issues_Required'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Issues_Required', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Issues_Required'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Drop_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Orders_Drop_list]
AS
SELECT     dbo.WORK_ORDERS.WORK_ORDERS_ID, dbo.WORK_ORDERS.WO_No AS [WO No], dbo.WORK_ORDERS.Total_Qty AS [Total Qty], 
                      dbo.WORK_ORDERS.Total_Production_Qty AS [Total Production Qty], dbo.WORK_ORDERS.Start_Date AS [Start Date], 
                      dbo.Sales_Order_Lines.Contract_No AS [Contract No], dbo.WO_STATUS.Wo_Status AS [Wo Status], dbo.Part.Part_No AS [Part No], 
                      dbo.Part.Description, dbo.WORK_ORDERS.Qty_Complete AS [Qty Complete], dbo.WORK_ORDERS.Released, dbo.WORK_ORDERS.Printed, 
                      dbo.WORK_ORDERS.Material_Released AS [Material Released], dbo.WORK_ORDERS.Date_Raised AS [Date Raised], 
                      dbo.WORK_ORDERS.Date_Required AS [Date Required], dbo.WORK_ORDERS.Date_Started AS [Date Started], 
                      WORK_ORDERS_1.WO_No AS [For WO No], dbo.Sales_Order_Lines.Sales_Order_Lines_ID, dbo.WORK_ORDERS.Complete, 
                      dbo.WORK_ORDERS.Cancelled, dbo.WORK_ORDERS.Part_ID__Part_id
FROM         dbo.WORK_ORDERS LEFT OUTER JOIN
                      dbo.WORK_ORDERS WORK_ORDERS_1 ON dbo.WORK_ORDERS.For_Wo_Id = WORK_ORDERS_1.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.WO_STATUS ON dbo.WORK_ORDERS.Status__Wo_Status_Id = dbo.WO_STATUS.WO_status_Id LEFT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.WORK_ORDERS.So_Line_Id = dbo.Sales_Order_Lines.Sales_Order_Lines_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.WORK_ORDERS.Part_ID__Part_id = dbo.Part.Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Active_Ops_Complete]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Active_Ops_Complete]
AS
SELECT     dbo.Wo_Route_SChedule.Wo_Route_SChedule_ID, dbo.Wo_Route_SChedule.Complete, dbo.Wo_Route_SChedule.Date_Complete AS [Date Complete], 
                      dbo.Wo_Route_SChedule.Do_Not_Use AS [Do Not Use], dbo.Wo_Route_SChedule.Last_Start_Date AS [Last Start Date], dbo.Wo_Route_SChedule.Priority, 
                      dbo.Wo_Route_SChedule.Qty_Complete AS [Qty Complete], dbo.Wo_Route_SChedule.Scheduled_Complete_date AS [Scheduled Complete date], 
                      dbo.Wo_Route_SChedule.Start_Date AS [Start Date], dbo.Wo_Route_SChedule.Actual_Run_Time AS [Actual Run Time], 
                      dbo.Wo_Route_SChedule.Actual_Setup_Time AS [Actual Setup Time], dbo.Wo_Route_SChedule.Conflict, dbo.Wo_Route_SChedule.Early, 
                      dbo.Wo_Route_SChedule.First_Start_Date AS [First Start Date], dbo.Wo_Route_SChedule.Last_End_Date AS [Last End Date], dbo.Wo_Route_SChedule.Late, 
                      dbo.Wo_Route_SChedule.Locked, dbo.Wo_Route_SChedule.Material_Arrival_Date AS [Materia _Arrival_Date], 
                      dbo.Wo_Route_SChedule.Per_Complete AS [Per Complete], dbo.Wo_Route_SChedule.Problems_Accepted AS [Problems Accepted], 
                      dbo.Wo_Route_SChedule.Requires_Material AS [Requires Material], dbo.Wo_Route_SChedule.Seq_No AS [Seq No], dbo.Wo_Route_SChedule.Started, 
                      dbo.Wo_Route_SChedule.Stopped, dbo.Wo_Route_SChedule.Use_Setup_Time AS [Use Setup Time], dbo.Wo_Route_SChedule.Setup_Time AS [Setup Time], 
                      dbo.Wo_Route_SChedule.Run_Time AS [Run Time], dbo.Wo_Route_SChedule.Inter_Op_Time AS [Inter Op Time], 
                      dbo.Wo_Route_SChedule.Date_Started AS [Date Started], dbo.WORK_ORDERS.WO_No AS [WO No], dbo.Sales_Order_Lines.Contract_No AS [Contract No], 
                      dbo.Route.Op_No AS [Op No], dbo.Route.Description AS [OP Description], dbo.Process.Process_Name AS Process, 
                      dbo.Route_versions.Version_Name AS [Route Version], dbo.Part.Part_No AS [Part No], dbo.Part.Description AS [Part Description], 
                      dbo.Work_Centre.WC_Name AS [WC Name], dbo.Work_Centre.Work_Centre_No AS [WC No], dbo.Wo_Route_SChedule.Cancelled, dbo.Route.Route_id, 
                      dbo.WORK_ORDERS.WORK_ORDERS_ID, dbo.Work_Centre.Work_Centre_id, dbo.Process.Process_Id, dbo.LOCATION.Location, 
                      dbo.WO_STATUS.Wo_Status AS [WO Status], dbo.WORK_ORDERS.Date_Required AS [WO Date Required], dbo.WORK_ORDERS.Date_Raised AS [WO Date Raised], 
                      dbo.Wo_Route_SChedule.Notes_Non_RTF AS Notes, dbo.WORK_ORDERS.On_Hold AS [WO On Hold], dbo.Sales_Order_Lines.On_Hold AS [Contract On Hold], 
                      dbo.WORK_ORDERS.Total_Qty AS Qty, dbo.COMPANYS.Name AS Customer, dbo.WORK_ORDERS.Estimated_Complete_Date AS [Estimated Complete Date], 
                      dbo.Wo_Route_SChedule.Display_Order AS [Display Order], dbo.Wo_Route_SChedule.Exists_On_Plan AS [Plan Exists], dbo.Wo_Route_SChedule.Grid_Sort_Order, 
                      dbo.Wo_Route_SChedule.Next_Op, dbo.Group_Code.Group_Code
FROM         dbo.LOCATION RIGHT OUTER JOIN
                      dbo.Group_Code RIGHT OUTER JOIN
                      dbo.Part ON dbo.Group_Code.Groupcode_Id = dbo.Part.Groupcode__Groupcode_id ON 
                      dbo.LOCATION.Location_id = dbo.Part.Preferred_Location__Location_id RIGHT OUTER JOIN
                      dbo.WO_STATUS RIGHT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.WO_STATUS.WO_status_Id = dbo.WORK_ORDERS.Status__Wo_Status_Id LEFT OUTER JOIN
                      dbo.Sales_Order_Lines LEFT OUTER JOIN
                      dbo.SALES_ORDERS LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.SALES_ORDERS.Customers_ID__Companys = dbo.COMPANYS.Company_Id ON 
                      dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID = dbo.SALES_ORDERS.SALES_ORDERS_ID ON 
                      dbo.WORK_ORDERS.So_Line_Id = dbo.Sales_Order_Lines.Sales_Order_Lines_ID ON dbo.Part.Part_Id = dbo.WORK_ORDERS.Part_ID__Part_id RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule LEFT OUTER JOIN
                      dbo.Work_Centre ON dbo.Wo_Route_SChedule.WorkCentre_ID = dbo.Work_Centre.Work_Centre_id ON 
                      dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Wo_Route_SChedule.WO_ID LEFT OUTER JOIN
                      dbo.Route_versions ON dbo.WORK_ORDERS.Route_versions_id = dbo.Route_versions.Route_Versions_id LEFT OUTER JOIN
                      dbo.Process RIGHT OUTER JOIN
                      dbo.Route ON dbo.Process.Process_Id = dbo.Route.Process__Process_id ON dbo.Wo_Route_SChedule.Route_Id = dbo.Route.Route_id
WHERE     (dbo.Wo_Route_SChedule.Do_Not_Use = 0)
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Active_Ops_Complete', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -576
         Left = 0
      End
      Begin Tables = 
         Begin Table = "WO_STATUS"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 95
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 96
               Left = 38
               Bottom = 215
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines"
            Begin Extent = 
               Top = 216
               Left = 38
               Bottom = 335
               Right = 320
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDERS"
            Begin Extent = 
               Top = 336
               Left = 38
               Bottom = 455
               Right = 282
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 456
               Left = 38
               Bottom = 575
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "LOCATION"
            Begin Extent = 
               Top = 576
               Left = 38
               Bottom = 695
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 696
               Left = 38
               Bottom = 815
               Right = 299
            End
            ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Active_Ops_Complete'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Active_Ops_Complete', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'DisplayFlags = 280
            TopColumn = 12
         End
         Begin Table = "Wo_Route_SChedule"
            Begin Extent = 
               Top = 816
               Left = 38
               Bottom = 935
               Right = 274
            End
            DisplayFlags = 280
            TopColumn = 54
         End
         Begin Table = "Work_Centre"
            Begin Extent = 
               Top = 936
               Left = 38
               Bottom = 1055
               Right = 239
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Route_versions"
            Begin Extent = 
               Top = 576
               Left = 285
               Bottom = 695
               Right = 468
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Process"
            Begin Extent = 
               Top = 1056
               Left = 38
               Bottom = 1175
               Right = 239
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Route"
            Begin Extent = 
               Top = 1176
               Left = 38
               Bottom = 1295
               Right = 298
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Group_Code"
            Begin Extent = 
               Top = 582
               Left = 506
               Bottom = 701
               Right = 767
            End
            DisplayFlags = 280
            TopColumn = 6
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Active_Ops_Complete'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Active_Ops_Complete', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Active_Ops_Complete'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Purchase_Order_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Purchase_Order_Drop_List]
AS
SELECT     dbo.Purchase_Order.Purchase_Order_ID, dbo.Purchase_Order.Date_Raised AS Date, dbo.Purchase_Order.Date_Sent AS [Date sent], 
                      dbo.Purchase_Order.Po_No AS [PO No], dbo.Purchase_Order.Reference, dbo.Purchase_Order.Internal_Notes_non_rtf AS [Internal Note], 
                      dbo.Purchase_Order.Supplier__COMPANYS_ID, dbo.Po_Type.PO_Type AS [PO Type], dbo.CONTACTS.Name AS Contact, 
                      dbo.Purchase_order_Status.Purchase_Order_Status AS Status, dbo.COMPANYS.Name AS Supplier
FROM         dbo.Purchase_Order LEFT OUTER JOIN
                      dbo.Po_Type ON dbo.Purchase_Order.Type__Po_Type_Id = dbo.Po_Type.Po_Type_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Purchase_Order.Supplier__COMPANYS_ID = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.Purchase_order_Status ON 
                      dbo.Purchase_Order.Status__Purchase_order_Status_Id = dbo.Purchase_order_Status.Purchase_order_StatuS_Id LEFT OUTER JOIN
                      dbo.CONTACTS ON dbo.Purchase_Order.Contact_id__CONTACTS_ID = dbo.CONTACTS.Contact_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Order_Main_Material]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Order_Main_Material]
AS
SELECT     dbo.Po_Lines.Wo__WORK_ORDERS_ID AS [WO ID], dbo.Bom.Main_Part__part_id AS [Main Part ID], dbo.Bom.Main_material, dbo.Part.Part_No AS [Main Mat Part No], 
                      dbo.Part.Description AS [[Main Mat Part Description], dbo.Bom.Qty AS [[Main Mat Qty Req], COMPANYS_1.Name AS [[Main Mat Preferred Supplier], 
                      dbo.Purchase_Order.Po_No AS [[Main Mat PO No], dbo.COMPANYS.Name AS [Main Mat Supplier], dbo.Po_Lines.Date_Required AS [[Main Mat Date Required], 
                      dbo.Po_Lines.Date_Promised AS [Main Mat Date Promised], dbo.Purchase_order_Status.Purchase_Order_Status AS [Main Mat PO Status], 
                      dbo.WORK_ORDERS.Part_ID__Part_id, dbo.WORK_ORDERS.For_Wo_Id
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Purchase_order_Status ON dbo.Po_Lines.Status__Purchase_Order_Status_id = dbo.Purchase_order_Status.Purchase_order_StatuS_Id INNER JOIN
                      dbo.Purchase_Order ON dbo.Po_Lines.Po__PO_ID = dbo.Purchase_Order.Purchase_Order_ID INNER JOIN
                      dbo.WORK_ORDERS ON dbo.Po_Lines.Wo__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID FULL OUTER JOIN
                      dbo.Part RIGHT OUTER JOIN
                      dbo.Bom ON dbo.Part.Part_Id = dbo.Bom.Bom_Part__part_id ON dbo.WORK_ORDERS.Part_ID__Part_id = dbo.Bom.Main_Part__part_id AND 
                      dbo.Po_Lines.Part__Part_id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Purchase_Order.Supplier__COMPANYS_ID = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.COMPANYS AS COMPANYS_1 ON dbo.Part.Supplier__Company_id = COMPANYS_1.Company_Id
WHERE     (dbo.Bom.Main_material = 1)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Distinct_Part_Trans_dates]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Distinct_Part_Trans_dates]
AS
SELECT DISTINCT Trans_Date AS Trans_Date, Part_ID
FROM         dbo.Part_Transaction_Dates
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_ManuReturn_Temp]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Actual_ManuReturn_Temp]
AS
SELECT     dbo.WO_RETURN.GRN__Grn_ID, dbo.WO_RETURN.ForWO__WORK_ORDERS_ID, dbo.Part.Type__Part_Type_Id
FROM         dbo.Part RIGHT OUTER JOIN
                      dbo.WO_RETURN ON dbo.Part.Part_Id = dbo.WO_RETURN.Part__Part_ID
WHERE     (dbo.Part.Type__Part_Type_Id = 1) OR
                      (dbo.Part.Type__Part_Type_Id = 2) OR
                      (dbo.Part.Type__Part_Type_Id = 3) OR
                      (dbo.Part.Type__Part_Type_Id = 6)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Job_Costing_Mat_Retn_Temp]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Job_Costing_Mat_Retn_Temp]
AS
SELECT     SUM(dbo.WO_RETURN.Qty * dbo.Stock.Cost) AS Tot_Ret_Val, dbo.WORK_ORDERS.So_Line_Id
FROM         dbo.WORK_ORDERS LEFT OUTER JOIN
                      dbo.Stock RIGHT OUTER JOIN
                      dbo.WO_RETURN ON dbo.Stock.Grn__Grn_id = dbo.WO_RETURN.GRN__Grn_ID ON 
                      dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.WO_RETURN.ForWO__WORK_ORDERS_ID
GROUP BY dbo.WORK_ORDERS.So_Line_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_SubReturn_Temp]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Actual_SubReturn_Temp]
AS
SELECT     dbo.WO_RETURN.GRN__Grn_ID, dbo.WO_RETURN.ForWO__WORK_ORDERS_ID
FROM         dbo.Part RIGHT OUTER JOIN
                      dbo.WO_RETURN ON dbo.Part.Part_Id = dbo.WO_RETURN.Part__Part_ID
WHERE     (dbo.Part.Type__Part_Type_Id = 3)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Return_Total]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Return_Total]
AS
SELECT     ForWO__WORK_ORDERS_ID, Part__Part_ID AS [Return Part], SUM(Receipt_Qty) AS [Return Qty]
FROM         dbo.WO_RETURN
GROUP BY ForWO__WORK_ORDERS_ID, Part__Part_ID
HAVING      (SUM(Receipt_Qty) > 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_RETURN_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_RETURN_List]
AS
SELECT     dbo.WO_RETURN.WO_RETURN_ID, dbo.WO_RETURN.ForWO__WORK_ORDERS_ID, dbo.Grn.Grn_No AS [Grn No], dbo.WO_RETURN.Qty, 
                      dbo.WO_RETURN.WO_Return_Date AS [WO Return Date], dbo.WORK_ORDERS.WO_No AS [WO No], dbo.Part.Part_No AS [Part No], 
                      dbo.Employee.Name AS Employee, dbo.WO_RETURN.Notes_Non_RTF AS Notes
FROM         dbo.Grn RIGHT OUTER JOIN
                      dbo.WO_RETURN LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.WO_RETURN.ForWO__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.WO_RETURN.WO_Return_From_Employee__Employee_id = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.Part ON dbo.WO_RETURN.Part__Part_ID = dbo.Part.Part_Id ON dbo.Grn.Grn_ID = dbo.WO_RETURN.GRN__Grn_ID
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'WO_RETURN_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[35] 2[6] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -96
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Grn"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 202
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WO_RETURN"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 338
            End
            DisplayFlags = 280
            TopColumn = 11
         End
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Employee"
            Begin Extent = 
               Top = 6
               Left = 240
               Bottom = 125
               Right = 469
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 10
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 3210
      ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_RETURN_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'WO_RETURN_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'   Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_RETURN_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'WO_RETURN_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_RETURN_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Return_Temp]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Actual_Return_Temp]
AS
SELECT     dbo.WO_RETURN.GRN__Grn_ID, dbo.WO_RETURN.ForWO__WORK_ORDERS_ID
FROM         dbo.Part RIGHT OUTER JOIN
                      dbo.WO_RETURN ON dbo.Part.Part_Id = dbo.WO_RETURN.Part__Part_ID
WHERE     (dbo.Part.Type__Part_Type_Id <> 1) AND (dbo.Part.Type__Part_Type_Id <> 3) AND (dbo.Part.Type__Part_Type_Id <> 9)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Time_Entry_Rates_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Time_Entry_Rates_List]
AS
SELECT     Code_id, Code_Ref, modified, modified_by, rate_1, rate_2, rate_3, rate_4, rate_5, rate_6
FROM         dbo.TIME_ENTRY_RATES
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[TIME_ENTRY_RATES_Drop_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[TIME_ENTRY_RATES_Drop_list]
AS
SELECT     dbo.TIME_ENTRY_RATES.*
FROM         dbo.TIME_ENTRY_RATES
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Activity_Control_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Activity_Control_List]
AS
SELECT     dbo.Activity_Control.Activity_Control_ID, dbo.Activity_Control.Description, dbo.Activity_Control.User_Id, dbo.Filters.Name AS Filter, dbo.Activity_Control.Form, 
                      dbo.Activity_Control.Red_Over, dbo.Activity_Control.Red_Under, dbo.Activity_Control.Report, dbo.Activity_Control.Filename, dbo.Activity_Control.Position
FROM         dbo.Activity_Control LEFT OUTER JOIN
                      dbo.Filters ON dbo.Activity_Control.Filter__Filters_ID = dbo.Filters.Filter_id
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Activity_Control_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Activity_Control"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 293
               Right = 221
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Filters"
            Begin Extent = 
               Top = 6
               Left = 259
               Bottom = 125
               Right = 436
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Activity_Control_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Activity_Control_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Activity_Control_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[DatePromised_Memo_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[DatePromised_Memo_Drop_List]
AS
SELECT     DatePromised_Memo_ID, Memo
FROM         dbo.DatePromised_Memo
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'DatePromised_Memo_Drop_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "DatePromised_Memo"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 178
               Right = 323
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 2985
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'DatePromised_Memo_Drop_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'DatePromised_Memo_Drop_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'DatePromised_Memo_Drop_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[DatePromised_Memo_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[DatePromised_Memo_list]
AS
SELECT     DatePromised_Memo_ID, Memo
FROM         dbo.DatePromised_Memo
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'DatePromised_Memo_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "DatePromised_Memo"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 244
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'DatePromised_Memo_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'DatePromised_Memo_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'DatePromised_Memo_list'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Ind_Pro_Charge_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Ind_Pro_Charge_List]
AS
SELECT     dbo.Ind_Pro_Charge.Ind_Pro_Charge_ID, dbo.INDUSTRY.Industry AS Industry, dbo.Process.Process_Name AS Process, dbo.Ind_Pro_Charge.Charge, 
                      dbo.Ind_Pro_Charge.Ind__INDUSTRY_ID, dbo.Ind_Pro_Charge.Pro__Process_ID
FROM         dbo.Ind_Pro_Charge LEFT OUTER JOIN
                      dbo.Process ON dbo.Ind_Pro_Charge.Pro__Process_ID = dbo.Process.Process_Id LEFT OUTER JOIN
                      dbo.INDUSTRY ON dbo.Ind_Pro_Charge.Ind__INDUSTRY_ID = dbo.INDUSTRY.Industry_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Manu_Temp]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Actual_Manu_Temp]
AS
SELECT     dbo.WO_ISSUE.WO_ISSUE_ID, dbo.WO_ISSUE.ForWO__WORK_ORDERS_ID
FROM         dbo.Part RIGHT OUTER JOIN
                      dbo.WO_ISSUE ON dbo.Part.Part_Id = dbo.WO_ISSUE.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Material_Temp]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Actual_Material_Temp]
AS
SELECT     dbo.WO_ISSUE.WO_ISSUE_ID, dbo.WO_ISSUE.ForWO__WORK_ORDERS_ID
FROM         dbo.Part RIGHT OUTER JOIN
                      dbo.WO_ISSUE ON dbo.Part.Part_Id = dbo.WO_ISSUE.Part__Part_Id
WHERE     (dbo.Part.Type__Part_Type_Id <> 3)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Total_Issues]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Total_Issues]
AS
SELECT     dbo.WO_ISSUE.WO_ISSUE_ID, dbo.WO_ISSUE.ForWO__WORK_ORDERS_ID, dbo.WO_ISSUE.Part__Part_Id, SUM(dbo.WO_ISSUE_STock.QLB) AS QLB, 
                      SUM(dbo.WO_ISSUE_STock.Qty_Returned) AS Qty_Returned, SUM((dbo.WO_ISSUE_STock.QLB - dbo.WO_ISSUE_STock.Qty_Returned) * dbo.Stock.Cost) 
                      AS Material_Cost
FROM         dbo.WO_ISSUE_STock INNER JOIN
                      dbo.WO_ISSUE ON dbo.WO_ISSUE_STock.Issue__WO_issue_id = dbo.WO_ISSUE.WO_ISSUE_ID INNER JOIN
                      dbo.Stock ON dbo.WO_ISSUE_STock.Stock__Stock_id = dbo.Stock.Stock_ID
GROUP BY dbo.WO_ISSUE.ForWO__WORK_ORDERS_ID, dbo.WO_ISSUE.Part__Part_Id, dbo.WO_ISSUE.WO_ISSUE_ID
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Total_Issues', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[21] 4[31] 2[4] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "WO_ISSUE_STock"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 216
               Right = 231
            End
            DisplayFlags = 280
            TopColumn = 1
         End
         Begin Table = "WO_ISSUE"
            Begin Extent = 
               Top = 6
               Left = 269
               Bottom = 216
               Right = 501
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Stock"
            Begin Extent = 
               Top = 6
               Left = 539
               Bottom = 125
               Right = 838
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Total_Issues'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Total_Issues', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Total_Issues'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WIP_Stock]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WIP_Stock]
AS
SELECT     dbo.WORK_ORDERS.WORK_ORDERS_ID, dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.Stock.Batch_no AS [Batch no], 
                      dbo.Stock.Cast_Heat_No AS [Cast Heat No], dbo.Stock.Cost, dbo.Stock.Serial_no AS [Serial no], dbo.WO_ISSUE.Issue_Date AS [Issue Date], 
                      dbo.WO_ISSUE_STock.Total_Qty AS [Qty Issued], dbo.WO_ISSUE_STock.Total_Length AS Length, dbo.WO_ISSUE_STock.Total_Breadth AS Breadth, 
                      dbo.WORK_ORDERS.WO_No AS [WO No], dbo.WORK_ORDERS.Status__Wo_Status_Id, dbo.WO_ISSUE_STock.Qty_Used AS [Qty Used], 
                      dbo.WO_ISSUE_STock.QLB - dbo.WO_ISSUE_STock.Qty_Used - dbo.WO_ISSUE_STock.Qty_Returned AS [Qty Remaining], dbo.Part.Part_Id AS [Part Id], 
                      dbo.WO_ISSUE_STock.Qty_Returned AS [Qty Returned]
FROM         dbo.Stock RIGHT OUTER JOIN
                      dbo.WORK_ORDERS RIGHT OUTER JOIN
                      dbo.WO_ISSUE ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.WO_ISSUE.ForWO__WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.WO_ISSUE_STock ON dbo.WO_ISSUE.WO_ISSUE_ID = dbo.WO_ISSUE_STock.Issue__WO_issue_id LEFT OUTER JOIN
                      dbo.Part ON dbo.WO_ISSUE.Part__Part_Id = dbo.Part.Part_Id ON dbo.Stock.Stock_ID = dbo.WO_ISSUE_STock.Stock__Stock_id
WHERE     (dbo.WORK_ORDERS.Status__Wo_Status_Id <> 5) AND (dbo.WORK_ORDERS.Status__Wo_Status_Id <> 6)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Issue_Total]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Issue_Total]
AS
SELECT     SUM(dbo.WO_ISSUE_STock.QLB) AS [Issued Qty], dbo.WO_ISSUE.Part__Part_Id AS [Issued Part], dbo.WO_ISSUE.ForWO__WORK_ORDERS_ID
FROM         dbo.WO_ISSUE_STock RIGHT OUTER JOIN
                      dbo.WO_ISSUE ON dbo.WO_ISSUE_STock.Issue__WO_issue_id = dbo.WO_ISSUE.WO_ISSUE_ID
GROUP BY dbo.WO_ISSUE.Part__Part_Id, dbo.WO_ISSUE.ForWO__WORK_ORDERS_ID, dbo.WO_ISSUE.Issue_Qty
HAVING      (SUM(dbo.WO_ISSUE_STock.QLB) > 0) AND (dbo.WO_ISSUE.Issue_Qty > 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Issue_Part_QTy]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Issue_Part_QTy]
AS
SELECT     ForWO__WORK_ORDERS_ID, SUM(Qty) AS Qty, Part__Part_Id
FROM         dbo.WO_ISSUE
GROUP BY ForWO__WORK_ORDERS_ID, Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Issues_WO]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Issues_WO]
AS
SELECT     dbo.WO_ISSUE_STock.Stock__Stock_id, dbo.WO_ISSUE_STock.Total_Qty AS Qty, dbo.WO_ISSUE_STock.Total_Length AS Length, 
                      dbo.WO_ISSUE_STock.Total_Breadth AS Breadth, dbo.WO_ISSUE_STock.QLB AS Total, dbo.Employee.Name AS [Issued By], 
                      dbo.WORK_ORDERS.WO_No AS [WO No], dbo.WO_ISSUE.Modified AS [Date Issued], dbo.WO_ISSUE.Notes_Non_RTF AS Notes, 
                      dbo.WO_ISSUE_STock.Qty_Used AS [Qty Used], dbo.WO_ISSUE_STock.Qty_Returned AS [Qty Returned]
FROM         dbo.WO_ISSUE_STock LEFT OUTER JOIN
                      dbo.WORK_ORDERS RIGHT OUTER JOIN
                      dbo.Employee RIGHT OUTER JOIN
                      dbo.WO_ISSUE ON dbo.Employee.Employee_Id = dbo.WO_ISSUE.Modified_By ON 
                      dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.WO_ISSUE.ForWO__WORK_ORDERS_ID ON 
                      dbo.WO_ISSUE_STock.Issue__WO_issue_id = dbo.WO_ISSUE.WO_ISSUE_ID
WHERE     (dbo.WO_ISSUE.Issue_Qty > 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WipTemp]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WipTemp]
AS
SELECT     dbo.WO_ISSUE.ForWO__WORK_ORDERS_ID, dbo.WO_ISSUE.Part__Part_Id, SUM(dbo.Stock.Cost * dbo.WO_ISSUE_STock.QLB) AS TotalCost, 
                      SUM(dbo.WO_ISSUE_STock.QLB) AS TotalQTY, dbo.Allocations.Bom_No__Bom_Id
FROM         dbo.WO_ISSUE LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.WO_ISSUE.ForWO__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Allocations ON dbo.WO_ISSUE.Part__Part_Id = dbo.Allocations.Part__Part_Id AND 
                      dbo.WO_ISSUE.ForWO__WORK_ORDERS_ID = dbo.Allocations.WO__Works_order_Id LEFT OUTER JOIN
                      dbo.Stock RIGHT OUTER JOIN
                      dbo.WO_ISSUE_STock ON dbo.Stock.Stock_ID = dbo.WO_ISSUE_STock.Stock__Stock_id ON 
                      dbo.WO_ISSUE.WO_ISSUE_ID = dbo.WO_ISSUE_STock.Issue__WO_issue_id
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WO_ISSUE.ForWO__WORK_ORDERS_ID, dbo.WO_ISSUE.Part__Part_Id, dbo.Allocations.Bom_No__Bom_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Job_Costing_Material_Temp]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Job_Costing_Material_Temp]
AS
SELECT     SUM(dbo.Stock.Cost * dbo.WO_ISSUE_STock.QLB) AS [Actual Total Mat], dbo.WORK_ORDERS.So_Line_Id
FROM         dbo.WO_ISSUE LEFT OUTER JOIN
                      dbo.Part ON dbo.WO_ISSUE.Part__Part_Id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.WO_ISSUE_STock ON dbo.WO_ISSUE.WO_ISSUE_ID = dbo.WO_ISSUE_STock.Issue__WO_issue_id RIGHT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.WO_ISSUE.ForWO__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Stock ON dbo.WO_ISSUE_STock.Stock__Stock_id = dbo.Stock.Stock_ID
WHERE     (dbo.Part.Type__Part_Type_Id <> 1) AND (dbo.Part.Type__Part_Type_Id <> 6)
GROUP BY dbo.WORK_ORDERS.So_Line_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_ISSUE_STock_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_ISSUE_STock_List]
AS
SELECT     dbo.WO_ISSUE_STock.WO_ISSUE_STock_ID, dbo.WO_ISSUE_STock.Issue__WO_issue_id, dbo.WO_ISSUE_STock.Total_Qty AS Qty, 
                      dbo.WO_ISSUE_STock.Total_Length AS Length, dbo.WO_ISSUE_STock.Total_Breadth AS Breadth, dbo.Part.Part_No AS [Part No.], dbo.Grn.Grn_No AS [Grn No.], 
                      dbo.Stock.Batch_no AS [Batch No.], dbo.Stock.Serial_no AS [Serial No.], dbo.Stock.Cast_Heat_No AS [Cast No.], dbo.WO_ISSUE.Issue_Date, dbo.Part.Description, 
                      dbo.Part.Part_Id, dbo.WO_ISSUE_STock.Stock__Stock_id, dbo.Stock.Cost, dbo.WO_ISSUE.Notes_Non_RTF AS Notes, dbo.WO_ISSUE_STock.Qty_Used AS [Qty Used], 
                      dbo.WO_ISSUE_STock.Qty_Returned AS [Qty Returned], dbo.WO_ISSUE.ForWO__WORK_ORDERS_ID, dbo.Stock.Original__Stock_ID, 
                      dbo.Part_Revision.Revision AS [WO Part  Revision No], dbo.Po_Lines.Drawing_Revision AS [PO Part  Revision No], dbo.LOCATION.Location, 
                      dbo.Stock.OriginalQty AS [Stock Qty], dbo.Stock.From_WO__WO_id AS [From WO ID], dbo.Stock.Part_Description_On_Receipt AS [Part Description]
FROM         dbo.Stock LEFT OUTER JOIN
                      dbo.LOCATION ON dbo.Stock.Location__location_id = dbo.LOCATION.Location_id LEFT OUTER JOIN
                      dbo.WORK_ORDERS LEFT OUTER JOIN
                      dbo.Part_Revision ON dbo.WORK_ORDERS.Revision_Id__Revision_id = dbo.Part_Revision.Part_revision_Id ON 
                      dbo.Stock.From_WO__WO_id = dbo.WORK_ORDERS.WORK_ORDERS_ID RIGHT OUTER JOIN
                      dbo.WO_ISSUE_STock LEFT OUTER JOIN
                      dbo.WO_ISSUE ON dbo.WO_ISSUE_STock.Issue__WO_issue_id = dbo.WO_ISSUE.WO_ISSUE_ID ON 
                      dbo.Stock.Stock_ID = dbo.WO_ISSUE_STock.Stock__Stock_id LEFT OUTER JOIN
                      dbo.Part ON dbo.Stock.Part__Part_Id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Grn ON dbo.Stock.Grn__Grn_id = dbo.Grn.Grn_ID LEFT OUTER JOIN
                      dbo.Po_Lines ON dbo.Stock.From_Po_Lines__Po_Lines_id = dbo.Po_Lines.Po_Lines_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Wo_Issue_Stock_Cost]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Wo_Issue_Stock_Cost]
AS
SELECT     dbo.WO_ISSUE.ForWO__WORK_ORDERS_ID, dbo.WO_ISSUE.Part__Part_Id, dbo.Stock.Cost
FROM         dbo.WO_ISSUE LEFT OUTER JOIN
                      dbo.WO_ISSUE_STock ON dbo.WO_ISSUE.WO_ISSUE_ID = dbo.WO_ISSUE_STock.Issue__WO_issue_id LEFT OUTER JOIN
                      dbo.Stock ON dbo.WO_ISSUE_STock.Stock__Stock_id = dbo.Stock.Stock_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Mat_Balance]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Mat_Balance]
AS
SELECT     dbo.WORK_ORDERS.WORK_ORDERS_ID, dbo.Part.Part_Id, dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.Stock.Batch_no AS [Batch no], 
                      dbo.Stock.Cast_Heat_No AS [Cast Heat], dbo.Stock.Serial_no AS [Serial no], dbo.Stock.Cost, dbo.WO_ISSUE.Issue_Date AS [Issue Date], 
                      dbo.WO_ISSUE_STock.Total_Qty AS [Qty Issued], dbo.WO_ISSUE_STock.Qty_Returned AS [Qty Returned], 
                      dbo.WO_ISSUE_STock.Total_Qty - dbo.WO_ISSUE_STock.Qty_Returned AS Balance, dbo.WO_ISSUE_STock.Total_Length AS Length, 
                      dbo.WO_ISSUE_STock.Total_Breadth AS Breadth, dbo.WORK_ORDERS.WO_No AS [WO No], dbo.Stock.Stock_ID, dbo.WO_ISSUE.WO_ISSUE_ID
FROM         dbo.WORK_ORDERS RIGHT OUTER JOIN
                      dbo.WO_ISSUE LEFT OUTER JOIN
                      dbo.Part ON dbo.WO_ISSUE.Part__Part_Id = dbo.Part.Part_Id ON 
                      dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.WO_ISSUE.ForWO__WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Stock RIGHT OUTER JOIN
                      dbo.WO_ISSUE_STock ON dbo.Stock.Stock_ID = dbo.WO_ISSUE_STock.Stock__Stock_id ON 
                      dbo.WO_ISSUE.WO_ISSUE_ID = dbo.WO_ISSUE_STock.Issue__WO_issue_id
WHERE     (dbo.WO_ISSUE_STock.Qty_Returned < dbo.WO_ISSUE_STock.QLB) AND (dbo.WO_ISSUE_STock.Total_Qty > 0) OR
                      (dbo.WO_ISSUE_STock.Qty_Returned IS NULL) AND (NOT (dbo.WO_ISSUE_STock.Total_Qty IS NULL))
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_SubCon_Temp]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Actual_SubCon_Temp]
AS
SELECT     dbo.WO_ISSUE.WO_ISSUE_ID, dbo.WO_ISSUE.ForWO__WORK_ORDERS_ID
FROM         dbo.Part RIGHT OUTER JOIN
                      dbo.WO_ISSUE ON dbo.Part.Part_Id = dbo.WO_ISSUE.Part__Part_Id
WHERE     (dbo.Part.Type__Part_Type_Id = 3)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Issues_RTWO]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Issues_RTWO]
AS
SELECT     dbo.Return_to_Wo_Stock.Stock__Stock_id, dbo.Return_to_Wo_Stock.Total_Qty AS Qty, dbo.Return_to_Wo_Stock.Total_Length AS Length, 
                      dbo.Return_to_Wo_Stock.Total_Breadth AS Breadth, dbo.Return_To_WO.Return_To_WO_ID, dbo.Return_To_WO.Return_Date AS [Date Issued], 
                      dbo.Employee.Name AS [Issued By], dbo.WORK_ORDERS.WO_No AS [WO No]
FROM         dbo.Employee RIGHT OUTER JOIN
                      dbo.Return_To_WO ON dbo.Employee.Employee_Id = dbo.Return_To_WO.Returned_By__Employee_id LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Return_To_WO.Wo_ID__Work_Orders_id = dbo.WORK_ORDERS.WORK_ORDERS_ID RIGHT OUTER JOIN
                      dbo.Return_to_Wo_Stock ON dbo.Return_To_WO.Return_To_WO_ID = dbo.Return_to_Wo_Stock.Issue__Return_to_WO_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Return_To_WO_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Return_To_WO_List]
AS
SELECT     dbo.Return_To_WO.Return_To_WO_ID, dbo.Return_To_WO.Qty, dbo.Return_To_WO.Return_Date AS Date, 
                      dbo.Return_To_WO.Wo_ID__Work_Orders_id, dbo.Part.Part_Id, dbo.Part.Part_No AS [Part No], dbo.Employee.Name AS [By Employee], 
                      dbo.WORK_ORDERS.WO_No AS [WO No]
FROM         dbo.Part RIGHT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Part.Part_Id = dbo.WORK_ORDERS.Part_ID__Part_id RIGHT OUTER JOIN
                      dbo.Return_To_WO ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Return_To_WO.Wo_ID__Work_Orders_id LEFT OUTER JOIN
                      dbo.Employee ON dbo.Return_To_WO.Returned_By__Employee_id = dbo.Employee.Employee_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Comodity_Codes_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_Comodity_Codes_list]
AS
SELECT     Part_Comodity_Codes_id, Comodity_Code AS [Commodity Code], Description
FROM         dbo.Part_Comodity_Codes
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Comodity_Codes_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_Comodity_Codes_Drop_List]
AS
SELECT     Part_Comodity_Codes_id, Comodity_Code AS [Comodity Code], Description
FROM         dbo.Part_Comodity_Codes
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Deleted_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_Deleted_list]
AS
SELECT     dbo.Part.Part_Id, dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.Part.Drawing_No AS [Drawing No], dbo.Part.Lead_Time AS [Lead Time], 
                      dbo.Part.In_Stock AS [In Stock], dbo.Part.On_Order AS [On Order], dbo.Part.Required, dbo.Part.Re_Order AS [Re Order], 
                      dbo.Part.Min_Order AS [Min Order], dbo.Part.Recomended_Order AS ROQ, dbo.Part.For_Sale AS [For Sale], dbo.Part.Fully_Planned AS [Fully Planned], 
                      dbo.Part_type.Part_type AS [Part Type], dbo.UOM.Unit_of_Measure AS UOM, dbo.Tracability.Tracabilty AS Traceabilty, 
                      dbo.Part_Status.Part_Status AS Status, dbo.CATEGORY.Category, dbo.Group_Code.Group_Code AS [Group Code], dbo.UOM.Area AS [Has Area], 
                      dbo.UOM.Length AS [Has Length], dbo.UOM.Non_Divisible AS [Non Divisible], UDData_6.UDData_Data AS UserDefinable6, 
                      UDData_5.UDData_Data AS UserDefinable5, UDData_4.UDData_Data AS UserDefinable4, UDData_3.UDData_Data AS UserDefinable3, 
                      UDData_2.UDData_Data AS UserDefinable2, UDData_1.UDData_Data AS UserDefinable1, dbo.Part.Released, 
                      dbo.Part.Purchase_Enquiry_Raised AS [Purchase Enquiry Raised], dbo.LOCATION.Location AS [Pref Location], dbo.Part.Cost, 
                      dbo.Part.Finnished_Weight AS [Finnished Weight], dbo.Part.In_Stock, dbo.Part.Notes_Non_RTF AS Notes, dbo.Part.Cost_Tonne AS [Cost/Tonne], 
                      dbo.Part.Deleted, dbo.Part.Status__Part_status_id, dbo.Part.Approved, Nominals_1.Nominal AS [Cost Nominal], 
                      Nominals_2.Nominal AS [Sales Nominal], dbo.Part_Comodity_Codes.Comodity_Code AS [Comodity Code], dbo.Part.Packing_Qty AS [Packing Qty], 
                      dbo.COMPANYS.Name AS [Preferred Supplier], dbo.Part_Revision.Revision
FROM         dbo.Part_type RIGHT OUTER JOIN
                      dbo.UDData UDData_2 RIGHT OUTER JOIN
                      dbo.UDData UDData_6 RIGHT OUTER JOIN
                      dbo.Nominals Nominals_2 RIGHT OUTER JOIN
                      dbo.Part LEFT OUTER JOIN
                      dbo.Part_Revision ON dbo.Part.Revision__revision_id = dbo.Part_Revision.Part_revision_Id LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Part.Supplier__Company_id = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.Part_Comodity_Codes ON dbo.Part.Comodity__Comodity_id = dbo.Part_Comodity_Codes.Part_Comodity_Codes_id LEFT OUTER JOIN
                      dbo.Nominals Nominals_1 ON dbo.Part.Cost_nom__Nominal_id = Nominals_1.Nominal_ID ON 
                      Nominals_2.Nominal_ID = dbo.Part.Sales_nom__Nominal_id LEFT OUTER JOIN
                      dbo.LOCATION ON dbo.Part.Preferred_Location__Location_id = dbo.LOCATION.Location_id ON 
                      UDData_6.UDData_ID = dbo.Part.UDF6__UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_5 ON dbo.Part.UDF5__UDData_ID = UDData_5.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_4 ON dbo.Part.UDF4__UDData_ID = UDData_4.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_3 ON dbo.Part.UDF3__UDData_ID = UDData_3.UDData_ID ON 
                      UDData_2.UDData_ID = dbo.Part.UDF2__UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_1 ON dbo.Part.UDF1__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.Group_Code LEFT OUTER JOIN
                      dbo.CATEGORY ON dbo.Group_Code.Category__category_id = dbo.CATEGORY.Category_Id ON 
                      dbo.Part.Groupcode__Groupcode_id = dbo.Group_Code.Groupcode_Id ON dbo.Part_type.part_type_id = dbo.Part.Type__Part_Type_Id LEFT OUTER JOIN
                      dbo.UOM ON dbo.Part.Unit_of_measure__Uom_id = dbo.UOM.UOM_ID LEFT OUTER JOIN
                      dbo.Tracability ON dbo.Part.Tracability = dbo.Tracability.Tracability_id LEFT OUTER JOIN
                      dbo.Part_Status ON dbo.Part.Status__Part_status_id = dbo.Part_Status.Part_Status_id
WHERE     (dbo.Part.Deleted = 1) 
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Messages_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[User_Messages_Drop_List]
AS
SELECT     User_Messages_ID, Title, Message
FROM         dbo.User_Messages
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Messages_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[User_Messages_List]
AS
SELECT     User_Messages_ID, Title, Message
FROM         dbo.User_Messages
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PO_Lines_History_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PO_Lines_History_list]
AS
SELECT     dbo.PO_Lines_History.*, dbo.Employee.Name AS [Modifiied By Employee], dbo.Part.Part_No
FROM         dbo.PO_Lines_History LEFT OUTER JOIN
                      dbo.Employee ON dbo.PO_Lines_History.Modified_By = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.Part ON dbo.PO_Lines_History.Part_ID = dbo.Part.Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Po_Line_Stock_Ids]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Po_Line_Stock_Ids]
AS
SELECT     dbo.Po_Receipt_Line.po_line__Po_Lines_ID, dbo.Stock.Stock_ID
FROM         dbo.Po_Receipt_Line LEFT OUTER JOIN
                      dbo.Stock ON dbo.Po_Receipt_Line.Grn_Id__Grn_ID = dbo.Stock.Grn__Grn_id
WHERE     (NOT (dbo.Stock.Stock_ID IS NULL))
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PO_Receipt_Line_Received]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PO_Receipt_Line_Received]
AS
SELECT     dbo.Po_Receipt.Po__Purchase_orders_ID AS [PO ID], MAX(dbo.Po_Receipt.Date_in) AS [Date Received], dbo.Po_Receipt_Line.po_line__Po_Lines_ID
FROM         dbo.Po_Receipt INNER JOIN
                      dbo.Po_Receipt_Line ON dbo.Po_Receipt.Po_Receipt_ID = dbo.Po_Receipt_Line.Po_Receipt__PO_Receipt_Id
WHERE     (dbo.Po_Receipt_Line.Qty > 0)
GROUP BY dbo.Po_Receipt.Po__Purchase_orders_ID, dbo.Po_Receipt_Line.po_line__Po_Lines_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Grn_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Grn_List]
AS
SELECT     dbo.Grn.Grn_ID, dbo.Grn.Grn_No AS [Grn No], dbo.Grn.[Date], dbo.Stock_Transaction_Type.Transaction_Type AS Type, dbo.Po_Receipt.Advice_No AS [Advice No], 
                      dbo.WORK_ORDERS.WO_No AS [WO No], dbo.Purchase_Order.Po_No AS [PO No], dbo.Grn.Qty, dbo.Employee.Name AS [Recieved By], dbo.Part.Part_No AS [Part No], 
                      dbo.Part.Description
FROM         dbo.Grn LEFT OUTER JOIN
                      dbo.Purchase_Order RIGHT OUTER JOIN
                      dbo.Po_Receipt ON dbo.Purchase_Order.Purchase_Order_ID = dbo.Po_Receipt.Po__Purchase_orders_ID RIGHT OUTER JOIN
                      dbo.Po_Receipt_Line ON dbo.Po_Receipt.Po_Receipt_ID = dbo.Po_Receipt_Line.Po_Receipt__PO_Receipt_Id ON 
                      dbo.Grn.Advice_id = dbo.Po_Receipt_Line.Po_Receipt_Line_ID LEFT OUTER JOIN
                      dbo.WORK_ORDERS RIGHT OUTER JOIN
                      dbo.Wo_Receipt ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Wo_Receipt.Wo__Work_Orders_id ON 
                      dbo.Grn.Wo_id = dbo.Wo_Receipt.Wo_Receipt_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.Grn.Part__Part_id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Employee ON dbo.Grn.Received_By = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.Stock_Transaction_Type ON dbo.Grn.Grn_Type = dbo.Stock_Transaction_Type.Stock_Transaction_Type_ID
WHERE     (dbo.Grn.Grn_No > ''""'')
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Return_To_supplier_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Return_To_supplier_Drop_List]
AS
SELECT     dbo.Return_to_supplier.Return_to_supplier_ID, dbo.COMPANYS.Name AS [To Company], dbo.Return_to_supplier.Return_Date AS [Return Date], 
                      dbo.Po_Receipt.Date_in AS [Date In], dbo.Return_to_supplier.Qty, dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.Employee.Name AS [By Employee], 
                      dbo.Purchase_Order.Po_No AS [PO No], dbo.Grn.Grn_No AS [GRN No], dbo.Return_to_supplier.Notes_Non_RTF AS Notes, dbo.Po_Receipt.Advice_No AS [Advice No], 
                      dbo.Return_to_supplier.Transaction_Qty AS [Transaction Qty]
FROM         dbo.Po_Receipt RIGHT OUTER JOIN
                      dbo.Po_Receipt_Line LEFT OUTER JOIN
                      dbo.Grn ON dbo.Po_Receipt_Line.Grn_Id__Grn_ID = dbo.Grn.Grn_ID ON 
                      dbo.Po_Receipt.Po_Receipt_ID = dbo.Po_Receipt_Line.Po_Receipt__PO_Receipt_Id RIGHT OUTER JOIN
                      dbo.Part RIGHT OUTER JOIN
                      dbo.Return_to_supplier ON dbo.Part.Part_Id = dbo.Return_to_supplier.Part__Part_id LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Return_to_supplier.Supplier__COMPANYS_ID = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.Employee ON dbo.Return_to_supplier.Returned_by = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.Purchase_Order ON dbo.Return_to_supplier.Po__Purchase_orders_ID = dbo.Purchase_Order.Purchase_Order_ID ON 
                      dbo.Po_Receipt_Line.Po_Receipt_Line_ID = dbo.Return_to_supplier.PO_receipt__Po_receipt_line_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Return_to_supplier_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Return_to_supplier_List]
AS
SELECT     dbo.Return_to_supplier.Return_to_supplier_ID, dbo.Return_to_supplier.Part__Part_id, dbo.Return_to_supplier.Qty, dbo.Return_to_supplier.Issue_Qty AS [Issue Qty], 
                      dbo.Return_to_supplier.Return_Date AS [Date], dbo.COMPANYS.Name AS [To Company], dbo.Employee.Name AS [By Employee], dbo.Part.Part_No AS [Part No], 
                      dbo.Return_to_supplier.Notes_Non_RTF AS Notes, dbo.Purchase_Order.Po_No AS [Po No], dbo.Po_Receipt.Advice_No AS [Advice No], 
                      dbo.Po_Receipt.Date_in AS [Date in], dbo.Grn.Grn_No AS [Grn No], dbo.Return_to_supplier.Transaction_Qty AS [Transaction Qty], 
                      UDData_1.UDData_Data AS UserDefinable1, UDData_2.UDData_Data AS UserDefinable2, UDData_3.UDData_Data AS UserDefinable3, 
                      UDData_4.UDData_Data AS UserDefinable4, UDData_5.UDData_Data AS UserDefinable5, UDData_6.UDData_Data AS UserDefinable6, 
                      dbo.Return_to_supplier.Complete
FROM         dbo.Employee RIGHT OUTER JOIN
                      dbo.UDData UDData_5 RIGHT OUTER JOIN
                      dbo.UDData UDData_6 RIGHT OUTER JOIN
                      dbo.Return_to_supplier ON UDData_6.UDData_ID = dbo.Return_to_supplier.UDF6__UDData_ID ON 
                      UDData_5.UDData_ID = dbo.Return_to_supplier.UDF5__UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_4 ON dbo.Return_to_supplier.UDF4__UDData_ID = UDData_4.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_3 ON dbo.Return_to_supplier.UDF3__UDData_ID = UDData_3.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_2 ON dbo.Return_to_supplier.UDF2__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_1 ON dbo.Return_to_supplier.UDF1__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.Grn RIGHT OUTER JOIN
                      dbo.Po_Receipt_Line ON dbo.Grn.Grn_ID = dbo.Po_Receipt_Line.Grn_Id__Grn_ID LEFT OUTER JOIN
                      dbo.Po_Receipt ON dbo.Po_Receipt_Line.Po_Receipt__PO_Receipt_Id = dbo.Po_Receipt.Po_Receipt_ID ON 
                      dbo.Return_to_supplier.PO_receipt__Po_receipt_line_id = dbo.Po_Receipt_Line.Po_Receipt_Line_ID LEFT OUTER JOIN
                      dbo.Purchase_Order ON dbo.Return_to_supplier.Po__Purchase_orders_ID = dbo.Purchase_Order.Purchase_Order_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.Return_to_supplier.Part__Part_id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Return_to_supplier.Supplier__COMPANYS_ID = dbo.COMPANYS.Company_Id ON 
                      dbo.Employee.Employee_Id = dbo.Return_to_supplier.Returned_by
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Po_Receipt_Line_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Po_Receipt_Line_Drop_List]
AS
SELECT     dbo.Po_Receipt_Line.Po_Receipt_Line_ID, dbo.Grn.Grn_No AS [Grn No], dbo.Grn.[Date], dbo.Po_Receipt_Line.Cost, dbo.Part.Part_No AS [Part No], 
                      dbo.Po_Receipt_Line.Qty, dbo.Po_Receipt_Line.Qty_Invoiced AS [Qty Invoiced], dbo.Po_Receipt_Line.Qty_Returned AS [Qty Returned], 
                      dbo.Part.Description, dbo.Po_Receipt_Line.Po_Receipt__PO_Receipt_Id, dbo.Po_Lines.Po__PO_ID, dbo.Po_Receipt.Advice_No, 
                      dbo.Po_Receipt_Line.po_line__Po_Lines_ID, dbo.Po_Lines.Item_No AS [PO Line Item No]
FROM         dbo.Po_Receipt RIGHT OUTER JOIN
                      dbo.Po_Receipt_Line ON dbo.Po_Receipt.Po_Receipt_ID = dbo.Po_Receipt_Line.Po_Receipt__PO_Receipt_Id LEFT OUTER JOIN
                      dbo.Part RIGHT OUTER JOIN
                      dbo.Po_Lines ON dbo.Part.Part_Id = dbo.Po_Lines.Part__Part_id ON 
                      dbo.Po_Receipt_Line.po_line__Po_Lines_ID = dbo.Po_Lines.Po_Lines_ID LEFT OUTER JOIN
                      dbo.Grn ON dbo.Po_Receipt_Line.Grn_Id__Grn_ID = dbo.Grn.Grn_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Po_Receipt_Line_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Po_Receipt_Line_List]
AS
SELECT     dbo.Po_Receipt_Line.Po_Receipt_Line_ID, dbo.Grn.Grn_No AS [Grn No], dbo.Grn.[Date], dbo.Po_Receipt_Line.Cost, dbo.Po_Receipt_Line.Qty, 
                      dbo.Po_Receipt_Line.Qty_Invoiced AS [Qty Invoiced], dbo.Po_Receipt_Line.Qty_Returned AS [Qty Returned], dbo.Po_Receipt_Line.Po_Receipt__PO_Receipt_Id, 
                      dbo.WORK_ORDERS.WO_No AS [For Wo No], dbo.Po_Lines.Date_Added AS [Date Added], dbo.Po_Lines.Date_Promised AS [Date Promised], 
                      dbo.Po_Lines.Date_Required AS [Date Required], dbo.Po_Lines.Total_Qty AS [Qty Ordered], dbo.Po_Lines.Qty_Delivered AS [Qty Delivered], 
                      dbo.Po_Lines.Description_Non_Rtf AS Description, dbo.Po_Receipt_Line.[Value], dbo.Po_Lines.Item_No AS [PO Line Item No], 
                      dbo.Supplier_Part.Supplier_Part_No AS [Supplier Part No], dbo.Po_Lines.Breadth_Ordered AS [Breadth Ordered], dbo.Po_Lines.Length_Ordered AS [Length Ordered], 
                      dbo.Po_Lines.Price_Per_Tonne AS [Price Per Tonne], dbo.Group_Code.Group_Code AS [Group Code], dbo.Po_Receipt_Line.Complete_PO_Line AS Complete, 
                      dbo.Po_Lines.Po_Lines_ID, dbo.Part.Part_No AS [Part No], dbo.Shipped_Direct.Direct AS [Shipped Direct], dbo.Inspection_Result.Result AS [Inspection Result], 
                      dbo.Non_Conformance.Non_Conformance_No AS [NC No], dbo.Employee.Name AS [Inspected By], 
                      dbo.SubContract_Delivery.SubContract_Delivery_ID AS [Consignment No], dbo.Po_Receipt_Line.Inspection_Details AS [Inspection Details]
FROM         dbo.WORK_ORDERS RIGHT OUTER JOIN
                      dbo.Purchase_Order LEFT OUTER JOIN
                      dbo.Supplier_Part ON dbo.Purchase_Order.Supplier__COMPANYS_ID = dbo.Supplier_Part.Supplier__Companys_id RIGHT OUTER JOIN
                      dbo.Po_Lines ON dbo.Purchase_Order.Purchase_Order_ID = dbo.Po_Lines.Po__PO_ID AND 
                      dbo.Supplier_Part.Part__Part_id = dbo.Po_Lines.Part__Part_id RIGHT OUTER JOIN
                      dbo.Part LEFT OUTER JOIN
                      dbo.Group_Code ON dbo.Part.Groupcode__Groupcode_id = dbo.Group_Code.Groupcode_Id ON dbo.Po_Lines.Part__Part_id = dbo.Part.Part_Id ON 
                      dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Po_Lines.Wo__WORK_ORDERS_ID RIGHT OUTER JOIN
                      dbo.Inspection_Result RIGHT OUTER JOIN
                      dbo.Po_Receipt_Line ON dbo.Inspection_Result.Inspection_Result_ID = dbo.Po_Receipt_Line.Result__Inspection_Result_ID LEFT OUTER JOIN
                      dbo.SubContract_Delivery ON dbo.Po_Receipt_Line.POR__SubContract_Delivery_ID = dbo.SubContract_Delivery.SubContract_Delivery_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.Po_Receipt_Line.Inspected__Employee_ID = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.Non_Conformance ON dbo.Po_Receipt_Line.Insp__Non_Conformance_ID = dbo.Non_Conformance.Non_Conformance_ID LEFT OUTER JOIN
                      dbo.Shipped_Direct ON dbo.Po_Receipt_Line.Direct__Shipped_Direct_ID = dbo.Shipped_Direct.Shipped_Direct_ID ON 
                      dbo.Po_Lines.Po_Lines_ID = dbo.Po_Receipt_Line.po_line__Po_Lines_ID LEFT OUTER JOIN
                      dbo.Grn ON dbo.Po_Receipt_Line.Grn_Id__Grn_ID = dbo.Grn.Grn_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W2]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W2]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W2
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_2_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_2_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W12]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W12]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W12
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_12_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_12_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W6]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W6]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W6
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_6_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_6_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W3]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W3]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W3
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_3_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_3_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W8]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W8]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W8
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_8_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_8_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W26]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W26]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W26
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_26_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_26_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W19]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W19]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W19
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_19_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_19_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W24]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W24]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W24
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_24_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_24_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W18]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W18]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W18
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_18_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_18_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W25]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W25]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W25
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_25_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_25_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W21]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W21]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W21
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_21_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_21_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W23]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W23]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W23
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_23_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_23_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W4]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W4]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W4
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_4_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_4_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W10]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W10]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W10
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_10_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_10_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W15]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W15]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W15
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_15_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_15_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W5]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W5]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W5
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_5_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_5_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W13]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W13]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W13
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_13_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_13_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W1]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W1]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W1
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_1_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W9]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W9]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W9
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_9_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_9_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W20]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W20]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W20
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_20_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_20_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W2]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W2]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W2
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_2_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_2_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W17]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W17]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W17
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_17_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_17_End
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W19]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W19]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W19
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_19_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_19_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W20]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W20]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W20
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_20_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_20_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W16]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W16]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W16
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_16_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_16_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W7]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W7]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W7
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_7_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_7_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W14]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W14]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W14
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_14_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_14_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W17]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W17]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W17
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_17_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_17_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W11]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W11]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W11
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_11_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_11_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WR_W22]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WR_W22]
AS
SELECT     dbo.Allocations.Part__Part_Id, SUM(dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete) AS W22
FROM         dbo.Allocations INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Allocations.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_22_Start AND 
                      dbo.Allocations.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_22_End
WHERE     (NOT (dbo.Allocations.Date_Required IS NULL)) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Complete = 0)
GROUP BY dbo.Allocations.Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W10]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W10]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W10
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_10_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_10_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W24]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W24]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W24
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_24_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_24_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W26]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W26]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W26
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_26_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_26_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W22]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W22]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W22
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_22_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_22_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W13]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W13]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W13
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_13_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_13_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W4]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W4]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W4
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_4_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_4_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W23]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W23]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W23
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_23_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_23_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W5]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W5]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W5
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_5_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_5_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W8]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W8]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W8
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_8_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_8_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W12]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W12]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W12
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_12_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_12_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W3]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W3]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W3
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_3_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_3_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W11]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W11]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W11
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_11_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_11_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W15]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W15]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W15
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_15_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_15_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W2]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W2]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W2
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_2_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_2_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W18]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W18]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W18
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_18_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_18_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W16]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W16]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W16
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_16_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_16_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W15]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W15]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W15
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_15_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_15_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W21]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W21]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W21
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_21_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_21_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W7]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W7]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W7
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_7_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_7_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W6]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W6]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W6
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_6_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_6_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W14]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W14]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W14
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_14_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_14_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W25]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W25]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W25
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_25_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_25_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W4]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W4]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W4
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_4_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_4_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W3]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W3]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W3
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_3_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_3_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W25]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W25]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W25
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_25_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_25_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W23]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W23]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W23
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_23_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_23_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W24]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W24]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W24
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_24_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_24_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W20]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W20]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W20
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_20_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_20_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W9]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W9]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W9
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_9_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_9_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W14]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W14]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W14
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_14_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_14_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W6]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W6]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W6
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_6_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_6_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W1]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W1]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W1
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_1_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W5]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W5]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W5
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_5_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_5_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W21]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W21]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W21
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_21_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_21_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W10]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W10]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W10
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_10_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_10_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W9]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W9]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W9
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_9_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_9_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W8]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W8]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W8
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_8_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_8_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W22]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W22]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W22
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_22_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_22_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W13]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W13]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W13
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_13_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_13_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W19]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W19]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W19
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_19_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_19_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W17]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W17]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W17
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_17_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_17_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W11]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W11]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W11
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_11_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_11_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W12]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W12]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W12
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_12_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_12_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W26]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W26]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W26
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_26_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_26_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W16]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W16]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W16
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_16_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_16_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_WO_W18]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_WO_W18]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id, SUM(dbo.WORK_ORDERS.Total_Qty - dbo.WORK_ORDERS.Qty_Complete) AS W18
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.WORK_ORDERS.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_18_Start AND 
                      dbo.WORK_ORDERS.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_18_End
WHERE     (dbo.WORK_ORDERS.Cancelled = 0) AND (dbo.WORK_ORDERS.Complete = 0)
GROUP BY dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W1]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W1]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W1
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_1_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PLWWB_PO_W7]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PLWWB_PO_W7]
AS
SELECT     dbo.Po_Lines.Part__Part_id, SUM(dbo.Po_Lines.Total_Qty - dbo.Po_Lines.Qty_Delivered) AS W7
FROM         dbo.Po_Lines INNER JOIN
                      dbo.Part_List_With_Weekly_Balances_Dates ON dbo.Po_Lines.Date_Required >= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_7_Start AND 
                      dbo.Po_Lines.Date_Required <= dbo.Part_List_With_Weekly_Balances_Dates.WEEK_7_End
WHERE     (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0)
GROUP BY dbo.Po_Lines.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Ind_WC_Charge_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Ind_WC_Charge_List]
AS
SELECT     dbo.Ind_WC_Charge.Ind_WC_Charge_ID, dbo.INDUSTRY.Industry, dbo.Work_Centre.WC_Name, dbo.Ind_WC_Charge.Charge, 
                      dbo.Ind_WC_Charge.Ind__INDUSTRY_ID, dbo.Ind_WC_Charge.WC__Work_Centre_ID
FROM         dbo.Work_Centre RIGHT OUTER JOIN
                      dbo.Ind_WC_Charge ON dbo.Work_Centre.Work_Centre_id = dbo.Ind_WC_Charge.WC__Work_Centre_ID LEFT OUTER JOIN
                      dbo.INDUSTRY ON dbo.Ind_WC_Charge.Ind__INDUSTRY_ID = dbo.INDUSTRY.Industry_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Calendar_Exceptions_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Calendar_Exceptions_List]
AS
SELECT     dbo.Calendar_Exceptions.Calendar_Exceptions_ID, dbo.Calendar_Exceptions.Calendar__Calendar_id, dbo.Calendar_Exceptions.Description, 
                      dbo.Calendar_Exceptions.Exception_Date AS [Exception Date], dbo.Calendar_Exceptions.Start, dbo.Calendar_Exceptions.Finish, 
                      dbo.Calendar_Exceptions.Non_Working AS [Non Working], dbo.Calendar_Exceptions.All_Calendars AS [All Calendars], 
                      dbo.Calendar_Exception_type.Exception_type AS [Exception Type], dbo.Calendar_Exceptions.Pro__Process_ID, dbo.Calendar_Exceptions.WC__Work_Centre_ID, 
                      dbo.Calendar_Exceptions.Total_Hours AS [Total Hours], dbo.Days_of_Week.[Day], dbo.Calendar_Exceptions.Efficiency
FROM         dbo.Calendar_Exceptions LEFT OUTER JOIN
                      dbo.Days_of_Week ON dbo.Calendar_Exceptions.Day_Of_Week = dbo.Days_of_Week.Days_of_Week_ID LEFT OUTER JOIN
                      dbo.Calendar_Exception_type ON dbo.Calendar_Exceptions.Type__Calendar_Exception_type_ID = dbo.Calendar_Exception_type.Calendar_Exception_type_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Shift_Patterns_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Shift_Patterns_List]
AS
SELECT     dbo.Shift_Patterns.Shift_Patterns_ID, dbo.Shift_Patterns.Shifts__Shift_Id, dbo.Shift_Patterns.Start_Time AS [Start Time], 
                      dbo.Shift_Patterns.End_Time AS [End Time], dbo.Pay_Rates.Rate_Caption AS [Rate Caption], dbo.Shifts.Shift, dbo.Days_of_Week.[Day]
FROM         dbo.Shift_Patterns LEFT OUTER JOIN
                      dbo.Days_of_Week ON dbo.Shift_Patterns.Days_of_Week__Day_ID = dbo.Days_of_Week.Days_of_Week_ID LEFT OUTER JOIN
                      dbo.Pay_Rates ON dbo.Shift_Patterns.Rate__Pay_Rates_ID = dbo.Pay_Rates.Pay_Rates_ID LEFT OUTER JOIN
                      dbo.Shifts ON dbo.Shift_Patterns.Shifts__Shift_Id = dbo.Shifts.Shift_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Calendar_Records_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Calendar_Records_List]
AS
SELECT     dbo.Calendar_Records.Calendar_Records_ID, dbo.Days_of_Week.[Day], dbo.Calendar_Records.Start, dbo.Calendar_Records.Finish, 
                      dbo.Calendar_Records.Total_Hours, dbo.Calendar_Records.Efficiency, dbo.Calendar_Records.Day_Of_Week, dbo.Calendar_Records.non_working AS [Non Working], 
                      dbo.Calendar_Records.Calendar__Calendar_ID, dbo.Calendar_Records.Modified, dbo.Days_of_Week.Days_of_Week_ID
FROM         dbo.Calendar_Records LEFT OUTER JOIN
                      dbo.Days_of_Week ON dbo.Calendar_Records.Day_Of_Week = dbo.Days_of_Week.Days_of_Week_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Payment_method_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Payment_method_Drop_List]
AS
SELECT     Payment_Method_ID, Payment_Method AS [Payment Method]
FROM         dbo.Payment_Method
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Payment_method_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Payment_method_List]
AS
SELECT     Payment_Method_ID, Payment_Method AS [Payment Method]
FROM         dbo.Payment_Method
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Invoice_Payment_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Invoice_Payment_List]
AS
SELECT     dbo.Invoice_Payment.Invoice_Payment_ID, dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name AS Compnay, 
                      dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, dbo.Invoice_Payment.Date_Received AS [Date Received], dbo.Invoice_Payment.Posted, 
                      dbo.Invoice_Payment.Total, dbo.Invoice_Payment.Currency_Total AS [Currency Total], dbo.Invoice_Payment.Outstanding, 
                      dbo.Invoice_Payment.Currency_Outstanding AS [Currency Outstanding], dbo.Invoice_Payment.Company__COMPANYS_ID, 
                      dbo.Invoice_Payment.Reference, dbo.Payment_Method.Payment_Method AS [Payment By], dbo.Invoice_Payment.Discount, 
                      dbo.Invoice_Payment.Bank_Charge AS [Bank Charge]
FROM         dbo.Invoice_Payment LEFT OUTER JOIN
                      dbo.Payment_Method ON dbo.Invoice_Payment.Method__Payment_Method_ID = dbo.Payment_Method.Payment_Method_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Invoice_Payment.Company__COMPANYS_ID = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.MULTICURRENCY ON dbo.Invoice_Payment.Currency__MULTICURRENCY_ID = dbo.MULTICURRENCY.MultiCurrency_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Bill_Payment_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Bill_Payment_List]
AS
SELECT     dbo.Bill_Payment.Bill_Payment_ID, dbo.COMPANYS.SupplierAccNo AS AccNo, dbo.Bill_Payment.Payment_Date AS [Date], 
                      dbo.COMPANYS.Name AS Company, dbo.COMPANYS.Address1, dbo.COMPANYS.Address2, dbo.COMPANYS.Address3, 
                      dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, dbo.Bill_Payment.Currency_Total AS Total, 
                      dbo.Bill_Payment.Bank_Charge AS [Bank Charge], dbo.Bill_Payment.Posted, dbo.Bill_Payment.Cheque_No AS Reference, 
                      dbo.Bill_Payment.Payment_Sent AS [Payment Sent], dbo.Bill_Payment.Company__COMPANYS_ID, 
                      dbo.Payment_Method.Payment_Method AS [Payment By]
FROM         dbo.Bill_Payment LEFT OUTER JOIN
                      dbo.Payment_Method ON dbo.Bill_Payment.Method__Payment_Method_ID = dbo.Payment_Method.Payment_Method_ID LEFT OUTER JOIN
                      dbo.MULTICURRENCY ON dbo.Bill_Payment.Currency__MULTICURRENCY_ID = dbo.MULTICURRENCY.MultiCurrency_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Bill_Payment.Company__COMPANYS_ID = dbo.COMPANYS.Company_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[View_1]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[View_1]
AS
SELECT Sales_Orders_UD_ID, Modified, Modified_By, Data, Field
FROM  dbo.Sales_Orders_UD
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_Orders_UD_Drop_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Sales_Orders_UD_Drop_list]
AS
SELECT Data, Sales_Orders_UD_ID, Field
FROM  dbo.Sales_Orders_UD
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_Orders_UD_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Sales_Orders_UD_list]
AS
SELECT     Sales_Orders_UD_ID, Data
FROM         dbo.Sales_Orders_UD
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Sales_Orders_UD_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Sales_Orders_UD"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 168
               Right = 228
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Sales_Orders_UD_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Sales_Orders_UD_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Sales_Orders_UD_list'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SO_Delivery_Schedule_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[SO_Delivery_Schedule_Drop_List]
AS
SELECT     dbo.SO_Delivery_Schedule.SO_Delivery_Schedule_ID, dbo.SO_Delivery_Schedule.Delivery_Date AS [Delivery Date], 
                      dbo.SO_Delivery_Schedule.Dispatch_Date AS [Dispatch Date], dbo.SO_Delivery_Schedule.created, dbo.Employee.Name AS [Created By], 
                      dbo.SO_Delivery_Schedule.Firm, dbo.SO_Delivery_Schedule.Qty, dbo.SO_Delivery_Schedule.Qty_Delivered AS [Qty Delivered], 
                      dbo.SO_Delivery_Schedule.Qty_Processed AS [Qty Processed], dbo.SO_Delivery_Schedule.Qty_Returned AS [Qty Returned], 
                      dbo.SO_Delivery_Schedule.Reference, dbo.SO_Delivery_Schedule.Requested_Date AS [Requested Date], 
                      dbo.SO_Delivery_Schedule.Sales_Order_Lines_id, dbo.Sales_Order_Lines.Contract_No AS [Contract No], 
                      dbo.SALES_ORDERS.Sales_No AS [Sales No], dbo.SALES_ORDERS.Customers_ID__Companys, dbo.COMPANYS.Company_No AS [Company No], 
                      dbo.COMPANYS.Name AS Customer, dbo.Part.Part_No AS [Part No]
FROM         dbo.Part RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.Part.Part_Id = dbo.Sales_Order_Lines.Part_Id__Part_Id LEFT OUTER JOIN
                      dbo.SALES_ORDERS LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.SALES_ORDERS.Customers_ID__Companys = dbo.COMPANYS.Company_Id ON 
                      dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID = dbo.SALES_ORDERS.SALES_ORDERS_ID RIGHT OUTER JOIN
                      dbo.SO_Delivery_Schedule ON dbo.Sales_Order_Lines.Sales_Order_Lines_ID = dbo.SO_Delivery_Schedule.Sales_Order_Lines_id LEFT OUTER JOIN
                      dbo.Employee ON dbo.SO_Delivery_Schedule.created_by = dbo.Employee.Employee_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SO_Delivery_Schedule_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[SO_Delivery_Schedule_List]
AS
SELECT     dbo.SO_Delivery_Schedule.SO_Delivery_Schedule_ID, dbo.SO_Delivery_Schedule.Delivery_Date AS [Delivery Date], 
                      dbo.SO_Delivery_Schedule.Dispatch_Date AS [Dispatch Date], dbo.SO_Delivery_Schedule.created, dbo.Employee.Name AS [Created By], 
                      dbo.SO_Delivery_Schedule.Firm, dbo.SO_Delivery_Schedule.Qty, dbo.SO_Delivery_Schedule.Qty_Delivered AS [Qty Delivered], 
                      dbo.SO_Delivery_Schedule.Qty_Processed AS [Qty Processed], dbo.SO_Delivery_Schedule.Qty_Returned AS [Qty Returned], dbo.SO_Delivery_Schedule.Reference, 
                      dbo.SO_Delivery_Schedule.Requested_Date AS [Requested Date], dbo.SO_Delivery_Schedule.Sales_Order_Lines_id, 
                      dbo.Sales_Order_Lines.Contract_No AS [Contract No], dbo.SALES_ORDERS.Sales_No AS [Sales No], dbo.SALES_ORDERS.Customers_ID__Companys, 
                      dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name AS Customer, dbo.Part.Part_No AS [Part No], 
                      dbo.SALES_ORDERS.Notes_non_rtf AS [SO Notes], dbo.SALES_ORDERS.Internal_Notes_Non_RTF AS [SO Internal Notes], 
                      dbo.Sales_Order_Lines.Notes_non_rtf AS [Line Notes], dbo.SO_Delivery_Schedule.Scheduled_Complete_Date AS [Scheduled Complete Date], 
                      dbo.SALES_ORDERS.Customers_Order_date AS [Customers Orde Date], 
                      dbo.SO_Delivery_Schedule.Qty - (dbo.SO_Delivery_Schedule.Qty_Delivered - dbo.SO_Delivery_Schedule.Qty_Returned) AS [Qty Outstanding], 
                      dbo.SO_Delivery_Schedule.Grid_Sort_Order, dbo.Sales_Order_Lines.Direct_PO
FROM         dbo.Part RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.Part.Part_Id = dbo.Sales_Order_Lines.Part_Id__Part_Id LEFT OUTER JOIN
                      dbo.SALES_ORDERS LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.SALES_ORDERS.Customers_ID__Companys = dbo.COMPANYS.Company_Id ON 
                      dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID = dbo.SALES_ORDERS.SALES_ORDERS_ID RIGHT OUTER JOIN
                      dbo.SO_Delivery_Schedule ON dbo.Sales_Order_Lines.Sales_Order_Lines_ID = dbo.SO_Delivery_Schedule.Sales_Order_Lines_id LEFT OUTER JOIN
                      dbo.Employee ON dbo.SO_Delivery_Schedule.created_by = dbo.Employee.Employee_Id
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'SO_Delivery_Schedule_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[32] 4[30] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Part"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 320
            End
            DisplayFlags = 280
            TopColumn = 85
         End
         Begin Table = "SALES_ORDERS"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 282
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SO_Delivery_Schedule"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 256
            End
            DisplayFlags = 280
            TopColumn = 21
         End
         Begin Table = "Employee"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Co' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'SO_Delivery_Schedule_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'SO_Delivery_Schedule_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'lumn = 2490
         Alias = 2385
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'SO_Delivery_Schedule_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'SO_Delivery_Schedule_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'SO_Delivery_Schedule_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SO_Line_Complete_Date]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[SO_Line_Complete_Date]
AS
SELECT     dbo.SO_Delivery_Schedule.Sales_Order_Lines_id, MAX(dbo.SO_Delivery_Schedule.Scheduled_Complete_Date) AS Scheduled_Complete_Date
FROM         dbo.SO_Delivery_Schedule RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.SO_Delivery_Schedule.Sales_Order_Lines_id = dbo.Sales_Order_Lines.Sales_Order_Lines_ID
WHERE     (dbo.SO_Delivery_Schedule.Firm = 1) AND (dbo.SO_Delivery_Schedule.Confirmed = 1) AND 
                      (dbo.Sales_Order_Lines.Status__Sales_Order_Line_Status_Id < 8)
GROUP BY dbo.SO_Delivery_Schedule.Sales_Order_Lines_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SO_Last_Delivery_Date]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[SO_Last_Delivery_Date]
AS
SELECT     Sales_Order_Lines_id, MAX(Delivery_Date) AS Expr1
FROM         dbo.SO_Delivery_Schedule
GROUP BY Sales_Order_Lines_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Request_For_Quote_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Request_For_Quote_List]
AS
SELECT     dbo.Request_For_Quote.Request_For_Quote_ID, dbo.Request_For_Quote.Supplier__COMPANYS_ID, 
                      dbo.Request_For_Quote_Status.Request_For_Quote_Status AS Status, dbo.Request_For_Quote.Date_Sent AS [Date Sent], dbo.COMPANY_ADDRESS.Address1, 
                      dbo.COMPANY_ADDRESS.Address2, dbo.COMPANY_ADDRESS.Address3, dbo.COMPANY_ADDRESS.Country, dbo.COMPANY_ADDRESS.Postcode, 
                      dbo.CONTACTS.Name AS Contact, dbo.Request_For_Quote.RFQ_No AS [RFQ No], dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, 
                      dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name AS Supplier, dbo.Request_For_Quote.Status__Request_For_Quote_Status_ID, 
                      dbo.Request_For_Quote.Created, dbo.Employee.Name AS [Created By], dbo.Request_For_Quote.Notes, dbo.Request_For_Quote.Notes_Non_RTF
FROM         dbo.Request_For_Quote LEFT OUTER JOIN
                      dbo.Employee ON dbo.Request_For_Quote.Created_By = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.MULTICURRENCY ON dbo.Request_For_Quote.Currency__MULTICURRENCY_ID = dbo.MULTICURRENCY.MultiCurrency_ID LEFT OUTER JOIN
                      dbo.CONTACTS ON dbo.Request_For_Quote.Contact__CONTACTS_ID = dbo.CONTACTS.Contact_id LEFT OUTER JOIN
                      dbo.COMPANY_ADDRESS ON dbo.Request_For_Quote.Address__COMPANY_ADDRESS_ID = dbo.COMPANY_ADDRESS.Address_Id LEFT OUTER JOIN
                      dbo.Request_For_Quote_Status ON 
                      dbo.Request_For_Quote.Status__Request_For_Quote_Status_ID = dbo.Request_For_Quote_Status.Request_For_Quote_Status_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Request_For_Quote.Supplier__COMPANYS_ID = dbo.COMPANYS.Company_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_List_With_Parts]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Orders_List_With_Parts]
AS
SELECT     dbo.Work_Orders_List.WORK_ORDERS_ID, dbo.Work_Orders_List.[WO No], dbo.Work_Orders_List.[Total Qty], dbo.Work_Orders_List.[Total Production Qty], 
                      dbo.Work_Orders_List.[Start Date], dbo.Work_Orders_List.[Est Comp Date], dbo.Work_Orders_List.[For Employee], dbo.Work_Orders_List.[Contract No], 
                      dbo.Work_Orders_List.[Wo Status], dbo.Work_Orders_List.[Part No], dbo.Work_Orders_List.Description, dbo.Work_Orders_List.[Part Type], 
                      dbo.Work_Orders_List.Part_ID__Part_id, dbo.Work_Orders_List.[Qty Complete], dbo.Work_Orders_List.Released, dbo.Work_Orders_List.Printed, 
                      dbo.Work_Orders_List.[Material Released], dbo.Work_Orders_List.[Date Raised], dbo.Work_Orders_List.[Date Required], dbo.Work_Orders_List.[Date Started], 
                      dbo.Work_Orders_List.[For WO No], dbo.Work_Orders_List.Category, dbo.Work_Orders_List.[Group Code], dbo.Work_Orders_List.UserDefinable1, 
                      dbo.Work_Orders_List.UserDefinable2, dbo.Work_Orders_List.UserDefinable3, dbo.Work_Orders_List.UserDefinable4, dbo.Work_Orders_List.UserDefinable5, 
                      dbo.Work_Orders_List.UserDefinable6, dbo.Work_Orders_List.[Ops Scheduled], dbo.Work_Orders_List.[Company No], dbo.Work_Orders_List.[SO Customer], 
                      dbo.Work_Orders_List.Complete, dbo.Work_Orders_List.[Complete Date], dbo.Work_Orders_List.Cancelled, dbo.Work_Orders_List.PartUserDefinable1, 
                      dbo.Work_Orders_List.PartUserDefinable2, dbo.Work_Orders_List.PartUserDefinable3, dbo.Work_Orders_List.PartUserDefinable4, 
                      dbo.Work_Orders_List.PartUserDefinable5, dbo.Work_Orders_List.PartUserDefinable6, dbo.Work_Orders_List.FAO, dbo.Work_Orders_List.Sales_Order_Lines_ID, 
                      dbo.Work_Orders_List.Industry, dbo.Work_Orders_List.[SO Line Status], dbo.Work_Orders_List.[SO Priority], dbo.Work_Orders_List.[On Hold], 
                      dbo.Work_Orders_List.Length, dbo.Work_Orders_List.Breadth, dbo.Work_Orders_List.[Part In Stock], dbo.Work_Orders_List.[Part On Order], 
                      dbo.Work_Orders_List.[Part Required], dbo.Work_Orders_List.[Lead Time], dbo.Work_Orders_List.[Scheduled Complete Date], dbo.Work_Orders_List.Priority, 
                      dbo.Work_Orders_List.Revision, dbo.Work_Orders_List.[Week No], dbo.Work_Orders_List.[Customers PO], dbo.Work_Orders_List.[Manufactured On], 
                      dbo.Work_Orders_List.Op_No, dbo.Work_Orders_List.Started, dbo.Work_Orders_List.Wo_Route_SChedule_ID, dbo.Work_Orders_List.Qty_Delivered, 
                      dbo.Work_Orders_List.Qty_Returned, dbo.Work_Orders_List.Op_No20, dbo.Work_Orders_List.Started20, dbo.Work_Orders_List.CofC_Required, 
                      dbo.Work_Orders_List.[Last Op Complete], dbo.Work_Orders_List.[Requested Date], dbo.Work_Orders_List.[SO Del Sched Ref], 
                      dbo.Work_Orders_List.[Drawing Reg No], dbo.Work_Orders_List.[Drawing No], dbo.Work_Orders_List.Allocation_Id__Allocation_id, 
                      dbo.Work_Orders_List.[Company OnHold], dbo.Work_Orders_List.[Group], dbo.Work_Orders_Analysis.Work_Orders_Analysis_ID, 
                      dbo.Work_Orders_Analysis.Actual_Expenses_Cost AS [Actual Expenses Cost], dbo.Work_Orders_Analysis.Actual_Manu_Cost AS [Actual Manu Cost], 
                      dbo.Work_Orders_Analysis.Actual_Material_Cost AS [Actual Material Cost], dbo.Work_Orders_Analysis.Actual_Run_Charge AS [Actual Run Charge], 
                      dbo.Work_Orders_Analysis.Actual_Run_Hours AS [Actual Run Hours], dbo.Work_Orders_Analysis.Actual_Run_Lab_Cost AS [Actual Run Lab Cost], 
                      dbo.Work_Orders_Analysis.Actual_Run_WC_Cost AS [Actual Run WC Cost], dbo.Work_Orders_Analysis.Actual_Setup_Charge AS [Actual Setup Charge], 
                      dbo.Work_Orders_Analysis.Actual_Setup_Hours AS [Actual Setup Hours], dbo.Work_Orders_Analysis.Actual_Setup_Lab_Cost AS [Actual Setup Lab Cost], 
                      dbo.Work_Orders_Analysis.Actual_Setup_WC_Cost AS [Actual Setup WC Cost], dbo.Work_Orders_Analysis.Actual_SubCon_Cost AS [Actual SubCon Cost], 
                      dbo.Work_Orders_Analysis.Actuals_Date AS [Actuals Date], dbo.Work_Orders_Analysis.Planned_Expenses_Cost AS [Planned Expenses Cost], 
                      dbo.Work_Orders_Analysis.Planned_Manu_Cost AS [Planned Manu Cost], dbo.Work_Orders_Analysis.Planned_Material_Cost AS [Planned Material Cost], 
                      dbo.Work_Orders_Analysis.Planned_Run_Charge AS [Planned Run Charge], dbo.Work_Orders_Analysis.Planned_Run_Hours AS [Planned Run Hours], 
                      dbo.Work_Orders_Analysis.Planned_Run_Lab_Cost AS [Planned Run Lab Cost], dbo.Work_Orders_Analysis.Planned_Run_WC_Cost AS [Planned Run WC Cost], 
                      dbo.Work_Orders_Analysis.Planned_Setup_Charge AS [Planned Setup Charge], dbo.Work_Orders_Analysis.Planned_Setup_Lab_Cost AS [Planned Setup Lab Cost], 
                      dbo.Work_Orders_Analysis.Planned_Setup_Hours AS [Planned Setup Hours], dbo.Work_Orders_Analysis.Planned_Setup_WC_Cost AS [Planned Setup WC Cost], 
                      dbo.Work_Orders_Analysis.Planned_SubCon_Cost AS [Planned SubCon Cost], dbo.Work_Orders_Analysis.PO_Manu_Cost AS [PO Manu Cost], 
                      dbo.Work_Orders_Analysis.PO_Material_Cost AS [PO Material Cost], dbo.Work_Orders_Analysis.PO_SubCon_Cost AS [PO SubCon Cost], 
                      dbo.Work_Orders_Analysis.Total_Cost_Actual AS [Total Cost Actual], dbo.Work_Orders_Analysis.Total_Cost_Planned AS [Total Cost Planned], 
                      dbo.Work_Orders_Analysis.Total_Variance AS [Total Variance], dbo.Work_Orders_Analysis.Variance_Charge AS [Variance Charge], 
                      dbo.Work_Orders_Analysis.Variance_Expenses_Cost AS [Variance Expenses Cost], dbo.Work_Orders_Analysis.Variance_Hours AS [Variance Hours], 
                      dbo.Work_Orders_Analysis.Variance_Lab_Cost AS [Variance Lab Cost], dbo.Work_Orders_Analysis.Variance_Manu_Cost AS [Variance Manu Cost], 
                      dbo.Work_Orders_Analysis.Variance_Material_Cost AS [Variance Material Cost], dbo.Work_Orders_Analysis.Variance_SubCon_Cost AS [Variance SubCon Cost], 
                      dbo.Work_Orders_Analysis.Variance_WC_Cost AS [Variance WC Cost], dbo.Work_Orders_Analysis.Actual_Material_Returns AS [Material Returned], 
                      dbo.Work_Orders_Analysis.Actual_SubCon_Returns AS [SubCon Returned], dbo.Work_Orders_List.modified, dbo.Work_Orders_List.[Modified By]
FROM         dbo.Work_Orders_List LEFT OUTER JOIN
                      dbo.Work_Orders_Analysis ON dbo.Work_Orders_List.WORK_ORDERS_ID = dbo.Work_Orders_Analysis.Parent__WORK_ORDERS_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Job_Costing_Plan_Hrs_Temp]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Job_Costing_Plan_Hrs_Temp]
AS
SELECT     dbo.Sales_Order_Lines.Sales_Order_Lines_ID, 
                      SUM(dbo.Work_Orders_Analysis.Planned_Run_Hours + dbo.Work_Orders_Analysis.Planned_Setup_Hours) AS Tot_Plan_Hrs
FROM         dbo.Work_Orders_Analysis RIGHT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Work_Orders_Analysis.Parent__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.WORK_ORDERS.So_Line_Id = dbo.Sales_Order_Lines.Sales_Order_Lines_ID
WHERE     (dbo.WORK_ORDERS.Cancelled = 0)
GROUP BY dbo.Sales_Order_Lines.Sales_Order_Lines_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Job_Costing_Plan_MatSubCon]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Job_Costing_Plan_MatSubCon]
AS
SELECT     dbo.WORK_ORDERS.So_Line_Id, SUM(dbo.Work_Orders_Analysis.Planned_Material_Cost + dbo.Work_Orders_Analysis.Planned_SubCon_Cost) 
                      AS [Planned Material]
FROM         dbo.WORK_ORDERS RIGHT OUTER JOIN
                      dbo.Work_Orders_Analysis ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Work_Orders_Analysis.Parent__WORK_ORDERS_ID
WHERE     (dbo.WORK_ORDERS.Cancelled = 0)
GROUP BY dbo.WORK_ORDERS.So_Line_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Job_Costing_Charges_Temp]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Job_Costing_Charges_Temp]
AS
SELECT     dbo.Sales_Order_Lines.Sales_Order_Lines_ID, SUM(dbo.Work_Orders_Analysis.Actual_Setup_Charge + dbo.Work_Orders_Analysis.Actual_Run_Charge) 
                      AS [Actual Total Charge]
FROM         dbo.Sales_Order_Lines RIGHT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Sales_Order_Lines.Sales_Order_Lines_ID = dbo.WORK_ORDERS.So_Line_Id LEFT OUTER JOIN
                      dbo.Work_Orders_Analysis ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Work_Orders_Analysis.Parent__WORK_ORDERS_ID
WHERE     (dbo.WORK_ORDERS.Cancelled = 0)
GROUP BY dbo.Sales_Order_Lines.Sales_Order_Lines_ID
HAVING      (SUM(dbo.Work_Orders_Analysis.Actual_Setup_Charge + dbo.Work_Orders_Analysis.Actual_Run_Charge) > 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_Related_Docs_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Sales_Related_Docs_List]
AS
SELECT     Sales_Related_Docs_ID, Against__SALES_ORDERS_ID, Description, Document_Path
FROM         dbo.Sales_Related_Docs
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_Order_Profile_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Sales_Order_Profile_List]
AS
SELECT dbo.Sales_Order_Profile.*
FROM  dbo.Sales_Order_Profile
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Expenses_Cost]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Actual_Expenses_Cost]
AS
SELECT     WO__WORK_ORDERS_ID, SUM(Total) AS TotalExp
FROM         dbo.EXPENSES
GROUP BY WO__WORK_ORDERS_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Job_Costing_Expenses_Temp]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Job_Costing_Expenses_Temp]
AS
SELECT     dbo.WORK_ORDERS.So_Line_Id, SUM(dbo.EXPENSES.Total) AS [Actual Expenses Total]
FROM         dbo.WORK_ORDERS LEFT OUTER JOIN
                      dbo.EXPENSES ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.EXPENSES.WO__WORK_ORDERS_ID
GROUP BY dbo.WORK_ORDERS.So_Line_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[EXPENSES_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[EXPENSES_List]
AS
SELECT     dbo.EXPENSES.EXPENSES_ID, dbo.EXPENSES.Date_Entered AS [Date Entered], dbo.EXPENSES.Date_Incurred AS [Date Incurred], 
                      dbo.EXPENSES.Expense_No AS [Expense No], dbo.EXPENSES.Item, dbo.EXPENSES.Qty, dbo.EXPENSES.Price, dbo.EXPENSES.Total, 
                      dbo.EXPENSES.Ref, dbo.EXPENSES.WO__WORK_ORDERS_ID, dbo.Employee.Name AS [Incurred By], dbo.WORK_ORDERS.WO_No AS [WO No.], 
                      dbo.EXPENSES_TYPE.Expenses_Type AS [Expenses Type]
FROM         dbo.EXPENSES LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.EXPENSES.WO__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.EXPENSES_TYPE ON dbo.EXPENSES.Type_id = dbo.EXPENSES_TYPE.EXPENSES_TYPE_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.EXPENSES.Incurred_By = dbo.Employee.Employee_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[System_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[System_List]
AS
SELECT     dbo.System.*
FROM         dbo.System
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Max_Invoice]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Max_Invoice]
AS
SELECT     REPLACE(MAX(dbo.INVOICES.Invoice_No), dbo.System.Invoice_No_Prefix, '''') AS Max
FROM         dbo.INVOICES CROSS JOIN
                      dbo.System
GROUP BY dbo.System.Invoice_No_Prefix
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Max_Invoice', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "INVOICES"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 234
               Right = 308
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "System"
            Begin Extent = 
               Top = 6
               Left = 346
               Bottom = 282
               Right = 640
            End
            DisplayFlags = 280
            TopColumn = 29
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1575
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Max_Invoice'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Max_Invoice', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Max_Invoice'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Version]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Version]
AS
SELECT     Version
FROM         dbo.System
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Drawing_Status_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Drawing_Status_Drop_List]
AS
SELECT     Drawing_Status_ID, Status, Modified, Modified_By
FROM         dbo.Drawing_Status
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Drawing_Status_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Drawing_Status_List]
AS
SELECT     Drawing_Status_ID, Status, Modified, Modified_By
FROM         dbo.Drawing_Status
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PO_Type_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PO_Type_List]
AS
SELECT     Po_Type_ID, PO_Type
FROM         dbo.Po_Type
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Po_Type_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Po_Type_Drop_List]
AS
SELECT     Po_Type_ID, PO_Type
FROM         dbo.Po_Type
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Ultrasonic_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Ultrasonic_List]
AS
SELECT     Ultrasonic_ID, Description, Modified, Modified_By
FROM         dbo.Ultrasonic
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Ultrasonic_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Ultrasonic_Drop_List]
AS
SELECT     Ultrasonic_ID, Description, Modified, Modified_By
FROM         dbo.Ultrasonic
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PO_Receipt_Date_Rcvd]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PO_Receipt_Date_Rcvd]
AS
SELECT     MAX(Date_in) AS Date_In, Po__Purchase_orders_ID
FROM         dbo.Po_Receipt
GROUP BY Po__Purchase_orders_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PO_Receipt_Received]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PO_Receipt_Received]
AS
SELECT     Po__Purchase_orders_ID AS [PO ID], MAX(Date_in) AS [Date Received]
FROM         dbo.Po_Receipt
GROUP BY Po__Purchase_orders_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Po_Receipt_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Po_Receipt_List]
AS
SELECT     dbo.Po_Receipt.Po_Receipt_ID, dbo.Po_Receipt.Advice_No AS [Advice No], dbo.Po_Receipt.Date_in AS Date, dbo.Purchase_Order.Po_No AS [PO No], 
                      dbo.COMPANYS.Name AS Company, dbo.Po_Receipt.Invoiced, dbo.POR_Status.Status, dbo.Po_Receipt.Total_Value AS [Total Value], dbo.COMPANYS.Company_Id, 
                      dbo.Po_Receipt.Marked_As_Invoiced AS [Marked As Invoiced], Employee_2.Name AS [Accepted By], dbo.Employee.Name AS [Raised By], dbo.Po_Receipt.Modified, 
                      Employee_3.Name AS [Modified By]
FROM         dbo.Employee AS Employee_2 RIGHT OUTER JOIN
                      dbo.Po_Receipt LEFT OUTER JOIN
                      dbo.Employee AS Employee_3 ON dbo.Po_Receipt.Modified_by = Employee_3.Employee_Id LEFT OUTER JOIN
                      dbo.Employee ON dbo.Po_Receipt.Raised_By__Employee_ID = dbo.Employee.Employee_Id ON 
                      Employee_2.Employee_Id = dbo.Po_Receipt.Accepted_By__Employee_Id LEFT OUTER JOIN
                      dbo.POR_Status ON dbo.Po_Receipt.Status__POR_Status_ID = dbo.POR_Status.POR_Status_ID LEFT OUTER JOIN
                      dbo.Purchase_Order ON dbo.Po_Receipt.Po__Purchase_orders_ID = dbo.Purchase_Order.Purchase_Order_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Purchase_Order.Supplier__COMPANYS_ID = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.Employee AS Employee_1 ON dbo.Po_Receipt.Accepted_By__Employee_Id = Employee_1.Employee_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[General_Info_Drop_List]
AS
SELECT     General_Info_ID, Description, Modified, Modified_By
FROM         dbo.General_Info
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Profiles_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_Profiles_List]
AS
SELECT     dbo.Part.Part_Id, dbo.Part_Profiles.Part_Profiles_ID, dbo.Part.Part_No AS [Part No], dbo.Part_Profiles.Add_Nitrogen AS [Add Nitrogen], 
                      dbo.Part_Profiles.Additional_Perimeter AS [Additional Perimeter], dbo.Part_Profiles.Additional_Piercings AS [Additional Piercings], 
                      dbo.Part_Profiles.Amended_Cost_Per_Tonne AS [Amended Cost Per Tonne], dbo.Part_Profiles.Angle, dbo.Part_Profiles.Breadth, 
                      dbo.Part_Profiles.Charge_Rate1 AS [Charge Rate1], dbo.Part_Profiles.Charge_Rate2 AS [Charge Rate2], 
                      dbo.Part_Profiles.Charge_Rate3 AS [Charge Rate3], dbo.Part_Profiles.Charge_Rate4 AS [Charge Rate4], 
                      dbo.Part_Profiles.Charge_Rate5 AS [Charge Rate5], dbo.Part_Profiles.Charge_Rate6 AS [Charge Rate6], 
                      dbo.Material.Cost_Per_Tonne AS [Cost Per Tonne], dbo.Dialectric.Description AS Dialectric, dbo.Part_Profiles.Feed_Rate AS [Feed Rate], 
                      dbo.Part_Profiles.Full_Import AS [Full Import], General_Info_1.Description AS [General Info1], General_Info_2.Description AS [General Info2], 
                      General_Info_3.Description AS [General Info3], General_Info_4.Description AS [General Info4], General_Info_5.Description AS [General Info5], 
                      General_Info_6.Description AS [General Info6], General_Info_7.Description AS [General Info7], General_Info_8.Description AS [General Info8], 
                      General_Info_9.Description AS [General Info9], General_Info_10.Description AS [General Info10], General_Info_11.Description AS [General Info11], 
                      General_Info_12.Description AS [General Info12], General_Info_13.Description AS [General Info13], General_Info_14.Description AS [General Info14], 
                      General_Info_15.Description AS [General Info15], General_Info_16.Description AS [General Info16], General_Info_17.Description AS [General Info17], 
                      General_Info_18.Description AS [General Info18], General_Info_19.Description AS [General Info19], General_Info_20.Description AS [General Info20], 
                      dbo.Part_Profiles.Height, dbo.Part_Profiles.Hole_Breadth1 AS [Hole Breadth1], dbo.Part_Profiles.Hole_Breadth2 AS [Hole Breadth2], 
                      dbo.Part_Profiles.Hole_Breadth3 AS [Hole Breadth3], dbo.Part_Profiles.Hole_Breadth4 AS [Hole Breadth4], 
                      dbo.Part_Profiles.Hole_Breadth5 AS [Hole Breadth5], dbo.Part_Profiles.Hole_Diameter1 AS [Hole Diameter1], 
                      dbo.Part_Profiles.Hole_Diameter2 AS [Hole Diameter2], dbo.Part_Profiles.Hole_Diameter3 AS [Hole Diameter3], 
                      dbo.Part_Profiles.Hole_Diameter4 AS [Hole Diameter4], dbo.Part_Profiles.Hole_Diameter5 AS [Hole Diameter5], 
                      dbo.Part_Profiles.Hole_Length1 AS [Hole Length1], dbo.Part_Profiles.Hole_Length2 AS [Hole Length2], 
                      dbo.Part_Profiles.Hole_Length3 AS [Hole Length3], dbo.Part_Profiles.Hole_Length4 AS [Hole Length4], 
                      dbo.Part_Profiles.Hole_Length5 AS [Hole Length5], dbo.Part_Profiles.Hole_Qty1, dbo.Part_Profiles.Hole_Qty2, dbo.Part_Profiles.Hole_Qty3, 
                      dbo.Part_Profiles.Hole_Qty4, dbo.Part_Profiles.Hole_Qty5, dbo.Part_Profiles.Inner_Diameter AS [Inner Diameter], 
                      dbo.Part_Profiles.Inter_OP_Days1 AS [Inte OP Days1], dbo.Part_Profiles.Inter_OP_Days2 AS [Inter OP Days2], 
                      dbo.Part_Profiles.Inter_OP_Days3 AS [Inter OP Days3], dbo.Part_Profiles.Inter_OP_Days4 AS [Inter OP Days4], 
                      dbo.Part_Profiles.Inter_OP_Days5 AS [Inter OP Days5], dbo.Part_Profiles.Inter_OP_Days6 AS [Inter OP Days6], dbo.Part_Profiles.Length, 
                      dbo.Part_Profiles.Machine_Assembly_Time AS [Machine Assembly Time], dbo.Part_Profiles.Manual_Assembly_Time AS [Manual Assembly Time], 
                      dbo.Material.Description AS Material, dbo.Part_Profiles.Modified, dbo.Part_Profiles.Modified_By AS [Modified By], 
                      dbo.Part_Profiles.Outer_Diameter AS [Outer Diameter], dbo.Part_Profiles.No_Mitres AS [No Mitres], dbo.Part_Profiles.No_Of_Pins AS [No Of Pins], 
                      dbo.Part_Profiles.Package_Size AS [Package Size], dbo.Part_Profiles.Part_Length AS [Part Length], dbo.Part_Profiles.Power, 
                      dbo.Part_Profiles.PartProfiles__D_Type_ID, Process_1.Process_Name AS Process1, Process_2.Process_Name AS Process2, 
                      Process_3.Process_Name AS Process3, Process_4.Process_Name AS Process4, Process_5.Process_Name AS Process5, 
                      Process_6.Process_Name AS Process6, dbo.Part_Profiles.Profile_Length AS [Profile Length], dbo.Part_Profiles.Profile_Qty AS [Profile Qty], 
                      dbo.Part_Profiles.ROSHE, dbo.Part_Profiles.SMD, COMPANYS_1.Name AS Supplier1, COMPANYS_2.Name AS Supplier2, 
                      COMPANYS_3.Name AS Supplier3, COMPANYS_4.Name AS Supplier4, COMPANYS_5.Name AS Supplier5, COMPANYS_6.Name AS Supplier6, 
                      dbo.Technology.Description AS Technology, dbo.Part_Profiles.Tolerance_Code AS [Tolerance Code], 
                      dbo.Part_Profiles.Tolerance_Negative AS [Tolerance Negative], dbo.Part_Profiles.Tolerance_Positive AS [Tolerance Positive], 
                      dbo.Part_Profiles.Triangle, dbo.Part_Profiles.Tube_Diameter AS [Tube Diameter], dbo.Part_Profiles.Tube_Length1 AS [Tube Length1], 
                      dbo.Part_Profiles.Tube_Length2 AS [Tube Length2], dbo.Part_Profiles.Value_Absolute AS [Value Absolute], 
                      dbo.Part_Profiles.Value_Shorthand AS [Value Shorthand], dbo.Part_Profiles.Value1, dbo.Part_Profiles.Value2, dbo.Part_Profiles.Value3, 
                      dbo.Part_Profiles.Value4, dbo.Part_Profiles.Value5, dbo.Part_Profiles.Value6, dbo.Part_Profiles.Wall_Thickness
FROM         dbo.COMPANYS COMPANYS_5 RIGHT OUTER JOIN
                      dbo.COMPANYS COMPANYS_6 RIGHT OUTER JOIN
                      dbo.General_Info General_Info_3 RIGHT OUTER JOIN
                      dbo.General_Info General_Info_4 RIGHT OUTER JOIN
                      dbo.General_Info General_Info_5 RIGHT OUTER JOIN
                      dbo.General_Info General_Info_6 RIGHT OUTER JOIN
                      dbo.General_Info General_Info_7 RIGHT OUTER JOIN
                      dbo.General_Info General_Info_8 RIGHT OUTER JOIN
                      dbo.General_Info General_Info_9 RIGHT OUTER JOIN
                      dbo.General_Info General_Info_12 RIGHT OUTER JOIN
                      dbo.General_Info General_Info_13 RIGHT OUTER JOIN
                      dbo.General_Info General_Info_14 RIGHT OUTER JOIN
                      dbo.General_Info General_Info_17 RIGHT OUTER JOIN
                      dbo.General_Info General_Info_20 RIGHT OUTER JOIN
                      dbo.Part_Profiles ON General_Info_20.General_Info_ID = dbo.Part_Profiles.Info20__General_Info_ID LEFT OUTER JOIN
                      dbo.General_Info General_Info_19 ON dbo.Part_Profiles.Info19__General_Info_ID = General_Info_19.General_Info_ID LEFT OUTER JOIN
                      dbo.General_Info General_Info_18 ON dbo.Part_Profiles.Info18__General_Info_ID = General_Info_18.General_Info_ID ON 
                      General_Info_17.General_Info_ID = dbo.Part_Profiles.Info17__General_Info_ID LEFT OUTER JOIN
                      dbo.General_Info General_Info_16 ON dbo.Part_Profiles.Info16__General_Info_ID = General_Info_16.General_Info_ID LEFT OUTER JOIN
                      dbo.General_Info General_Info_15 ON dbo.Part_Profiles.Info15__General_Info_ID = General_Info_15.General_Info_ID ON 
                      General_Info_14.General_Info_ID = dbo.Part_Profiles.Info14__General_Info_ID ON 
                      General_Info_13.General_Info_ID = dbo.Part_Profiles.Info13__General_Info_ID ON 
                      General_Info_12.General_Info_ID = dbo.Part_Profiles.Info12__General_Info_ID LEFT OUTER JOIN
                      dbo.General_Info General_Info_11 ON dbo.Part_Profiles.Info11__General_Info_ID = General_Info_11.General_Info_ID LEFT OUTER JOIN
                      dbo.General_Info General_Info_10 ON dbo.Part_Profiles.Info10__General_Info_ID = General_Info_10.General_Info_ID ON 
                      General_Info_9.General_Info_ID = dbo.Part_Profiles.Info9__General_Info_ID ON 
                      General_Info_8.General_Info_ID = dbo.Part_Profiles.Info8__General_Info_ID ON 
                      General_Info_7.General_Info_ID = dbo.Part_Profiles.Info7__General_Info_ID ON 
                      General_Info_6.General_Info_ID = dbo.Part_Profiles.Info6__General_Info_ID ON 
                      General_Info_5.General_Info_ID = dbo.Part_Profiles.Info5__General_Info_ID ON 
                      General_Info_4.General_Info_ID = dbo.Part_Profiles.Info4__General_Info_ID ON 
                      General_Info_3.General_Info_ID = dbo.Part_Profiles.Info3__General_Info_ID LEFT OUTER JOIN
                      dbo.General_Info General_Info_2 ON dbo.Part_Profiles.Info2__General_Info_ID = General_Info_2.General_Info_ID LEFT OUTER JOIN
                      dbo.General_Info General_Info_1 ON dbo.Part_Profiles.Info1__General_Info_ID = General_Info_1.General_Info_ID ON 
                      COMPANYS_6.Company_Id = dbo.Part_Profiles.Supplier6__COMPANYS_ID ON 
                      COMPANYS_5.Company_Id = dbo.Part_Profiles.Supplier5__COMPANYS_ID LEFT OUTER JOIN
                      dbo.COMPANYS COMPANYS_4 ON dbo.Part_Profiles.Supplier4__COMPANYS_ID = COMPANYS_4.Company_Id LEFT OUTER JOIN
                      dbo.COMPANYS COMPANYS_3 ON dbo.Part_Profiles.Supplier3__COMPANYS_ID = COMPANYS_3.Company_Id LEFT OUTER JOIN
                      dbo.COMPANYS COMPANYS_2 ON dbo.Part_Profiles.Supplier2__COMPANYS_ID = COMPANYS_2.Company_Id LEFT OUTER JOIN
                      dbo.COMPANYS COMPANYS_1 ON dbo.Part_Profiles.Supplier1__COMPANYS_ID = COMPANYS_1.Company_Id LEFT OUTER JOIN
                      dbo.Process Process_6 ON dbo.Part_Profiles.Process6__Process_ID = Process_6.Process_Id LEFT OUTER JOIN
                      dbo.Process Process_5 ON dbo.Part_Profiles.Process5__Process_ID = Process_5.Process_Id LEFT OUTER JOIN
                      dbo.Process Process_4 ON dbo.Part_Profiles.Process4__Process_ID = Process_4.Process_Id LEFT OUTER JOIN
                      dbo.Process Process_3 ON dbo.Part_Profiles.Process3__Process_ID = Process_3.Process_Id LEFT OUTER JOIN
                      dbo.Process Process_2 ON dbo.Part_Profiles.Process2__Process_ID = Process_2.Process_Id LEFT OUTER JOIN
                      dbo.Process Process_1 ON dbo.Part_Profiles.Process1__Process_ID = Process_1.Process_Id LEFT OUTER JOIN
                      dbo.Material ON dbo.Part_Profiles.Material_Type__Material_ID = dbo.Material.Material_ID LEFT OUTER JOIN
                      dbo.Technology ON dbo.Part_Profiles.Technology__Technology_ID = dbo.Technology.Technology_ID LEFT OUTER JOIN
                      dbo.Dialectric ON dbo.Part_Profiles.Dialectric__Dialectric_ID = dbo.Dialectric.Dialectric_ID RIGHT OUTER JOIN
                      dbo.Part RIGHT OUTER JOIN
                      dbo.Part_Attributes ON dbo.Part.Part_Id = dbo.Part_Attributes.Part_ID ON 
                      dbo.Part_Profiles.PartProfiles__D_Type_ID = dbo.Part_Attributes.Display_Type_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[General_Info_List]
AS
SELECT     General_Info_ID, Description, Modified, Modified_By
FROM         dbo.General_Info
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info3_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[General_Info3_Drop_List]
AS
SELECT     General_Info3_ID, Description, Modified, Modified_By
FROM         dbo.General_Info3
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info3_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[General_Info3_List]
AS
SELECT     General_Info3_ID, Description, Modified, Modified_By
FROM         dbo.General_Info3
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Route_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Route_Drop_List]
AS
SELECT     dbo.Route.Route_id, dbo.Route.Op_No AS [Op No], dbo.Route.Description, dbo.Process.Process_Name AS [Process Name], 
                      dbo.Work_Centre.WC_Name AS [WC Name], dbo.Route.Run_Time / 3600 AS [Run Time], dbo.Route.Setup_Time / 3600 AS [Setup Time], 
                      dbo.Route.Programming_time, dbo.Route.Tooling, dbo.Route.Deleted, dbo.Route.Charge, dbo.Route.Cost, dbo.Route.Labour_cost AS [Labour cost], 
                      dbo.Route.Op_No_Val AS [Op No Val], dbo.Route.Cycle_Hours AS [Cycle  Hours], dbo.Route.Cycle_Qty AS [Cycle Qty], 
                      dbo.Route.Cycle_Time AS [Cycle Time], dbo.Route.Released, dbo.Route.Route_Version__Route_Versions_id, dbo.Route.For_Part__Part_id, 
                      dbo.Route.No_Men AS [No Men], dbo.Route.Work_Centre__Work_centre_id, dbo.Route.Process__Process_id, dbo.Route.created, 
                      dbo.Route.Run_Hours AS [Run Hours], dbo.Route.Run_Minutes AS [Run Minutes], dbo.Route.Run_Seconds AS [Run Seconds], 
                      dbo.Route.Setup_Hours AS [Setup Hours], dbo.Route.Setup_Minutes AS [Setup Minutes], dbo.Route.Setup_Seconds AS [Setup Seconds], 
                      dbo.Part.Part_No AS [Part No], dbo.Route.Requires_Material AS [Requires Material], dbo.Route.Seq_No AS [Seq No], 
                      dbo.Route_versions.Version_Name AS [Version Name], dbo.Route_versions.Version_Description AS [Version Description]
FROM         dbo.Route LEFT OUTER JOIN
                      dbo.Route_versions ON dbo.Route.Route_Version__Route_Versions_id = dbo.Route_versions.Route_Versions_id LEFT OUTER JOIN
                      dbo.Process ON dbo.Route.Process__Process_id = dbo.Process.Process_Id LEFT OUTER JOIN
                      dbo.Work_Centre ON dbo.Route.Work_Centre__Work_centre_id = dbo.Work_Centre.Work_Centre_id LEFT OUTER JOIN
                      dbo.Part ON dbo.Route.Material_Id = dbo.Part.Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Centre_Capacity]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Centre_Capacity]
AS
SELECT     TOP 100 PERCENT dbo.Work_Centre.WC_Name, dbo.Work_Centre.Work_Centre_id, dbo.Calendar_Records.Total_Hours * (dbo.Calendar_Records.Efficiency / 100) 
                      AS Capacity, dbo.Calendar_Records.Day_Of_Week
FROM         dbo.Work_Centre LEFT OUTER JOIN
                      dbo.Calendar_Records ON dbo.Work_Centre.Calendar__Calendar_id = dbo.Calendar_Records.Calendar__Calendar_ID
WHERE     (dbo.Work_Centre.Deleted = 0)
ORDER BY dbo.Work_Centre.WC_Name
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Route_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Route_list]
AS
SELECT     dbo.Route.Route_id, dbo.Route.Op_No AS [Op No], dbo.Route.Description, dbo.Process.Process_Name AS [Process Name], 
                      dbo.Work_Centre.WC_Name AS [WC Name], dbo.Route.Run_Time / 3600 AS [Run Time], dbo.Route.Setup_Time / 3600 AS [Setup Time], 
                      dbo.Route.Programming_time, dbo.Route.Tooling, dbo.Route.Deleted, dbo.Route.Charge, dbo.Route.Cost, dbo.Route.Labour_cost AS [Labour cost], 
                      dbo.Route.Op_No_Val AS [Op No Val], dbo.Route.Cycle_Hours AS [Cycle  Hours], dbo.Route.Cycle_Qty AS [Cycle Qty], 
                      dbo.Route.Cycle_Time AS [Cycle Time], dbo.Route.Released, dbo.Route.Route_Version__Route_Versions_id, dbo.Route.For_Part__Part_id, 
                      dbo.Route.No_Men AS [No Men], dbo.Route.Work_Centre__Work_centre_id, dbo.Route.Process__Process_id, dbo.Route.created, 
                      dbo.Route.Run_Hours AS [Run Hours], dbo.Route.Run_Minutes AS [Run Minutes], dbo.Route.Run_Seconds AS [Run Seconds], 
                      dbo.Route.Setup_Hours AS [Setup Hours], dbo.Route.Setup_Minutes AS [Setup Minutes], dbo.Route.Setup_Seconds AS [Setup Seconds], 
                      dbo.Part.Part_No AS [Part No], dbo.Route.Requires_Material AS [Requires Material], dbo.Route.Seq_No AS [Seq No], 
                      dbo.Route_versions.Version_Name AS [Version Name], dbo.Route_versions.Version_Description AS [Version Description], 
                      dbo.Route.Notes_Non_RTF AS Notes
FROM         dbo.Route LEFT OUTER JOIN
                      dbo.Part ON dbo.Route.For_Part__Part_id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Route_versions ON dbo.Route.Route_Version__Route_Versions_id = dbo.Route_versions.Route_Versions_id LEFT OUTER JOIN
                      dbo.Process ON dbo.Route.Process__Process_id = dbo.Process.Process_Id LEFT OUTER JOIN
                      dbo.Work_Centre ON dbo.Route.Work_Centre__Work_centre_id = dbo.Work_Centre.Work_Centre_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Op_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Op_List]
AS
SELECT     dbo.Wo_Route_SChedule.Wo_Route_SChedule_ID, dbo.Route.Route_id, dbo.WORK_ORDERS.WORK_ORDERS_ID, dbo.Route.Description AS [Op Description], 
                      dbo.Route.Op_No AS [Op No], dbo.Route.Run_Time * dbo.WORK_ORDERS.Total_Production_Qty / 3600 AS [OP Run Time], 
                      dbo.Route.Setup_Time / 3600 AS [OP Setup Time], dbo.Process.Process_Name AS Process, dbo.Work_Centre.WC_Name AS [WC Name], 
                      dbo.Work_Centre.Work_Centre_No AS [WC No], dbo.Wo_Route_SChedule.Complete, dbo.Wo_Route_SChedule.Date_Complete AS [Date Complete], 
                      dbo.Wo_Route_SChedule.Do_Not_Use AS [Do Not Use], dbo.Wo_Route_SChedule.Last_Start_Date AS [Last Start Date], dbo.Wo_Route_SChedule.Priority, 
                      dbo.Wo_Route_SChedule.Qty_Complete AS [Qty Complete], dbo.Wo_Route_SChedule.Scheduled_Complete_date AS [Scheduled Complete date], 
                      dbo.Wo_Route_SChedule.Start_Date AS [Start Date], dbo.Wo_Route_SChedule.Actual_Run_Time AS [Actual Run Time], 
                      dbo.Wo_Route_SChedule.Actual_Setup_Time AS [Actual Setup Time], dbo.Wo_Route_SChedule.Conflict, dbo.Wo_Route_SChedule.Early, 
                      dbo.Wo_Route_SChedule.First_Start_Date AS [First Start Date], dbo.Wo_Route_SChedule.Last_End_Date AS [Last End Date], dbo.Wo_Route_SChedule.Late, 
                      dbo.Wo_Route_SChedule.Locked, dbo.Wo_Route_SChedule.Material_Arrival_Date AS [Material Arrival Date], 
                      dbo.Wo_Route_SChedule.Per_Complete AS [Per Complete], dbo.Wo_Route_SChedule.Problems_Accepted AS [Problems Accepted], 
                      dbo.Wo_Route_SChedule.Requires_Material AS [Requires Material], dbo.Wo_Route_SChedule.Seq_No AS [Seq No], dbo.Wo_Route_SChedule.Started, 
                      dbo.Wo_Route_SChedule.Stopped, dbo.Wo_Route_SChedule.Use_Setup_Time AS [Use Setup Time], 
                      dbo.Wo_Route_SChedule.Setup_Time AS [Scheduled Setup Time], dbo.Wo_Route_SChedule.Run_Time AS [Scheduled Run Time], 
                      dbo.Wo_Route_SChedule.Inter_Op_Time AS [Inter Op Time], dbo.Wo_Route_SChedule.Date_Started AS [Date Started], dbo.Route.Deleted AS [Not on Part], 
                      dbo.Wo_Route_SChedule.Outstanding_Run_Time AS [Outstanding Run Time], dbo.Process.Process_Description AS [Process Description]
FROM         dbo.Work_Centre RIGHT OUTER JOIN
                      dbo.Route RIGHT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Route.Route_Version__Route_Versions_id = dbo.WORK_ORDERS.Route_versions_id LEFT OUTER JOIN
                      dbo.Wo_Route_SChedule ON dbo.Route.Route_id = dbo.Wo_Route_SChedule.Route_Id AND 
                      dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Wo_Route_SChedule.WO_ID LEFT OUTER JOIN
                      dbo.Process ON dbo.Route.Process__Process_id = dbo.Process.Process_Id ON dbo.Work_Centre.Work_Centre_id = dbo.Wo_Route_SChedule.WorkCentre_ID
WHERE     (NOT (dbo.Wo_Route_SChedule.Wo_Route_SChedule_ID IS NULL)) OR
                      (NOT (dbo.Route.Deleted = 1))
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Op_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[45] 4[16] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -288
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Work_Centre"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 239
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Route"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 298
            End
            DisplayFlags = 280
            TopColumn = 37
         End
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Wo_Route_SChedule"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 274
            End
            DisplayFlags = 280
            TopColumn = 39
         End
         Begin Table = "Process"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 239
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         A' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Op_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Op_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'lias = 2145
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Op_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Op_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Op_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_centre_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_centre_list]
AS
SELECT     Work_Centre_id, Work_Centre_No AS No, WC_Name AS Name, Inter_OP_Delay, Description, Capacity_Week AS [Capacity Week], Charge, Cost, 
                      Labour_cost AS [Labour cost], Manufacturer, Deleted, Location, Serial_Number AS [Serial Number], Display_Order AS [Display Order]
FROM         dbo.Work_Centre
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Work_centre_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[25] 4[44] 2[14] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Work_Centre"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 240
               Right = 239
            End
            DisplayFlags = 280
            TopColumn = 11
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 1500
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Work_centre_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Work_centre_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Work_centre_list'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Non_Conformance_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Non_Conformance_Drop_List]
AS
SELECT     Non_Conformance_1.Non_Conformance_ID, Non_Conformance_1.Non_Conformance_No AS [NC No], dbo.COMPANYS.Name AS [Company Name], 
                      dbo.Part.Part_No AS [Part No], dbo.WORK_ORDERS.WO_No AS [WO No], dbo.CONTACTS.Name AS [Contact Name], 
                      Employee_1.Name AS [Recorded By], Non_Conformance_1.Date_Recorded AS [Date Recorded], Non_Conformance_1.Qty AS [NC Qty], 
                      Non_Conformance_1.Status, Non_Conformance_1.Date_Identified AS [Date Identified], 
                      Non_Conformance_1.NC_Type_Description_Non_RTF AS [NC Type Description], 
                      Non_Conformance_1.NC_Cause_Description_Non_RTF AS [NC Cause Description], Non_Conformance_1.Closed, 
                      Non_Conformance_1.Date_Closed AS [Date Closed], Employee_2.Name AS [Identified By], Non_Conformance_1.Parent__Non_Conformance_ID, 
                      Non_Conformance_1.Non_Conformance_No AS [Parent NC No], Non_Conformance_1.No_Sub_Items AS [No Sub Items], 
                      Non_Conformance_1.Company__COMPANYS_ID, Non_Conformance_1.WORK_ORDERS__WORK_ORDERS_ID, 
                      Non_Conformance_1.Batch_Qty AS [Batch Qty], dbo.Work_Centre.WC_Name AS WC, Employee_3.Name AS Culprit, 
                      UDData_5.UDData_Data AS UserDefinable1, UDData_1.UDData_Data AS UserDefinable2, UDData_2.UDData_Data AS UserDefinable3, 
                      UDData_3.UDData_Data AS UserDefinable4, UDData_4.UDData_Data AS UserDefinable5, UDData_5.UDData_Data AS UserDefinable6, 
                      dbo.Non_Conformance_Origin.NC_Origin AS Origin
FROM         dbo.Work_Centre RIGHT OUTER JOIN
                      dbo.UDData UDData_1 RIGHT OUTER JOIN
                      dbo.UDData UDData_4 RIGHT OUTER JOIN
                      dbo.Part RIGHT OUTER JOIN
                      dbo.Non_Conformance Non_Conformance_1 LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON Non_Conformance_1.WORK_ORDERS__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Non_Conformance_Origin ON 
                      Non_Conformance_1.NC__Non_Conformance_Origin_ID = dbo.Non_Conformance_Origin.Non_Conformance_Origin_ID LEFT OUTER JOIN
                      dbo.Employee Employee_2 ON Non_Conformance_1.Identified_by__Employee_ID = Employee_2.Employee_Id LEFT OUTER JOIN
                      dbo.Employee Employee_1 ON Non_Conformance_1.Employee__Employee_ID = Employee_1.Employee_Id LEFT OUTER JOIN
                      dbo.Employee Employee_3 ON Non_Conformance_1.Culprit__Employee_ID = Employee_3.Employee_Id LEFT OUTER JOIN
                      dbo.CONTACTS ON Non_Conformance_1.Contact__CONTACTS_ID = dbo.CONTACTS.Contact_id ON 
                      dbo.Part.Part_Id = Non_Conformance_1.Part__Part_ID LEFT OUTER JOIN
                      dbo.UDData UDData_6 ON Non_Conformance_1.UDF6__UDData_ID = UDData_6.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_5 ON Non_Conformance_1.UDF5__UDData_ID = UDData_5.UDData_ID ON 
                      UDData_4.UDData_ID = Non_Conformance_1.UDF4__UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_3 ON Non_Conformance_1.UDF3__UDData_ID = UDData_3.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_2 ON Non_Conformance_1.UDF2__UDData_ID = UDData_2.UDData_ID ON 
                      UDData_1.UDData_ID = Non_Conformance_1.UDF1__UDData_ID ON 
                      dbo.Work_Centre.Work_Centre_id = Non_Conformance_1.WC__Work_Centre_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON Non_Conformance_1.Company__COMPANYS_ID = dbo.COMPANYS.Company_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SFDC_Transactions_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[SFDC_Transactions_List]
AS
SELECT     dbo.SFDC_Transactions.SFDC_Transactions_ID, dbo.SFDC_Transactions.Employee_No AS [Employee No], dbo.SFDC_Transactions.WorkCentre, 
                      dbo.SFDC_Transactions.Work_Order AS [Work Order], dbo.SFDC_Transactions.Transaction_Dbase AS [Transaction Dbase], dbo.SFDC_Transactions.Transaction_ID, 
                      dbo.SFDC_Transactions.To_Be_Processed AS [To Be Processed], dbo.SFDC_Transactions.TimeEntry__TIMES_ID, 
                      dbo.SFDC_Transactions.Time_Entry_Added AS [Time Entry Added], dbo.SFDC_Transactions.TA_Added AS [TA Added], 
                      dbo.SFDC_Transactions.TA__Time_in_Attendance_ID, CONVERT(varchar(10), dbo.SFDC_Transactions.Start_Time, 108) AS [Start Time], CONVERT(varchar(10), 
                      dbo.SFDC_Transactions.Start_Date, 103) AS [Start Date], dbo.SFDC_Transactions.Set_Up AS [Set Up], dbo.SFDC_Transactions.Qty_Complete AS [Qty Complete], 
                      dbo.SFDC_Transactions.Operation, dbo.SFDC_Transactions.Modified, dbo.SFDC_Transactions.Live, dbo.SFDC_Transactions.Error_Warning AS [Error Warning], 
                      dbo.SFDC_Transactions.Entry_Type AS [Entry Type], CONVERT(varchar(10), dbo.SFDC_Transactions.End_Date, 103) AS [End Date], dbo.SFDC_Transactions.Complete, 
                      CONVERT(varchar(10), dbo.SFDC_Transactions.End_Time, 108) AS [End Time], dbo.SFDC_Transactions.Qty_Scrapped AS [Qty Scrapped], 
                      dbo.SFDC_Transactions.ReWork_Code AS [ReWork Code], dbo.Employee.Name, dbo.Employee.Forename, dbo.Employee.Surname, 
                      dbo.Work_Centre.WC_Name
FROM         dbo.SFDC_Transactions LEFT OUTER JOIN
                      dbo.Work_Centre ON dbo.SFDC_Transactions.WorkCentre = dbo.Work_Centre.Work_Centre_No LEFT OUTER JOIN
                      dbo.Employee ON dbo.SFDC_Transactions.Employee_No = dbo.Employee.Employee_No
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'SFDC_Transactions_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[19] 4[56] 2[6] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "SFDC_Transactions"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Work_Centre"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 239
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Employee"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 31
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1875
         Width = 2010
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 7155
         Alias = 900
         Tab' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'SFDC_Transactions_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'SFDC_Transactions_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'le = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'SFDC_Transactions_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'SFDC_Transactions_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'SFDC_Transactions_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WC_Process_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WC_Process_list]
AS
SELECT     dbo.WC_Process.WC_Process_Id, dbo.Process.Process_Id, dbo.Process.Process_Name AS [Process Name], 
                      dbo.Process.Process_Description AS [Process Description], dbo.Work_Centre.Work_Centre_No AS [WC No], 
                      dbo.Work_Centre.WC_Name AS [WC Name], dbo.Work_Centre.Description AS [WC Description], dbo.WC_Process.WC_ID
FROM         dbo.Process RIGHT OUTER JOIN
                      dbo.WC_Process ON dbo.Process.Process_Id = dbo.WC_Process.Process_Id LEFT OUTER JOIN
                      dbo.Work_Centre ON dbo.WC_Process.WC_ID = dbo.Work_Centre.Work_Centre_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Centre_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Centre_Drop_List]
AS
SELECT     Work_Centre_id, Work_Centre_No AS [No], WC_Name AS Name, Description, Deleted
FROM         dbo.Work_Centre
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Non_Conformance_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Non_Conformance_List]
AS
SELECT     Non_Conformance_1.Non_Conformance_ID, Non_Conformance_1.Non_Conformance_No AS [NC No], dbo.COMPANYS.Name AS [Company Name], 
                      dbo.Part.Part_No AS [Part No], dbo.WORK_ORDERS.WO_No AS [WO No], dbo.CONTACTS.Name AS [Contact Name], 
                      Employee_1.Name AS [Recorded By], Non_Conformance_1.Date_Recorded AS [Date Recorded], Non_Conformance_1.Qty AS [NC Qty], 
                      Non_Conformance_1.Status, Non_Conformance_1.Date_Identified AS [Date Identified], 
                      Non_Conformance_1.NC_Type_Description_Non_RTF AS [NC Type Description], 
                      Non_Conformance_1.NC_Cause_Description_Non_RTF AS [NC Cause Description], Non_Conformance_1.Closed, 
                      Non_Conformance_1.Date_Closed AS [Date Closed], Employee_2.Name AS [Identified By], Non_Conformance_1.Parent__Non_Conformance_ID, 
                      Non_Conformance_1.Non_Conformance_No AS [Parent NC No], Non_Conformance_1.No_Sub_Items AS [No Sub Items], 
                      Non_Conformance_1.Company__COMPANYS_ID, Non_Conformance_1.WORK_ORDERS__WORK_ORDERS_ID, 
                      Non_Conformance_1.Batch_Qty AS [Batch Qty], dbo.Work_Centre.WC_Name AS WC, Employee_3.Name AS Culprit, 
                      UDData_1.UDData_Data AS UserDefinable1, UDData_2.UDData_Data AS UserDefinable2, UDData_3.UDData_Data AS UserDefinable3, 
                      UDData_4.UDData_Data AS UserDefinable4, UDData_5.UDData_Data AS UserDefinable5, UDData_6.UDData_Data AS UserDefinable6, 
                      dbo.Non_Conformance_Origin.NC_Origin AS Origin, dbo.Non_Conformance_Cause.Cause_Type AS Cause, 
                      dbo.Non_Conformance_Type.NC_Type AS Type, dbo.Sales_Order_Lines.Contract_No AS [Contract No]
FROM         dbo.UDData UDData_3 RIGHT OUTER JOIN
                      dbo.UDData UDData_4 RIGHT OUTER JOIN
                      dbo.Part RIGHT OUTER JOIN
                      dbo.Employee Employee_1 RIGHT OUTER JOIN
                      dbo.Non_Conformance Non_Conformance_1 LEFT OUTER JOIN
                      dbo.Sales_Order_Lines ON 
                      Non_Conformance_1.Contract_Id__Sales_Order_Lines_ID = dbo.Sales_Order_Lines.Sales_Order_Lines_ID LEFT OUTER JOIN
                      dbo.Non_Conformance_Type ON 
                      Non_Conformance_1.NC__Non_Conformance_Type_ID = dbo.Non_Conformance_Type.Non_Conformance_Type_ID LEFT OUTER JOIN
                      dbo.Non_Conformance_Cause ON 
                      Non_Conformance_1.Non_Conformance_Cause_ID = dbo.Non_Conformance_Cause.Non_Conformance_Cause_ID LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON Non_Conformance_1.WORK_ORDERS__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Non_Conformance_Origin ON 
                      Non_Conformance_1.NC__Non_Conformance_Origin_ID = dbo.Non_Conformance_Origin.Non_Conformance_Origin_ID LEFT OUTER JOIN
                      dbo.Employee Employee_2 ON Non_Conformance_1.Identified_by__Employee_ID = Employee_2.Employee_Id ON 
                      Employee_1.Employee_Id = Non_Conformance_1.Employee__Employee_ID LEFT OUTER JOIN
                      dbo.Employee Employee_3 ON Non_Conformance_1.Culprit__Employee_ID = Employee_3.Employee_Id LEFT OUTER JOIN
                      dbo.CONTACTS ON Non_Conformance_1.Contact__CONTACTS_ID = dbo.CONTACTS.Contact_id ON 
                      dbo.Part.Part_Id = Non_Conformance_1.Part__Part_ID LEFT OUTER JOIN
                      dbo.UDData UDData_6 ON Non_Conformance_1.UDF6__UDData_ID = UDData_6.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_5 ON Non_Conformance_1.UDF5__UDData_ID = UDData_5.UDData_ID ON 
                      UDData_4.UDData_ID = Non_Conformance_1.UDF4__UDData_ID ON 
                      UDData_3.UDData_ID = Non_Conformance_1.UDF3__UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_2 ON Non_Conformance_1.UDF2__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_1 ON Non_Conformance_1.UDF1__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.Work_Centre ON Non_Conformance_1.WC__Work_Centre_ID = dbo.Work_Centre.Work_Centre_id LEFT OUTER JOIN
                      dbo.COMPANYS ON Non_Conformance_1.Company__COMPANYS_ID = dbo.COMPANYS.Company_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Wo_Route_SChedule_drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Wo_Route_SChedule_drop_List]
AS
SELECT     dbo.Wo_Route_SChedule.Wo_Route_SChedule_ID, dbo.WORK_ORDERS.WO_No AS [WO No], dbo.Route.Op_No AS [Op No], 
                      dbo.Route.Description AS [OP Description], dbo.Wo_Route_SChedule.Complete, dbo.Wo_Route_SChedule.Date_Complete AS [Date Complete], 
                      dbo.Wo_Route_SChedule.Do_Not_Use AS [Do Not Use], dbo.Wo_Route_SChedule.Last_Start_Date AS [Last Start Date], 
                      dbo.Wo_Route_SChedule.Priority, dbo.Wo_Route_SChedule.Qty_Complete AS [Qty Complete], dbo.Wo_Route_SChedule.Route_Id, 
                      dbo.Wo_Route_SChedule.Scheduled_Complete_date AS [Scheduled Complete date], dbo.Wo_Route_SChedule.Start_Date AS [Start Date], 
                      dbo.Wo_Route_SChedule.WO_ID, dbo.Wo_Route_SChedule.WorkCentre_ID, dbo.Wo_Route_SChedule.Actual_Run_Time AS [Actual Run Time], 
                      dbo.Wo_Route_SChedule.Actual_Setup_Time AS [Actual Setup Time], dbo.Wo_Route_SChedule.Conflict, dbo.Wo_Route_SChedule.Early, 
                      dbo.Wo_Route_SChedule.First_Start_Date AS [First Start Date], dbo.Wo_Route_SChedule.Last_End_Date AS [Last End Date], 
                      dbo.Wo_Route_SChedule.Late, dbo.Wo_Route_SChedule.Locked, dbo.Wo_Route_SChedule.Material_Arrival_Date AS [Material Arrival Date], 
                      dbo.Wo_Route_SChedule.Material_Id, dbo.Wo_Route_SChedule.Per_Complete AS [Per Complete], 
                      dbo.Wo_Route_SChedule.Problems_Accepted AS [Problems Accepted], dbo.Wo_Route_SChedule.Requires_Material AS [Requires Material], 
                      dbo.Wo_Route_SChedule.Seq_No AS [Seq No], dbo.Wo_Route_SChedule.Started, dbo.Wo_Route_SChedule.Stopped, 
                      dbo.Wo_Route_SChedule.Use_Setup_Time AS [Use Setup Time], dbo.Wo_Route_SChedule.Setup_Time AS [Setup Time], 
                      dbo.Wo_Route_SChedule.Run_Time AS [Run Time], dbo.Wo_Route_SChedule.Inter_Op_Time AS [Inter Op Time], 
                      dbo.Wo_Route_SChedule.Date_Started AS [Date Started], dbo.Work_Centre.WC_Name AS [WC Name], dbo.Work_Centre.Work_Centre_No AS [WC No], 
                      dbo.Part.Part_No AS [Part No], dbo.Part.Description AS [Part Description], dbo.Route.Deleted, dbo.Process.Process_Description AS Process
FROM         dbo.Wo_Route_SChedule LEFT OUTER JOIN
                      dbo.Process RIGHT OUTER JOIN
                      dbo.Route ON dbo.Process.Process_Id = dbo.Route.Process__Process_id ON 
                      dbo.Wo_Route_SChedule.Route_Id = dbo.Route.Route_id LEFT OUTER JOIN
                      dbo.Work_Centre ON dbo.Wo_Route_SChedule.WorkCentre_ID = dbo.Work_Centre.Work_Centre_id LEFT OUTER JOIN
                      dbo.Part RIGHT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Part.Part_Id = dbo.WORK_ORDERS.Part_ID__Part_id ON 
                      dbo.Wo_Route_SChedule.WO_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contract_View_Po_Count]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Contract_View_Po_Count]
AS
SELECT     Allocation__Allocations_ID, COUNT(Po_Lines_ID) AS [No POs], MIN(Po_Lines_ID) AS First_Po_Line_Id
FROM         dbo.Po_Lines
GROUP BY Allocation__Allocations_ID
HAVING      (Allocation__Allocations_ID <> 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PO_Total_By_WO]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PO_Total_By_WO]
AS
SELECT     Part__Part_id, Wo__WORK_ORDERS_ID, SUM(Qty) AS Qty
FROM         dbo.Po_Lines
GROUP BY Part__Part_id, Wo__WORK_ORDERS_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[First_PO]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[First_PO]
AS
SELECT        TOP (100) PERCENT MIN(Po_Lines_ID) AS [PO Line ID], Wo__WORK_ORDERS_ID
FROM            dbo.Po_Lines
GROUP BY Wo__WORK_ORDERS_ID
ORDER BY [PO Line ID]
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Manu_PO]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Manu_PO]
AS
SELECT     dbo.Po_Lines.Wo__WORK_ORDERS_ID, SUM(dbo.Po_Lines.Total) AS TotalMat
FROM         dbo.Po_Lines LEFT OUTER JOIN
                      dbo.Part ON dbo.Po_Lines.Part__Part_id = dbo.Part.Part_Id
WHERE     (dbo.Part.Type__Part_Type_Id = 1) OR
                      (dbo.Part.Type__Part_Type_Id = 9)
GROUP BY dbo.Po_Lines.Wo__WORK_ORDERS_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_History_Trans]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_History_Trans]
AS
SELECT     dbo.Stock_Transaction.part__Part_id, dbo.Stock_Transaction.Stock_Transaction_ID, dbo.Stock_Transaction_Type.Transaction_Type AS [Transaction Type], 
                      dbo.Stock_Transaction.qty, dbo.Stock_Transaction.Transaction_date AS Date, dbo.Employee.Name AS Employee, dbo.WORK_ORDERS.WO_No AS [WO No], 
                      dbo.Purchase_Order.Po_No AS [PO No], dbo.Delivery.Advice_No AS [Advice No], dbo.Stock_Transaction.Notes_Non_RTF AS Notes, 
                      dbo.Stock_Transaction.By_Stock_Take AS [By Stock Take], dbo.Stock_Transaction.Scrap, dbo.Stock_Transaction.Previous_Qty AS [Previous Qty]
FROM         dbo.Purchase_Order RIGHT OUTER JOIN
                      dbo.Po_Lines ON dbo.Purchase_Order.Purchase_Order_ID = dbo.Po_Lines.Po__PO_ID RIGHT OUTER JOIN
                      dbo.Stock_Transaction ON dbo.Po_Lines.Po_Lines_ID = dbo.Stock_Transaction.PO_Line_ID LEFT OUTER JOIN
                      dbo.Delivery_Item ON dbo.Stock_Transaction.Delivery_Item_ID = dbo.Delivery_Item.Delivery_Item_ID LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Stock_Transaction.WO_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Stock_Transaction_Type ON dbo.Stock_Transaction.Transaction_Type_id = dbo.Stock_Transaction_Type.Stock_Transaction_Type_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.Stock_Transaction.Employee_id = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.Delivery ON dbo.Delivery_Item.Delivery__Delivery_id = dbo.Delivery.Delivery_ID
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Part_History_Trans', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -96
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Purchase_Order"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 341
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Po_Lines"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Stock_Transaction"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 232
            End
            DisplayFlags = 280
            TopColumn = 10
         End
         Begin Table = "Delivery_Item"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 303
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Stock_Transaction_Type"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 695
               Right = 262
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Employee"
            Begin Extent = 
               Top = 696
               Left = 38
               Bottom = 815
               Right = 267
   ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Part_History_Trans'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Part_History_Trans', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'         End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Delivery"
            Begin Extent = 
               Top = 816
               Left = 38
               Bottom = 935
               Right = 278
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Part_History_Trans'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Part_History_Trans', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Part_History_Trans'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Transaction_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Transaction_List]
AS
SELECT     dbo.Stock_Transaction.Stock_Transaction_ID, dbo.Stock_Transaction.qty, dbo.Stock_Transaction.Transaction_date, dbo.Stock_Transaction.part__Part_id, 
                      dbo.Stock_Transaction.Employee_id, dbo.Stock_Transaction_Type.Transaction_Type AS Type, dbo.Employee.Name AS [By Employee], dbo.Part.Part_No AS [Part No], 
                      dbo.Part.Description, dbo.Group_Code.Group_Code AS [Group Code], dbo.UOM.Unit_of_Measure AS UOM, dbo.WORK_ORDERS.WO_No, dbo.Purchase_Order.Po_No, 
                      dbo.COMPANYS.Name AS Supplier, dbo.Delivery.Advice_No, dbo.Stock_Transaction.Notes_Non_RTF AS Notes, 
                      dbo.Stock_Transaction.By_Stock_Take AS [By Stock Take], dbo.Stock_Transaction.Scrap, dbo.Stock_Transaction.Cost, 
                      dbo.Stock_Transaction.Previous_Qty AS [Previous Qty]
FROM         dbo.Po_Lines LEFT OUTER JOIN
                      dbo.Purchase_Order LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Purchase_Order.Supplier__COMPANYS_ID = dbo.COMPANYS.Company_Id ON 
                      dbo.Po_Lines.Po__PO_ID = dbo.Purchase_Order.Purchase_Order_ID RIGHT OUTER JOIN
                      dbo.Delivery RIGHT OUTER JOIN
                      dbo.Delivery_Item ON dbo.Delivery.Delivery_ID = dbo.Delivery_Item.Delivery__Delivery_id RIGHT OUTER JOIN
                      dbo.Stock_Transaction ON dbo.Delivery_Item.Delivery_Item_ID = dbo.Stock_Transaction.Delivery_Item_ID ON 
                      dbo.Po_Lines.Po_Lines_ID = dbo.Stock_Transaction.PO_Line_ID LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Stock_Transaction.WO_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Stock_Transaction_Type ON dbo.Stock_Transaction.Transaction_Type_id = dbo.Stock_Transaction_Type.Stock_Transaction_Type_ID LEFT OUTER JOIN
                      dbo.UOM RIGHT OUTER JOIN
                      dbo.Part ON dbo.UOM.UOM_ID = dbo.Part.Unit_of_measure__Uom_id LEFT OUTER JOIN
                      dbo.Group_Code ON dbo.Part.Groupcode__Groupcode_id = dbo.Group_Code.Groupcode_Id ON 
                      dbo.Stock_Transaction.part__Part_id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Employee ON dbo.Stock_Transaction.Employee_id = dbo.Employee.Employee_Id
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Stock_Transaction_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -480
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Po_Lines"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Purchase_Order"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 341
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Delivery"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 278
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Delivery_Item"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 303
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Stock_Transaction"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 232
            End
            DisplayFlags = 280
            TopColumn = 10
         End
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 726
               Left = 38
               Bottom = 845
               Right = 319
            End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Stock_Transaction_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Stock_Transaction_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Stock_Transaction_Type"
            Begin Extent = 
               Top = 846
               Left = 38
               Bottom = 935
               Right = 262
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UOM"
            Begin Extent = 
               Top = 606
               Left = 270
               Bottom = 725
               Right = 441
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 936
               Left = 38
               Bottom = 1055
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Group_Code"
            Begin Extent = 
               Top = 1056
               Left = 38
               Bottom = 1175
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Employee"
            Begin Extent = 
               Top = 1176
               Left = 38
               Bottom = 1295
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 21
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 1485
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Stock_Transaction_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Stock_Transaction_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Stock_Transaction_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SubContract_Delivery_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[SubContract_Delivery_Drop_List]
AS
SELECT     dbo.SubContract_Delivery.SubContract_Delivery_ID AS [Consignment Note], dbo.SubContract_Delivery.Order_No AS [Order No], 
                      dbo.SubContract_Delivery.Batch_Qty AS [Batch Qty], dbo.SubContract_Delivery.Batch_No AS [Batch No], dbo.SubContract_Delivery.Date_Created AS [Date Created], 
                      dbo.Employee.Name AS [Created By], dbo.Purchase_Order.Po_No AS [PO No], dbo.Part.Part_No AS [PO Line Part], dbo.Po_Lines.Total_Qty AS [PO Line Qty], 
                      dbo.Po_Lines.Price_Quoted AS [PO Line Price], dbo.Po_Lines.Total AS [PO Line Total], dbo.SubContract_Delivery.SubCon__Po_Lines_ID
FROM         dbo.Purchase_Order RIGHT OUTER JOIN
                      dbo.Po_Lines ON dbo.Purchase_Order.Purchase_Order_ID = dbo.Po_Lines.Po__PO_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.Po_Lines.Part__Part_id = dbo.Part.Part_Id RIGHT OUTER JOIN
                      dbo.SubContract_Delivery ON dbo.Po_Lines.Po_Lines_ID = dbo.SubContract_Delivery.SubCon__Po_Lines_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.SubContract_Delivery.Created_By = dbo.Employee.Employee_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Material_PO]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Material_PO]
AS
SELECT     dbo.Po_Lines.Wo__WORK_ORDERS_ID, SUM(dbo.Po_Lines.Total) AS TotalMat
FROM         dbo.Po_Lines LEFT OUTER JOIN
                      dbo.Part ON dbo.Po_Lines.Part__Part_id = dbo.Part.Part_Id
WHERE     (dbo.Part.Type__Part_Type_Id <> 3)
GROUP BY dbo.Po_Lines.Wo__WORK_ORDERS_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PO_Oustanding]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PO_Oustanding]
AS
SELECT     dbo.Po_Lines.Part__Part_id, dbo.Po_Lines.Po_Lines_ID, dbo.Po_Lines.Status__Purchase_Order_Status_id, 
                      dbo.Po_Lines.Total_Qty / dbo.Conversions.Multiply_By - dbo.Po_Lines.Qty_Delivered / dbo.Conversions.Multiply_By + dbo.Po_Lines.Qty_Returned / dbo.Conversions.Multiply_By
                       AS Outstanding
FROM         dbo.Po_Lines LEFT OUTER JOIN
                      dbo.Conversions ON dbo.Po_Lines.UOM__Conversions_ID = dbo.Conversions.Conversion_Id
WHERE     (dbo.Po_Lines.Confirmed <> 0) AND (dbo.Po_Lines.Cancelled = 0) AND (dbo.Po_Lines.Complete = 0) AND 
                      (dbo.Po_Lines.Total_Qty / dbo.Conversions.Multiply_By - dbo.Po_Lines.Qty_Delivered / dbo.Conversions.Multiply_By + dbo.Po_Lines.Qty_Returned / dbo.Conversions.Multiply_By
                       > 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Po_Line_Delivery_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Po_Line_Delivery_List]
AS
SELECT     dbo.Po_Line_Delivery.Po_Line_Delivery_ID, dbo.Po_Line_Delivery.Modified, dbo.Po_Line_Delivery.Parent__Po_Lines_ID, 
                      dbo.Po_Line_Delivery.Date_Required AS [Date Required], dbo.Po_Line_Delivery.Date_Promised AS [Date Promised], dbo.Po_Line_Delivery.Qty, 
                      dbo.Po_Line_Delivery.Qty_Delivered AS [Qty Delivered], dbo.Po_Line_Delivery.Our_Reference AS [Our Reference], dbo.Employee.Name AS [For Employee], 
                      dbo.WORK_ORDERS.WO_No AS [WO No], dbo.Sales_Order_Lines.Contract_No AS [Contract No], 
                      dbo.Po_Line_Delivery.Qty - (dbo.Po_Line_Delivery.Qty_Delivered - dbo.Sales_Order_Lines.Qty_Returned) AS [Qty Outstanding], 
                      dbo.Purchase_Order.Po_No AS [PO No], dbo.Part.Part_No AS [Part No]
FROM         dbo.Part RIGHT OUTER JOIN
                      dbo.Po_Lines ON dbo.Part.Part_Id = dbo.Po_Lines.Part__Part_id LEFT OUTER JOIN
                      dbo.Purchase_Order ON dbo.Po_Lines.Po__PO_ID = dbo.Purchase_Order.Purchase_Order_ID RIGHT OUTER JOIN
                      dbo.Po_Line_Delivery ON dbo.Po_Lines.Po_Lines_ID = dbo.Po_Line_Delivery.Parent__Po_Lines_ID LEFT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.Po_Line_Delivery.SO__Sales_Order_Lines_ID = dbo.Sales_Order_Lines.Sales_Order_Lines_ID LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Po_Line_Delivery.WO__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.Po_Line_Delivery.ForEmployee__Employee_ID = dbo.Employee.Employee_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_SubCon_PO]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_SubCon_PO]
AS
SELECT     dbo.Po_Lines.Wo__WORK_ORDERS_ID, SUM(dbo.Po_Lines.Total) AS TotalMat
FROM         dbo.Po_Lines LEFT OUTER JOIN
                      dbo.Part ON dbo.Po_Lines.Part__Part_id = dbo.Part.Part_Id
WHERE     (dbo.Part.Type__Part_Type_Id = 3)
GROUP BY dbo.Po_Lines.Wo__WORK_ORDERS_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SubContract_Delivery_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[SubContract_Delivery_List]
AS
SELECT     dbo.SubContract_Delivery.SubContract_Delivery_ID AS [Consignment Note], dbo.SubContract_Delivery.Order_No AS [Order No], 
                      dbo.SubContract_Delivery.Batch_No AS [Batch No], dbo.SubContract_Delivery.Batch_Qty AS [Batch Qty], dbo.Employee.Name AS [Created By], 
                      dbo.SubContract_Delivery.Date_Created AS [Date Created], dbo.Purchase_Order.Po_No AS [PO No], dbo.Part.Part_No AS [PO Line Part], 
                      dbo.Po_Lines.Total_Qty AS [PO LineQty], dbo.Po_Lines.Price_Quoted AS [PO Line Price], dbo.Po_Lines.Total AS [PO Line Total], dbo.SubContract_Delivery.Modified, 
                      dbo.SubContract_Delivery.Modified_By, dbo.SubContract_Delivery.SubCon__Po_Lines_ID, dbo.WORK_ORDERS.WO_No AS [WO Num]
FROM         dbo.WORK_ORDERS RIGHT OUTER JOIN
                      dbo.Po_Lines ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Po_Lines.Wo__WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Purchase_Order ON dbo.Po_Lines.Po__PO_ID = dbo.Purchase_Order.Purchase_Order_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.Po_Lines.Part__Part_id = dbo.Part.Part_Id RIGHT OUTER JOIN
                      dbo.SubContract_Delivery ON dbo.Po_Lines.Po_Lines_ID = dbo.SubContract_Delivery.SubCon__Po_Lines_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.SubContract_Delivery.Created_By = dbo.Employee.Employee_Id
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'SubContract_Delivery_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Purchase_Order"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 341
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Po_Lines"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 31
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SubContract_Delivery"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 296
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Employee"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 88
               Left = 446
               Bottom = 207
               Right = 727
            End
            DisplayFlags = 280
            TopColumn = 37
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
     ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'SubContract_Delivery_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'SubContract_Delivery_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'    Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 2205
         Alias = 1890
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'SubContract_Delivery_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'SubContract_Delivery_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'SubContract_Delivery_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[MRP_Allocations]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[MRP_Allocations]
AS
SELECT     Allocations_ID, Cancelled, Complete, WO__Works_order_Id, Part__Part_Id AS Part_id, Part_type__Allocation_Part_type_id
FROM         dbo.Allocations
WHERE     (Cancelled = 0) AND (Complete = 0) AND (Part_type__Allocation_Part_type_id = 1)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Issues_Required_Temp]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Issues_Required_Temp]
AS
SELECT     dbo.Allocations.Allocations_ID, 
                      dbo.WORK_ORDERS.Total_Qty * dbo.WORK_ORDERS.Qty_Complete - dbo.Allocations.Qty_Complete AS [Actual Qty]
FROM         dbo.Allocations LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Allocations.Allocations_ID = dbo.WORK_ORDERS.Allocation_Id__Allocation_id
WHERE     (dbo.WORK_ORDERS.Total_Qty * dbo.WORK_ORDERS.Qty_Complete - dbo.Allocations.Qty_Complete > 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Non_Firm_Allocations]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Non_Firm_Allocations]
AS
SELECT     Part__Part_Id, COUNT(Allocations_ID) AS count, SUM(Qty) AS Non_Firm_Required
FROM         dbo.Allocations
WHERE     (Cancelled = 0) AND (Complete = 0) AND (Qty > 0) AND (Confirmed = 0)
GROUP BY Part__Part_Id
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Non_Firm_Allocations', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[34] 4[27] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Allocations"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 192
               Right = 317
            End
            DisplayFlags = 280
            TopColumn = 21
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 2820
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Non_Firm_Allocations'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Non_Firm_Allocations', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Non_Firm_Allocations'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Required_Reconcile]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Required_Reconcile]
AS
SELECT     dbo.Allocations.Complete, dbo.Allocations.Cancelled, dbo.Allocations.Part__Part_Id, dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete AS Oustanding, 
                      dbo.Allocations.Allocations_ID, dbo.Allocations.Confirmed, dbo.Sales_Order_Lines.Sales_Order_Lines_ID, dbo.SALES_ORDERS.Sales_No
FROM         dbo.SALES_ORDERS RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.SALES_ORDERS.SALES_ORDERS_ID = dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID RIGHT OUTER JOIN
                      dbo.Allocations ON dbo.Sales_Order_Lines.Sales_Order_Lines_ID = dbo.Allocations.SO__Sales_Order_Line_id
WHERE     (dbo.Allocations.Complete = 0) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete > 0) AND 
                      (dbo.Allocations.Confirmed = 1) AND (NOT (dbo.Sales_Order_Lines.Sales_Order_Lines_ID IS NULL)) AND (NOT (dbo.SALES_ORDERS.Sales_No IS NULL)) OR
                      (dbo.Allocations.Complete = 0) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Total_Qty - dbo.Allocations.Qty_Complete > 0) AND 
                      (dbo.Allocations.Confirmed = 1) AND (dbo.Sales_Order_Lines.Sales_Order_Lines_ID IS NULL) AND (dbo.SALES_ORDERS.Sales_No IS NULL)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_history_Req]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_history_Req]
AS
SELECT     dbo.Allocations.Part__Part_Id, dbo.Allocations.Allocations_ID, dbo.Allocations.Qty, dbo.Allocations.Date_Created AS [Date Created], 
                      dbo.Allocations.Date_Required AS [Date Required], dbo.Allocations.Qty_Processed AS [Qty Processed], 
                      dbo.Allocations.Qty_Complete AS [Qty Complete], dbo.Sales_Order_Lines.Qty AS [Sales Qty], dbo.Sales_Order_Lines.Qty_Delivered AS [Qty Delivered],
                       dbo.Sales_Order_Lines.Contract_No AS [Contract No], dbo.COMPANYS.Name AS Customer, dbo.WORK_ORDERS.WO_No AS [for WO No], 
                      dbo.Allocations.Total_Qty
FROM         dbo.WORK_ORDERS RIGHT OUTER JOIN
                      dbo.COMPANYS RIGHT OUTER JOIN
                      dbo.Allocations LEFT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.Allocations.SO__Sales_Order_Line_id = dbo.Sales_Order_Lines.Sales_Order_Lines_ID LEFT OUTER JOIN
                      dbo.SALES_ORDERS ON dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID = dbo.SALES_ORDERS.SALES_ORDERS_ID ON 
                      dbo.COMPANYS.Company_Id = dbo.SALES_ORDERS.Customers_ID__Companys ON 
                      dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Allocations.WO__Works_order_Id
WHERE     (dbo.Allocations.Complete = 0) AND (dbo.Allocations.Cancelled = 0) AND (dbo.Allocations.Total_Qty > dbo.Allocations.Qty_Complete)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contract_Allocations_Bom]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Contract_Allocations_Bom]
AS
SELECT     dbo.Allocations.Allocations_ID, dbo.Allocations.Bom_No__Bom_Id, dbo.Allocations.Part__Part_Id, dbo.Part.Part_No, 
                      dbo.Allocations.SO__Sales_Order_Line_id, dbo.Allocations.SO_Delivery_Schedule_id, dbo.Allocations.Type__Allocation_Type_Id, 
                      dbo.Allocations.Confirmed, dbo.Allocations.Qty, dbo.Allocations.Qty_Complete, dbo.Allocations.Qty_Processed, 
                      dbo.Allocations.Part_type__Allocation_Part_type_id, dbo.Allocations.Cancelled, dbo.Allocations.Complete, dbo.Allocations.Date_Required, 
                      dbo.Allocations.Length, dbo.Allocations.Breadth, dbo.Allocations.WO__Works_order_Id, dbo.WORK_ORDERS.WORK_ORDERS_ID, dbo.Part.Parent, 
                      dbo.WORK_ORDERS.So_Line_Id AS WO_So_Line_Id, dbo.WORK_ORDERS.SO_Delivery_Schedule_id AS WO_SO_Delivery_Schedule_id, 
                      dbo.Part.Type__Part_Type_Id, dbo.Part.Required, dbo.Part.On_Order, dbo.Part.In_Stock, dbo.Allocations.Total_Qty
FROM         dbo.Allocations LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Allocations.Allocations_ID = dbo.WORK_ORDERS.Allocation_Id__Allocation_id LEFT OUTER JOIN
                      dbo.Part ON dbo.Allocations.Part__Part_Id = dbo.Part.Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_revisions_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_revisions_List]
AS
SELECT     dbo.Part_Revision.Part_revision_Id, dbo.Part_Revision.Part__Part_id, dbo.Part_Revision.Date_Changed AS [Date Changed], 
                      dbo.Part_Revision.Revision, dbo.Employee.Name AS [Chnaged By], dbo.Part_Revision.Why_Changed_Non_Rtf AS [Why Changed]
FROM         dbo.Part_Revision LEFT OUTER JOIN
                      dbo.Employee ON dbo.Part_Revision.Change_By__Employee_id = dbo.Employee.Employee_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Scrap_Types_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Scrap_Types_List]
AS
SELECT     Scrap_type_id, Scrap_Type AS [Scrap Type], Fixed_Qty AS [Fixed Qty], Variable
FROM         dbo.Scrap_Types
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Scrap_Types_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Scrap_Types_Drop_List]
AS
SELECT     Scrap_type_id, Scrap_Type, Fixed_Qty, Variable
FROM         dbo.Scrap_Types
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Purchase_Enquiry_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Purchase_Enquiry_List]
AS
SELECT     dbo.Purchase_Enquiry.Purchase_Enquiry_ID, dbo.Purchase_Enquiry.Purchase_Enquiry_No AS [Purchase Enquiry No], 
                      dbo.Purchase_Enquiry.Date_Required AS [Date Required], dbo.Purchase_Enquiry.Urgent, dbo.Part.Part_No AS [Part No], dbo.Part.Description, 
                      dbo.Purchase_Enquiry_Status.Purchase_Enquiry_Status AS Status, dbo.Purchase_Enquiry.Part__Part_ID, dbo.Purchase_Enquiry.Created, 
                      dbo.Employee.Name AS [Created By], dbo.Sales_Order_Lines.Contract_No AS [Contract No], dbo.ENQUIRYS.Enquiry_No AS [Enquiry No], 
                      dbo.Group_Code.Group_Code
FROM         dbo.Group_Code RIGHT OUTER JOIN
                      dbo.Part ON dbo.Group_Code.Groupcode_Id = dbo.Part.Groupcode__Groupcode_id RIGHT OUTER JOIN
                      dbo.ENQUIRYS RIGHT OUTER JOIN
                      dbo.ENQUIRY_LINES ON dbo.ENQUIRYS.Enquiry_ID = dbo.ENQUIRY_LINES.Enquiry_Line__Enquiry_id RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines RIGHT OUTER JOIN
                      dbo.Purchase_Enquiry ON dbo.Sales_Order_Lines.Sales_Order_Lines_ID = dbo.Purchase_Enquiry.Sales__Sales_Order_Lines_ID ON 
                      dbo.ENQUIRY_LINES.Enquiry_Line_id = dbo.Purchase_Enquiry.Enq__ENQUIRY_LINES_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.Purchase_Enquiry.Created_By = dbo.Employee.Employee_Id ON dbo.Part.Part_Id = dbo.Purchase_Enquiry.Part__Part_ID LEFT OUTER JOIN
                      dbo.Purchase_Enquiry_Status ON dbo.Purchase_Enquiry.Status__Purchase_Enquiry_Status_ID = dbo.Purchase_Enquiry_Status.Purchase_Enquiry_Status_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Purchase_Enquiry_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Purchase_Enquiry_Drop_List]
AS
SELECT     dbo.Purchase_Enquiry.Purchase_Enquiry_ID, dbo.Purchase_Enquiry.Purchase_Enquiry_No AS [Purchase Enquiry No], 
                      dbo.Purchase_Enquiry.Date_Required AS [Date Required], dbo.Purchase_Enquiry.Urgent, dbo.Part.Part_No AS [Part No], dbo.Part.Description, 
                      dbo.Purchase_Enquiry_Status.Purchase_Enquiry_Status AS Status
FROM         dbo.Part RIGHT OUTER JOIN
                      dbo.Purchase_Enquiry ON dbo.Part.Part_Id = dbo.Purchase_Enquiry.Part__Part_ID LEFT OUTER JOIN
                      dbo.Purchase_Enquiry_Status ON 
                      dbo.Purchase_Enquiry.Status__Purchase_Enquiry_Status_ID = dbo.Purchase_Enquiry_Status.Purchase_Enquiry_Status_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SO_Invoice_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[SO_Invoice_List]
AS
SELECT     dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID AS [Sales Order ID], dbo.INVOICES.INVOICES_ID, dbo.INVOICES.Invoice_No AS [Invoice No], 
                      dbo.INVOICES.Date_Raised AS [Date Raised], dbo.INVOICES.Due_Date AS [Due Date], dbo.INVOICES.Sent_To_Accounts AS [Sent To Accounts], 
                      dbo.INVOICE_STATUS.invoice_Status AS Status, dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, 
                      dbo.INVOICES.Currency_Total_Exc_Vat AS [Total Exc Vat], dbo.INVOICES.Currency_Total_Vat AS Vat, dbo.INVOICES.Currency_Total_Inc_Vat AS [Total Inc Vat]
FROM         dbo.Invoice_Part INNER JOIN
                      dbo.INVOICES ON dbo.Invoice_Part.Invoice__INVOICES_ID = dbo.INVOICES.INVOICES_ID INNER JOIN
                      dbo.Sales_Order_Lines ON dbo.Invoice_Part.So_line__Sales_Order_Lines_ID = dbo.Sales_Order_Lines.Sales_Order_Lines_ID LEFT OUTER JOIN
                      dbo.MULTICURRENCY ON dbo.INVOICES.Currency__Currency_Id = dbo.MULTICURRENCY.MultiCurrency_ID LEFT OUTER JOIN
                      dbo.INVOICE_STATUS ON dbo.INVOICES.InvoiceStatus__INVOICE_STATUS_ID = dbo.INVOICE_STATUS.Invoice_Status_Id
GROUP BY dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID, dbo.INVOICES.INVOICES_ID, dbo.INVOICES.Invoice_No, dbo.INVOICES.Date_Raised, 
                      dbo.INVOICES.Due_Date, dbo.INVOICE_STATUS.invoice_Status, dbo.INVOICES.Sent_To_Accounts, dbo.MULTICURRENCY.MultiCurrency_Currency, 
                      dbo.INVOICES.Currency_Total_Exc_Vat, dbo.INVOICES.Currency_Total_Vat, dbo.INVOICES.Currency_Total_Inc_Vat
HAVING      (dbo.INVOICES.Invoice_No > '''')
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[INVOICES_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[INVOICES_Drop_List]
AS
SELECT     dbo.INVOICES.INVOICES_ID, dbo.INVOICES.Date_Raised AS [Date Raised], dbo.INVOICES.Due_Date AS [Due Date], dbo.INVOICES.Invoice_No AS [Invoice No], 
                      dbo.INVOICES.Sent_To_Accounts AS [Sent To Accounts], dbo.INVOICES.Tax_Date AS [Tax Date], dbo.COMPANYS.Company_No AS [Company No], 
                      dbo.COMPANYS.Name AS Company, dbo.INVOICE_STATUS.invoice_Status AS Status, dbo.CONTACTS.Name AS Contact
FROM         dbo.INVOICE_STATUS RIGHT OUTER JOIN
                      dbo.INVOICES ON dbo.INVOICE_STATUS.Invoice_Status_Id = dbo.INVOICES.InvoiceStatus__INVOICE_STATUS_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.INVOICES.ForCompany__COMPANYS_ID = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.CONTACTS ON dbo.INVOICES.Contact__CONTACTS_ID = dbo.CONTACTS.Contact_id
WHERE     (dbo.INVOICES.Invoice_No > '''')
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_History_Invoice]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_History_Invoice]
AS
SELECT     dbo.Invoice_Part.Part__Part_id, dbo.INVOICES.INVOICES_ID, dbo.Invoice_Part.Invoice_Part_ID, dbo.Invoice_Part.Qty, dbo.Invoice_Part.Price, 
                      dbo.Invoice_Part.Total, dbo.INVOICES.Date_Raised AS [Date Raised], dbo.COMPANYS.Company_No AS [Company No], 
                      dbo.COMPANYS.Name AS Customer, dbo.INVOICES.Invoice_No AS [Invoice No], dbo.INVOICES.Tax_Date AS [Tax Date]
FROM         dbo.COMPANYS RIGHT OUTER JOIN
                      dbo.INVOICES ON dbo.COMPANYS.Company_Id = dbo.INVOICES.ForCompany__COMPANYS_ID RIGHT OUTER JOIN
                      dbo.Invoice_Part ON dbo.INVOICES.INVOICES_ID = dbo.Invoice_Part.Invoice__INVOICES_ID
WHERE     (NOT (dbo.INVOICES.INVOICES_ID IS NULL))
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Invoices_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Invoices_List]
AS
SELECT     dbo.INVOICES.INVOICES_ID, dbo.INVOICES.Date_Raised AS [Date Raised], dbo.INVOICES.Due_Date AS [Due Date], dbo.INVOICES.Invoice_No AS [Invoice No], 
                      dbo.INVOICES.Sent_To_Accounts AS [Sent To Accounts], dbo.INVOICES.Tax_Date AS [Tax Date], dbo.COMPANYS.Company_No AS [Company No], 
                      dbo.COMPANYS.Name AS Company, dbo.Employee.Name AS [Sales Person], dbo.INVOICE_STATUS.invoice_Status AS Status, dbo.CONTACTS.Name AS Contact, 
                      dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, dbo.COMPANY_ADDRESS.Address1, dbo.COMPANY_ADDRESS.Address2, 
                      dbo.COMPANY_ADDRESS.Address3, dbo.COMPANY_ADDRESS.Postcode, dbo.INVOICES.Currency_Total_Exc_Vat AS [Total Exc Vat], 
                      dbo.INVOICES.Currency_Total_Vat AS Vat, dbo.INVOICES.Currency_Total_Inc_Vat AS [Total Inc Vat], dbo.INVOICES.Posted, 
                      dbo.INVOICES.ForCompany__COMPANYS_ID, dbo.INVOICES.Notes_Non_RTF AS Notes, UDData_6.UDData_Data AS UserDefinable1, 
                      UDData_1.UDData_Data AS UserDefinable2, UDData_3.UDData_Data AS UserDefinable3, UDData_2.UDData_Data AS UserDefinable4, 
                      UDData_4.UDData_Data AS UserDefinable5, UDData_5.UDData_Data AS UserDefinable6, dbo.COMPANYS.EU_Country_Code AS [EU Country Code], 
                      dbo.COMPANY_ADDRESS.Country, dbo.INVOICES.Paid AS [Invoice Paid], dbo.COMPANYS.Building, dbo.COMPANY_ADDRESS.Town, 
                      dbo.COMPANY_ADDRESS.County
FROM         dbo.COMPANYS RIGHT OUTER JOIN
                      dbo.MULTICURRENCY RIGHT OUTER JOIN
                      dbo.UDData AS UDData_4 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_5 RIGHT OUTER JOIN
                      dbo.INVOICES LEFT OUTER JOIN
                      dbo.Employee ON dbo.INVOICES.SalesPerson__Employee_ID = dbo.Employee.Employee_Id ON UDData_5.UDData_ID = dbo.INVOICES.UDF6__UDData_ID ON 
                      UDData_4.UDData_ID = dbo.INVOICES.UDF5__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON dbo.INVOICES.UDF4__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_3 ON dbo.INVOICES.UDF3__UDData_ID = UDData_3.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON dbo.INVOICES.UDF2__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_6 ON dbo.INVOICES.UDF1__UDData_ID = UDData_6.UDData_ID LEFT OUTER JOIN
                      dbo.COMPANY_ADDRESS ON dbo.INVOICES.Address__COMPANY_ADDRESS_ID = dbo.COMPANY_ADDRESS.Address_Id ON 
                      dbo.MULTICURRENCY.MultiCurrency_ID = dbo.INVOICES.Currency__Currency_Id LEFT OUTER JOIN
                      dbo.INVOICE_STATUS ON dbo.INVOICES.InvoiceStatus__INVOICE_STATUS_ID = dbo.INVOICE_STATUS.Invoice_Status_Id ON 
                      dbo.COMPANYS.Company_Id = dbo.INVOICES.ForCompany__COMPANYS_ID LEFT OUTER JOIN
                      dbo.CONTACTS ON dbo.INVOICES.Contact__CONTACTS_ID = dbo.CONTACTS.Contact_id
WHERE     (dbo.INVOICES.Invoice_No > '''')
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Invoice_Part_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Invoice_Part_Drop_List]
AS
SELECT     dbo.Invoice_Part.Invoice_Part_ID, dbo.Invoice_Part.Description_Non_Rtf AS Description, dbo.Invoice_Part.Invoice__INVOICES_ID, 
                      dbo.Invoice_Part.Paid, dbo.Invoice_Part.Price, dbo.Invoice_Part.Qty, dbo.Invoice_Part.Qty_Credited AS [Qty Credited], 
                      dbo.Invoice_Part.Ref AS Reference, dbo.Invoice_Part.Sent_To_Accounts AS [Sent To Accounts], dbo.Invoice_Part.So_line__Sales_Order_Lines_ID, 
                      dbo.Invoice_Part.Total, dbo.Invoice_Part.Value_Credited AS [Value Credited], dbo.Invoice_Part.VAT, dbo.Invoice_Part.VAT_Rate AS [VAT Rate], 
                      dbo.Part.Part_No AS [Part No], dbo.Delivery_Item.Ref AS [Delivery Ref], dbo.Invoice_Part_Status.Invoice_Item_Status AS [Line Status], 
                      dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name AS Company, dbo.INVOICES.Date_Raised AS [Date Raised], 
                      dbo.INVOICES.Invoice_No AS [Invoice No], dbo.INVOICES.Tax_Date AS [Tax Date], dbo.COMPANYS.Company_Id
FROM         dbo.Delivery_Item RIGHT OUTER JOIN
                      dbo.Invoice_Part_Status RIGHT OUTER JOIN
                      dbo.Invoice_Part LEFT OUTER JOIN
                      dbo.INVOICES ON dbo.Invoice_Part.Invoice__INVOICES_ID = dbo.INVOICES.INVOICES_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.INVOICES.ForCompany__COMPANYS_ID = dbo.COMPANYS.Company_Id ON 
                      dbo.Invoice_Part_Status.Invoice_Part_Status_ID = dbo.Invoice_Part.Status__Invoice_Part_Status_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.Invoice_Part.Part__Part_id = dbo.Part.Part_Id ON 
                      dbo.Delivery_Item.Delivery_Item_ID = dbo.Invoice_Part.delivery_Line__Delivery_Item_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accounts_Invoices]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Accounts_Invoices]
AS
SELECT     dbo.Invoice_Part.Invoice_Part_ID, dbo.Invoice_Part.Invoice__INVOICES_ID, dbo.Invoice_Part.System_Price, 
                      dbo.Invoice_Part.VAT / dbo.INVOICES.Currency_Rate AS Vat, dbo.Invoice_Part.Ref, dbo.Part.Part_No, dbo.COMPANYS.Company_No, 
                      dbo.INVOICES.Tax_Date, dbo.INVOICES.Invoice_No, dbo.INVOICES.ForCompany__COMPANYS_ID, dbo.Invoice_Part.Nominal__Nominals_ID, 
                      dbo.VAT.Nominal__Nominals_ID AS Vat_Nominal_Id, dbo.Nominal_Cost_Centre.Nominal_Cost_Centre_ID, dbo.INVOICES.Currency__Currency_Id, 
                      dbo.INVOICES.Currency_Rate, dbo.Invoice_Part.Total, dbo.INVOICES.Due_Date
FROM         dbo.COMPANYS RIGHT OUTER JOIN
                      dbo.INVOICES ON dbo.COMPANYS.Company_Id = dbo.INVOICES.ForCompany__COMPANYS_ID RIGHT OUTER JOIN
                      dbo.Invoice_Part LEFT OUTER JOIN
                      dbo.Nominal_Cost_Centre ON 
                      dbo.Invoice_Part.NCC__Nominal_Cost_Centre_ID = dbo.Nominal_Cost_Centre.Nominal_Cost_Centre_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.Invoice_Part.Part__Part_id = dbo.Part.Part_Id ON 
                      dbo.INVOICES.INVOICES_ID = dbo.Invoice_Part.Invoice__INVOICES_ID LEFT OUTER JOIN
                      dbo.VAT ON dbo.Invoice_Part.VAT_ID = dbo.VAT.VAT_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[First_SO_On_Inv]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[First_SO_On_Inv]
AS
SELECT     dbo.INVOICES.INVOICES_ID, MIN(dbo.SALES_ORDERS.Sales_No) AS [First SO], MIN(dbo.SALES_ORDERS.SO_Date) AS [First SO Date]
FROM         dbo.Invoice_Part RIGHT OUTER JOIN
                      dbo.INVOICES ON dbo.Invoice_Part.Invoice__INVOICES_ID = dbo.INVOICES.INVOICES_ID LEFT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.Invoice_Part.So_line__Sales_Order_Lines_ID = dbo.Sales_Order_Lines.Sales_Order_Lines_ID LEFT OUTER JOIN
                      dbo.SALES_ORDERS ON dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID = dbo.SALES_ORDERS.SALES_ORDERS_ID
GROUP BY dbo.INVOICES.INVOICES_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Invoices_List_With_Parts_For_Reports]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Invoices_List_With_Parts_For_Reports]
AS
SELECT     dbo.INVOICES.INVOICES_ID AS Invoice__INVOICES_ID, dbo.INVOICES.ForCompany__COMPANYS_ID, 
                      dbo.Invoice_Part.delivery_Line__Delivery_Item_ID, dbo.Invoice_Part.Part__Part_id, dbo.Invoice_Part.So_line__Sales_Order_Lines_ID, 
                      dbo.Invoice_Part.UOM__Conversions_ID, dbo.Invoice_Part.Invoice_Part_ID
FROM         dbo.INVOICES LEFT OUTER JOIN
                      dbo.Invoice_Part ON dbo.INVOICES.INVOICES_ID = dbo.Invoice_Part.Invoice__INVOICES_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Drop_List]
AS
SELECT     dbo.Stock.Stock_ID, dbo.Grn.Grn_No AS [Grn No], dbo.Stock.Batch_no AS [Batch no], dbo.Stock.Serial_no AS [Serial no], dbo.Stock.Cast_Heat_No AS [Cast Heat No], 
                      dbo.Stock.Qty, dbo.Stock.Length, dbo.Stock.Bredth, dbo.Stock.Cost, dbo.Stock.Date_In AS [Date In], dbo.Stock.From_WO__WO_id, dbo.Stock.Grn__Grn_id, 
                      dbo.Stock.Location__location_id, dbo.Stock.Notes, dbo.Stock.Original_Batch AS [Original Batch], dbo.Stock.OriginalQty, dbo.Stock.Part__Part_Id, 
                      dbo.Stock.Qty_Allocated AS [Qty Allocated], dbo.Stock.Qty_Available AS [Qty Available], dbo.Stock.Total_Qty AS [Total Qty], dbo.Stock.Use_By_Date AS [Use By Date], 
                      dbo.Stock_Status.Status, dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.LOCATION.Location, dbo.Building.Building_Id
FROM         dbo.Building RIGHT OUTER JOIN
                      dbo.LOCATION ON dbo.Building.Building_Id = dbo.LOCATION.Building__Building_id RIGHT OUTER JOIN
                      dbo.Stock ON dbo.LOCATION.Location_id = dbo.Stock.Location__location_id LEFT OUTER JOIN
                      dbo.Part ON dbo.Stock.Part__Part_Id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Stock_Status ON dbo.Stock.Status__Stock_status_id = dbo.Stock_Status.Stock_Status_Id LEFT OUTER JOIN
                      dbo.Grn ON dbo.Stock.Grn__Grn_id = dbo.Grn.Grn_ID
WHERE     (dbo.Stock.Complete = 1)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Full_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Full_List]
AS
SELECT     dbo.Stock.Stock_ID, dbo.Stock.Batch_no AS [Batch no], dbo.Stock.Bredth AS Breadth, dbo.Stock.Cast_Heat_No AS [Cast Heat No], dbo.Stock.Cost, 
                      dbo.Stock.Date_In AS [Date In], dbo.Stock.From_WO__WO_id, dbo.Stock.Grn__Grn_id, dbo.Stock.Length, dbo.Stock.Location__location_id, 
                      dbo.Stock.Notes, dbo.Stock.Original_Batch AS [Original Batch], dbo.Stock.OriginalQty, dbo.Stock.Part__Part_Id, dbo.Stock.Qty, 
                      dbo.Stock.Qty_Allocated AS [Qty Allocated], dbo.Stock.Qty_Available AS [Qty Available], dbo.Stock.Serial_no AS [Serial no], 
                      dbo.Stock.Total_Qty AS [Total Qty], dbo.Stock.Use_By_Date AS [Use By Date], dbo.Stock_Status.Status, dbo.Part.Part_No AS [Part No], 
                      dbo.Part.Description, dbo.Grn.Grn_No AS [Grn No], dbo.Part_type.Part_type AS [Part Type]
FROM         dbo.Part_type RIGHT OUTER JOIN
                      dbo.Part ON dbo.Part_type.part_type_id = dbo.Part.Type__Part_Type_Id RIGHT OUTER JOIN
                      dbo.Stock ON dbo.Part.Part_Id = dbo.Stock.Part__Part_Id LEFT OUTER JOIN
                      dbo.Stock_Status ON dbo.Stock.Status__Stock_status_id = dbo.Stock_Status.Stock_Status_Id LEFT OUTER JOIN
                      dbo.Grn ON dbo.Stock.Grn__Grn_id = dbo.Grn.Grn_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Nominal_Entry_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Nominal_Entry_List]
AS
SELECT     dbo.Nominal_Entry.Nominal_Entry_ID AS [Nominal Entry ID], dbo.Nominal_Entry.Date_Entered AS [Date Entered], dbo.Nominal_Entry.Credit, 
                      dbo.Nominal_Entry.Debit, dbo.Nominal_Entry.Processed AS Posted, dbo.Nominal_Entry.Reference1, dbo.Nominal_Entry.Reference2, 
                      dbo.Nominal_Entry.Parent__Accounts_Entry_ID, dbo.Nominals.Nominal, dbo.Employee.Name AS [Entered By], 
                      dbo.Cost_Centre.Cost_Centre AS [Cost Centre], dbo.Department.Department, dbo.Periods.Period_No AS [Period No], dbo.Week.Week_No AS [Week No], 
                      dbo.Nominal_Entry.Posting_Date AS [Posting Date], dbo.Nominal_Entry.Currency_Credit AS [Currency Credit], 
                      dbo.Nominal_Entry.Currency_Debit AS [Currency Debit], dbo.Nominal_Entry.Currency_Outstanding AS [Currency Outstanding], 
                      dbo.Nominal_Entry.Outstanding_Amount AS Outstanding, dbo.Entry_Type.Entry_Type AS [Entry Type], dbo.Nominal_Entry.EMax_Record_ID, 
                      dbo.COMPANYS.Company_No AS [Sales Acc No], dbo.COMPANYS.Name AS Company, dbo.COMPANYS.SupplierAccNo AS [Purch Acc No], 
                      dbo.Accounts_Entry.Company__COMPANYS_ID, dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, dbo.Nominal_Entry.Prepayment, 
                      dbo.Nominal_Entry.Nominal__Nominals_ID, dbo.Nominals.Description AS [Nominal Description], dbo.Nominal_Entry.Reconciled, 
                      dbo.Accounts_Entry.Reference1 AS [Ref 1], dbo.Accounts_Entry.Reference2 AS [Ref 2]
FROM         dbo.MULTICURRENCY RIGHT OUTER JOIN
                      dbo.Nominal_Entry ON dbo.MULTICURRENCY.MultiCurrency_ID = dbo.Nominal_Entry.Currency__MULTICURRENCY_ID LEFT OUTER JOIN
                      dbo.COMPANYS RIGHT OUTER JOIN
                      dbo.Entry_Type RIGHT OUTER JOIN
                      dbo.Accounts_Entry ON dbo.Entry_Type.Entry_Type_ID = dbo.Accounts_Entry.Type__Entry_Type_ID ON 
                      dbo.COMPANYS.Company_Id = dbo.Accounts_Entry.Company__COMPANYS_ID ON 
                      dbo.Nominal_Entry.Parent__Accounts_Entry_ID = dbo.Accounts_Entry.Accounts_Entry_ID LEFT OUTER JOIN
                      dbo.Week ON dbo.Nominal_Entry.Week__Week_ID = dbo.Week.Week_ID LEFT OUTER JOIN
                      dbo.Periods ON dbo.Nominal_Entry.Period__Periods_ID = dbo.Periods.Periods_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.Nominal_Entry.Entered_By = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.Nominals ON dbo.Nominal_Entry.Nominal__Nominals_ID = dbo.Nominals.Nominal_ID LEFT OUTER JOIN
                      dbo.Department RIGHT OUTER JOIN
                      dbo.Cost_Centre ON dbo.Department.Department_id = dbo.Cost_Centre.Department__Department_ID ON 
                      dbo.Nominal_Entry.Cost_Centre__Cost_Centre_ID = dbo.Cost_Centre.Cost_Centre_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[BillPayments_Grouped]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[BillPayments_Grouped]
AS
SELECT     dbo.Accounts_Entry.Accounts_Entry_ID, dbo.Entry_Type.Entry_Type AS [Entry Type], dbo.Accounts_Entry.Reference1, dbo.Accounts_Entry.Reference2, 
                      dbo.Accounts_Entry.Tax_Date AS [Posting Date], SUM(dbo.Nominal_Entry.Currency_Outstanding) AS Outstanding, 
                      dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, SUM(dbo.Nominal_Entry.Temp_Amount) AS Amount, 
                      dbo.Accounts_Entry.Company__COMPANYS_ID, dbo.MULTICURRENCY.MultiCurrency_ID
FROM         dbo.Nominal_Entry LEFT OUTER JOIN
                      dbo.MULTICURRENCY ON dbo.Nominal_Entry.Currency__MULTICURRENCY_ID = dbo.MULTICURRENCY.MultiCurrency_ID LEFT OUTER JOIN
                      dbo.Entry_Type RIGHT OUTER JOIN
                      dbo.Accounts_Entry ON dbo.Entry_Type.Entry_Type_ID = dbo.Accounts_Entry.Type__Entry_Type_ID ON 
                      dbo.Nominal_Entry.Parent__Accounts_Entry_ID = dbo.Accounts_Entry.Accounts_Entry_ID
GROUP BY dbo.Entry_Type.Entry_Type, dbo.Accounts_Entry.Reference1, dbo.Accounts_Entry.Reference2, dbo.Accounts_Entry.Tax_Date, 
                      dbo.MULTICURRENCY.MultiCurrency_Currency, dbo.Accounts_Entry.Company__COMPANYS_ID, dbo.MULTICURRENCY.MultiCurrency_ID, 
                      dbo.Accounts_Entry.Accounts_Entry_ID
HAVING      (SUM(dbo.Nominal_Entry.Currency_Outstanding) > 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Nominal_Entry_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Nominal_Entry_Drop_List]
AS
SELECT     dbo.Nominal_Entry.Nominal_Entry_ID AS [Nominal Entry ID], dbo.Nominal_Entry.Date_Entered AS [Date Entered], dbo.Nominal_Entry.Credit, 
                      dbo.Nominal_Entry.Debit, dbo.Nominal_Entry.Processed AS Posted, dbo.Nominal_Entry.Reference1, dbo.Nominal_Entry.Reference2, 
                      dbo.Nominal_Entry.Parent__Accounts_Entry_ID, dbo.Nominals.Nominal, dbo.Employee.Name AS [Entered By], 
                      dbo.Cost_Centre.Cost_Centre AS [Cost Centre], dbo.Department.Department, dbo.Periods.Period_No AS [Period No], dbo.Week.Week_No AS [Week No], 
                      dbo.Nominal_Entry.Posting_Date AS [Posting Date], dbo.Nominal_Entry.Currency_Credit AS [Currency Credit], 
                      dbo.Nominal_Entry.Currency_Debit AS [Currency Debit], dbo.Nominal_Entry.Currency_Outstanding AS [Currency Outstanding], 
                      dbo.Nominal_Entry.Outstanding_Amount AS Outstanding, dbo.Entry_Type.Entry_Type AS [Entry Type], dbo.Nominal_Entry.EMax_Record_ID, 
                      dbo.COMPANYS.Company_No AS [Sales Acc No], dbo.COMPANYS.Name AS Company, dbo.COMPANYS.SupplierAccNo AS [Purch Acc No], 
                      dbo.Accounts_Entry.Company__COMPANYS_ID
FROM         dbo.COMPANYS RIGHT OUTER JOIN
                      dbo.Entry_Type RIGHT OUTER JOIN
                      dbo.Accounts_Entry ON dbo.Entry_Type.Entry_Type_ID = dbo.Accounts_Entry.Type__Entry_Type_ID ON 
                      dbo.COMPANYS.Company_Id = dbo.Accounts_Entry.Company__COMPANYS_ID RIGHT OUTER JOIN
                      dbo.Nominal_Entry ON dbo.Accounts_Entry.Accounts_Entry_ID = dbo.Nominal_Entry.Parent__Accounts_Entry_ID LEFT OUTER JOIN
                      dbo.Week ON dbo.Nominal_Entry.Week__Week_ID = dbo.Week.Week_ID LEFT OUTER JOIN
                      dbo.Periods ON dbo.Nominal_Entry.Period__Periods_ID = dbo.Periods.Periods_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.Nominal_Entry.Entered_By = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.Nominals ON dbo.Nominal_Entry.Nominal__Nominals_ID = dbo.Nominals.Nominal_ID LEFT OUTER JOIN
                      dbo.Department RIGHT OUTER JOIN
                      dbo.Cost_Centre ON dbo.Department.Department_id = dbo.Cost_Centre.Department__Department_ID ON 
                      dbo.Nominal_Entry.Cost_Centre__Cost_Centre_ID = dbo.Cost_Centre.Cost_Centre_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[CashPayments_Grouped]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[CashPayments_Grouped]
AS
SELECT     dbo.Accounts_Entry.Accounts_Entry_ID, dbo.Entry_Type.Entry_Type AS [Entry Type], dbo.Accounts_Entry.Reference1, dbo.Accounts_Entry.Reference2, 
                      dbo.Accounts_Entry.Tax_Date AS [Posting Date], SUM(dbo.Nominal_Entry.Currency_Outstanding) AS Outstanding, 
                      dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, SUM(dbo.Nominal_Entry.Temp_Amount) AS Amount, 
                      dbo.Accounts_Entry.Company__COMPANYS_ID, dbo.MULTICURRENCY.MultiCurrency_ID
FROM         dbo.Nominal_Entry LEFT OUTER JOIN
                      dbo.MULTICURRENCY ON dbo.Nominal_Entry.Currency__MULTICURRENCY_ID = dbo.MULTICURRENCY.MultiCurrency_ID LEFT OUTER JOIN
                      dbo.Entry_Type RIGHT OUTER JOIN
                      dbo.Accounts_Entry ON dbo.Entry_Type.Entry_Type_ID = dbo.Accounts_Entry.Type__Entry_Type_ID ON 
                      dbo.Nominal_Entry.Parent__Accounts_Entry_ID = dbo.Accounts_Entry.Accounts_Entry_ID
WHERE     (dbo.Nominal_Entry.Debit > 0)
GROUP BY dbo.Accounts_Entry.Accounts_Entry_ID, dbo.Entry_Type.Entry_Type, dbo.Accounts_Entry.Reference1, dbo.Accounts_Entry.Reference2, 
                      dbo.Accounts_Entry.Tax_Date, dbo.MULTICURRENCY.MultiCurrency_Currency, dbo.Accounts_Entry.Company__COMPANYS_ID, 
                      dbo.MULTICURRENCY.MultiCurrency_ID
HAVING      (SUM(dbo.Nominal_Entry.Currency_Outstanding) > 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[CashPayments]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[CashPayments]
AS
SELECT     dbo.Nominal_Entry.Nominal_Entry_ID, dbo.Entry_Type.Entry_Type AS [Entry Type], dbo.Nominal_Entry.Reference1, dbo.Nominal_Entry.Reference2, 
                      dbo.Nominal_Entry.Posting_Date AS [Posting Date], dbo.Nominal_Entry.Currency_Outstanding AS Outstanding, 
                      dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, dbo.Nominal_Entry.Temp_Amount AS Amount, 
                      dbo.Accounts_Entry.Company__COMPANYS_ID, dbo.MULTICURRENCY.MultiCurrency_ID, dbo.Accounts_Entry.Accounts_Entry_ID
FROM         dbo.Nominal_Entry LEFT OUTER JOIN
                      dbo.MULTICURRENCY ON dbo.Nominal_Entry.Currency__MULTICURRENCY_ID = dbo.MULTICURRENCY.MultiCurrency_ID LEFT OUTER JOIN
                      dbo.Entry_Type RIGHT OUTER JOIN
                      dbo.Accounts_Entry ON dbo.Entry_Type.Entry_Type_ID = dbo.Accounts_Entry.Type__Entry_Type_ID ON 
                      dbo.Nominal_Entry.Parent__Accounts_Entry_ID = dbo.Accounts_Entry.Accounts_Entry_ID
WHERE     (dbo.Nominal_Entry.Currency_Outstanding > 0) AND (dbo.Nominal_Entry.Debit > 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[BillPayments]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[BillPayments]
AS
SELECT     dbo.Nominal_Entry.Nominal_Entry_ID, dbo.Entry_Type.Entry_Type AS [Entry Type], dbo.Nominal_Entry.Reference1, dbo.Nominal_Entry.Reference2, 
                      dbo.Nominal_Entry.Posting_Date AS [Posting Date], dbo.Nominal_Entry.Currency_Outstanding AS Outstanding, 
                      dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, dbo.Nominal_Entry.Temp_Amount AS Amount, 
                      dbo.Accounts_Entry.Company__COMPANYS_ID, dbo.MULTICURRENCY.MultiCurrency_ID, dbo.Accounts_Entry.Accounts_Entry_ID, 
                      dbo.Nominal_Entry.Prepayment_Reversed
FROM         dbo.Nominal_Entry LEFT OUTER JOIN
                      dbo.MULTICURRENCY ON dbo.Nominal_Entry.Currency__MULTICURRENCY_ID = dbo.MULTICURRENCY.MultiCurrency_ID LEFT OUTER JOIN
                      dbo.Entry_Type RIGHT OUTER JOIN
                      dbo.Accounts_Entry ON dbo.Entry_Type.Entry_Type_ID = dbo.Accounts_Entry.Type__Entry_Type_ID ON 
                      dbo.Nominal_Entry.Parent__Accounts_Entry_ID = dbo.Accounts_Entry.Accounts_Entry_ID
WHERE     (dbo.Nominal_Entry.Currency_Outstanding > 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Route_Versions_Drop_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Route_Versions_Drop_list]
AS
SELECT     Route_Versions_id, Version_Name AS [Version Name], Version_Description AS [Version Description], For_Part__Part_id, [Default], Deleted
FROM         dbo.Route_versions
WHERE     (Deleted = 0 OR
                      Deleted IS NULL)
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Route_Versions_Drop_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Route_versions"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 244
               Right = 221
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Route_Versions_Drop_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Route_Versions_Drop_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Route_Versions_Drop_list'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Route_versions_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Route_versions_List]
AS
SELECT     Route_Versions_id, Version_Name AS [Version Name], Version_Description AS [Version Description], For_Part__Part_id, [Default], Deleted
FROM         dbo.Route_versions
WHERE     (Deleted = 0 OR
                      Deleted IS NULL)
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Route_versions_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[20] 2[10] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Route_versions"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 245
               Right = 221
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Route_versions_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Route_versions_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Route_versions_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Analysis_Recs_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_Analysis_Recs_List]
AS
SELECT     dbo.Part_Analysis_Recs.Part_Analysis_Recs_ID, dbo.Part_Analysis_Recs.Parent__Part_Analysis_ID, dbo.Part_Analysis_Recs.[Level], 
                      Part_2.Part_No AS [Parent Part], Part_1.Part_No AS [BOM Part], dbo.Part_Analysis_Recs.Qty, dbo.Part_Analysis_Recs.Length, 
                      dbo.Part_Analysis_Recs.Breadth, dbo.Part_Analysis_Recs.Sundry, dbo.Part_Analysis_Recs.Extra_Qty AS [Extra Qty], 
                      dbo.Part_Analysis_Recs.Total_Qty_Inc_Scrap AS [Total Qty Inc Scrap], dbo.Part_Analysis_Recs.Material_Cost AS [Material Cost], 
                      dbo.Part_Analysis_Recs.Sub_Con_Cost AS [Sub Con Cost], dbo.Part_Analysis_Recs.Run_Time AS [Run Time], 
                      dbo.Part_Analysis_Recs.Run_Cost AS [Run Cost], dbo.Part_Analysis_Recs.Run_Charge AS [Run Charge], 
                      dbo.Part_Analysis_Recs.Setup_Time AS [Setup Time], dbo.Part_Analysis_Recs.Setup_Cost AS [Setup Cost], 
                      dbo.Part_Analysis_Recs.Setup_Charge AS [Setup Charge], dbo.Part_Analysis_Recs.Weight, dbo.Part_Analysis_Recs.Surface_area AS [Surface area], 
                      dbo.Part_Analysis_Recs.Prog_Time AS [Prog Time], dbo.Part_Analysis_Recs.Tooling_Cost AS [Tooling Cost], 
                      dbo.Part_Analysis_Recs.Manual_Run AS [Manual Run], dbo.Part_Analysis_Recs.Manual_Setup AS [Manual Setup], 
                      dbo.Part_Analysis_Recs.Manual_Material AS [Manual Material], dbo.Part_Analysis_Recs.Manual_Sub_Con AS [Manual Sub Con], 
                      dbo.Part_Analysis_Recs.Item_Total_Cost AS [Item Total Cost], dbo.Part_Analysis_Recs.Item_Total_Charge AS [Item Total Charge], 
                      dbo.Part_Analysis_Recs.Total_Cost AS [Total Cost], dbo.Part_Analysis_Recs.Total_Charge AS [Total Charge], dbo.COMPANYS.Name AS Supplier, 
                      dbo.Route_versions.Version_Name AS [Route Version], dbo.Part_Analysis_Recs.Drawing_No AS [Drawing No], dbo.Part_Analysis_Recs.Description, 
                      dbo.Part_Analysis_Recs.Revision
FROM         dbo.Part Part_1 RIGHT OUTER JOIN
                      dbo.Route_versions RIGHT OUTER JOIN
                      dbo.Part_Analysis_Recs ON dbo.Route_versions.Route_Versions_id = dbo.Part_Analysis_Recs.Route__Route_versions_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Part_Analysis_Recs.Supplier__COMPANYS_ID = dbo.COMPANYS.Company_Id ON 
                      Part_1.Part_Id = dbo.Part_Analysis_Recs.BOM_Part__Part_ID LEFT OUTER JOIN
                      dbo.Part Part_2 ON dbo.Part_Analysis_Recs.Parent_Part__Part_ID = Part_2.Part_Id LEFT OUTER JOIN
                      dbo.Part_type ON dbo.Part_Analysis_Recs.Type__Part_type_ID = dbo.Part_type.part_type_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Certification_Standard_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Certification_Standard_List]
AS
SELECT     Certification_Standard_ID, Unit, Modified_By, Modified
FROM         dbo.Certification_Standard
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Cert_Std_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Cert_Std_Drop_List]
AS
SELECT     Certification_Standard_ID, Unit, Modified_By, Modified
FROM         dbo.Certification_Standard
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Certification_Standard_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Certification_Standard_Drop_List]
AS
SELECT     Certification_Standard_ID, Unit, Modified_By, Modified
FROM         dbo.Certification_Standard
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Cert_Std_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Cert_Std_List]
AS
SELECT     Certification_Standard_ID, Unit, Modified_By, Modified
FROM         dbo.Certification_Standard
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Invoice_Payment_Lines_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Invoice_Payment_Lines_List]
AS
SELECT     dbo.Invoice_Payment_Lines.Invoice_Payment_Lines_ID, dbo.Invoice_Part.Ref, dbo.Part.Part_No AS [Part No], dbo.Part.Description, 
                      dbo.Invoice_Part.Qty, dbo.Invoice_Part.Price, dbo.Invoice_Part.Total, dbo.Invoice_Payment_Lines.Parent__Invoice_Payment_ID
FROM         dbo.Invoice_Payment_Lines LEFT OUTER JOIN
                      dbo.Invoice_Part ON dbo.Invoice_Payment_Lines.Line__Invoice_Part_ID = dbo.Invoice_Part.Invoice_Part_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.Invoice_Part.Part__Part_id = dbo.Part.Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_UOM_Conversion_Invoice]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_UOM_Conversion_Invoice]
AS
SELECT     dbo.Invoice_Part.Invoice__INVOICES_ID, SUM(dbo.Invoice_Part.VAT) AS Currency_Total_VAT, SUM(dbo.Invoice_Part.Total) AS Currency_Total_Ex_VAT, 
                      SUM(dbo.Invoice_Part.System_Price) AS System_Total_EX_VAT, SUM(dbo.Invoice_Part.VAT / dbo.Invoice_Part.Currency_Rate) AS System_Total_VAT, 
                      SUM(dbo.Invoice_Part.VAT + dbo.Invoice_Part.Total) AS Currency_Total_Inc_VAT, 
                      SUM(dbo.Invoice_Part.System_Price + dbo.Invoice_Part.VAT / dbo.Invoice_Part.Currency_Rate) AS System_Total_Inc_VAT, 
                      CASE WHEN dbo.Conversions.Multiply_By IS NULL THEN 1 ELSE multiply_by END AS Multiply_By
FROM         dbo.Conversions RIGHT OUTER JOIN
                      dbo.Part ON dbo.Conversions.Conversion_Id = dbo.Part.Invoice_UOM_Conv RIGHT OUTER JOIN
                      dbo.Invoice_Part ON dbo.Part.Part_Id = dbo.Invoice_Part.Part__Part_id
GROUP BY dbo.Invoice_Part.Invoice__INVOICES_ID, CASE WHEN dbo.Conversions.Multiply_By IS NULL THEN 1 ELSE multiply_by END
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accts_Invoice_Vat]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Accts_Invoice_Vat]
AS
SELECT     dbo.Invoice_Part.Invoice__INVOICES_ID AS Invoice_Id, SUM(dbo.Invoice_Part.Total) AS Total, SUM(dbo.Invoice_Part.VAT) AS Vat, 
                      dbo.VAT.Account_Code
FROM         dbo.Invoice_Part LEFT OUTER JOIN
                      dbo.VAT ON dbo.Invoice_Part.VAT_ID = dbo.VAT.VAT_ID
GROUP BY dbo.Invoice_Part.Invoice__INVOICES_ID, dbo.VAT.Account_Code
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Credit_Part_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Credit_Part_List]
AS
SELECT     dbo.Credit_Part.Credit_Part_ID, dbo.Credit_Part.Credit__CREDITS_ID, dbo.Credit_Part.Description_Non_Rtf AS Description, dbo.Credit_Part.Paid, 
                      dbo.Credit_Part.Price, dbo.Credit_Part.Qty, dbo.Credit_Part.Ref AS Reference, dbo.Credit_Part.Sent_To_Accounts AS [Sent To Accounts], 
                      dbo.Credit_Part.Total, dbo.Credit_Part.VAT, dbo.Credit_Part.VAT_Rate AS [VAT Rate], dbo.Sales_Order_Lines.Contract_No AS [Contract No], 
                      dbo.Credit_Part_Status.Credit_Part_Status AS [Line Status], dbo.Part.Part_No AS [Part No], dbo.Invoice_Part.Ref AS [Invioce line], 
                      dbo.Credit_Part.SoLine__Sales_Order_Lines_ID
FROM         dbo.Credit_Part LEFT OUTER JOIN
                      dbo.Credit_Part_Status ON dbo.Credit_Part.Status__Credit_Part_Status_ID = dbo.Credit_Part_Status.Credit_Part_Status_id LEFT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.Credit_Part.SoLine__Sales_Order_Lines_ID = dbo.Sales_Order_Lines.Sales_Order_Lines_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.Credit_Part.Part__Part_id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Invoice_Part ON dbo.Credit_Part.Invoice_part__Invoice_Part_ID = dbo.Invoice_Part.Invoice_Part_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accts_Invoice_Nominals]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Accts_Invoice_Nominals]
AS
SELECT     dbo.Invoice_Part.Invoice__INVOICES_ID AS Invoice_Id, SUM(dbo.Invoice_Part.Total) AS Total, dbo.Nominals.Nominal_ID, dbo.Nominals.Cost_code, 
                      dbo.Nominals.Department, dbo.Nominals.Analysis_Code
FROM         dbo.Invoice_Part LEFT OUTER JOIN
                      dbo.Part ON dbo.Invoice_Part.Part__Part_id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Nominals ON dbo.Part.Sales_nom__Nominal_id = dbo.Nominals.Nominal_ID
GROUP BY dbo.Invoice_Part.Invoice__INVOICES_ID, dbo.Nominals.Nominal_ID, dbo.Nominals.Cost_code, dbo.Nominals.Department, 
                      dbo.Nominals.Analysis_Code
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Predefined_Material_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Predefined_Material_List]
AS
SELECT     dbo.Predefined_Material.Predefined_Material_ID, dbo.Material_types.Material_Type AS [Material Type], 
                      dbo.Material_types.Specific_Gravity AS [Specific Gravity], dbo.Predefined_Material.AF, dbo.Predefined_Material.Diameter, 
                      dbo.Predefined_Material.Name, dbo.Predefined_Material.OutDiam, dbo.Predefined_Material.Thickness, dbo.Predefined_Material.WallThick, 
                      dbo.Predefined_Material.Width, dbo.Predefined_Material.Modified, dbo.Part_Shapes.Shape
FROM         dbo.Predefined_Material LEFT OUTER JOIN
                      dbo.Part_Shapes ON dbo.Predefined_Material.Material_Type = dbo.Part_Shapes.Part_Shape_ID LEFT OUTER JOIN
                      dbo.Material_types ON dbo.Predefined_Material.Mat_Type__Material_types_ID = dbo.Material_types.Material_types_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Predefined_Material_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Predefined_Material_Drop_List]
AS
SELECT     dbo.Predefined_Material.Predefined_Material_ID, dbo.Material_types.Material_Type AS [Material Type], 
                      dbo.Material_types.Specific_Gravity AS [Specific Gravity], dbo.Predefined_Material.AF, dbo.Predefined_Material.Diameter, 
                      dbo.Predefined_Material.Name, dbo.Predefined_Material.OutDiam, dbo.Predefined_Material.Thickness, dbo.Predefined_Material.WallThick, 
                      dbo.Predefined_Material.Width, dbo.Predefined_Material.Modified, dbo.Part_Shapes.Shape
FROM         dbo.Predefined_Material LEFT OUTER JOIN
                      dbo.Part_Shapes ON dbo.Predefined_Material.Material_Type = dbo.Part_Shapes.Part_Shape_ID LEFT OUTER JOIN
                      dbo.Material_types ON dbo.Predefined_Material.Mat_Type__Material_types_ID = dbo.Material_types.Material_types_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Company_Overdue]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Company_Overdue]
AS
SELECT     dbo.Accounts_Entry.Company__COMPANYS_ID, 
                      SUM(ROUND((1 / dbo.MULTICURRENCY.MultiCurrency_Multiply_Factor * MULTICURRENCY_1.MultiCurrency_Multiply_Factor) 
                      * (dbo.Nominal_Entry.Currency_Outstanding * dbo.Nominal_Entry.Factor), 2)) AS [Currency OverDue], 
                      SUM(dbo.Nominal_Entry.Outstanding_Amount * dbo.Nominal_Entry.Factor) AS OverDue
FROM         dbo.MULTICURRENCY MULTICURRENCY_1 RIGHT OUTER JOIN
                      dbo.COMPANYS ON MULTICURRENCY_1.MultiCurrency_ID = dbo.COMPANYS.Default_Currency__MultiCurrency_ID LEFT OUTER JOIN
                      dbo.Accounts_Entry ON dbo.COMPANYS.Company_Id = dbo.Accounts_Entry.Company__COMPANYS_ID LEFT OUTER JOIN
                      dbo.Nominal_Entry LEFT OUTER JOIN
                      dbo.MULTICURRENCY ON dbo.Nominal_Entry.Currency__MULTICURRENCY_ID = dbo.MULTICURRENCY.MultiCurrency_ID ON 
                      dbo.Accounts_Entry.Accounts_Entry_ID = dbo.Nominal_Entry.Parent__Accounts_Entry_ID
WHERE     (dbo.Accounts_Entry.Due_Date <= CONVERT(varchar, GETDATE(), 1))
GROUP BY dbo.Accounts_Entry.Company__COMPANYS_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[AccEntryTotals]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[AccEntryTotals]
AS
SELECT     TOP 100 PERCENT SUM(Credit) AS Credit, SUM(Debit) AS Debit, Parent__Accounts_Entry_ID AS Accounts_Entry_ID, SUM(Currency_Credit) 
                      AS CurCredit, SUM(Currency_Debit) AS CurDebit
FROM         dbo.Nominal_Entry
WHERE     (Processed = 1)
GROUP BY Parent__Accounts_Entry_ID
ORDER BY Parent__Accounts_Entry_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[AccountsNominalBalance]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[AccountsNominalBalance]
AS
SELECT     TOP 100 PERCENT SUM(dbo.Nominal_Entry.Credit) AS TotalCredit, SUM(dbo.Nominal_Entry.Debit) AS TotalDebit, 
                      dbo.Nominal_Entry.Nominal__Nominals_ID, SUM(dbo.Nominal_Entry.Debit - dbo.Nominal_Entry.Credit) AS Balance, dbo.Nominals.Nominal, 
                      dbo.Nominals.Description
FROM         dbo.Nominal_Entry LEFT OUTER JOIN
                      dbo.Nominals ON dbo.Nominal_Entry.Nominal__Nominals_ID = dbo.Nominals.Nominal_ID
WHERE     (dbo.Nominal_Entry.Processed = 1)
GROUP BY dbo.Nominal_Entry.Nominal__Nominals_ID, dbo.Nominals.Nominal, dbo.Nominals.Description
ORDER BY dbo.Nominal_Entry.Nominal__Nominals_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accounts_entry_Balance]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Accounts_entry_Balance]
AS
SELECT     dbo.Accounts_Entry.Accounts_Entry_ID, SUM(dbo.Nominal_Entry.Currency_Outstanding * dbo.Nominal_Entry.Factor) AS Balance
FROM         dbo.Accounts_Entry LEFT OUTER JOIN
                      dbo.Nominal_Entry ON dbo.Accounts_Entry.Accounts_Entry_ID = dbo.Nominal_Entry.Parent__Accounts_Entry_ID
GROUP BY dbo.Accounts_Entry.Accounts_Entry_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[AccountsPostedtoDebtorsCreditors]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[AccountsPostedtoDebtorsCreditors]
AS
SELECT     Credit, Debit, Nominal__Nominals_ID, Parent__Accounts_Entry_ID, Nominal_Entry_ID
FROM         dbo.Nominal_Entry
WHERE     (Processed = 1) AND (Nominal__Nominals_ID = 165) OR
                      (Processed = 1) AND (Nominal__Nominals_ID = 173)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Job_Costing_Quote_Hrs_Temp]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Job_Costing_Quote_Hrs_Temp]
AS
SELECT     dbo.Sales_Order_Lines.Sales_Order_Lines_ID, SUM((dbo.Part_Analysis_Recs.Run_Time + dbo.Part_Analysis_Recs.Setup_Time) / 3600) 
                      AS Tot_Quote_Hrs
FROM         dbo.Part_Analysis LEFT OUTER JOIN
                      dbo.Part_Analysis_Recs ON dbo.Part_Analysis.Part_Analysis_ID = dbo.Part_Analysis_Recs.Parent__Part_Analysis_ID RIGHT OUTER JOIN
                      dbo.Quote_Line_Qty ON dbo.Part_Analysis.Part_Analysis_ID = dbo.Quote_Line_Qty.Summary__Part_Analysis_ID RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.Quote_Line_Qty.Quote_Line_qty_id = dbo.Sales_Order_Lines.Quote__Quote_Line_qty_Id
GROUP BY dbo.Sales_Order_Lines.Sales_Order_Lines_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Purchase_Invoice_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Purchase_Invoice_list]
AS
SELECT     dbo.Purchase_Invoice.Purchase_Invoice_ID AS PI_ID, dbo.Purchase_Invoice.Date_Recieved AS [Date Received], dbo.Purchase_Invoice.Due_Date AS [Due Date], 
                      dbo.Purchase_Invoice.Internal_Notes_non_rtf AS Notes, dbo.Purchase_Invoice.Reference, dbo.Purchase_Invoice_Status.Purchase_Invoice_Status AS Status, 
                      dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name AS Supplier, dbo.CONTACTS.Name AS Contact, dbo.Employee.Name AS [Created By], 
                      dbo.Purchase_Invoice.Tax_Date AS [Tax Date], dbo.Purchase_Invoice.Sent_To_Accounts AS [Sent To Accounts], dbo.COMPANYS.SupplierAccNo AS [Acc NO], 
                      dbo.Purchase_Invoice.PI_NO AS [PI NO], dbo.Purchase_Invoice.Posted, dbo.Purchase_Invoice.Credit, dbo.Purchase_Invoice.System_Total_Exc_Vat AS [Total Exc Vat], 
                      dbo.Purchase_Invoice.System_Total_Inc_Vat AS [Total Inc Vat], dbo.Purchase_Invoice.System_Total_Vat AS [Total Vat], 
                      dbo.Purchase_Invoice.Supplier__COMPANYS_ID
FROM         dbo.Purchase_Invoice LEFT OUTER JOIN
                      dbo.Employee ON dbo.Purchase_Invoice.Recieved_by = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.Purchase_Invoice_Status ON 
                      dbo.Purchase_Invoice.Status__Purchase_Invoice_Status_Id = dbo.Purchase_Invoice_Status.Purchase_Invoice_Status_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Purchase_Invoice.Supplier__COMPANYS_ID = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.CONTACTS ON dbo.Purchase_Invoice.Contact_id__CONTACTS_ID = dbo.CONTACTS.Contact_id
WHERE     (dbo.Purchase_Invoice.PI_NO > '''')
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Answer_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Answer_Drop_List]
AS
SELECT     Answer_ID, Answer_Text AS Answer, Append_Text AS Appends, For__Question_ID
FROM         dbo.Answer
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Answer_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Answer_List]
AS
SELECT     Answer_ID, Answer_Text AS Answer, Append_Text AS Appends, For__Question_ID
FROM         dbo.Answer
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[First_SO_On_Del]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[First_SO_On_Del]
AS
SELECT     dbo.Delivery.Delivery_ID, MIN(dbo.SALES_ORDERS.Sales_No) AS Expr1
FROM         dbo.Sales_Order_Lines LEFT OUTER JOIN
                      dbo.SALES_ORDERS ON dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID = dbo.SALES_ORDERS.SALES_ORDERS_ID RIGHT OUTER JOIN
                      dbo.Delivery_Item ON dbo.Sales_Order_Lines.Sales_Order_Lines_ID = dbo.Delivery_Item.Contract__SO_Item_id RIGHT OUTER JOIN
                      dbo.Delivery ON dbo.Delivery_Item.Delivery__Delivery_id = dbo.Delivery.Delivery_ID
GROUP BY dbo.Delivery.Delivery_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[CofC_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[CofC_Drop_List]
AS
SELECT     dbo.CofC.CofC_ID, dbo.CofC.Modified, dbo.CofC.Date_Entered AS [Date Entered], dbo.CofC.C_of_C_No AS [CofC No], dbo.Part.Part_No AS [Part No], 
                      dbo.Delivery_Item.Description_Non_Rtf AS Description, dbo.Delivery_Item.Issue_Qty AS Qty, dbo.Part.Drawing_No AS [Drawing No], 
                      dbo.Delivery_Item.Part_Description AS [Part Description], dbo.COMPANYS.Name AS Customer
FROM         dbo.Part RIGHT OUTER JOIN
                      dbo.Delivery_Item ON dbo.Part.Part_Id = dbo.Delivery_Item.Part__Part_id LEFT OUTER JOIN
                      dbo.Delivery LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Delivery.Company__Company_id = dbo.COMPANYS.Company_Id ON 
                      dbo.Delivery_Item.Delivery__Delivery_id = dbo.Delivery.Delivery_ID RIGHT OUTER JOIN
                      dbo.CofC ON dbo.Delivery_Item.Delivery_Item_ID = dbo.CofC.ForDeliveryItem__Delivery_Item_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PackingNotesForSO]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PackingNotesForSO]
AS
SELECT     dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID AS SO_ID, dbo.Delivery.Delivery_ID, dbo.Delivery.Packing_Note
FROM         dbo.Sales_Order_Lines LEFT OUTER JOIN
                      dbo.Delivery_Item ON dbo.Sales_Order_Lines.Sales_Order_Lines_ID = dbo.Delivery_Item.Contract__SO_Item_id LEFT OUTER JOIN
                      dbo.Delivery ON dbo.Delivery_Item.Delivery__Delivery_id = dbo.Delivery.Delivery_ID
WHERE     (dbo.Delivery.Packing_Note = 1) AND (dbo.Delivery_Item.Status__Delivery_item_Status_id <> 7)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Issues_Delivery]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Issues_Delivery]
AS
SELECT     dbo.Delivery_item_Stock.Stock__Stock_id, dbo.Delivery_item_Stock.Total_Qty AS Qty, dbo.Delivery_item_Stock.Total_Length AS Length, 
                      dbo.Delivery_item_Stock.Total_Breadth AS Breadth, dbo.Delivery_item_Stock.QLB AS Total, dbo.Delivery_Item.Ref, dbo.Delivery_Item.Modified AS [Date Issued], 
                      dbo.Employee.Name AS [Issued By], dbo.Delivery.Advice_No AS [Advice No], dbo.COMPANYS.Name AS Company, 
                      dbo.Sales_Order_Lines.Contract_No AS [Contract No], dbo.Delivery_item_Stock.Qty_Returned AS [Qty Returned], dbo.Sales_Order_Lines.On_Hire AS [On Hire], 
                      dbo.Delivery.Confirmed
FROM         dbo.Sales_Order_Lines RIGHT OUTER JOIN
                      dbo.Delivery_Item ON dbo.Sales_Order_Lines.Sales_Order_Lines_ID = dbo.Delivery_Item.Contract__SO_Item_id LEFT OUTER JOIN
                      dbo.Employee ON dbo.Delivery_Item.Modified_By = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.Delivery LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Delivery.Company__Company_id = dbo.COMPANYS.Company_Id ON 
                      dbo.Delivery_Item.Delivery__Delivery_id = dbo.Delivery.Delivery_ID RIGHT OUTER JOIN
                      dbo.Delivery_item_Stock ON dbo.Delivery_Item.Delivery_Item_ID = dbo.Delivery_item_Stock.Delivery_Item_id
WHERE     (dbo.Delivery_Item.Confirmed > 0) AND (dbo.Delivery.Confirmed > 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_History_Delivery]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_History_Delivery]
AS
SELECT     dbo.Delivery_Item.Part__Part_id, dbo.Delivery.Delivery_ID, dbo.Delivery_Item.Delivery_Item_ID, dbo.Delivery.Date_Raised AS [Date Raised], 
                      dbo.COMPANYS.Name AS Customer, dbo.Delivery_Item.Qty, dbo.Delivery_Item.Qty_Invoiced AS [Qty Invoiced], dbo.Sales_Order_Lines.Contract_No AS [Contract No], 
                      dbo.Delivery_Item.Ref, dbo.Part.Part_No AS [Part No], dbo.SALES_ORDERS.Customers_PO AS [Customer PO], dbo.WORK_ORDERS.WO_No AS [WO No]]]
FROM         dbo.WORK_ORDERS RIGHT OUTER JOIN
                      dbo.Delivery_Item ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Delivery_Item.WO__WO_Id LEFT OUTER JOIN
                      dbo.Part RIGHT OUTER JOIN
                      dbo.SALES_ORDERS RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.SALES_ORDERS.SALES_ORDERS_ID = dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID ON 
                      dbo.Part.Part_Id = dbo.Sales_Order_Lines.Part_Id__Part_Id ON 
                      dbo.Delivery_Item.Contract__SO_Item_id = dbo.Sales_Order_Lines.Sales_Order_Lines_ID RIGHT OUTER JOIN
                      dbo.Delivery ON dbo.Delivery_Item.Delivery__Delivery_id = dbo.Delivery.Delivery_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Delivery.Company__Company_id = dbo.COMPANYS.Company_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Item_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Delivery_Item_Drop_List]
AS
SELECT     dbo.Delivery_Item.Delivery_Item_ID, dbo.Delivery_Item.Deleted, dbo.Delivery_Item.Issue_Qty AS Qty, 
                      dbo.Delivery_Item.Qty_Invoiced AS [Qty Invoiced], dbo.Delivery_Item.Qty_Returned AS [Qty Returned], dbo.Delivery_Item.Ref AS [Line Ref.], 
                      dbo.Delivery_Item.Requested_Qty AS [Requested Qty], dbo.Delivery_Item.Weight, dbo.Sales_Order_Lines.Contract_No AS [Contract No], 
                      dbo.Delivery.Advice_No AS [Advice No], dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name AS Company, 
                      dbo.Part.Part_No AS [Part No], dbo.Delivery_Item_Status.Delivery_Status AS Status, dbo.Delivery_Item.Description_Non_Rtf AS Description, 
                      dbo.COMPANYS.Company_Id, dbo.Delivery_Item.Contract__SO_Item_id
FROM         dbo.Sales_Order_Lines RIGHT OUTER JOIN
                      dbo.Part RIGHT OUTER JOIN
                      dbo.Delivery_Item ON dbo.Part.Part_Id = dbo.Delivery_Item.Part__Part_id LEFT OUTER JOIN
                      dbo.Delivery LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Delivery.Company__Company_id = dbo.COMPANYS.Company_Id ON 
                      dbo.Delivery_Item.Delivery__Delivery_id = dbo.Delivery.Delivery_ID ON 
                      dbo.Sales_Order_Lines.Sales_Order_Lines_ID = dbo.Delivery_Item.Contract__SO_Item_id LEFT OUTER JOIN
                      dbo.Delivery_Item_Status ON dbo.Delivery_Item.Status__Delivery_item_Status_id = dbo.Delivery_Item_Status.Delivery_Item_Status_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_List_Barcoding]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Delivery_List_Barcoding]
AS
SELECT     dbo.Delivery.Delivery_ID, dbo.Delivery.Advice_No, dbo.COMPANYS.Name AS Company, dbo.Delivery.Date_Raised AS [Date Raised], 
                      dbo.Delivery.Date_Sent AS [Date Sent], dbo.Delivery_Status.Delivery_Status AS Status, dbo.Delivery.Packing_Note AS Packing, 
                      dbo.SALES_ORDERS.SALES_ORDERS_ID, dbo.Delivery_Item.Status__Delivery_item_Status_id
FROM         dbo.Employee RIGHT OUTER JOIN
                      dbo.Delivery_Item RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines LEFT OUTER JOIN
                      dbo.SALES_ORDERS ON dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID = dbo.SALES_ORDERS.SALES_ORDERS_ID ON 
                      dbo.Delivery_Item.Contract__SO_Item_id = dbo.Sales_Order_Lines.Sales_Order_Lines_ID RIGHT OUTER JOIN
                      dbo.Delivery ON dbo.Delivery_Item.Delivery__Delivery_id = dbo.Delivery.Delivery_ID ON 
                      dbo.Employee.Employee_Id = dbo.Delivery.Raised_by__Employee_id LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Delivery.Company__Company_id = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.Delivery_Status ON dbo.Delivery.Status__Delivery_Status_id = dbo.Delivery_Status.Delivery_Status_Id LEFT OUTER JOIN
                      dbo.COMPANY_ADDRESS ON dbo.Delivery.Address__Company_Addess_id = dbo.COMPANY_ADDRESS.Address_Id
GROUP BY dbo.Delivery.Delivery_ID, dbo.Delivery.Advice_No, dbo.COMPANYS.Name, dbo.Delivery.Date_Raised, dbo.Delivery.Date_Sent, 
                      dbo.Delivery_Status.Delivery_Status, dbo.SALES_ORDERS.SALES_ORDERS_ID, dbo.Delivery.Packing_Note, 
                      dbo.Delivery_Item.Status__Delivery_item_Status_id
HAVING      (dbo.Delivery.Advice_No > '''') AND (dbo.Delivery_Item.Status__Delivery_item_Status_id = 1) OR
                      (dbo.Delivery_Item.Status__Delivery_item_Status_id = 2)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[CofC_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[CofC_List]
AS
SELECT     dbo.CofC.CofC_ID, dbo.CofC.Modified, dbo.CofC.Date_Entered AS [Date Entered], dbo.CofC.C_of_C_No AS [CofC No], dbo.Part.Part_No AS [Part No], 
                      dbo.Delivery_Item.Description_Non_Rtf AS Description, dbo.Delivery_Item.Issue_Qty AS Qty, dbo.Part.Drawing_No AS [Drawing No], 
                      dbo.Delivery_Item.Part_Description AS [Part Description], dbo.COMPANYS.Name AS Customer, dbo.CofC_Status.Status, dbo.Delivery.Advice_No AS [Advice No]
FROM         dbo.CofC_Status RIGHT OUTER JOIN
                      dbo.CofC ON dbo.CofC_Status.CofC_Status_ID = dbo.CofC.Status__CofC_Status_ID LEFT OUTER JOIN
                      dbo.Part RIGHT OUTER JOIN
                      dbo.Delivery_Item ON dbo.Part.Part_Id = dbo.Delivery_Item.Part__Part_id LEFT OUTER JOIN
                      dbo.Delivery LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Delivery.Company__Company_id = dbo.COMPANYS.Company_Id ON dbo.Delivery_Item.Delivery__Delivery_id = dbo.Delivery.Delivery_ID ON
                       dbo.CofC.ForDeliveryItem__Delivery_Item_ID = dbo.Delivery_Item.Delivery_Item_ID
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'CofC_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -406
         Left = 0
      End
      Begin Tables = 
         Begin Table = "CofC_Status"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 205
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "CofC"
            Begin Extent = 
               Top = 9
               Left = 301
               Bottom = 205
               Right = 576
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Delivery_Item"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 303
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Delivery"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 278
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'CofC_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'CofC_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 1800
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'CofC_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'CofC_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'CofC_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Scanned]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Delivery_Scanned]
AS
SELECT     dbo.Delivery.Delivery_ID
FROM         dbo.Delivery LEFT OUTER JOIN
                      dbo.Delivery_Item ON dbo.Delivery.Delivery_ID = dbo.Delivery_Item.Delivery__Delivery_id
WHERE     (dbo.Delivery.Packing_Note = 1) AND (dbo.Delivery_Item.Status__Delivery_item_Status_id <> 7) AND (dbo.Delivery_Item.Line_Scanned = 0) AND 
                      (dbo.Delivery_Item.Scanned_Processed = 0)
GROUP BY dbo.Delivery.Delivery_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_PackingQty]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_PackingQty]
AS
SELECT     SUM(dbo.Delivery_Item.Issue_Qty) AS [Total Qty], dbo.Delivery_Item.Part__Part_id
FROM         dbo.Delivery_Item LEFT OUTER JOIN
                      dbo.Delivery ON dbo.Delivery_Item.Delivery__Delivery_id = dbo.Delivery.Delivery_ID
WHERE     (dbo.Delivery.Packing_Note = 1) AND (dbo.Delivery.Status__Delivery_Status_id < 7)
GROUP BY dbo.Delivery_Item.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[ENQUIRY_LINES_LIST]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[ENQUIRY_LINES_LIST]
AS
SELECT     dbo.ENQUIRY_LINES.Enquiry_Line_id, dbo.ENQUIRY_LINES.Enquiry_Line__Enquiry_id, dbo.ENQUIRY_LINES.Part__Part_Id, 
                      dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.ENQUIRY_LINES.Lost, dbo.ENQUIRY_LINES.Won, dbo.ENQUIRY_LINES.Declined, 
                      dbo.ENQUIRY_LINES.Reason_Declined_Non_RTF AS [Reason Declined], dbo.ENQUIRY_LINES.Item_No AS [Item No], dbo.ENQUIRY_LINES.Revision, 
                      dbo.Group_Code.Group_Code AS [Group Code], dbo.Part_Status.Part_Status AS [Part Status], 
                      dbo.ENQUIRY_LINES.Lost_Reason__Enquiry_Lost_Reasons_Id AS [Reason Lost], dbo.ENQUIRY_LINES.Notes_Non_RTF AS Notes, 
                      dbo.Enquiry_Line_Group.Group_Name AS [Enquiry Group], dbo.ENQUIRYS.Enquiry_No AS [Enquiry No], 
                      dbo.ENQUIRYS.Date_Entered AS [Date Entered], dbo.ENQUIRYS.Customers_Ref AS [Customers Ref], dbo.ENQUIRYS.Notes_non_rtf AS [Enquiry Notes],
                       dbo.COMPANYS.Name AS Customer, dbo.ENQUIRY_LINES.Decision_Date AS [Decision Date], 
                      dbo.Supplier_Part.Supplier_Part_No AS [Alias Part No]
FROM         dbo.Part_Status RIGHT OUTER JOIN
                      dbo.Part RIGHT OUTER JOIN
                      dbo.Enquiry_Line_Group RIGHT OUTER JOIN
                      dbo.ENQUIRY_LINES LEFT OUTER JOIN
                      dbo.Supplier_Part ON dbo.ENQUIRY_LINES.Alias__Supplier_Part_ID = dbo.Supplier_Part.Supplier_part_id LEFT OUTER JOIN
                      dbo.ENQUIRYS ON dbo.ENQUIRY_LINES.Enquiry_Line__Enquiry_id = dbo.ENQUIRYS.Enquiry_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.ENQUIRYS.Customer_id__Companys_Id = dbo.COMPANYS.Company_Id ON 
                      dbo.Enquiry_Line_Group.Enquiry_Line_Group_ID = dbo.ENQUIRY_LINES.LineGroup__Enquiry_Line_Group_ID ON 
                      dbo.Part.Part_Id = dbo.ENQUIRY_LINES.Part__Part_Id ON dbo.Part_Status.Part_Status_id = dbo.Part.Status__Part_status_id LEFT OUTER JOIN
                      dbo.Group_Code ON dbo.Part.Groupcode__Groupcode_id = dbo.Group_Code.Groupcode_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accts_PI_Nominals]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Accts_PI_Nominals]
AS
SELECT     SUM(dbo.PI_Item.Total) AS Total, dbo.Nominals.Nominal_ID, dbo.Nominals.Cost_code, dbo.Nominals.Department, dbo.Nominals.Analysis_Code, 
                      dbo.PI_Item.Parent__Purchase_Invoice_ID AS Invoice_Id
FROM         dbo.PI_Item LEFT OUTER JOIN
                      dbo.Nominals ON dbo.PI_Item.Nominal__Nominals_ID = dbo.Nominals.Nominal_ID
GROUP BY dbo.Nominals.Nominal_ID, dbo.Nominals.Cost_code, dbo.Nominals.Department, dbo.Nominals.Analysis_Code, 
                      dbo.PI_Item.Parent__Purchase_Invoice_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accounts_Purchase_Invoices]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Accounts_Purchase_Invoices]
AS
SELECT     dbo.PI_Item.PI_Item_ID, dbo.Purchase_Invoice.Purchase_Invoice_ID, dbo.PI_Item.System_Price, 
                      dbo.PI_Item.Vat_Amount / dbo.Purchase_Invoice.Currency_Rate AS Vat, dbo.PI_Item.Ref, dbo.Part.Part_No, dbo.COMPANYS.Company_No, 
                      dbo.Purchase_Invoice.Tax_Date, dbo.Purchase_Invoice.PI_NO, dbo.Purchase_Invoice.Supplier__COMPANYS_ID, dbo.PI_Item.Nominal__Nominals_ID, 
                      dbo.VAT.Purchase__Nominals_ID AS Vat_Nominal_Id, dbo.Nominal_Cost_Centre.Nominal_Cost_Centre_ID, 
                      dbo.Purchase_Invoice.Currency__Currency_Id, dbo.Purchase_Invoice.Currency_Rate, dbo.Purchase_Invoice.Due_Date, 
                      dbo.Purchase_Invoice.Reference
FROM         dbo.Purchase_Invoice RIGHT OUTER JOIN
                      dbo.PI_Item LEFT OUTER JOIN
                      dbo.Nominal_Cost_Centre ON dbo.PI_Item.NCC__Nominal_Cost_Centre_ID = dbo.Nominal_Cost_Centre.Nominal_Cost_Centre_ID LEFT OUTER JOIN
                      dbo.VAT ON dbo.PI_Item.Vat_Rate__VAT_ID = dbo.VAT.VAT_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.PI_Item.Part__Part_id = dbo.Part.Part_Id ON 
                      dbo.Purchase_Invoice.Purchase_Invoice_ID = dbo.PI_Item.Parent__Purchase_Invoice_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Purchase_Invoice.Supplier__COMPANYS_ID = dbo.COMPANYS.Company_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accts_PI_Vat]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Accts_PI_Vat]
AS
SELECT     SUM(dbo.PI_Item.Total) AS Total, dbo.VAT.Account_Code, dbo.PI_Item.Parent__Purchase_Invoice_ID AS PI_Id, SUM(dbo.PI_Item.Vat_Amount) 
                      AS VAT
FROM         dbo.PI_Item LEFT OUTER JOIN
                      dbo.VAT ON dbo.PI_Item.Vat_Rate__VAT_ID = dbo.VAT.VAT_ID
GROUP BY dbo.VAT.Account_Code, dbo.PI_Item.Parent__Purchase_Invoice_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Specification_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Specification_list]
AS
SELECT     Specification_ID, Name AS Specification, Al_Max, Al_Min, B_Max, B_Min, C_Max, C_Min, Co_Max, Co_Min, CR_Max, CR_Min, Cu_Max, Cu_Min, Fe_Max, Fe_Min, 
                      Mg_Max, Mg_Min, Mn_Max, Mn_Min, Mo_Max, Mo_Min, N_Max, N_Min, Nb_Max, Nb_Min, Ni_Max, Ni_Min, P_Max, P_Min, Pb_Max, Pb_Min, S_Max, S_Min, 
                      Se_Max, Se_Min, Si_Max, Si_Min, Sn_Max, Sn_Min, Ta_Max, Ta_Min, Ti_Max, Ti_Min, V_Max, V_Min, W_Max, W_Min, Zn_Max, Zn_Min, Austenise_Max, 
                      Austenise_Min, Elongation_Max, Elongation_Min, Hardness_Max, Hardness_Min, Impact_Avg_Max, Impact_Avg_Min, Impact_Min_Max, Impact_Min_Min, 
                      Impact_Temp_Max, Impact_Temp_Min, Impact1_Max, Impact1_Min, Impact2_Max, Impact2_Min, Impact3_Max, Impact3_Min, Max_Max, Max_Min, Min_Max, 
                      Min_Min, Normalise_Max, Normalise_Min, Reduction_Max, Reduction_Min, Temper_Max, Temper_Min, Tensile_Max, Tensile_Min, Yield1_Max, Yield1_Min, 
                      Yield2_Max, Yield2_Min, Ta, B, Co, Nb, N, Mg, Pb, Fe, Mo, Ti, V, P, S, Mn, C, Si, Cu, Sn, Al, CR, Ni, Se, Impact3, Impact_Avg, Impact1, Impact2, Impact_Temp, 
                      Austenise, Temper, Impact_Min, Normalise, [Max], Tensile, Yield1, W, Zn, Yield2, Hardness, [Min], Reduction, Elongation, Filter, Created, Created_By, Modified, 
                      Modified_By
FROM         dbo.Specification
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Specification_Drop_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Specification_Drop_list]
AS
SELECT     Specification_ID, Name, C, C_Min, C_Max, Si, Si_Min, Si_Max, Mn, Mn_Min, Mn_Max, P, P_Min, P_Max, S, S_Min, S_Max, CR, CR_Min, CR_Max, Ni, Ni_Min, Ni_Max, 
                      Al, Al_Min, Al_Max, Cu, Cu_Min, Cu_Max, Sn, Sn_Min, Sn_Max, V, V_Min, V_Max, Nb, Nb_Min, Nb_Max, N, N_Min, N_Max, Co, Co_Min, Co_Max, Ta, Ta_Min, Ta_Max, 
                      B, B_Min, B_Max, Mo, Mo_Min, Mo_Max, Ti, Ti_Min, Ti_Max, Fe, Fe_Min, Fe_Max, Mg, Mg_Min, Mg_Max, Pb, Pb_Min, Pb_Max, Se, Se_Min, Se_Max, W, W_Min, 
                      W_Max, Zn, Zn_Min, Zn_Max, Tensile, Tensile_Min, Tensile_Max, Yield1, Yield1_Min, Yield1_Max, Yield2, Yield2_Min, Yield2_Max, Elongation, Elongation_Min, 
                      Elongation_Max, Reduction, Reduction_Min, Reduction_Max, Hardness, Hardness_Min, Hardness_Max, [Min], Min_Min, Min_Max, [Max], Max_Min, Max_Max, 
                      Impact1, Impact1_Min, Impact1_Max, Impact2, Impact2_Min, Impact2_Max, Impact3, Impact3_Min, Impact3_Max, Impact_Avg, Impact_Avg_Min, Impact_Avg_Max, 
                      Impact_Min, Impact_Min_Min, Impact_Min_Max, Impact_Temp, Impact_Temp_Min, Impact_Temp_Max, Filter, Austenise, Normalise, Temper, Created, Created_By, 
                      Modified, Modified_By
FROM         dbo.Specification
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_Order_Lines_History_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Sales_Order_Lines_History_list]
AS
SELECT     dbo.Sales_Order_Lines_History.Sales_Order_Lines_History_ID, dbo.Sales_Order_Lines_History.history_date AS Date, dbo.Employee.Name AS [Changed By], 
                      dbo.Sales_Order_Lines_History.price_change AS [Chage in Price], dbo.Sales_Order_Lines_History.qty_change AS [Change in Qty], 
                      dbo.Sales_Order_Lines_History.Total_change AS [Total Change], dbo.SO_Line_History_Type.Transaction_Type AS [Type of Change], 
                      dbo.Sales_Order_Lines_History.Sales_order_Lines_id, dbo.Sales_Order_Lines_History.Delivery_Date AS [Delivery Date]
FROM         dbo.Sales_Order_Lines_History LEFT OUTER JOIN
                      dbo.SO_Line_History_Type ON dbo.Sales_Order_Lines_History.SO_Line_History_Type_id = dbo.SO_Line_History_Type.SO_Line_History_Type_id LEFT OUTER JOIN
                      dbo.Employee ON dbo.Sales_Order_Lines_History.history_caused_by__employee_id = dbo.Employee.Employee_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[MRP_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[MRP_List]
AS
SELECT     dbo.Part.Part_No AS [Part No], dbo.Part.Description AS [Part Description], dbo.Group_Code.Group_Code AS [Group Code], 
                      dbo.MRP_Temp.Date_Required AS [Date Required], dbo.MRP_Temp.Required, dbo.MRP_Temp.WO AS [WO Qty], dbo.MRP_Temp.WO_No AS [WO No], 
                      dbo.MRP_Temp.POLine AS [PO Qty], dbo.MRP_Temp.PO_No AS [PO No], dbo.MRP_Temp.Stock, dbo.MRP_Temp.LineBalance, dbo.MRP_Temp.PWO AS FWO, 
                      dbo.MRP_Temp.PRequired AS FRequired, dbo.MRP_Temp.PBalance AS FBalance, dbo.MRP_Temp.Balance, dbo.MRP_Temp.Contract_No, dbo.MRP_Temp.SO_No, 
                      dbo.Part_type.Part_type AS [Part Type], dbo.Sales_Order_Lines.Qty AS [SO Qty]
FROM         dbo.Sales_Order_Lines RIGHT OUTER JOIN
                      dbo.MRP_Temp INNER JOIN
                      dbo.Part ON dbo.MRP_Temp.Part_ID = dbo.Part.Part_Id ON dbo.Sales_Order_Lines.Contract_No = dbo.MRP_Temp.Contract_No LEFT OUTER JOIN
                      dbo.Part_type ON dbo.Part.Type__Part_Type_Id = dbo.Part_type.part_type_id LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.MRP_Temp.WO_No = dbo.WORK_ORDERS.WO_No LEFT OUTER JOIN
                      dbo.Group_Code ON dbo.Part.Groupcode__Groupcode_id = dbo.Group_Code.Groupcode_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Drop_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_Drop_list]
AS
SELECT     dbo.Part.Part_Id, dbo.Part.Part_No, dbo.Part.Description, dbo.Part.Drawing_No, dbo.Part_type.Part_type, dbo.UOM.Unit_of_Measure, 
                      dbo.Tracability.Tracabilty AS Traceabilty, dbo.UOM.Area, dbo.UOM.Length, dbo.UOM.Non_Divisible, dbo.Part.In_Stock, dbo.Part.On_Order, 
                      dbo.Part.Deleted, dbo.Part.Status__Part_status_id
FROM         dbo.Part LEFT OUTER JOIN
                      dbo.Part_type ON dbo.Part.Type__Part_Type_Id = dbo.Part_type.part_type_id LEFT OUTER JOIN
                      dbo.UOM ON dbo.Part.Unit_of_measure__Uom_id = dbo.UOM.UOM_ID LEFT OUTER JOIN
                      dbo.Tracability ON dbo.Part.Tracability = dbo.Tracability.Tracability_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Parts_Required]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Parts_Required]
AS
SELECT     dbo.Part.Part_Id, dbo.Part.Type__Part_Type_Id, dbo.Part.In_Stock AS [In Stock], dbo.Part.Min_Order AS [Min Order], dbo.Part.On_Order AS [On Order], 
                      dbo.Part.Part_No AS [Part No], dbo.Part.Re_Order AS [Re Order], dbo.Part.Recomended_Order AS [Recomended Order], dbo.Part.Required AS [Total Required], 
                      dbo.UOM.Unit_of_Measure AS [Unit of Measure], dbo.Part.Description AS [Part Description], dbo.Part.Drawing_No AS [Drawing No], dbo.CATEGORY.Category, 
                      dbo.Group_Code.Group_Code AS [Group Code], dbo.Part.Lead_Time AS [Lead Time], dbo.Part_type.Part_type AS [Part type], dbo.COMPANYS.Name AS [Pref Supplier], 
                      dbo.COMPANYS.Country
FROM         dbo.Group_Code RIGHT OUTER JOIN
                      dbo.Part_type RIGHT OUTER JOIN
                      dbo.COMPANYS RIGHT OUTER JOIN
                      dbo.Part ON dbo.COMPANYS.Company_Id = dbo.Part.Supplier__Company_id ON dbo.Part_type.part_type_id = dbo.Part.Type__Part_Type_Id ON 
                      dbo.Group_Code.Groupcode_Id = dbo.Part.Groupcode__Groupcode_id LEFT OUTER JOIN
                      dbo.CATEGORY ON dbo.Group_Code.Category__category_id = dbo.CATEGORY.Category_Id LEFT OUTER JOIN
                      dbo.UOM ON dbo.Part.Unit_of_measure__Uom_id = dbo.UOM.UOM_ID
WHERE     (dbo.Part.Uses_Stock = 1) AND (dbo.Part.Re_Order + dbo.Part.Required > dbo.Part.In_Stock + dbo.Part.On_Order)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Related_Doc_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_Related_Doc_List]
AS
SELECT     Part_Related_Docs_id, AgainstPart__Part_Id, Description, Document_Path, SFDC_Doc_Visible
FROM         dbo.Part_Related_Doc
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Part_Related_Doc_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Part_Related_Doc"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 245
               Right = 233
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Part_Related_Doc_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Part_Related_Doc_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Part_Related_Doc_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Related_Doc_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_Related_Doc_Drop_List]
AS
SELECT     Part_Related_Docs_id, AgainstPart__Part_Id, Description, Document_Path, SFDC_Doc_Visible
FROM         dbo.Part_Related_Doc
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Part_Related_Doc_Drop_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Part_Related_Doc"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 233
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1875
         Width = 2430
         Width = 2895
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Part_Related_Doc_Drop_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Part_Related_Doc_Drop_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Part_Related_Doc_Drop_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Holiday_Type_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Holiday_Type_List]
AS
SELECT     Holiday_Type_ID, Holiday_Type AS [Holiday Type]
FROM         dbo.Holiday_Type
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Employee_Holidays_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Employee_Holidays_List]
AS
SELECT     dbo.Employee_Holidays.Employee_Holidays_ID, dbo.Employee_Holidays.Holiday_Date AS [Holiday Date], dbo.Employee_Holidays.Portion, 
                      dbo.Employee.Name AS [Added By], dbo.Employee_Holidays.Parent__Employee_ID, dbo.Employee_Holidays.Modified, 
                      dbo.Holiday_Type.Holiday_Type AS [Holiday Type], dbo.Employee_Holidays.Out_Of_Office AS Exclude_From_Calc
FROM         dbo.Employee_Holidays LEFT OUTER JOIN
                      dbo.Holiday_Type ON dbo.Employee_Holidays.Type__Holiday_Type_ID = dbo.Holiday_Type.Holiday_Type_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.Employee_Holidays.Added_By__Employee_ID = dbo.Employee.Employee_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Holiday_Type_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Holiday_Type_Drop_List]
AS
SELECT     Holiday_Type_ID, Holiday_Type AS [Holiday Type]
FROM         dbo.Holiday_Type
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_order_Part_Alias]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Sales_order_Part_Alias]
AS
SELECT     dbo.Sales_Order_Lines.Sales_Order_Lines_ID, dbo.Sales_Order_Lines.Part_Id__Part_Id, dbo.SALES_ORDERS.Customers_ID__Companys, 
                      dbo.Supplier_Part.Supplier_Part_No, dbo.SALES_ORDERS.SALES_ORDERS_ID, dbo.Supplier_Part.Supplier_part_id
FROM         dbo.Supplier_Part RIGHT OUTER JOIN
                      dbo.SALES_ORDERS ON dbo.Supplier_Part.Supplier__Companys_id = dbo.SALES_ORDERS.Customers_ID__Companys RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.SALES_ORDERS.SALES_ORDERS_ID = dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID AND 
                      dbo.Supplier_Part.Part__Part_id = dbo.Sales_Order_Lines.Part_Id__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Count_SO_For_Part]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Count_SO_For_Part]
AS
SELECT     dbo.Part.Part_Id, COUNT(dbo.SALES_ORDERS.SALES_ORDERS_ID) AS Count
FROM         dbo.Sales_Order_Lines LEFT OUTER JOIN
                      dbo.SALES_ORDERS ON dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID = dbo.SALES_ORDERS.SALES_ORDERS_ID RIGHT OUTER JOIN
                      dbo.Part ON dbo.Sales_Order_Lines.Part_Id__Part_Id = dbo.Part.Part_Id
GROUP BY dbo.Part.Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Serial_No_Group_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Serial_No_Group_List]
AS
SELECT     Serial_No_Group_Id, Serial_No_Group AS [Serial No Group], Prefix, Suffix, Current_no AS [Current no], Batch_no AS [Batch no], 
                      Allocate_on_WO AS [Allocate on WO]
FROM         dbo.Serial_No_Group
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Serial_No_Group_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Serial_No_Group_Drop_List]
AS
SELECT     Serial_No_Group_Id, Serial_No_Group AS [Serial No Group], Prefix, Suffix, Current_no AS [Current no], Batch_no AS [Batch no], 
                      Allocate_on_WO AS [Allocate on WO]
FROM         dbo.Serial_No_Group
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Form_Headers_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Form_Headers_list]
AS
SELECT     dbo.Form_Headers.Header_ID, dbo.Form_Headers.Caption, dbo.Form_Headers.[Default], dbo.Form_Default_Context.Context, dbo.Form_Headers.Header
FROM         dbo.Form_Headers LEFT OUTER JOIN
                      dbo.Form_Default_Context ON dbo.Form_Headers.Form = dbo.Form_Default_Context.[Form Id]
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Employee_Shifts_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Employee_Shifts_List]
AS
SELECT     dbo.Employee_Shifts.ShiftRec_Id, dbo.Employee_Shifts.Employee__Employee_Id, dbo.Shifts.Shift, dbo.Employee_Shifts.Start_Date AS [Start Date], 
                      dbo.Employee_Shifts.End_Date AS [End Date], dbo.Employee_Shifts.Shifts__Shift_Id, dbo.Employee_Shifts.For_Job_Costing AS [For Job], 
                      dbo.Employee_Shifts.For_TA AS [For TA]
FROM         dbo.Employee_Shifts LEFT OUTER JOIN
                      dbo.Employee ON dbo.Employee_Shifts.Employee__Employee_Id = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.Shifts ON dbo.Employee_Shifts.Shifts__Shift_Id = dbo.Shifts.Shift_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Shifts_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Shifts_list]
AS
SELECT     Shift_ID, Shift, modified_by, modified, [Default]
FROM         dbo.Shifts
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Shifts_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Shifts_Drop_List]
AS
SELECT     Shift_ID, Shift, [Default]
FROM         dbo.Shifts
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Question_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Question_List]
AS
SELECT     Question_ID, Question_text AS Question
FROM         dbo.Question
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Question_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Question_Drop_List]
AS
SELECT     Question_ID, Question_text AS Question
FROM         dbo.Question
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Issues_RTS]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Issues_RTS]
AS
SELECT     dbo.Return_to_supplier_Stock.Stock__Stock_id, dbo.Return_to_supplier_Stock.Total_Qty AS Qty, 
                      dbo.Return_to_supplier_Stock.Total_Length AS Length, dbo.Return_to_supplier_Stock.Total_Breadth AS Breadth, 
                      dbo.Return_to_supplier_Stock.QLB AS Total, dbo.Employee.Name AS [Issued By], dbo.Return_to_supplier.Return_Date AS [Issued Date], 
                      dbo.Purchase_Order.Po_No AS [PO No], dbo.COMPANYS.Name AS Supplier
FROM         dbo.Purchase_Order RIGHT OUTER JOIN
                      dbo.Return_to_supplier ON dbo.Purchase_Order.Purchase_Order_ID = dbo.Return_to_supplier.Po__Purchase_orders_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.Return_to_supplier.Returned_by = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Return_to_supplier.Supplier__COMPANYS_ID = dbo.COMPANYS.Company_Id RIGHT OUTER JOIN
                      dbo.Return_to_supplier_Stock ON dbo.Return_to_supplier.Return_to_supplier_ID = dbo.Return_to_supplier_Stock.Issue__Return_to_Supplier_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[NC_Action_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[NC_Action_List]
AS
SELECT     dbo.NC_Action.NC_Action_ID, dbo.NC_Action_Type.Action_Type AS [Action Type], dbo.Action.Action, dbo.NC_Action.Est_Comp_Date AS [Est. Compl. Date], 
                      dbo.NC_Action.Act_Compl_Date AS [Act. Compl. Date], dbo.NC_Action.Cost, dbo.Employee.Name AS [Completed By], 
                      dbo.Non_Conformance.Non_Conformance_No AS [N C No.], dbo.NC_Action.Action_Completed AS [Action Compl.], dbo.NC_Action.Parent__Non_Conformance_ID, 
                      dbo.NC_Action.Alloc_To__Employee_ID, Employee_1.Name AS [Allocated To], dbo.NC_Action.NC_Action_Description_Non_RTF AS [Act. Desc.], 
                      dbo.Customer_Return.Advice_No AS [Return No.], WORK_ORDERS_1.WO_No AS [WO No.], dbo.Purchase_Order.Po_No AS [PO No.], 
                      dbo.WORK_ORDERS.WO_No AS [Action WO No]
FROM         dbo.Employee AS Employee_1 RIGHT OUTER JOIN
                      dbo.NC_Action LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.NC_Action.WORK_ORDERS__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID ON 
                      Employee_1.Employee_Id = dbo.NC_Action.Alloc_To__Employee_ID LEFT OUTER JOIN
                      dbo.Purchase_Order RIGHT OUTER JOIN
                      dbo.Non_Conformance ON dbo.Purchase_Order.Purchase_Order_ID = dbo.Non_Conformance.PO_No__Purchase_Order_ID LEFT OUTER JOIN
                      dbo.WORK_ORDERS AS WORK_ORDERS_1 ON 
                      dbo.Non_Conformance.WORK_ORDERS__WORK_ORDERS_ID = WORK_ORDERS_1.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Customer_Return ON dbo.Non_Conformance.Customer_Return__Customer_Return_ID = dbo.Customer_Return.Customer_Return_ID ON 
                      dbo.NC_Action.Parent__Non_Conformance_ID = dbo.Non_Conformance.Non_Conformance_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.NC_Action.Completed_By__Employee_ID = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.Action ON dbo.NC_Action.Action__Action_ID = dbo.Action.Action_ID LEFT OUTER JOIN
                      dbo.NC_Action_Type ON dbo.NC_Action.Action_Type__NC_Action_Type_ID = dbo.NC_Action_Type.NC_Action_Type_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[D_Type_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[D_Type_Drop_List]
AS
SELECT     D_Type_ID, D_Type_Name, Modified, Modified_By
FROM         dbo.D_Type
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[D_Type_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[D_Type_List]
AS
SELECT     D_Type_ID, D_Type_Name, Modified, Modified_By
FROM         dbo.D_Type
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info1_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[General_Info1_Drop_List]
AS
SELECT     General_Info1_ID, Description, Modified, Modified_By
FROM         dbo.General_Info1
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info1_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[General_Info1_List]
AS
SELECT     General_Info1_ID, Description, Modified, Modified_By
FROM         dbo.General_Info1
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquiry_Lines_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Enquiry_Lines_Drop_List]
AS
SELECT     dbo.ENQUIRY_LINES.Enquiry_Line_id, dbo.ENQUIRY_LINES.Item_No, dbo.Part.Part_No, dbo.Part.Description, dbo.ENQUIRYS.Enquiry_No, 
                      dbo.ENQUIRY_LINES.Declined, dbo.ENQUIRY_LINES.Lost, dbo.ENQUIRY_LINES.Won
FROM         dbo.ENQUIRY_LINES LEFT OUTER JOIN
                      dbo.ENQUIRYS ON dbo.ENQUIRY_LINES.Enquiry_Line__Enquiry_id = dbo.ENQUIRYS.Enquiry_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.ENQUIRY_LINES.Part__Part_Id = dbo.Part.Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquiry_Part_Alias]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Enquiry_Part_Alias]
AS
SELECT     dbo.ENQUIRYS.Enquiry_ID, dbo.ENQUIRY_LINES.Enquiry_Line_id, dbo.Supplier_Part.Supplier_part_id, dbo.Supplier_Part.Part__Part_id, 
                      dbo.Supplier_Part.Supplier__Companys_id, dbo.Supplier_Part.Supplier_Part_No
FROM         dbo.ENQUIRY_LINES RIGHT OUTER JOIN
                      dbo.ENQUIRYS ON dbo.ENQUIRY_LINES.Enquiry_Line__Enquiry_id = dbo.ENQUIRYS.Enquiry_ID LEFT OUTER JOIN
                      dbo.Supplier_Part ON dbo.ENQUIRY_LINES.Part__Part_Id = dbo.Supplier_Part.Part__Part_id AND 
                      dbo.ENQUIRYS.Customer_id__Companys_Id = dbo.Supplier_Part.Supplier__Companys_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Form_Headers_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Form_Headers_Drop_List]
AS
SELECT     Header_ID, Caption, Text, Header, [Default]
FROM         dbo.Form_Headers
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[D_Type_Fields_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[D_Type_Fields_List]
AS
SELECT     D_Type_Fields_ID, Field_Name, Caption, Order_No, Parent__D_Type_ID, Visible, Control_Type
FROM         dbo.D_Type_Fields
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Week_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Week_List]
AS
SELECT     Week_ID, Start_Date AS [Start Date], End_Date AS [End Date], Week_No AS [Week No]
FROM         dbo.Week
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info2_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[General_Info2_Drop_List]
AS
SELECT     General_Info2_ID, Description, Modified, Modified_By
FROM         dbo.General_Info2
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info2_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[General_Info2_List]
AS
SELECT     General_Info2_ID, Description, Modified, Modified_By
FROM         dbo.General_Info2
' 
GO
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Menu_Info_Groups]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[User_Menu_Info_Groups] as SELECT User_Buttons.[User id], Buttons.[Button id], Buttons.Icon, Buttons.[group], Buttons.Text, User_Buttons.Visible, Buttons.ShortCut, Buttons.[order], Buttons.AddNew, Buttons.HideMe, ButtonGroups.Group_Text, Shortcut.Shortcut AS ShortcutText
FROM ((Buttons LEFT JOIN ButtonGroups ON Buttons.[group]= ButtonGroups.Group_id) LEFT JOIN Shortcut ON Buttons.ShortCut = Shortcut.Shortcut_id) RIGHT JOIN User_Buttons ON Buttons.[Button id] = User_Buttons.[Button Id]
WHERE (((Buttons.HideMe)=0) AND ((User_Buttons.Visible)=1))
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Button_info]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[User_Button_info]
AS
SELECT     dbo.User_Buttons.[User id], dbo.Buttons.[Button id], dbo.Buttons.Icon, dbo.Buttons.[Group], dbo.Buttons.Text, dbo.User_Buttons.Visible, 
                      dbo.Buttons.ShortCut, dbo.Buttons.[Order], dbo.Buttons.AddNew, dbo.Buttons.HideMe, dbo.Shortcut.Shortcut AS ShortcutText, 
                      dbo.User_Buttons.Group_id
FROM         dbo.Buttons RIGHT OUTER JOIN
                      dbo.User_Buttons ON dbo.Buttons.[Button id] = dbo.User_Buttons.[Button Id] LEFT OUTER JOIN
                      dbo.Shortcut ON dbo.Buttons.ShortCut = dbo.Shortcut.Shortcut_id
WHERE     (dbo.User_Buttons.Visible = 1) AND (dbo.Buttons.HideMe = 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Quote_Part_Alias]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Quote_Part_Alias]
AS
SELECT     dbo.QUOTES.Quote_id, dbo.QUOTE_LINES.Quote_Line_id, dbo.Supplier_Part.Supplier_part_id, dbo.Supplier_Part.Supplier_Part_No, 
                      dbo.Supplier_Part.Part__Part_id, dbo.Supplier_Part.Supplier__Companys_id
FROM         dbo.Supplier_Part RIGHT OUTER JOIN
                      dbo.QUOTES ON dbo.Supplier_Part.Supplier__Companys_id = dbo.QUOTES.Customer_id__Companys_Id FULL OUTER JOIN
                      dbo.QUOTE_LINES ON dbo.Supplier_Part.Part__Part_id = dbo.QUOTE_LINES.Part__Part_Id AND 
                      dbo.QUOTES.Quote_id = dbo.QUOTE_LINES.Form_Quote__Quote_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SO_Credit_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[SO_Credit_List]
AS
SELECT     dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID AS [Sales Order ID], dbo.CREDITS.CREDITS_ID, dbo.CREDITS.Credit_No AS [credit No], 
                      dbo.CREDITS.Date_Raised AS [Date Raised], dbo.CREDITS.Sent_To_Accounts AS [Sent To Accounts], dbo.CREDIT_STATUS.Credit_Status AS Status, 
                      dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, dbo.CREDITS.Currency_Total_Exc_Vat AS [Total Exc Vat], dbo.CREDITS.Currency_Total_Vat AS Vat, 
                      dbo.CREDITS.Currency_Total_Inc_Vat AS [Total Inc Vat]
FROM         dbo.Credit_Part INNER JOIN
                      dbo.CREDITS ON dbo.Credit_Part.Credit__CREDITS_ID = dbo.CREDITS.CREDITS_ID INNER JOIN
                      dbo.Sales_Order_Lines ON dbo.Credit_Part.SoLine__Sales_Order_Lines_ID = dbo.Sales_Order_Lines.Sales_Order_Lines_ID LEFT OUTER JOIN
                      dbo.CREDIT_STATUS ON dbo.Credit_Part.Status__Credit_Part_Status_ID = dbo.CREDIT_STATUS.Credit_Status_Id LEFT OUTER JOIN
                      dbo.MULTICURRENCY ON dbo.CREDITS.Currency__Currency_Id = dbo.MULTICURRENCY.MultiCurrency_ID
GROUP BY dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID, dbo.CREDITS.CREDITS_ID, dbo.CREDITS.Credit_No, dbo.CREDITS.Date_Raised, 
                      dbo.CREDIT_STATUS.Credit_Status, dbo.CREDITS.Sent_To_Accounts, dbo.MULTICURRENCY.MultiCurrency_Currency, dbo.CREDITS.Currency_Total_Exc_Vat, 
                      dbo.CREDITS.Currency_Total_Vat, dbo.CREDITS.Currency_Total_Inc_Vat
HAVING      (dbo.CREDITS.Credit_No > '''')
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Credits_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Credits_List]
AS
SELECT     dbo.CREDITS.CREDITS_ID, dbo.CREDITS.Credit_No AS [Credit No], dbo.CREDITS.Date_Raised AS [Date Raised], 
                      dbo.CREDITS.Sent_To_Accounts AS [Sent To Accounts], dbo.CREDITS.Tax_Date AS [Tax Date], dbo.CONTACTS.Name AS Contact, dbo.COMPANYS.Name AS Company, 
                      dbo.CREDIT_STATUS.Credit_Status AS Status, dbo.CREDITS.Posted, dbo.CREDITS.Company__COMPANYS_ID, 
                      dbo.CREDITS.Currency_Total_Exc_Vat AS [Total Exc Vat], dbo.CREDITS.Currency_Total_Vat AS Vat, dbo.CREDITS.Currency_Total_Inc_Vat AS [Total Inc Vat], 
                      dbo.CREDITS.Do_Not_Post AS [Do Not Post]
FROM         dbo.COMPANYS RIGHT OUTER JOIN
                      dbo.CREDITS ON dbo.COMPANYS.Company_Id = dbo.CREDITS.Company__COMPANYS_ID LEFT OUTER JOIN
                      dbo.CONTACTS ON dbo.CREDITS.Contact__CONTACTS_ID = dbo.CONTACTS.Contact_id LEFT OUTER JOIN
                      dbo.CREDIT_STATUS ON dbo.CREDITS.Status__CREDIT_STATUS_ID = dbo.CREDIT_STATUS.Credit_Status_Id
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Credits_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "CREDITS"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 295
            End
            DisplayFlags = 280
            TopColumn = 24
         End
         Begin Table = "CONTACTS"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 357
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "CREDIT_STATUS"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 209
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Credits_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Credits_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Credits_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accounts_Credits]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Accounts_Credits]
AS
SELECT     dbo.Credit_Part.Credit_Part_ID, dbo.Credit_Part.Credit__CREDITS_ID, dbo.Credit_Part.System_Price, 
                      dbo.Credit_Part.VAT / dbo.CREDITS.Currency_Rate AS Vat, dbo.Credit_Part.Ref, dbo.Part.Part_No, dbo.COMPANYS.Company_No, 
                      dbo.CREDITS.Tax_Date, dbo.CREDITS.Credit_No, dbo.CREDITS.Company__COMPANYS_ID, dbo.Credit_Part.Nominal__Nominals_ID, 
                      dbo.VAT.Nominal__Nominals_ID AS Vat_Nominal_Id, dbo.Nominal_Cost_Centre.Nominal_Cost_Centre_ID, dbo.CREDITS.Currency__Currency_Id, 
                      dbo.CREDITS.Currency_Rate, dbo.Credit_Part.Total
FROM         dbo.Part RIGHT OUTER JOIN
                      dbo.VAT RIGHT OUTER JOIN
                      dbo.Credit_Part LEFT OUTER JOIN
                      dbo.Nominal_Cost_Centre ON dbo.Credit_Part.NCC__Nominal_Cost_Centre_ID = dbo.Nominal_Cost_Centre.Nominal_Cost_Centre_ID ON 
                      dbo.VAT.VAT_ID = dbo.Credit_Part.VAT_ID ON dbo.Part.Part_Id = dbo.Credit_Part.Part__Part_id LEFT OUTER JOIN
                      dbo.COMPANYS RIGHT OUTER JOIN
                      dbo.CREDITS ON dbo.COMPANYS.Company_Id = dbo.CREDITS.Company__COMPANYS_ID ON 
                      dbo.Credit_Part.Credit__CREDITS_ID = dbo.CREDITS.CREDITS_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Flat_Bom_Temp_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_Flat_Bom_Temp_List]
AS
SELECT     dbo.Bom.Bom_id, dbo.Bom.Bom_Part__part_id, dbo.Part.Part_No, dbo.Part.Description, dbo.Bom.Qty, Part_1.Part_No AS [Parent Part], 
                      dbo.Part_Flat_Bom_Temp.Main_Part__Part_ID, Part_2.Part_No AS [Main Part No]
FROM         dbo.Part AS Part_2 RIGHT OUTER JOIN
                      dbo.Part_Flat_Bom_Temp ON Part_2.Part_Id = dbo.Part_Flat_Bom_Temp.Main_Part__Part_ID RIGHT OUTER JOIN
                      dbo.Bom INNER JOIN
                      dbo.Part ON dbo.Bom.Bom_Part__part_id = dbo.Part.Part_Id ON dbo.Part_Flat_Bom_Temp.Bom__Bom_ID = dbo.Bom.Bom_id LEFT OUTER JOIN
                      dbo.Part AS Part_1 ON dbo.Bom.Main_Part__part_id = Part_1.Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Bom_Order]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Bom_Order]
AS
SELECT     Main_Part__part_id, MIN(Bom_Order) AS [Order]
FROM         dbo.Bom
GROUP BY Main_Part__part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Bom_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Bom_list]
AS
SELECT     dbo.Bom.Bom_id, dbo.Bom.Main_Part__part_id, dbo.Bom.Bom_Part__part_id, dbo.Bom.Bom_Order, dbo.Bom.Deleted, dbo.Part.Part_No, 
                      dbo.Part.Type__Part_Type_Id, dbo.Part.Parent, dbo.Bom.Main_material, dbo.Bom.Bom_Version__Bom_Versions_id, dbo.Bom.For_Version__Bom_versions_id, 
                      dbo.Bom.Qty, dbo.Bom.Sundry, dbo.Bom.Extra_Qty, dbo.Bom.Length, dbo.Bom.Breadth, dbo.Bom.Released, Part_1.Part_No AS [Parent Part No], 
                      dbo.Part.Part_No AS [BOM Part No], dbo.Part.Cost, dbo.Part.Description, dbo.Part.In_Stock AS [In Stock], dbo.Part.On_Order AS [On Order], dbo.Part.Required, 
                      dbo.Group_Code.Group_Code AS [Group Code], dbo.Part.Notes_Non_RTF AS Notes, dbo.Part.Drawing_No AS [Drawing No]
FROM         dbo.Group_Code RIGHT OUTER JOIN
                      dbo.Part ON dbo.Group_Code.Groupcode_Id = dbo.Part.Groupcode__Groupcode_id RIGHT OUTER JOIN
                      dbo.Bom LEFT OUTER JOIN
                      dbo.Part Part_1 ON dbo.Bom.Main_Part__part_id = Part_1.Part_Id ON dbo.Part.Part_Id = dbo.Bom.Bom_Part__part_id
WHERE     (NOT (dbo.Part.Type__Part_Type_Id IS NULL))
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[First_Purchased_Mat]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[First_Purchased_Mat]
AS
SELECT        TOP (100) PERCENT dbo.Bom.Main_Part__part_id, MIN(dbo.Bom.Bom_Order) AS BOM_ORDER
FROM            dbo.Bom INNER JOIN
                         dbo.Part ON dbo.Bom.Bom_Part__part_id = dbo.Part.Part_Id
WHERE        (dbo.Part.Type__Part_Type_Id = 2)
GROUP BY dbo.Bom.Main_Part__part_id
ORDER BY MIN(dbo.Bom.Bom_Order)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Supplier_Group_Code_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Supplier_Group_Code_List]
AS
SELECT     dbo.Supplier_Group_Code.Supplier_Group_Code_ID, dbo.Supplier_Group_Code.Modified, dbo.Supplier_Group_Code.Supplier__COMPANYS_ID, 
                      dbo.Supplier_Group_Code.Group__Group_Code_ID, dbo.Supplier_Group_Code.Priority, dbo.Supplier_Group_Code.No_Hits AS [No Hits], 
                      dbo.Supplier_Group_Code.Last_Used AS [Last Used], dbo.Group_Code.Group_Code AS [Group Code], dbo.COMPANYS.Company_No AS [Company No], 
                      dbo.COMPANYS.Name AS Supplier
FROM         dbo.Supplier_Group_Code LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Supplier_Group_Code.Supplier__COMPANYS_ID = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.Group_Code ON dbo.Supplier_Group_Code.Group__Group_Code_ID = dbo.Group_Code.Groupcode_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Cost_Centre_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Cost_Centre_Drop_List]
AS
SELECT     dbo.Cost_Centre.Cost_Centre_ID, dbo.Cost_Centre.Cost_Centre AS [Cost Centre], dbo.Cost_Centre.Description, 
                      dbo.Cost_Centre.Department__Department_ID, dbo.Department.Department
FROM         dbo.Cost_Centre LEFT OUTER JOIN
                      dbo.Department ON dbo.Cost_Centre.Department__Department_ID = dbo.Department.Department_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Nominal_Cost_Centre_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Nominal_Cost_Centre_List]
AS
SELECT     dbo.Nominal_Cost_Centre.Nominal_Cost_Centre_ID, dbo.Nominal_Cost_Centre.Description, dbo.Nominal_Cost_Centre.Credit, 
                      dbo.Nominal_Cost_Centre.Debit, dbo.Nominal_Cost_Centre.Cost_Centre__Cost_Centre_ID, dbo.Nominal_Cost_Centre.Nominal__Nominals_ID, 
                      dbo.Nominals.Nominal, dbo.Cost_Centre.Cost_Centre AS [Cost Centre]
FROM         dbo.Nominal_Cost_Centre LEFT OUTER JOIN
                      dbo.Cost_Centre ON dbo.Nominal_Cost_Centre.Cost_Centre__Cost_Centre_ID = dbo.Cost_Centre.Cost_Centre_ID LEFT OUTER JOIN
                      dbo.Nominals ON dbo.Nominal_Cost_Centre.Nominal__Nominals_ID = dbo.Nominals.Nominal_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Cost_Centre_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Cost_Centre_List]
AS
SELECT     dbo.Cost_Centre.Cost_Centre_ID, dbo.Cost_Centre.Cost_Centre AS [Cost Centre], dbo.Cost_Centre.Description, 
                      dbo.Cost_Centre.Department__Department_ID, dbo.Department.Department
FROM         dbo.Cost_Centre LEFT OUTER JOIN
                      dbo.Department ON dbo.Cost_Centre.Department__Department_ID = dbo.Department.Department_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Nominal_Cost_Centre_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Nominal_Cost_Centre_Drop_List]
AS
SELECT     dbo.Nominal_Cost_Centre.Nominal_Cost_Centre_ID, dbo.Nominal_Cost_Centre.Description, dbo.Nominal_Cost_Centre.Credit, 
                      dbo.Nominal_Cost_Centre.Debit, dbo.Nominal_Cost_Centre.Cost_Centre__Cost_Centre_ID, dbo.Nominal_Cost_Centre.Nominal__Nominals_ID, 
                      dbo.Nominals.Nominal, dbo.Cost_Centre.Cost_Centre AS [Cost Centre]
FROM         dbo.Nominal_Cost_Centre LEFT OUTER JOIN
                      dbo.Cost_Centre ON dbo.Nominal_Cost_Centre.Cost_Centre__Cost_Centre_ID = dbo.Cost_Centre.Cost_Centre_ID LEFT OUTER JOIN
                      dbo.Nominals ON dbo.Nominal_Cost_Centre.Nominal__Nominals_ID = dbo.Nominals.Nominal_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[StockTake_Type_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[StockTake_Type_List]
AS
SELECT     Stock_Take_Type_ID, Name, Frequency
FROM         dbo.Stock_Take_Type
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[StockTake_Type_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[StockTake_Type_Drop_List]
AS
SELECT     Stock_Take_Type_ID, Name, Frequency
FROM         dbo.Stock_Take_Type
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Run]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Actual_Run]
AS
SELECT     Type__Time_Type_ID, SUM(time_worked_1 + time_worked_2 + time_worked_3 + time_worked_4 + time_worked_5 + time_worked_6) AS ActualRunHours, 
                      WorkOrder__WORK_ORDERS_ID, SUM((time_worked_1 + time_worked_2 + time_worked_3 + time_worked_4 + time_worked_5 + time_worked_6) * WC_Charge) 
                      AS ActualRunCharge, SUM((time_worked_1 + time_worked_2 + time_worked_3 + time_worked_4 + time_worked_5 + time_worked_6) * WC_Cost) AS ActualMachCost, 
                      SUM(((((time_worked_1 * rate_1 + time_worked_2 * rate_2) + time_worked_3 * rate_3) + time_worked_4 * rate_4) + time_worked_5 * rate_5) + time_worked_6 * rate_6) 
                      AS ActualLabCost
FROM         dbo.TIMES
GROUP BY Type__Time_Type_ID, WorkOrder__WORK_ORDERS_ID
HAVING      (Type__Time_Type_ID = 1)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Setup]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Actual_Setup]
AS
SELECT     Type__Time_Type_ID, SUM(time_worked_1 + time_worked_2 + time_worked_3 + time_worked_4 + time_worked_5 + time_worked_6) AS ActualSetupHours, 
                      WorkOrder__WORK_ORDERS_ID, SUM((time_worked_1 + time_worked_2 + time_worked_3 + time_worked_4 + time_worked_5 + time_worked_6) * WC_Charge) 
                      AS ActualSetupCharge, SUM((time_worked_1 + time_worked_2 + time_worked_3 + time_worked_4 + time_worked_5 + time_worked_6) * WC_Cost) AS ActualMachCost, 
                      SUM(((((time_worked_1 * rate_1 + time_worked_2 * rate_2) + time_worked_3 * rate_3) + time_worked_4 * rate_4) + time_worked_5 * rate_5) + time_worked_6 * rate_6) 
                      AS ActualLabCost
FROM         dbo.TIMES
GROUP BY Type__Time_Type_ID, WorkOrder__WORK_ORDERS_ID
HAVING      (Type__Time_Type_ID = 2)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Min_Times]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Min_Times]
AS
SELECT     Op__Wo_Route_SChedule_ID, MIN(TIMES_ID) AS Min_Time
FROM         dbo.TIMES
WHERE     (End_Time IS NULL)
GROUP BY Op__Wo_Route_SChedule_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Job_Costing_Times_Temp]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Job_Costing_Times_Temp]
AS
SELECT     dbo.WORK_ORDERS.So_Line_Id, 
                      SUM(dbo.TIMES.time_worked_1 + dbo.TIMES.time_worked_2 + dbo.TIMES.time_worked_3 + dbo.TIMES.time_worked_4 + dbo.TIMES.time_worked_5 + dbo.TIMES.time_worked_6)
                       AS [Actual Total Hours], 
                      SUM(dbo.TIMES.time_worked_1 * dbo.TIMES.rate_1 + dbo.TIMES.time_worked_2 * dbo.TIMES.rate_2 + dbo.TIMES.time_worked_3 * dbo.TIMES.rate_3 +
                       dbo.TIMES.time_worked_4 * dbo.TIMES.rate_4 + dbo.TIMES.time_worked_5 * dbo.TIMES.rate_5 + dbo.TIMES.time_worked_6 * dbo.TIMES.rate_6) 
                      AS [Actual Total Labour], 
                      SUM((dbo.TIMES.time_worked_1 + dbo.TIMES.time_worked_2 + dbo.TIMES.time_worked_3 + dbo.TIMES.time_worked_4 + dbo.TIMES.time_worked_5 + dbo.TIMES.time_worked_6)
                       * dbo.TIMES.WC_Cost) AS [Actual Total WC], 
                      SUM((dbo.TIMES.time_worked_1 + dbo.TIMES.time_worked_2 + dbo.TIMES.time_worked_3 + dbo.TIMES.time_worked_4 + dbo.TIMES.time_worked_5 + dbo.TIMES.time_worked_6)
                       * dbo.TIMES.WC_Charge) AS [Expected Total WC]
FROM         dbo.TIMES RIGHT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.TIMES.WorkOrder__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID
GROUP BY dbo.WORK_ORDERS.So_Line_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Setup_Alt]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Actual_Setup_Alt]
AS
SELECT     dbo.TIMES.Type__Time_Type_ID, 
                      SUM(dbo.TIMES.time_worked_1 + dbo.TIMES.time_worked_2 + dbo.TIMES.time_worked_3 + dbo.TIMES.time_worked_4 + dbo.TIMES.time_worked_5 + dbo.TIMES.time_worked_6)
                       AS ActualSetupHours, dbo.TIMES.WorkOrder__WORK_ORDERS_ID, 
                      SUM((dbo.TIMES.time_worked_1 + dbo.TIMES.time_worked_2 + dbo.TIMES.time_worked_3 + dbo.TIMES.time_worked_4 + dbo.TIMES.time_worked_5 + dbo.TIMES.time_worked_6)
                       * dbo.TIMES.WC_Charge) AS ActualSetupCharge, 
                      SUM((dbo.TIMES.time_worked_1 + dbo.TIMES.time_worked_2 + dbo.TIMES.time_worked_3 + dbo.TIMES.time_worked_4 + dbo.TIMES.time_worked_5 + dbo.TIMES.time_worked_6)
                       * dbo.TIMES.WC_Cost) AS ActualMachCost, SUM(((((dbo.TIMES.time_worked_1 * dbo.TIMES.rate_1 + dbo.TIMES.time_worked_2 * dbo.TIMES.rate_2) 
                      + dbo.TIMES.time_worked_3 * dbo.TIMES.rate_3) + dbo.TIMES.time_worked_4 * dbo.TIMES.rate_4) + dbo.TIMES.time_worked_5 * dbo.TIMES.rate_5) 
                      + dbo.TIMES.time_worked_6 * dbo.TIMES.rate_6) AS ActualLabCost, dbo.TIMES.Op__Wo_Route_SChedule_ID, dbo.WORK_ORDERS.Qty AS WO_Qty
FROM         dbo.TIMES LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.TIMES.WorkOrder__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID
GROUP BY dbo.TIMES.Type__Time_Type_ID, dbo.TIMES.WorkOrder__WORK_ORDERS_ID, dbo.TIMES.Op__Wo_Route_SChedule_ID, dbo.WORK_ORDERS.Qty
HAVING      (dbo.TIMES.Type__Time_Type_ID = 2)
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Analysis_Actual_Setup_Alt', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[8] 4[54] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "TIMES"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 303
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 335
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Analysis_Actual_Setup_Alt'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Analysis_Actual_Setup_Alt', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Analysis_Actual_Setup_Alt'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_LABOUR_COST_TOTAL_SETUP]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_LABOUR_COST_TOTAL_SETUP]
AS
SELECT     SUM(dbo.TIMES.Qty) AS Qty_Complete, dbo.WORK_ORDERS.WORK_ORDERS_ID, dbo.TIMES.Op__Wo_Route_SChedule_ID
FROM         dbo.TIMES INNER JOIN
                      dbo.WORK_ORDERS ON dbo.TIMES.WorkOrder__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID
GROUP BY dbo.WORK_ORDERS.WORK_ORDERS_ID, dbo.TIMES.Op__Wo_Route_SChedule_ID' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Material_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Material_List]
AS
SELECT     Material_ID, Description, Cost_Per_Tonne, Modified, Modified_By
FROM         dbo.Material
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Material_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Material_Drop_List]
AS
SELECT     Material_ID, Description, Cost_Per_Tonne, Modified, Modified_By
FROM         dbo.Material
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Material_Type_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Material_Type_List]
AS
SELECT     Material_ID, Description, Cost_Per_Tonne, Modified, Modified_By
FROM         dbo.Material
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Material_Type_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Material_Type_Drop_List]
AS
SELECT     Material_ID, Description, Cost_Per_Tonne, Modified, Modified_By
FROM         dbo.Material
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Site_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Site_List]
AS
SELECT     Site_id, Site, Description
FROM         dbo.Site
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Location_Drop_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Location_Drop_list]
AS
SELECT     dbo.LOCATION.Location_id, dbo.LOCATION.Location, dbo.LOCATION.Description AS [Location Description], dbo.LOCATION.Bonded, dbo.Building.Building, 
                      dbo.Building.Description AS [Building Description], dbo.Site.Site, dbo.Site.Description AS [Site Description], dbo.LOCATION.Building__Building_id, dbo.Site.Site_id, 
                      dbo.LOCATION.Consignment
FROM         dbo.LOCATION LEFT OUTER JOIN
                      dbo.Building ON dbo.LOCATION.Building__Building_id = dbo.Building.Building_Id LEFT OUTER JOIN
                      dbo.Site ON dbo.Building.Site__Site_id = dbo.Site.Site_id
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Location_Drop_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "LOCATION"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 13
         End
         Begin Table = "Building"
            Begin Extent = 
               Top = 6
               Left = 285
               Bottom = 125
               Right = 445
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Site"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Location_Drop_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Location_Drop_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Location_Drop_list'
GO
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Building_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Building_List] as SELECT Building.Building_Id, Building.Building, Building.Description AS [Building Description], Site.Site, Site.Description AS [Site Description], Building.Site__Site_id
FROM Building LEFT JOIN Site ON Building.Site__Site_id = Site.Site_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Location_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Location_list]
AS
SELECT     dbo.LOCATION.Location_id, dbo.LOCATION.Location, dbo.LOCATION.Description AS [Location Description], dbo.LOCATION.Bonded, dbo.Building.Building, 
                      dbo.Building.Description AS [Building Description], dbo.Site.Site, dbo.Site.Description AS [Site Description], dbo.LOCATION.Building__Building_id, dbo.Site.Site_id, 
                      dbo.LOCATION.Consignment
FROM         dbo.LOCATION LEFT OUTER JOIN
                      dbo.Building ON dbo.LOCATION.Building__Building_id = dbo.Building.Building_Id LEFT OUTER JOIN
                      dbo.Site ON dbo.Building.Site__Site_id = dbo.Site.Site_id
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Location_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[29] 2[12] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "LOCATION"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 13
         End
         Begin Table = "Building"
            Begin Extent = 
               Top = 6
               Left = 285
               Bottom = 125
               Right = 445
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Site"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Location_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Location_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Location_list'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Site_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Site_Drop_List]
AS
SELECT     Site_id, Site, Description
FROM         dbo.Site
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Building_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Building_Drop_List]
AS
SELECT     dbo.Building.Building_Id, dbo.Building.Building, dbo.Building.Description AS [Building Description], dbo.Site.Site, 
                      dbo.Site.Description AS [Site Description], dbo.Building.Site__Site_id
FROM         dbo.Building LEFT OUTER JOIN
                      dbo.Site ON dbo.Building.Site__Site_id = dbo.Site.Site_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Loaction_Drop_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Loaction_Drop_list]
AS
SELECT     TOP (100) PERCENT dbo.LOCATION.Location_id, dbo.LOCATION.Location, dbo.LOCATION.Description AS [Location Description], dbo.LOCATION.Bonded, 
                      dbo.Building.Building, dbo.Building.Description AS [Building Description], dbo.Site.Site, dbo.Site.Description AS [Site Description], 
                      dbo.LOCATION.Building__Building_id, dbo.Site.Site_id, dbo.LOCATION.Consignment
FROM         dbo.LOCATION LEFT OUTER JOIN
                      dbo.Building ON dbo.LOCATION.Building__Building_id = dbo.Building.Building_Id LEFT OUTER JOIN
                      dbo.Site ON dbo.Building.Site__Site_id = dbo.Site.Site_id
ORDER BY dbo.LOCATION.Location
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Loaction_Drop_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[30] 4[33] 2[18] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "LOCATION"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 13
         End
         Begin Table = "Building"
            Begin Extent = 
               Top = 6
               Left = 285
               Bottom = 125
               Right = 445
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Site"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 12
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 2205
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Loaction_Drop_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Loaction_Drop_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Loaction_Drop_list'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Scrap_Reasons_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Scrap_Reasons_Drop_List]
AS
SELECT     Scrap_Reasons_ID, Scrap_Reason AS [Scrap Reason]
FROM         dbo.Scrap_Reasons
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Scrap_Reasons_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Scrap_Reasons_List]
AS
SELECT     Scrap_Reasons_ID, Scrap_Reason AS [Scrap Reason]
FROM         dbo.Scrap_Reasons
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Technology_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Technology_Drop_List]
AS
SELECT     Technology_ID, Description, Modified, Modified_By
FROM         dbo.Technology
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Technology_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Technology_List]
AS
SELECT     Technology_ID, Description, Modified, Modified_By
FROM         dbo.Technology
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[OP_Types_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[OP_Types_List]
AS
SELECT     op_types_id, OP_Type AS [OP Type], Description
FROM         dbo.Op_types
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Op_Types_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Op_Types_Drop_List]
AS
SELECT     op_types_id, OP_Type AS [OP Type], Description
FROM         dbo.Op_types
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Operations]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Operations]
AS
SELECT     dbo.Wo_Route_SChedule.Wo_Route_SChedule_ID, dbo.Route.Op_No, dbo.Op_types.OP_Type, dbo.Wo_Route_SChedule.WO_ID
FROM         dbo.Op_types RIGHT OUTER JOIN
                      dbo.Route ON dbo.Op_types.op_types_id = dbo.Route.OP_type__op_types_id RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule ON dbo.Route.Route_id = dbo.Wo_Route_SChedule.Route_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[EXPENSES_TYPE_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[EXPENSES_TYPE_Drop_List]
AS
SELECT     EXPENSES_TYPE_ID, Expenses_Type
FROM         dbo.EXPENSES_TYPE
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[EXPENSES_TYPE_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[EXPENSES_TYPE_List]
AS
SELECT     EXPENSES_TYPE_ID, Expenses_Type
FROM         dbo.EXPENSES_TYPE
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Dialectric_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Dialectric_List]
AS
SELECT     Dialectric_ID, Description, Modified, Modified_By
FROM         dbo.Dialectric
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Dialectric_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Dialectric_Drop_List]
AS
SELECT     Dialectric_ID, Description, Modified, Modified_By
FROM         dbo.Dialectric
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PCD_Qty_Break_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PCD_Qty_Break_List]
AS
SELECT     PCD_Qty_Break_ID, Quantity, Discount_1 AS [Discount 1], Discount_2 AS [Discount 2], Discount_3 AS [Discount 3], Min_Margin AS [Min Margin], 
                      Parent__Part_Company_Discounts_ID
FROM         dbo.PCD_Qty_Break
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Discounts_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Discounts_List]
AS
SELECT     dbo.PCD_Qty_Break.PCD_Qty_Break_ID, dbo.Part_Discount_Group.Part_Discount_Group AS [Part Discount Group], 
                      dbo.Company_Discount_Group.Company_Discount_Group AS [Company Discount Group], dbo.PCD_Qty_Break.Quantity, 
                      dbo.PCD_Qty_Break.Discount_1 AS [Discount 1], dbo.PCD_Qty_Break.Discount_2 AS [Discount 2], dbo.PCD_Qty_Break.Discount_3 AS [Discount 3], 
                      dbo.PCD_Qty_Break.Min_Margin AS [Min Margin], dbo.PCD_Qty_Break.Parent__Part_Company_Discounts_ID, 
                      dbo.Part_Company_Discounts.Company__Company_Discount_Group_ID, dbo.Part_Company_Discounts.Part__Part_Discount_Group_ID
FROM         dbo.Part_Discount_Group RIGHT OUTER JOIN
                      dbo.Part_Company_Discounts ON 
                      dbo.Part_Discount_Group.Part_Discount_Group_ID = dbo.Part_Company_Discounts.Part__Part_Discount_Group_ID LEFT OUTER JOIN
                      dbo.Company_Discount_Group ON 
                      dbo.Part_Company_Discounts.Company__Company_Discount_Group_ID = dbo.Company_Discount_Group.Company_Discount_Group_ID RIGHT OUTER
                       JOIN
                      dbo.PCD_Qty_Break ON dbo.Part_Company_Discounts.Part_Company_Discounts_ID = dbo.PCD_Qty_Break.Parent__Part_Company_Discounts_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info4_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[General_Info4_List]
AS
SELECT     General_Info4_ID, Description, Modified, Modified_By
FROM         dbo.General_Info4
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info4_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[General_Info4_Drop_List]
AS
SELECT     General_Info4_ID, Description, Modified, Modified_By
FROM         dbo.General_Info4
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquiry_State_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Enquiry_State_List]
AS
SELECT     Enquiry_State_ID, Enquiry_State AS [Enquiry State], Modified
FROM         dbo.Enquiry_State
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquiry_State_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Enquiry_State_Drop_List]
AS
SELECT     Enquiry_State_ID, Enquiry_State AS [Enquiry State], Modified
FROM         dbo.Enquiry_State
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquirys_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Enquirys_list]
AS
SELECT     dbo.ENQUIRYS.Enquiry_ID, dbo.ENQUIRYS.Enquiry_No AS [Enquiry No], dbo.ENQUIRYS.Customers_Ref AS [Customers Ref], 
                      dbo.ENQUIRYS.Reply_By AS [Reply By], dbo.ENQUIRY_STATUS.Enquiry_Status AS [Enquiry Status], dbo.ENQUIRYS.Date_Entered AS [Date Entered], 
                      dbo.ENQUIRYS.Quote_By AS [Quote By], COMPANYS_2.Name AS Customer, dbo.CONTACTS.Name AS Contact, Employee_2.Name AS [Sales Person], 
                      Employee_1.Name AS Estimator, dbo.ENQUIRYS.Chase_date AS [Chase date], dbo.Campaign.Campaign, dbo.ENQUIRYS.GridCalcLineTotal AS [Calculated Value], 
                      dbo.ENQUIRYS.Total_Value AS [Total Value], dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, dbo.Enquiry_State.Enquiry_State AS [Enquiry State], 
                      dbo.ENQUIRYS.Customer_id__Companys_Id, dbo.ENQUIRYS.Notes_non_rtf AS [Enquiry Notes], COMPANYS_1.Name AS [End User], dbo.ENQUIRYS.Currency_id, 
                      Employee_3.Name AS [Athorised By], dbo.ENQUIRYS.Quote_Authorised AS Authorised, COMPANYS_2.Telephone, 
                      dbo.ENQUIRYS.Internal_Notes_Non_RTF AS [Internal Notes], dbo.COMPANY_AREA.Area, dbo.INDUSTRY.Industry, UDData_1.UDData_Data AS UserDefinable1, 
                      UDData_2.UDData_Data AS UserDefinable2, UDData_3.UDData_Data AS UserDefinable3, UDData_4.UDData_Data AS UserDefinable4, 
                      UDData_5.UDData_Data AS UserDefinable5, UDData_6.UDData_Data AS UserDefinable6
FROM         dbo.Campaign RIGHT OUTER JOIN
                      dbo.COMPANYS COMPANYS_1 RIGHT OUTER JOIN
                      dbo.UDData UDData_1 RIGHT OUTER JOIN
                      dbo.ENQUIRYS LEFT OUTER JOIN
                      dbo.UDData UDData_6 ON dbo.ENQUIRYS.UDF6__UDData_ID = UDData_6.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_5 ON dbo.ENQUIRYS.UDF5__UDData_ID = UDData_5.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_4 ON dbo.ENQUIRYS.UDF4__UDData_ID = UDData_4.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_3 ON dbo.ENQUIRYS.UDF3__UDData_ID = UDData_3.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_2 ON dbo.ENQUIRYS.UDF2__UDData_ID = UDData_2.UDData_ID ON 
                      UDData_1.UDData_ID = dbo.ENQUIRYS.UDF1__UDData_ID LEFT OUTER JOIN
                      dbo.Employee Employee_3 ON dbo.ENQUIRYS.Quote_Authorised_By__Employee_ID = Employee_3.Employee_Id ON 
                      COMPANYS_1.Company_Id = dbo.ENQUIRYS.End_User__Companys_Id LEFT OUTER JOIN
                      dbo.Enquiry_State ON dbo.ENQUIRYS.State__Enquiry_State_ID = dbo.Enquiry_State.Enquiry_State_ID LEFT OUTER JOIN
                      dbo.MULTICURRENCY ON dbo.ENQUIRYS.Currency_id = dbo.MULTICURRENCY.MultiCurrency_ID LEFT OUTER JOIN
                      dbo.Employee Employee_1 ON dbo.ENQUIRYS.Estimator_id = Employee_1.Employee_Id LEFT OUTER JOIN
                      dbo.Employee Employee_2 ON dbo.ENQUIRYS.Salesman_id__ = Employee_2.Employee_Id LEFT OUTER JOIN
                      dbo.INDUSTRY RIGHT OUTER JOIN
                      dbo.COMPANYS COMPANYS_2 ON dbo.INDUSTRY.Industry_Id = COMPANYS_2.CoyType__type_id LEFT OUTER JOIN
                      dbo.COMPANY_AREA ON COMPANYS_2.CoyArea__area_id = dbo.COMPANY_AREA.Area_Id ON 
                      dbo.ENQUIRYS.Customer_id__Companys_Id = COMPANYS_2.Company_Id LEFT OUTER JOIN
                      dbo.CONTACTS ON dbo.ENQUIRYS.Contact_id__Contacts_id = dbo.CONTACTS.Contact_id LEFT OUTER JOIN
                      dbo.ENQUIRY_STATUS ON dbo.ENQUIRYS.Status = dbo.ENQUIRY_STATUS.Enquiry_Status_Id ON 
                      dbo.Campaign.Campaign_id = dbo.ENQUIRYS.Campaign__Campaign_id
WHERE     (dbo.ENQUIRYS.Enquiry_No > '''')
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquirys_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Enquirys_Drop_List]
AS
SELECT     dbo.ENQUIRYS.Enquiry_ID, dbo.ENQUIRYS.Enquiry_No AS [Enquiry No], dbo.ENQUIRYS.Customers_Ref AS [Customers Ref], 
                      dbo.ENQUIRYS.Reply_By AS [Reply By], dbo.ENQUIRY_STATUS.Enquiry_Status AS [Enquiry Status], dbo.ENQUIRYS.Date_Entered AS [Date Entered], 
                      dbo.ENQUIRYS.Quote_By AS [Quote By], COMPANYS_2.Name AS Customer, dbo.CONTACTS.Name AS Contact, Employee_2.Name AS [Sales Person], 
                      Employee_1.Name AS Estimator, dbo.ENQUIRYS.Chase_date AS [Chase date], dbo.Campaign.Campaign, 
                      dbo.ENQUIRYS.GridCalcLineTotal AS [Calculated Value], dbo.ENQUIRYS.Total_Value AS [Total Value], 
                      dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, dbo.Enquiry_State.Enquiry_State AS [Enquiry State], 
                      dbo.ENQUIRYS.Customer_id__Companys_Id, dbo.ENQUIRYS.Notes_non_rtf AS [Enquiry Notes], COMPANYS_1.Name AS [End User], 
                      dbo.ENQUIRYS.Currency_id, Employee_3.Name AS [Athorised By], dbo.ENQUIRYS.Quote_Authorised AS Authorised, COMPANYS_2.Telephone, 
                      dbo.ENQUIRYS.Internal_Notes_Non_RTF AS [Internal Notes]
FROM         dbo.ENQUIRYS LEFT OUTER JOIN
                      dbo.Employee Employee_3 ON dbo.ENQUIRYS.Quote_Authorised_By__Employee_ID = Employee_3.Employee_Id LEFT OUTER JOIN
                      dbo.COMPANYS COMPANYS_1 ON dbo.ENQUIRYS.End_User__Companys_Id = COMPANYS_1.Company_Id LEFT OUTER JOIN
                      dbo.Enquiry_State ON dbo.ENQUIRYS.State__Enquiry_State_ID = dbo.Enquiry_State.Enquiry_State_ID LEFT OUTER JOIN
                      dbo.MULTICURRENCY ON dbo.ENQUIRYS.Currency_id = dbo.MULTICURRENCY.MultiCurrency_ID LEFT OUTER JOIN
                      dbo.Employee Employee_1 ON dbo.ENQUIRYS.Estimator_id = Employee_1.Employee_Id LEFT OUTER JOIN
                      dbo.Employee Employee_2 ON dbo.ENQUIRYS.Salesman_id__ = Employee_2.Employee_Id LEFT OUTER JOIN
                      dbo.COMPANYS COMPANYS_2 ON dbo.ENQUIRYS.Customer_id__Companys_Id = COMPANYS_2.Company_Id LEFT OUTER JOIN
                      dbo.CONTACTS ON dbo.ENQUIRYS.Contact_id__Contacts_id = dbo.CONTACTS.Contact_id LEFT OUTER JOIN
                      dbo.ENQUIRY_STATUS ON dbo.ENQUIRYS.Status = dbo.ENQUIRY_STATUS.Enquiry_Status_Id LEFT OUTER JOIN
                      dbo.Campaign ON dbo.ENQUIRYS.Campaign__Campaign_id = dbo.Campaign.Campaign_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sy_Group_Options_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Sy_Group_Options_List]
AS
SELECT     dbo.Sy_Group_Options.Autonumber, dbo.Sy_Groups.Name AS [Group], dbo.Sy_Group_Options.Object, dbo.Sy_Group_Options.AddNew, 
                      dbo.Sy_Group_Options.[Delete], dbo.Sy_Group_Options.[Update], dbo.Sy_Group_Options.[View], dbo.Sy_Group_Options.List, 
                      dbo.Sy_Group_Options.[Print]
FROM         dbo.Sy_Group_Options LEFT OUTER JOIN
                      dbo.Sy_Groups ON dbo.Sy_Group_Options.Sy_Group_ID = dbo.Sy_Groups.ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Customer_Return_Drop_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Customer_Return_Drop_list]
AS
SELECT     dbo.Customer_Return.Customer_Return_ID, dbo.COMPANYS.Name AS [By Company], dbo.Delivery_Item.Ref, dbo.Customer_Return.Advice_No AS [Advice No], 
                      dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.Customer_Return.Qty, dbo.Grn.Grn_No AS [Grn No], dbo.Sales_Order_Lines.Contract_No AS [Contract No], 
                      dbo.Employee.Name AS [Received By], dbo.Customer_Return.Date_in AS [Date In]
FROM         dbo.Employee RIGHT OUTER JOIN
                      dbo.Customer_Return ON dbo.Employee.Employee_Id = dbo.Customer_Return.Recieved_by LEFT OUTER JOIN
                      dbo.Grn ON dbo.Customer_Return.Grn__Grn_ID = dbo.Grn.Grn_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Customer_Return.Customer__COMPANYS_ID = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.Delivery_Item ON dbo.Customer_Return.Delivery__Delivery_Item_ID = dbo.Delivery_Item.Delivery_Item_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.Customer_Return.Part__Part_id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.Customer_Return.Contract__Sales_Order_Lines_ID = dbo.Sales_Order_Lines.Sales_Order_Lines_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Customer_Return_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Customer_Return_List]
AS
SELECT     dbo.Customer_Return.Customer_Return_ID, dbo.Customer_Return.Advice_No AS [Advice No], dbo.Customer_Return.Date_in AS [Date in], dbo.Customer_Return.Qty, 
                      dbo.Grn.Grn_No AS [Grn No], dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.COMPANYS.Name AS Company, dbo.Employee.Name AS [Received By], 
                      dbo.Sales_Order_Lines.Contract_No AS [Contract No], dbo.Delivery_Item.Ref AS [Delivery Ref], UDData_1.UDData_Data AS UserDefinable1, 
                      UDData_2.UDData_Data AS UserDefinable2, UDData_3.UDData_Data AS UserDefinable3, UDData_4.UDData_Data AS UserDefinable4, 
                      UDData_5.UDData_Data AS UserDefinable5, UDData_6.UDData_Data AS UserDefinable6, dbo.Customer_Return.Complete, 
                      dbo.Customer_Return.Notes_Non_RTF AS Notes, dbo.Delivery_Item.Delivery__Delivery_id AS [Del ID], dbo.Delivery_Item.Delivery_Item_ID AS [Del Item ID]
FROM         dbo.Sales_Order_Lines RIGHT OUTER JOIN
                      dbo.Delivery_Item RIGHT OUTER JOIN
                      dbo.UDData AS UDData_5 RIGHT OUTER JOIN
                      dbo.Customer_Return LEFT OUTER JOIN
                      dbo.UDData AS UDData_6 ON dbo.Customer_Return.UDF6__UDData_ID = UDData_6.UDData_ID ON 
                      UDData_5.UDData_ID = dbo.Customer_Return.UDF5__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_4 ON dbo.Customer_Return.UDF4__UDData_ID = UDData_4.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_3 ON dbo.Customer_Return.UDF3__UDData_ID = UDData_3.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON dbo.Customer_Return.UDF2__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON dbo.Customer_Return.UDF1__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.Customer_Return.Recieved_by = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.Part ON dbo.Customer_Return.Part__Part_id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Grn ON dbo.Customer_Return.Grn__Grn_ID = dbo.Grn.Grn_ID ON 
                      dbo.Delivery_Item.Delivery_Item_ID = dbo.Customer_Return.Delivery__Delivery_Item_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Customer_Return.Customer__COMPANYS_ID = dbo.COMPANYS.Company_Id ON 
                      dbo.Sales_Order_Lines.Sales_Order_Lines_ID = dbo.Customer_Return.Contract__Sales_Order_Lines_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info5_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[General_Info5_Drop_List]
AS
SELECT     General_Info5_ID, Description, Modified, Modified_By
FROM         dbo.General_Info5
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[General_Info5_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[General_Info5_List]
AS
SELECT     General_Info5_ID, Description, Modified, Modified_By
FROM         dbo.General_Info5
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Discount_Group_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_Discount_Group_List]
AS
SELECT     Part_Discount_Group_ID, Part_Discount_Group AS [Discount Group], Modified
FROM         dbo.Part_Discount_Group
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Discount_Group_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_Discount_Group_Drop_List]
AS
SELECT     Part_Discount_Group_ID, Modified, Part_Discount_Group AS [Discount Group]
FROM         dbo.Part_Discount_Group
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Company_Discount_Temp]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_Company_Discount_Temp]
AS
SELECT     dbo.Company_Discount_Group.Company_Discount_Group_ID, dbo.Part_Discount_Group.Part_Discount_Group_ID, 
                      dbo.Company_Discount_Group.Company_Discount_Group AS [Company Discount Group], 
                      dbo.Part_Discount_Group.Part_Discount_Group AS [Part Discount Group]
FROM         dbo.Company_Discount_Group CROSS JOIN
                      dbo.Part_Discount_Group
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[QUOTES_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[QUOTES_Drop_List]
AS
SELECT     dbo.QUOTES.Quote_id, dbo.QUOTES.FromEnquiry__Enquiry_ID, dbo.QUOTES.Enquiry_No AS [Enquiry No], dbo.QUOTES.Quote_No AS [Quote No], 
                      dbo.QUOTES.Customers_Ref AS [Customers Ref], dbo.QUOTES.Reply_By AS [Reply By], dbo.QUOTES.Status, dbo.QUOTES.Quote_By AS [Quote By], 
                      dbo.QUOTES.No_Items, dbo.CONTACTS.Name AS Contact, dbo.QUOTES.Quote_Date AS [Quote Date], Employee_1.Name AS [Printed By], 
                      dbo.Employee.Name AS [Sales Person], dbo.QUOTES.Won, dbo.QUOTES.Lost, dbo.QUOTES.Customer, 
                      dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency
FROM         dbo.QUOTES LEFT OUTER JOIN
                      dbo.MULTICURRENCY ON dbo.QUOTES.Currency_id = dbo.MULTICURRENCY.MultiCurrency_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.QUOTES.Salesman_id__Employee_id = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.Employee Employee_1 ON dbo.QUOTES.Printed_By = Employee_1.Employee_Id LEFT OUTER JOIN
                      dbo.CONTACTS ON dbo.QUOTES.Contact_id__Contacts_id = dbo.CONTACTS.Contact_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Quotes_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Quotes_list]
AS
SELECT     dbo.QUOTES.Quote_id, dbo.QUOTES.FromEnquiry__Enquiry_ID, dbo.QUOTES.Enquiry_No AS [Enquiry No], dbo.QUOTES.Quote_No AS [Quote No], 
                      dbo.QUOTES.Customers_Ref AS [Customers Ref], dbo.QUOTES.Reply_By AS [Reply By], dbo.QUOTES.Quote_By AS [Quote By], dbo.QUOTES.No_Items, 
                      dbo.CONTACTS.Name AS Contact, dbo.QUOTES.Quote_Date AS [Quote Date], Employee_1.Name AS [Printed By], dbo.Employee.Name AS [Sales Person], 
                      dbo.QUOTES.Won, dbo.QUOTES.Lost, dbo.QUOTES.Customer, dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, 
                      dbo.QUOTES.Customer_id__Companys_Id, dbo.Campaign.Campaign, dbo.COMPANY_AREA.Area, dbo.INDUSTRY.Industry, dbo.QUOTES.Active, 
                      dbo.ENQUIRYS.Internal_Notes_Non_RTF AS [Internal Notes], COMPANYS_1.Name AS [End User]
FROM         dbo.COMPANY_AREA RIGHT OUTER JOIN
                      dbo.CONTACTS RIGHT OUTER JOIN
                      dbo.Campaign RIGHT OUTER JOIN
                      dbo.COMPANYS AS COMPANYS_1 RIGHT OUTER JOIN
                      dbo.ENQUIRYS ON COMPANYS_1.Company_Id = dbo.ENQUIRYS.End_User__Companys_Id ON 
                      dbo.Campaign.Campaign_id = dbo.ENQUIRYS.Campaign__Campaign_id RIGHT OUTER JOIN
                      dbo.COMPANYS RIGHT OUTER JOIN
                      dbo.QUOTES ON dbo.COMPANYS.Company_Id = dbo.QUOTES.Customer_id__Companys_Id ON 
                      dbo.ENQUIRYS.Enquiry_ID = dbo.QUOTES.FromEnquiry__Enquiry_ID LEFT OUTER JOIN
                      dbo.MULTICURRENCY ON dbo.QUOTES.Currency_id = dbo.MULTICURRENCY.MultiCurrency_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.QUOTES.Salesman_id__Employee_id = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.Employee AS Employee_1 ON dbo.QUOTES.Printed_By = Employee_1.Employee_Id ON dbo.CONTACTS.Contact_id = dbo.QUOTES.Contact_id__Contacts_id ON 
                      dbo.COMPANY_AREA.Area_Id = dbo.COMPANYS.CoyArea__area_id LEFT OUTER JOIN
                      dbo.INDUSTRY ON dbo.COMPANYS.CoyType__type_id = dbo.INDUSTRY.Industry_Id
WHERE     (dbo.QUOTES.Quote_No > '''')
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Quotes_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[49] 4[12] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -192
         Left = 0
      End
      Begin Tables = 
         Begin Table = "INDUSTRY"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANY_AREA"
            Begin Extent = 
               Top = 6
               Left = 236
               Bottom = 125
               Right = 396
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "QUOTES"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 265
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Campaign"
            Begin Extent = 
               Top = 246
               Left = 303
               Bottom = 365
               Right = 463
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "ENQUIRYS"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 308
            End
            DisplayFlags = 280
            TopColumn = 27
         End
         Begin Table = "MULTICURRENCY"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 302
            End
            Dis' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Quotes_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Quotes_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'playFlags = 280
            TopColumn = 0
         End
         Begin Table = "Employee"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Employee_1"
            Begin Extent = 
               Top = 726
               Left = 38
               Bottom = 845
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "CONTACTS"
            Begin Extent = 
               Top = 846
               Left = 38
               Bottom = 965
               Right = 357
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS_1"
            Begin Extent = 
               Top = 358
               Left = 529
               Bottom = 477
               Right = 841
            End
            DisplayFlags = 280
            TopColumn = 23
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 1305
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Quotes_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Quotes_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Quotes_list'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Activity_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Activity_List]
AS
SELECT     dbo.Activity.Activity_ID, dbo.Activity.Modified, dbo.Activity.Created, dbo.Activity.Description, dbo.Activity.isPublic, dbo.Activity.isPrivate, dbo.Activity.Complete, 
                      dbo.Activity.Complete_Date AS [Complete Date], dbo.Activity.Next_Date AS [Next Date], dbo.Activity_Type.Activity_Type AS [Activity Type], 
                      dbo.Activity.Company__COMPANYS_ID, dbo.Activity.Contact__CONTACTS_ID, dbo.UDData.UDData_Data AS UserDefined1, UDData_1.UDData_Data AS UserDefined2, 
                      UDData_2.UDData_Data AS UserDefined3, UDData_3.UDData_Data AS UserDefined4, UDData_4.UDData_Data AS UserDefined5, 
                      UDData_5.UDData_Data AS UserDefined6, dbo.CONTACTS.Name AS Contact, dbo.Employee.Name AS [For Employee], 
                      dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name AS Company, dbo.Activity.SO__Sales_Order_Lines_ID, dbo.Activity.Created_By, 
                      dbo.Activity.QUOTE__QUOTES_ID, dbo.Sales_Order_Lines.Contract_No AS [Contract No], Employee_1.Name AS [Created By], dbo.Activity.Notes_non_RTF AS Notes, 
                      dbo.Activity.WORK_ORDERS__WORK_ORDERS_ID, dbo.QUOTES.Enquiry_No, dbo.QUOTES.Customer, dbo.QUOTES.Customers_Ref, dbo.QUOTES.Quote_No, 
                      dbo.QUOTES.Quote_Date, dbo.QUOTES.Date_Entered, dbo.ENQUIRYS.GridCalcLineTotal, dbo.QUOTES.Won, dbo.Employee.Employee_Id, 
                      dbo.COMPANY_ADDRESS.Alternative_Name AS [Alternative Name], dbo.COMPANY_ADDRESS.Address1, dbo.COMPANY_ADDRESS.Address2, 
                      dbo.COMPANY_ADDRESS.Address3, dbo.COMPANY_ADDRESS.Town, dbo.COMPANY_ADDRESS.Postcode, dbo.Part.Part_No AS [Part No], 
                      dbo.Part.Description AS [Part Description]
FROM         dbo.UDData UDData_2 RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines RIGHT OUTER JOIN
                      dbo.Activity LEFT OUTER JOIN
                      dbo.Part ON dbo.Activity.Part__Part_ID = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.COMPANY_ADDRESS ON dbo.Activity.Address__COMPANY_ADDRESS_ID = dbo.COMPANY_ADDRESS.Address_Id LEFT OUTER JOIN
                      dbo.ENQUIRYS RIGHT OUTER JOIN
                      dbo.QUOTES ON dbo.ENQUIRYS.Enquiry_ID = dbo.QUOTES.FromEnquiry__Enquiry_ID ON 
                      dbo.Activity.QUOTE__QUOTES_ID = dbo.QUOTES.Quote_id LEFT OUTER JOIN
                      dbo.Employee Employee_1 ON dbo.Activity.Created_By = Employee_1.Employee_Id ON 
                      dbo.Sales_Order_Lines.Sales_Order_Lines_ID = dbo.Activity.SO__Sales_Order_Lines_ID LEFT OUTER JOIN
                      dbo.UDData UDData_5 ON dbo.Activity.UDF6__UDData_ID = UDData_5.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_4 ON dbo.Activity.UDF5__UDData_ID = UDData_4.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_3 ON dbo.Activity.UDF4__UDData_ID = UDData_3.UDData_ID ON UDData_2.UDData_ID = dbo.Activity.UDF3__UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_1 ON dbo.Activity.UDF2__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.UDData ON dbo.Activity.UDF1__UDData_ID = dbo.UDData.UDData_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.Activity.Employee__Employee_ID = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.CONTACTS ON dbo.Activity.Contact__CONTACTS_ID = dbo.CONTACTS.Contact_id LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Activity.Company__COMPANYS_ID = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.Activity_Type ON dbo.Activity.Type__Activity_Type_ID = dbo.Activity_Type.Activity_Type_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_UOM_Conversion]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_UOM_Conversion]
AS
SELECT     dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID, SUM(dbo.Sales_Order_Lines.Vat_Amount) AS Currency_Total_VAT, SUM(dbo.Sales_Order_Lines.Total) 
                      AS Currency_Total_Ex_VAT, SUM(dbo.Sales_Order_Lines.Total / dbo.Sales_Order_Lines.Currency_Rate) AS System_Total_EX_VAT, 
                      SUM(dbo.Sales_Order_Lines.Vat_Amount / dbo.Sales_Order_Lines.Currency_Rate) AS System_Total_VAT, 
                      SUM(dbo.Sales_Order_Lines.Vat_Amount + dbo.Sales_Order_Lines.Total) AS Currency_Total_Inc_VAT, 
                      SUM(dbo.Sales_Order_Lines.Vat_Amount / dbo.Sales_Order_Lines.Currency_Rate + dbo.Sales_Order_Lines.Total / dbo.Sales_Order_Lines.Currency_Rate) 
                      AS System_Total_Inc_Vat, CASE WHEN dbo.Conversions.Multiply_By IS NULL THEN 1 ELSE multiply_by END AS Multiply_By
FROM         dbo.Conversions RIGHT OUTER JOIN
                      dbo.Part ON dbo.Conversions.Conversion_Id = dbo.Part.Invoice_UOM_Conv RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.Part.Part_Id = dbo.Sales_Order_Lines.Part_Id__Part_Id
WHERE     (dbo.Sales_Order_Lines.Status__Sales_Order_Line_Status_Id < 9)
GROUP BY dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID, CASE WHEN dbo.Conversions.Multiply_By IS NULL THEN 1 ELSE multiply_by END
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Line_In_Stock]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Delivery_Line_In_Stock]
AS
SELECT     SUM(dbo.Stock.Total_Qty) AS [Del Line in Stock], dbo.WORK_ORDERS.SO_Delivery_Schedule_id
FROM         dbo.Sales_Order_Lines RIGHT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Sales_Order_Lines.Sales_Order_Lines_ID = dbo.WORK_ORDERS.So_Line_Id RIGHT OUTER JOIN
                      dbo.Stock ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Stock.From_WO__WO_id
WHERE     (dbo.Sales_Order_Lines.Part_Id__Part_Id = dbo.WORK_ORDERS.Part_ID__Part_id)
GROUP BY dbo.WORK_ORDERS.SO_Delivery_Schedule_id
HAVING      (NOT (dbo.WORK_ORDERS.SO_Delivery_Schedule_id IS NULL))
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Supplier_Part_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Supplier_Part_List]
AS
SELECT     dbo.Supplier_Part.Supplier_part_id, dbo.COMPANYS.Name AS Company, dbo.COMPANYS.Telephone, dbo.Supplier_Part.Supplier_Part_No AS [Alias Part No], 
                      dbo.Supplier_Part.Part__Part_id, dbo.Supplier_Part.Supplier__Companys_id, dbo.Supplier_Part.Supplier_Part_Description AS [Alias Part Description], 
                      dbo.Supplier_Part.Supplier_Fixed_Batch_Qty AS [Fixed Batch Qty], dbo.Supplier_Part.Charge_Out_Full_Batch_Qty AS [Charge Full Qty], 
                      dbo.Supplier_Part.Minimum_Charge AS [Minimum Charge], dbo.Part.Cost AS [Cost UOM], COMPANYS_1.Name AS [Preferred Supplier]
FROM         dbo.COMPANYS COMPANYS_1 RIGHT OUTER JOIN
                      dbo.Part ON COMPANYS_1.Company_Id = dbo.Part.Supplier__Company_id RIGHT OUTER JOIN
                      dbo.Supplier_Part ON dbo.Part.Part_Id = dbo.Supplier_Part.Part__Part_id LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Supplier_Part.Supplier__Companys_id = dbo.COMPANYS.Company_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Supplier_Part_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Supplier_Part_Drop_List]
AS
SELECT     dbo.Supplier_Part.Supplier_part_id, dbo.Supplier_Part.Part__Part_id, dbo.Supplier_Part.Supplier__Companys_id, dbo.COMPANYS.Name AS Company, 
                      dbo.Supplier_Part.Supplier_Part_No AS [Alias Part No], dbo.Part.Part_No AS [Part No]
FROM         dbo.Supplier_Part LEFT OUTER JOIN
                      dbo.Part ON dbo.Supplier_Part.Part__Part_id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Supplier_Part.Supplier__Companys_id = dbo.COMPANYS.Company_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Pay_Rates_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Pay_Rates_Drop_List]
AS
SELECT     Pay_Rates_ID, Modified, Rate_Caption AS [Rate Caption], Factor, In_Use AS [In Use]
FROM         dbo.Pay_Rates
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Pay_Rates_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Pay_Rates_List]
AS
SELECT     Pay_Rates_ID, Modified, Rate_Caption AS [Rate Caption], Factor, In_Use AS [In Use]
FROM         dbo.Pay_Rates
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Movement_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Movement_List]
AS
SELECT     dbo.Stock_Movement.Stock_Movement_ID, dbo.Stock_Movement.Stock_ID, dbo.Stock_Movement.Original_Stock_ID, dbo.Part.Part_No, dbo.Stock.Batch_no, 
                      dbo.Stock.Cast_Heat_No, dbo.Stock.Serial_no, dbo.LOCATION.Location AS [From Location], LOCATION_1.Location AS [To Location], 
                      dbo.Building.Building AS [From Building], Building_1.Building AS [To Building], dbo.Stock.Qty, dbo.Stock.Length, dbo.Stock.Bredth AS Breadth, 
                      dbo.Stock_Movement.Movement_Date AS [Date]
FROM         dbo.LOCATION LOCATION_1 RIGHT OUTER JOIN
                      dbo.Stock_Movement LEFT OUTER JOIN
                      dbo.Part ON dbo.Stock_Movement.Part_ID = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Building Building_1 ON dbo.Stock_Movement.To_Build_ID = Building_1.Building_Id LEFT OUTER JOIN
                      dbo.Building ON dbo.Stock_Movement.From_Build_ID = dbo.Building.Building_Id ON LOCATION_1.Location_id = dbo.Stock_Movement.To_Loc_ID LEFT OUTER JOIN
                      dbo.LOCATION ON dbo.Stock_Movement.From_Loc_ID = dbo.LOCATION.Location_id LEFT OUTER JOIN
                      dbo.Stock ON dbo.Stock_Movement.Stock_ID = dbo.Stock.Stock_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Take_Item_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Take_Item_List]
AS
SELECT     dbo.Stock_Take_Item.Stock_Take_Item_ID, dbo.Stock_Take_Item.LOCATION__LOCATION_ID, dbo.Stock_Take_Item.Part__Part_ID, 
                      dbo.Stock_Take_Item.For__Stock_Take_ID, dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.LOCATION.Location, dbo.Stock_Take_Item.Qty, 
                      dbo.Building.Building, dbo.Stock_Take_Item.Qty_Outstanding AS [Qty Outstanding]
FROM         dbo.Building RIGHT OUTER JOIN
                      dbo.LOCATION ON dbo.Building.Building_Id = dbo.LOCATION.Building__Building_id RIGHT OUTER JOIN
                      dbo.Stock_Take_Item ON dbo.LOCATION.Location_id = dbo.Stock_Take_Item.LOCATION__LOCATION_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.Stock_Take_Item.Part__Part_ID = dbo.Part.Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Building_List_All]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Building_List_All]
AS
SELECT     dbo.Stock.*, dbo.LOCATION.Location AS Location, dbo.Building.Building AS Building, dbo.Building.Building_Id AS Building_Id
FROM         dbo.Stock LEFT OUTER JOIN
                      dbo.LOCATION ON dbo.Stock.Location__location_id = dbo.LOCATION.Location_id LEFT OUTER JOIN
                      dbo.Building ON dbo.LOCATION.Building__Building_id = dbo.Building.Building_Id
WHERE     (dbo.Stock.Complete = 1) AND (dbo.Building.Building_Id > 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Companys_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Companys_list]
AS
SELECT     dbo.COMPANYS.Company_Id, dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name, dbo.COMPANYS.Address1, dbo.COMPANYS.Address2, 
                      dbo.COMPANYS.Address3, dbo.COMPANYS.Country, dbo.COMPANYS.Town, dbo.COMPANYS.Postcode, dbo.COMPANYS.Telephone, dbo.COMPANYS.Fax, 
                      dbo.COMPANYS.Email, dbo.COMPANYS.CoyType__type_id, dbo.VAT.Description AS Vat, dbo.COMPANY_AREA.Area, dbo.INDUSTRY.Industry, 
                      dbo.COMPANYS.CreditStatus, dbo.COMPANYS.salesperson_id__employee_Id, dbo.Employee.Name AS [Sales Person], dbo.Price_List.Description, 
                      dbo.COMPANYS.NoCarriageOver, dbo.COMPANYS.MinimumOrder, dbo.COMPANYS.Customer, dbo.COMPANYS.Supplier, dbo.COMPANYS.End_User, 
                      dbo.COMPANYS.Manufacturer, dbo.COMPANYS.Transport, dbo.COMPANYS.SubContractor, dbo.COMPANYS.Misc, dbo.Company_Status.Status, 
                      dbo.UDData.UDData_Data AS UserDefinable1, UDData_1.UDData_Data AS UserDefinable2, UDData_2.UDData_Data AS UserDefinable3, 
                      UDData_3.UDData_Data AS UserDefinable4, UDData_4.UDData_Data AS UserDefinable5, UDData_5.UDData_Data AS UserDefinable6, 
                      dbo.COMPANYS.quick_notes_non_rtf AS [Quick Notes], dbo.COMPANYS.Next_Date AS [Next Date], dbo.CONTACTS.Name AS [Main Contact], dbo.COMPANYS.Credit, 
                      dbo.COMPANYS.Debit, dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, dbo.COMPANYS.SupplierAccNo, dbo.COMPANYS.Deleted, 
                      dbo.COMPANYS.No_Order_For_Days AS [Days no Order], dbo.COMPANYS.No_Quote_For_Days AS [Days no Quote], dbo.COMPANYS.WWW, 
                      dbo.COMPANYS.CreditLimit, dbo.CREDIT_TERM.c_term AS [Credit Term], dbo.COMPANYS.Balance, dbo.COMPANYS.Prospect, 
                      dbo.COMPANYS.Customer_Class AS [Customer Class], dbo.COMPANYS.Number_Of_Employees AS [Number Of Employees], dbo.COMPANYS.OEM_Tier AS [OEM Tier], 
                      dbo.COMPANYS.Invoices_Not_Posted AS [Invoices Not Posted], dbo.COMPANYS.Deliverys_Not_Invoiced AS [Deliverys Not Invoiced], 
                      dbo.COMPANYS.Credits_Not_Posted AS [Credits Not Posted], dbo.COMPANYS.Date_Created AS [Date Created], 
                      dbo.COMPANYS.EU_Country_Code AS [EU Country Code], dbo.COMPANYS.EU_VAT AS [EU VAT], dbo.COMPANYS.Third_Party_Contact AS [Allow Third Party Contact], 
                      dbo.COMPANYS.Has_Ordered AS [Has Ordered], LEFT(dbo.COMPANYS.Postcode, 2) AS [Short Post Code], dbo.COMPANYS.Last_Order_Date AS [Last Order Date], 
                      dbo.COMPANYS.Last_Quote_Date AS [Last Quote Date], dbo.COMPANYS.County, dbo.COMPANYS.DefaultShipper AS [Default Shipper], dbo.Building.Building, 
                      dbo.COMPANYS.VATReg
FROM         dbo.COMPANY_AREA RIGHT OUTER JOIN
                      dbo.UDData AS UDData_5 RIGHT OUTER JOIN
                      dbo.COMPANYS LEFT OUTER JOIN
                      dbo.Building ON dbo.COMPANYS.Building = dbo.Building.Building_Id LEFT OUTER JOIN
                      dbo.CREDIT_TERM ON dbo.COMPANYS.credit_term = dbo.CREDIT_TERM.C_id LEFT OUTER JOIN
                      dbo.MULTICURRENCY ON dbo.COMPANYS.Default_Currency__MultiCurrency_ID = dbo.MULTICURRENCY.MultiCurrency_ID LEFT OUTER JOIN
                      dbo.CONTACTS ON dbo.COMPANYS.Main_Contact = dbo.CONTACTS.Contact_id LEFT OUTER JOIN
                      dbo.UDData ON dbo.COMPANYS.UDF1__UDData_ID = dbo.UDData.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON dbo.COMPANYS.UDF2__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON dbo.COMPANYS.UDF3__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_3 ON dbo.COMPANYS.UDF4__UDData_ID = UDData_3.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_4 ON dbo.COMPANYS.UDF5__UDData_ID = UDData_4.UDData_ID ON 
                      UDData_5.UDData_ID = dbo.COMPANYS.UDF6__UDData_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.COMPANYS.salesperson_id__employee_Id = dbo.Employee.Employee_Id ON 
                      dbo.COMPANY_AREA.Area_Id = dbo.COMPANYS.CoyArea__area_id LEFT OUTER JOIN
                      dbo.INDUSTRY ON dbo.COMPANYS.CoyType__type_id = dbo.INDUSTRY.Industry_Id LEFT OUTER JOIN
                      dbo.VAT ON dbo.COMPANYS.VATRateID = dbo.VAT.VAT_ID LEFT OUTER JOIN
                      dbo.Price_List ON dbo.COMPANYS.Pricelist = dbo.Price_List.PriceList_Id LEFT OUTER JOIN
                      dbo.Company_Status ON dbo.COMPANYS.Account_Status__Company_Status_ID = dbo.Company_Status.Company_Status_ID
WHERE     (dbo.COMPANYS.Deleted = 0) OR
                      (dbo.COMPANYS.Deleted IS NULL)
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Companys_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "COMPANY_AREA"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_5"
            Begin Extent = 
               Top = 6
               Left = 236
               Bottom = 125
               Right = 412
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 45
         End
         Begin Table = "Building"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "CREDIT_TERM"
            Begin Extent = 
               Top = 246
               Left = 236
               Bottom = 365
               Right = 426
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "MULTICURRENCY"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 302
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "CONTACTS"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 357
            End
            D' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Companys_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Companys_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'isplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_1"
            Begin Extent = 
               Top = 606
               Left = 252
               Bottom = 725
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_2"
            Begin Extent = 
               Top = 726
               Left = 38
               Bottom = 845
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_3"
            Begin Extent = 
               Top = 726
               Left = 252
               Bottom = 845
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_4"
            Begin Extent = 
               Top = 846
               Left = 38
               Bottom = 965
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Employee"
            Begin Extent = 
               Top = 966
               Left = 38
               Bottom = 1085
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "INDUSTRY"
            Begin Extent = 
               Top = 846
               Left = 252
               Bottom = 965
               Right = 412
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "VAT"
            Begin Extent = 
               Top = 1086
               Left = 38
               Bottom = 1205
               Right = 242
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Price_List"
            Begin Extent = 
               Top = 1206
               Left = 38
               Bottom = 1325
               Right = 266
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Company_Status"
            Begin Extent = 
               Top = 1086
               Left = 280
               Bottom = 1175
               Right = 468
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Companys_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Companys_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Companys_list'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Internal_Companies]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Internal_Companies]
AS
SELECT     dbo.Building.Building_Id, dbo.COMPANYS.Account_Status__Company_Status_ID, dbo.COMPANYS.Address1, dbo.COMPANYS.Address2, dbo.COMPANYS.Address3, 
                      dbo.COMPANYS.Analysis_Code, dbo.COMPANYS.Company_Id, dbo.COMPANYS.Company_No, dbo.COMPANYS.Country, dbo.COMPANYS.CoyArea__area_id, 
                      dbo.COMPANYS.CoyType__type_id, dbo.COMPANYS.credit_term, dbo.COMPANYS.CreditLimit, dbo.COMPANYS.CreditStatus, dbo.COMPANYS.Customer, 
                      dbo.COMPANYS.Default_Currency__MultiCurrency_ID, dbo.COMPANYS.Default_Currency_Notes, dbo.COMPANYS.Discount, dbo.COMPANYS.Email, 
                      dbo.COMPANYS.End_User, dbo.COMPANYS.Fax, dbo.COMPANYS.Main_Contact, dbo.COMPANYS.Manufacturer, dbo.COMPANYS.MinimumOrder, 
                      dbo.COMPANYS.Misc, dbo.COMPANYS.modified, dbo.COMPANYS.modified_by, dbo.COMPANYS.Name, dbo.COMPANYS.NoCarriageOver, dbo.COMPANYS.Nominal_id,
                       dbo.COMPANYS.Postcode, dbo.COMPANYS.Pricelist, dbo.COMPANYS.quick_notes, dbo.COMPANYS.quick_notes_non_rtf, dbo.COMPANYS.Reason, 
                      dbo.COMPANYS.Ref, dbo.COMPANYS.salesperson_id__employee_Id, dbo.COMPANYS.SpecificVATRate, dbo.COMPANYS.SubContractor, dbo.COMPANYS.Supplier, 
                      dbo.COMPANYS.SupplierAccNo, dbo.COMPANYS.System_address_id, dbo.COMPANYS.Telephone, dbo.COMPANYS.Town, dbo.COMPANYS.Transport, 
                      dbo.COMPANYS.txtSO_Priority, dbo.COMPANYS.VATRateID, dbo.COMPANYS.VATReg, dbo.COMPANYS.UDF1__UDData_ID, dbo.COMPANYS.UDF2__UDData_ID, 
                      dbo.COMPANYS.UDF3__UDData_ID, dbo.COMPANYS.UDF4__UDData_ID, dbo.COMPANYS.UDF5__UDData_ID, dbo.COMPANYS.UDF6__UDData_ID, 
                      dbo.COMPANYS.Discount__Company_Discount_Group_ID, dbo.COMPANYS.Notes, dbo.COMPANYS.Notes_Non_RTF, dbo.COMPANYS.Next_Date, 
                      dbo.COMPANYS.Balance, dbo.COMPANYS.Credit, dbo.COMPANYS.Debit, dbo.COMPANYS.Deleted, dbo.COMPANYS.Budget, dbo.COMPANYS.Has_Ordered, 
                      dbo.COMPANYS.Purchase_Balance, dbo.COMPANYS.Prefix, dbo.COMPANYS.No_Order_For_Days, dbo.COMPANYS.No_Quote_For_Days, dbo.COMPANYS.WWW, 
                      dbo.COMPANYS.Bank_Account_Name, dbo.COMPANYS.Bank_Account_No, dbo.COMPANYS.Bank_Address1, dbo.COMPANYS.Bank_Address2, 
                      dbo.COMPANYS.Bank_Address3, dbo.COMPANYS.Bank_Address4, dbo.COMPANYS.Bank_IBAN, dbo.COMPANYS.Bank_Name, dbo.COMPANYS.Bank_Reference, 
                      dbo.COMPANYS.Bank_Sort_Code, dbo.COMPANYS.Bank_Swift, dbo.COMPANYS.Credits_Not_Posted, dbo.COMPANYS.Deliverys_Not_Invoiced, 
                      dbo.COMPANYS.Invoices_Not_Posted, dbo.COMPANYS.Prospect, dbo.COMPANYS.Customer_Class, dbo.COMPANYS.Number_Of_Employees, 
                      dbo.COMPANYS.OEM_Tier, dbo.COMPANYS.Date_Created, dbo.COMPANYS.EU_Country_Code, dbo.COMPANYS.EU_VAT, dbo.COMPANYS.Third_Party_Contact, 
                      dbo.COMPANYS.Default_Price_List, dbo.COMPANYS.Credits__User_Messages_ID, dbo.COMPANYS.Delivery__User_Messages_ID, 
                      dbo.COMPANYS.Enquiry__User_Messages_ID, dbo.COMPANYS.Invoice__User_Messages_ID, dbo.COMPANYS.Purchase__User_Messages_ID, 
                      dbo.COMPANYS.Sales__User_Messages_ID, dbo.COMPANYS.COFC__Form_Headers_ID, dbo.COMPANYS.COFC_Footer__Form_Headers_ID, 
                      dbo.COMPANYS.Credits__Form_Headers_ID, dbo.COMPANYS.Credits_Footer__Form_Headers_ID, dbo.COMPANYS.Delivery__Form_Headers_ID, 
                      dbo.COMPANYS.Delivery_Footer__Form_Headers_ID, dbo.COMPANYS.Enquiry__Form_Headers_ID, dbo.COMPANYS.Enquiry_Footer__Form_Headers_ID, 
                      dbo.COMPANYS.Invoice__Form_Headers_ID, dbo.COMPANYS.Invoice_Footer__Form_Headers_ID, dbo.COMPANYS.Purchase__Form_Headers_ID, 
                      dbo.COMPANYS.Purchase_Enquiry__Form_Headers_ID, dbo.COMPANYS.Purchase_Enquiry_Footer__Form_Headers_ID, 
                      dbo.COMPANYS.Purchase_Footer__Form_Headers_ID, dbo.COMPANYS.Sales__Form_Headers_ID, dbo.COMPANYS.Sales_Footer__Form_Headers_ID, 
                      dbo.COMPANYS.PO_Receipt__User_Messages_ID, dbo.COMPANYS.Description, dbo.COMPANYS.PI__User_Messages_ID, dbo.COMPANYS.CofC_Charge, 
                      dbo.COMPANYS.Delivery_Charge, dbo.COMPANYS.WO__User_Messages_ID, dbo.COMPANYS.CofC_Required, dbo.COMPANYS.Last_Order_Date, 
                      dbo.COMPANYS.Last_Quote_Date, dbo.COMPANYS.County, dbo.COMPANYS.Building, dbo.COMPANYS.Export_Location, dbo.COMPANYS.Social_Network_1, 
                      dbo.COMPANYS.Social_Network_2, dbo.COMPANYS.DefaultShipper, dbo.COMPANYS.Shipping_Company_ID
FROM         dbo.COMPANYS INNER JOIN
                      dbo.Building ON dbo.COMPANYS.Name = dbo.Building.Description
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Item_Scanned_Lines]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Delivery_Item_Scanned_Lines]
AS
SELECT     Delivery_Item_ID, Delivery__Delivery_id, Line_Scanned, Scanned_Processed
FROM         dbo.Delivery_Item
WHERE     (Scanned_Processed = 0) AND (Line_Scanned = 1)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Periods_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Periods_List]
AS
SELECT     Periods_ID, Start_Date AS [Start Date], End_Date AS [End Date], Period_No AS [Period No], Closed, Financial_Year AS [Financial Year]
FROM         dbo.Periods
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Employee_Targets_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Employee_Targets_List]
AS
SELECT     dbo.Employee_Targets.Employee_Targets_ID, dbo.Employee.Employee_Id AS [Employee ID], dbo.Employee.Employee_No AS [Employee No], dbo.Employee.Name, 
                      dbo.Employee_Targets.Target_Name AS [Target Name], dbo.Employee_Targets.Target_Value AS [Target Value], dbo.Employee_Targets.Date_From AS [Date From], 
                      dbo.Employee_Targets.Date_Until AS [Date Until], dbo.Employee_Targets.Daily, dbo.Employee_Targets.Weekly, dbo.Employee_Targets.Monthly, 
                      dbo.Employee_Targets.Quarterly, dbo.Employee_Targets.Yearly, dbo.Employee_Targets.Parent__Employee_ID
FROM         dbo.Employee_Targets INNER JOIN
                      dbo.Employee ON dbo.Employee_Targets.Parent__Employee_ID = dbo.Employee.Employee_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Label_List_3]'))
EXEC dbo.sp_executesql @statement = N' 
CREATE VIEW [dbo].[WO_Label_List_3]
AS
SELECT     dbo.WORK_ORDERS.WO_No, dbo.Part.Part_No, dbo.Part.Description, dbo.Part.Barcode, ''WO'' +  CAST(dbo.WORK_ORDERS.WORK_ORDERS_ID AS varchar) 
                      AS WO_ID,  CAST(ROUND(dbo.Part.Finnished_Weight, 2) AS  VARCHAR) AS Wieght,  dbo.Wo_Receipt.Qty, dbo.Wo_Receipt.Receipted_By
FROM         dbo.Wo_Receipt RIGHT OUTER  JOIN
                      dbo.WORK_ORDERS ON dbo.Wo_Receipt.Wo__Work_Orders_id = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER  JOIN
                      dbo.Part LEFT OUTER  JOIN
                      dbo.UDData ON dbo.Part.UDF4__UDData_ID = dbo.UDData.UDData_ID ON dbo.WORK_ORDERS.Part_ID__Part_id = dbo.Part.Part_Id
WHERE     (dbo.UDData.UDData_Data = ''Small'') AND (dbo.Wo_Receipt.Modified = CONVERT(nvarchar(20), GETDATE(), 101)) AND (dbo.WORK_ORDERS.WO_No > '''')
 
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Label_List_4]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Label_List_4]
AS
SELECT     dbo.WORK_ORDERS.WO_No, dbo.Part.Part_No, dbo.Part.Description, dbo.Part.Barcode, ''WO'' + CAST(dbo.WORK_ORDERS.WORK_ORDERS_ID AS varchar) 
                      AS WO_ID, CAST(ROUND(dbo.Part.Finnished_Weight, 2) AS VARCHAR) AS Wieght, dbo.Wo_Receipt.Qty, dbo.Wo_Receipt.Receipted_By
FROM         dbo.Wo_Receipt RIGHT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Wo_Receipt.Wo__Work_Orders_id = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Part LEFT OUTER JOIN
                      dbo.UDData ON dbo.Part.UDF4__UDData_ID = dbo.UDData.UDData_ID ON dbo.WORK_ORDERS.Part_ID__Part_id = dbo.Part.Part_Id
WHERE     (dbo.UDData.UDData_Data = ''Logistics'') AND (dbo.Wo_Receipt.Modified = CONVERT(nvarchar(20), GETDATE(), 101)) AND (dbo.WORK_ORDERS.WO_No > '''')
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_History_NC]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_History_NC]
AS
SELECT     dbo.Non_Conformance.Non_Conformance_ID, dbo.COMPANYS.Name AS Company, dbo.WORK_ORDERS.WO_No AS [WO No], 
                      dbo.Non_Conformance.Date_Recorded AS [Date Recorded], dbo.Non_Conformance.Non_Conformance_No AS [NC No], dbo.Non_Conformance.Status, 
                      dbo.Non_Conformance.Date_Identified AS [Date Identified], dbo.Non_Conformance.Part__Part_ID, dbo.Non_Conformance.Qty, 
                      dbo.Non_Conformance_Origin.NC_Origin AS [NC Origin], dbo.Non_Conformance_Type.NC_Type AS [NC Type], 
                      dbo.Non_Conformance_Cause.Cause_Type AS [NC Cause], dbo.Non_Conformance.Closed, dbo.Non_Conformance.No_Sub_Items AS [No Items], 
                      dbo.Non_Conformance.Date_Closed AS [Date Closed]
FROM         dbo.Non_Conformance LEFT OUTER JOIN
                      dbo.Non_Conformance_Type ON 
                      dbo.Non_Conformance.NC__Non_Conformance_Type_ID = dbo.Non_Conformance_Type.Non_Conformance_Type_ID LEFT OUTER JOIN
                      dbo.Non_Conformance_Cause ON 
                      dbo.Non_Conformance.Non_Conformance_Cause_ID = dbo.Non_Conformance_Cause.Non_Conformance_Cause_ID LEFT OUTER JOIN
                      dbo.Non_Conformance_Origin ON 
                      dbo.Non_Conformance.NC__Non_Conformance_Origin_ID = dbo.Non_Conformance_Origin.Non_Conformance_Origin_ID LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Non_Conformance.WORK_ORDERS__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Non_Conformance.Company__COMPANYS_ID = dbo.COMPANYS.Company_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SO_Del_Complete_Date]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[SO_Del_Complete_Date]
AS
SELECT     SO_Delivery_Schedule_id, MAX(Scheduled_Complete_Date) AS Complete_Date
FROM         dbo.WORK_ORDERS
WHERE     (Cancelled = 0) AND (Complete = 0) AND (Confirmed = 1)
GROUP BY SO_Delivery_Schedule_id
HAVING      (SO_Delivery_Schedule_id > 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Label_List_1]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Label_List_1]
AS
SELECT     dbo.WORK_ORDERS.WO_No, dbo.Part.Part_No, dbo.Part.Description, dbo.Part.Barcode, ''WO'' + CAST(dbo.WORK_ORDERS.WORK_ORDERS_ID AS varchar) 
                      AS WO_ID, CAST(ROUND(dbo.Part.Finnished_Weight, 2) AS VARCHAR) AS Wieght, dbo.Wo_Receipt.Qty, dbo.Wo_Receipt.Receipted_By
FROM         dbo.Wo_Receipt RIGHT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Wo_Receipt.Wo__Work_Orders_id = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Part LEFT OUTER JOIN
                      dbo.UDData ON dbo.Part.UDF4__UDData_ID = dbo.UDData.UDData_ID ON dbo.WORK_ORDERS.Part_ID__Part_id = dbo.Part.Part_Id
WHERE     (dbo.UDData.UDData_Data = ''Large'') AND (dbo.Wo_Receipt.Modified = CONVERT(nvarchar(20), GETDATE(), 101)) AND (dbo.WORK_ORDERS.WO_No > '''')
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Label_List_1', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Wo_Receipt"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 321
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 7050
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Label_List_1'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Label_List_1', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Label_List_1'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Label_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Label_List]
AS
SELECT     dbo.WORK_ORDERS.WO_No, dbo.Part.Part_No, dbo.Part.Description, dbo.Part.Barcode, dbo.WORK_ORDERS.WORK_ORDERS_ID, 
                      dbo.Part.Finnished_Weight AS Wieght, dbo.WORK_ORDERS.Qty
FROM         dbo.Part RIGHT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Part.Part_Id = dbo.WORK_ORDERS.Part_ID__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Label_List_2]'))
EXEC dbo.sp_executesql @statement = N' 
CREATE VIEW [dbo].[WO_Label_List_2]
AS
SELECT     dbo.WORK_ORDERS.WO_No, dbo.Part.Part_No, dbo.Part.Description, dbo.Part.Barcode, ''WO'' +  CAST(dbo.WORK_ORDERS.WORK_ORDERS_ID AS varchar) 
                      AS WO_ID,  CAST(ROUND(dbo.Part.Finnished_Weight, 2) AS  VARCHAR) AS Wieght,  dbo.Wo_Receipt.Qty, dbo.Wo_Receipt.Receipted_By
FROM         dbo.Wo_Receipt RIGHT OUTER  JOIN
                      dbo.WORK_ORDERS ON dbo.Wo_Receipt.Wo__Work_Orders_id = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER  JOIN
                      dbo.Part LEFT OUTER  JOIN
                      dbo.UDData ON dbo.Part.UDF4__UDData_ID = dbo.UDData.UDData_ID ON dbo.WORK_ORDERS.Part_ID__Part_id = dbo.Part.Part_Id
WHERE     (dbo.UDData.UDData_Data = ''Medium'') AND (dbo.Wo_Receipt.Modified = CONVERT(nvarchar(20), GETDATE(), 101)) AND (dbo.WORK_ORDERS.WO_No > '''')
 
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Qty_Outstanding]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Qty_Outstanding]
AS
SELECT     Part_ID__Part_id, Total_Qty - Qty_Complete AS Outstanding, Status__Wo_Status_Id, WORK_ORDERS_ID
FROM         dbo.WORK_ORDERS
WHERE     (Total_Qty - Qty_Complete > 0) AND (Status__Wo_Status_Id < 5) AND (NOT (WO_No IS NULL))
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Wo_Receipt_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Wo_Receipt_List]
AS
SELECT     dbo.Wo_Receipt.Wo_Receipt_ID, dbo.Wo_Receipt.Wo__Work_Orders_id, dbo.Wo_Receipt.Qty, Employee_2.Name AS [By Employee], 
                      dbo.WORK_ORDERS.WO_No AS [WO No], dbo.Wo_Receipt.Modified, dbo.Part.Part_No AS [Part No], dbo.Grn.Grn_No AS [Grn No], Employee_1.Name AS [Entered By], 
                      dbo.UOM.Unit_of_Measure, dbo.Wo_Receipt.Inspected, dbo.Wo_Receipt.Notes, dbo.Wo_Receipt.Complete_WO
FROM         dbo.WORK_ORDERS RIGHT OUTER JOIN
                      dbo.Conversions LEFT OUTER JOIN
                      dbo.UOM ON dbo.Conversions.To__UOM_id = dbo.UOM.UOM_ID RIGHT OUTER JOIN
                      dbo.Wo_Receipt ON dbo.Conversions.Conversion_Id = dbo.Wo_Receipt.Receipt_UOM__Conversions_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.Wo_Receipt.Part__Part_ID = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Employee AS Employee_1 ON dbo.Wo_Receipt.Modified_By = Employee_1.Employee_Id LEFT OUTER JOIN
                      dbo.Grn ON dbo.Wo_Receipt.Grn__Grn_id = dbo.Grn.Grn_ID ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Wo_Receipt.Wo__Work_Orders_id LEFT OUTER JOIN
                      dbo.Employee AS Employee_2 ON dbo.Wo_Receipt.Accepted_By__Employee_id = Employee_2.Employee_Id
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Wo_Receipt_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[13] 4[48] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -192
         Left = 0
      End
      Begin Tables = 
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Conversions"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 252
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UOM"
            Begin Extent = 
               Top = 126
               Left = 290
               Bottom = 245
               Right = 461
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Wo_Receipt"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 321
            End
            DisplayFlags = 280
            TopColumn = 10
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Employee_1"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Grn"
            Begin Extent = 
               Top = 486
               Left = 305
               Bottom = 605
               Right = 469
            End
            DisplayFlags' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Wo_Receipt_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Wo_Receipt_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N' = 280
            TopColumn = 0
         End
         Begin Table = "Employee_2"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Wo_Receipt_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Wo_Receipt_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Wo_Receipt_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_History_WO]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_History_WO]
AS
SELECT     dbo.WORK_ORDERS.Part_ID__Part_id AS Part__Part_id, dbo.Work_Orders_List.WORK_ORDERS_ID, dbo.Work_Orders_List.[WO No], 
                      dbo.Work_Orders_List.[Contract No], dbo.Work_Orders_List.[SO Customer], dbo.Work_Orders_List.[Date Raised], dbo.Work_Orders_List.[Qty Complete], 
                      dbo.Work_Orders_List.[Total Production Qty], dbo.Work_Orders_List.[Total Qty], dbo.Work_Orders_List.[For WO No], dbo.Work_Orders_List.[Wo Status], 
                      dbo.Work_Orders_List.[Date Required], dbo.Work_Orders_List.[Start Date], dbo.Work_Orders_List.[Manufactured On]
FROM         dbo.Work_Orders_List LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Work_Orders_List.WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Nominal_Sub_Type_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Nominal_Sub_Type_List]
AS
SELECT     dbo.Nominal_Sub_Type.Nominal_Sub_Type_ID, dbo.Nominal_Sub_Type.Nominal_Sub_Type AS [Nominal Sub Type], 
                      dbo.Nominal_Sub_Type.Description, dbo.Nominal_Sub_Type.Parent__Nominal_Type_ID, dbo.Nominal_Type.Nominal_Type AS [Nominal Type]
FROM         dbo.Nominal_Sub_Type LEFT OUTER JOIN
                      dbo.Nominal_Type ON dbo.Nominal_Sub_Type.Parent__Nominal_Type_ID = dbo.Nominal_Type.Nominal_Type_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Nominals_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Nominals_List]
AS
SELECT     dbo.Nominals.Nominal_ID, dbo.Nominals.Nominal, dbo.Nominals.Description, dbo.Nominals.Analysis_Code AS [Analysis Code], 
                      dbo.Nominals.Cost_code AS [Cost code], dbo.Nominals.Department, dbo.Nominals.Carriage_nom AS [Carriage nom], dbo.Nominals.modified, 
                      dbo.Nominals.modified_by, dbo.Nominals.Credit, dbo.Nominals.Debit, dbo.Nominals.Bank_Account AS [Bank Account], 
                      dbo.Nominal_Type.Nominal_Type AS [Nominal Type], dbo.Nominal_Sub_Type.Nominal_Sub_Type AS [Sub Type], 
                      UDData_1.UDData_Data AS UserDefinable1, UDData_2.UDData_Data AS UserDefinable2, UDData_3.UDData_Data AS UserDefinable3, 
                      UDData_4.UDData_Data AS UserDefinable4, UDData_5.UDData_Data AS UserDefinable5, UDData_6.UDData_Data AS UserDefinable6, 
                      dbo.Nominal_Sub_Type.Description AS SubType_Description
FROM         dbo.Nominal_Type RIGHT OUTER JOIN
                      dbo.Nominal_Sub_Type RIGHT OUTER JOIN
                      dbo.UDData UDData_1 RIGHT OUTER JOIN
                      dbo.UDData UDData_6 RIGHT OUTER JOIN
                      dbo.Nominals ON UDData_6.UDData_ID = dbo.Nominals.UDF6__UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_5 ON dbo.Nominals.UDF5__UDData_ID = UDData_5.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_4 ON dbo.Nominals.UDF4__UDData_ID = UDData_4.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_3 ON dbo.Nominals.UDF3__UDData_ID = UDData_3.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_2 ON dbo.Nominals.UDF2__UDData_ID = UDData_2.UDData_ID ON UDData_1.UDData_ID = dbo.Nominals.UDF1__UDData_ID ON 
                      dbo.Nominal_Sub_Type.Nominal_Sub_Type_ID = dbo.Nominals.Sub_Type__Nominal_Sub_Type_ID ON 
                      dbo.Nominal_Type.Nominal_Type_ID = dbo.Nominals.Nominal_Type__Nominal_Type_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Nominal_Sub_Type_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Nominal_Sub_Type_Drop_List]
AS
SELECT     dbo.Nominal_Sub_Type.Nominal_Sub_Type_ID, dbo.Nominal_Sub_Type.Nominal_Sub_Type AS [Nominal Sub Type], 
                      dbo.Nominal_Sub_Type.Description, dbo.Nominal_Sub_Type.Parent__Nominal_Type_ID, dbo.Nominal_Type.Nominal_Type AS [Nominal Type]
FROM         dbo.Nominal_Sub_Type LEFT OUTER JOIN
                      dbo.Nominal_Type ON dbo.Nominal_Sub_Type.Parent__Nominal_Type_ID = dbo.Nominal_Type.Nominal_Type_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Reports_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Reports_List]
AS
SELECT     dbo.Reports.Report_ID, dbo.Reports.Print_Allow AS [Print Allow], dbo.Reports.Preview_Allow AS [Preview Allow], dbo.Reports.Export_Allow AS [Export Allow], 
                      dbo.Reports.List_As_Source AS [List As Source], dbo.Reports.Show_Parts AS [Show Parts], dbo.Reports.Text_Display AS [Text Display], 
                      dbo.Reports.rptName AS FileName, dbo.Reports.rptGroup_ID, dbo.Reports.rptFormula_id, dbo.Report_Groups.Report_Group AS [Report Group], 
                      dbo.Report_Formulas.Formula, dbo.Reports.Customer_Specific, dbo.Reports.Part_Specific
FROM         dbo.Reports LEFT OUTER JOIN
                      dbo.Report_Formulas ON dbo.Reports.rptFormula_id = dbo.Report_Formulas.Formula_id_Report_Formula_id LEFT OUTER JOIN
                      dbo.Report_Groups ON dbo.Reports.rptGroup_ID = dbo.Report_Groups.Report_Group_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Reports_Users_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Reports_Users_List]
AS
SELECT     dbo.Reports_Users.Report_User_ID, dbo.Reports_Users.User_Id__User_Id, dbo.Reports_Users.Specific_Printer_Selected AS [Specific Printer], 
                      dbo.Reports_Users.Report_Printer_Port AS [Printer Port], dbo.Reports_Users.Report_Printer_Name AS [Printer Name], 
                      dbo.Reports_Users.Report_Printer_Driver AS [Printer Driver], dbo.Reports_Users.Report_Id__Reports_Report_Id, dbo.Employee.Name AS Employee, 
                      dbo.Reports.Text_Display AS [Text Display], dbo.Reports.Select_Order AS [Select Order], dbo.Reports.List_As_Source AS [List As Source], 
                      dbo.Reports.Export_Allow AS [Export Allow], dbo.Reports.Preview_Allow AS [Preview Allow], dbo.Reports.Print_Allow AS [Print Allow], 
                      dbo.Reports.Custom_Formula AS [Custom Formula], dbo.Report_Formulas.Formula, dbo.Reports.Show_Parts, dbo.Reports.rptGroup_ID, 
                      dbo.Reports.Customer_Specific, dbo.Reports.Part_Specific
FROM         dbo.Report_Formulas RIGHT OUTER JOIN
                      dbo.Reports ON dbo.Report_Formulas.Formula_id_Report_Formula_id = dbo.Reports.rptFormula_id RIGHT OUTER JOIN
                      dbo.Reports_Users ON dbo.Reports.Report_ID = dbo.Reports_Users.Report_Id__Reports_Report_Id LEFT OUTER JOIN
                      dbo.SY_Passwords ON dbo.Reports_Users.User_Id__User_Id = dbo.SY_Passwords.User_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.SY_Passwords.EmployeeId = dbo.Employee.Employee_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Company_Discount_Group_Drop_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Company_Discount_Group_Drop_list]
AS
SELECT     Company_Discount_Group_ID, Company_Discount_Group AS [Discount Group], Modified
FROM         dbo.Company_Discount_Group
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Company_Discount_Group_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Company_Discount_Group_List]
AS
SELECT     Company_Discount_Group_ID, Company_Discount_Group AS [Discount Group], Modified
FROM         dbo.Company_Discount_Group
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Misc_Issue_Stock_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Misc_Issue_Stock_List]
AS
SELECT     dbo.Misc_Issue_Stock.Misc_Issue_Stock_ID, dbo.Misc_Issue_Stock.Issue__Misc_issue_id, dbo.Misc_Issue_Stock.Total_Qty AS Qty, 
                      dbo.Misc_Issue_Stock.Total_Length AS Length, dbo.Misc_Issue_Stock.Total_Breadth AS Breadth, dbo.Part.Part_No AS [Part No.], 
                      dbo.Grn.Grn_No AS [Grn No.], dbo.Stock.Batch_no AS [Batch No.], dbo.Stock.Serial_no AS [Serial No.], dbo.Stock.Cast_Heat_No AS [Cast No.]
FROM         dbo.Grn RIGHT OUTER JOIN
                      dbo.Misc_Issue_Stock LEFT OUTER JOIN
                      dbo.Stock ON dbo.Misc_Issue_Stock.Stock__Stock_id = dbo.Stock.Stock_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.Stock.Part__Part_Id = dbo.Part.Part_Id ON dbo.Grn.Grn_ID = dbo.Stock.Grn__Grn_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Report_Groups_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Report_Groups_Drop_List]
AS
SELECT     Report_Group_id, Report_Group
FROM         dbo.Report_Groups
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Report_Groups_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Report_Groups_List]
AS
SELECT     Report_Group_id, Report_Group
FROM         dbo.Report_Groups
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Material_types_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Material_types_Drop_List]
AS
SELECT     Material_types_ID, Material_Type AS [Material Type], Specific_Gravity AS [Specific Gravity], Modified
FROM         dbo.Material_types
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Material_types_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Material_types_List]
AS
SELECT     Material_types_ID, Material_Type AS [Material Type], Specific_Gravity AS [Specific Gravity], Modified
FROM         dbo.Material_types
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accounts_Entry_Bill_Payments]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Accounts_Entry_Bill_Payments]
AS
SELECT     dbo.Accounts_Entry.*
FROM         dbo.Accounts_Entry
WHERE     (Type__Entry_Type_ID = 5)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Company_Address_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Company_Address_Drop_List]
AS
SELECT     TOP (100) PERCENT dbo.COMPANY_ADDRESS.Address_Id, dbo.COMPANY_ADDRESS.Address1, dbo.COMPANY_ADDRESS.Address2, 
                      dbo.COMPANY_ADDRESS.Address3, dbo.COMPANY_ADDRESS.Country, dbo.COMPANY_ADDRESS.Delivery_Address AS [Delivery Address], 
                      dbo.COMPANY_ADDRESS.Fax, dbo.COMPANY_ADDRESS.Invoice_Address AS [Invoice Address], dbo.COMPANY_ADDRESS.Note, 
                      dbo.COMPANY_ADDRESS.ParentCompany__Company_Id, dbo.COMPANY_ADDRESS.Postcode, dbo.COMPANY_ADDRESS.Sales_Person__Employee_id, 
                      dbo.COMPANY_ADDRESS.System, dbo.COMPANY_ADDRESS.Telephone, dbo.COMPANY_ADDRESS.Town, dbo.Employee.Name AS [Sales Person], 
                      dbo.COMPANYS.Name AS Company, dbo.COMPANY_ADDRESS.Alternative_Name AS [Alternative Name], dbo.COMPANY_ADDRESS.County, 
                      dbo.COMPANY_ADDRESS.Hidden
FROM         dbo.COMPANY_ADDRESS LEFT OUTER JOIN
                      dbo.Employee ON dbo.COMPANY_ADDRESS.Sales_Person__Employee_id = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.COMPANY_ADDRESS.ParentCompany__Company_Id = dbo.COMPANYS.Company_Id
WHERE     (dbo.COMPANY_ADDRESS.Hidden = 0) OR
                      (dbo.COMPANY_ADDRESS.Hidden IS NULL)
ORDER BY dbo.COMPANY_ADDRESS.Address_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contacts_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Contacts_list]
AS
SELECT     dbo.CONTACTS.Contact_id, dbo.COMPANYS.Company_Id, dbo.CONTACTS.Name, dbo.COMPANYS.Name AS Company, dbo.CONTACT_POSITION.ConPos, 
                      dbo.CONTACTS.Mobile, dbo.CONTACTS.Fax, dbo.CONTACTS.E_mail AS [E mail], dbo.CONTACTS.Direct_Line AS [Direct Line], 
                      dbo.CONTACTS.ContactsCompany__Company_id, dbo.CONTACTS.MainContact, dbo.CONTACTS.Hobbies, 
                      dbo.CONTACTS.Contact_Allowed AS [Marketing Contact Allowed], dbo.CONTACTS.Left_Employment AS [Left Employment], 
                      dbo.CONTACTS.PerEmail AS [Personal Email], dbo.COMPANYS.Next_Date AS [Company Next Contact Date], dbo.COMPANY_AREA.Area, dbo.INDUSTRY.Industry, 
                      UDData_1.UDData_Data AS [Company User Definable1], UDData_2.UDData_Data AS [Company User Definable2], 
                      UDData_3.UDData_Data AS [Company User Definable3], UDData_4.UDData_Data AS [Company User Definable4], 
                      UDData_5.UDData_Data AS [Company User Definable5], UDData_6.UDData_Data AS [Company User Definable6], dbo.CONTACTS.Next_Date AS [Next Date], 
                      dbo.CONTACTS.Note_RTF AS Notes, dbo.CONTACTS.IM_Address
FROM         dbo.CONTACT_POSITION RIGHT OUTER JOIN
                      dbo.CONTACTS ON dbo.CONTACT_POSITION.ConPosId = dbo.CONTACTS.ContactsPosition__ConPosId LEFT OUTER JOIN
                      dbo.COMPANY_AREA RIGHT OUTER JOIN
                      dbo.INDUSTRY RIGHT OUTER JOIN
                      dbo.UDData AS UDData_2 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_6 RIGHT OUTER JOIN
                      dbo.COMPANYS ON UDData_6.UDData_ID = dbo.COMPANYS.UDF6__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_5 ON dbo.COMPANYS.UDF5__UDData_ID = UDData_5.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_4 ON dbo.COMPANYS.UDF4__UDData_ID = UDData_4.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_3 ON dbo.COMPANYS.UDF3__UDData_ID = UDData_3.UDData_ID ON 
                      UDData_2.UDData_ID = dbo.COMPANYS.UDF2__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON dbo.COMPANYS.UDF1__UDData_ID = UDData_1.UDData_ID ON dbo.INDUSTRY.Industry_Id = dbo.COMPANYS.CoyType__type_id ON 
                      dbo.COMPANY_AREA.Area_Id = dbo.COMPANYS.CoyArea__area_id ON dbo.CONTACTS.ContactsCompany__Company_id = dbo.COMPANYS.Company_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contacts_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Contacts_Drop_List]
AS
SELECT     dbo.CONTACTS.Contact_id, dbo.CONTACTS.Contact_No AS [Contact No], dbo.CONTACTS.Name, dbo.COMPANYS.Name AS Company, 
                      dbo.CONTACT_POSITION.ConPos AS Position, dbo.COMPANYS.Company_Id, dbo.CONTACTS.E_mail AS Email, dbo.CONTACTS.Mobile
FROM         dbo.CONTACT_POSITION RIGHT OUTER JOIN
                      dbo.CONTACTS ON dbo.CONTACT_POSITION.ConPosId = dbo.CONTACTS.ContactsPosition__ConPosId LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.CONTACTS.ContactsCompany__Company_id = dbo.COMPANYS.Company_Id
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Contacts_Drop_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[32] 2[13] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "CONTACT_POSITION"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "CONTACTS"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 357
            End
            DisplayFlags = 280
            TopColumn = 22
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 1800
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Contacts_Drop_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Contacts_Drop_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Contacts_Drop_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Reports_Companies_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Reports_Companies_List]
AS
SELECT     dbo.Reports_Companies.Reports_Companies_ID, dbo.Reports.rptName AS [Report Name], dbo.COMPANYS.Name AS [Company Name], dbo.Reports.Report_ID, 
                      dbo.Reports_Companies.Company_ID
FROM         dbo.COMPANYS RIGHT OUTER JOIN
                      dbo.Reports_Companies ON dbo.COMPANYS.Company_Id = dbo.Reports_Companies.Company_ID LEFT OUTER JOIN
                      dbo.Reports ON dbo.Reports_Companies.Report_ID = dbo.Reports.Report_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[COMPANY_ADDRESS_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[COMPANY_ADDRESS_List]
AS
SELECT     TOP (100) PERCENT dbo.COMPANY_ADDRESS.Address_Id, dbo.COMPANY_ADDRESS.Address1, dbo.COMPANY_ADDRESS.Address2, 
                      dbo.COMPANY_ADDRESS.Address3, dbo.COMPANY_ADDRESS.Country, dbo.COMPANY_ADDRESS.Delivery_Address AS [Delivery Address], 
                      dbo.COMPANY_ADDRESS.Fax, dbo.COMPANY_ADDRESS.Invoice_Address AS [Invoice Address], dbo.COMPANY_ADDRESS.Note, 
                      dbo.COMPANY_ADDRESS.ParentCompany__Company_Id, dbo.COMPANY_ADDRESS.Postcode, dbo.COMPANY_ADDRESS.Sales_Person__Employee_id, 
                      dbo.COMPANY_ADDRESS.System, dbo.COMPANY_ADDRESS.Telephone, dbo.COMPANY_ADDRESS.Town, dbo.Employee.Name AS [Sales Person], 
                      dbo.COMPANYS.Name AS Company, dbo.COMPANY_ADDRESS.Alternative_Name AS [Alternative Name], dbo.COMPANY_ADDRESS.County, 
                      dbo.COMPANY_ADDRESS.Hidden
FROM         dbo.COMPANY_ADDRESS LEFT OUTER JOIN
                      dbo.Employee ON dbo.COMPANY_ADDRESS.Sales_Person__Employee_id = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.COMPANY_ADDRESS.ParentCompany__Company_Id = dbo.COMPANYS.Company_Id
ORDER BY dbo.COMPANY_ADDRESS.Address_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Companys_Deleted_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Companys_Deleted_list]
AS
SELECT     dbo.COMPANYS.Company_Id, dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name, dbo.COMPANYS.Address1, 
                      dbo.COMPANYS.Address2, dbo.COMPANYS.Address3, dbo.COMPANYS.Country, dbo.COMPANYS.Town, dbo.COMPANYS.Postcode, 
                      dbo.COMPANYS.Telephone, dbo.COMPANYS.Fax, dbo.COMPANYS.Email, dbo.COMPANYS.CoyType__type_id, dbo.VAT.Description AS Vat, 
                      dbo.COMPANY_AREA.Area, dbo.INDUSTRY.Industry, dbo.COMPANYS.CreditStatus, dbo.COMPANYS.salesperson_id__employee_Id, 
                      dbo.Employee.Name AS [Sales Person], dbo.Price_List.Description, dbo.COMPANYS.NoCarriageOver, dbo.COMPANYS.MinimumOrder, 
                      dbo.COMPANYS.Customer, dbo.COMPANYS.Supplier, dbo.COMPANYS.End_User, dbo.COMPANYS.Manufacturer, dbo.COMPANYS.Transport, 
                      dbo.COMPANYS.SubContractor, dbo.COMPANYS.Misc, dbo.Company_Status.Status, dbo.UDData.UDData_Data AS UserDefinable1, 
                      UDData_1.UDData_Data AS UserDefinable2, UDData_2.UDData_Data AS UserDefinable3, UDData_3.UDData_Data AS UserDefinable4, 
                      UDData_4.UDData_Data AS UserDefinable5, UDData_5.UDData_Data AS UserDefinable6, dbo.COMPANYS.quick_notes_non_rtf AS [Quick Notes], 
                      dbo.COMPANYS.Next_Date AS [Next Date], dbo.CONTACTS.Name AS [Main Contact], dbo.COMPANYS.Credit, dbo.COMPANYS.Debit, 
                      dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, dbo.COMPANYS.SupplierAccNo, dbo.COMPANYS.Deleted, 
                      dbo.COMPANYS.No_Order_For_Days AS [Days no Order], dbo.COMPANYS.No_Quote_For_Days AS [Days no Quote], dbo.COMPANYS.WWW, 
                      dbo.COMPANYS.CreditLimit, dbo.CREDIT_TERM.c_term AS [Credit Term], dbo.COMPANYS.Balance, dbo.COMPANYS.Prospect, 
                      dbo.COMPANYS.Customer_Class AS [Customer Class], dbo.COMPANYS.Number_Of_Employees AS [Number Of Employees], 
                      dbo.COMPANYS.OEM_Tier AS [OEM Tier], dbo.COMPANYS.Invoices_Not_Posted AS [Invoices Not Posted], 
                      dbo.COMPANYS.Deliverys_Not_Invoiced AS [Deliverys Not Invoiced], dbo.COMPANYS.Credits_Not_Posted AS [Credits Not Posted], 
                      dbo.COMPANYS.Date_Created AS [Date Created], dbo.COMPANYS.EU_Country_Code AS [EU Country Code], dbo.COMPANYS.EU_VAT AS [EU VAT], 
                      dbo.COMPANYS.Third_Party_Contact AS [Allow Third Party Contact], dbo.COMPANYS.Has_Ordered AS [Has Ordered]
FROM         dbo.INDUSTRY RIGHT OUTER JOIN
                      dbo.Employee RIGHT OUTER JOIN
                      dbo.COMPANYS LEFT OUTER JOIN
                      dbo.CREDIT_TERM ON dbo.COMPANYS.credit_term = dbo.CREDIT_TERM.C_id LEFT OUTER JOIN
                      dbo.MULTICURRENCY ON dbo.COMPANYS.Default_Currency__MultiCurrency_ID = dbo.MULTICURRENCY.MultiCurrency_ID LEFT OUTER JOIN
                      dbo.CONTACTS ON dbo.COMPANYS.Main_Contact = dbo.CONTACTS.Contact_id LEFT OUTER JOIN
                      dbo.UDData ON dbo.COMPANYS.UDF1__UDData_ID = dbo.UDData.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_1 ON dbo.COMPANYS.UDF2__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_2 ON dbo.COMPANYS.UDF3__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_3 ON dbo.COMPANYS.UDF4__UDData_ID = UDData_3.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_4 ON dbo.COMPANYS.UDF5__UDData_ID = UDData_4.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_5 ON dbo.COMPANYS.UDF6__UDData_ID = UDData_5.UDData_ID ON 
                      dbo.Employee.Employee_Id = dbo.COMPANYS.salesperson_id__employee_Id LEFT OUTER JOIN
                      dbo.COMPANY_AREA ON dbo.COMPANYS.CoyArea__area_id = dbo.COMPANY_AREA.Area_Id ON 
                      dbo.INDUSTRY.Industry_Id = dbo.COMPANYS.CoyType__type_id LEFT OUTER JOIN
                      dbo.VAT ON dbo.COMPANYS.VATRateID = dbo.VAT.VAT_ID LEFT OUTER JOIN
                      dbo.Price_List ON dbo.COMPANYS.Pricelist = dbo.Price_List.PriceList_Id LEFT OUTER JOIN
                      dbo.Company_Status ON dbo.COMPANYS.Account_Status__Company_Status_ID = dbo.Company_Status.Company_Status_ID
WHERE     (dbo.COMPANYS.Deleted = 1) 
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Activity_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Activity_Drop_List]
AS
SELECT     dbo.Activity.Activity_ID, dbo.Activity.Modified, dbo.Activity.Created, dbo.Activity.Description, dbo.Activity.isPublic, dbo.Activity.isPrivate, 
                      dbo.Activity.Complete, dbo.Activity.Complete_Date AS [Complete Date], dbo.Activity.Next_Date AS [Next Date], 
                      dbo.Activity_Type.Activity_Type AS [Activity Type], dbo.Activity.Company__COMPANYS_ID, dbo.Activity.Contact__CONTACTS_ID, 
                      dbo.UDData.UDData_Data AS UserDefined1, UDData_1.UDData_Data AS UserDefined2, UDData_2.UDData_Data AS UserDefined3, 
                      UDData_3.UDData_Data AS UserDefined4, UDData_4.UDData_Data AS UserDefined5, UDData_5.UDData_Data AS UserDefined6, 
                      dbo.CONTACTS.Name AS Contact, dbo.Employee.Name AS [For Employee], dbo.COMPANYS.Company_No AS [Company No], 
                      dbo.COMPANYS.Name AS Company, dbo.Activity.SO__Sales_Order_Lines_ID, dbo.Activity.Created_By, dbo.Activity.Notes, 
                      dbo.Activity.QUOTE__QUOTES_ID
FROM         dbo.Activity_Type RIGHT OUTER JOIN
                      dbo.UDData RIGHT OUTER JOIN
                      dbo.UDData UDData_4 RIGHT OUTER JOIN
                      dbo.Activity LEFT OUTER JOIN
                      dbo.UDData UDData_5 ON dbo.Activity.UDF6__UDData_ID = UDData_5.UDData_ID ON 
                      UDData_4.UDData_ID = dbo.Activity.UDF5__UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_3 ON dbo.Activity.UDF4__UDData_ID = UDData_3.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_2 ON dbo.Activity.UDF3__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_1 ON dbo.Activity.UDF2__UDData_ID = UDData_1.UDData_ID ON 
                      dbo.UDData.UDData_ID = dbo.Activity.UDF1__UDData_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.Activity.Employee__Employee_ID = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.CONTACTS ON dbo.Activity.Contact__CONTACTS_ID = dbo.CONTACTS.Contact_id LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Activity.Company__COMPANYS_ID = dbo.COMPANYS.Company_Id ON 
                      dbo.Activity_Type.Activity_Type_ID = dbo.Activity.Type__Activity_Type_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Comp_Machines_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Comp_Machines_list]
AS
SELECT     TOP (100) PERCENT dbo.Comp_Machines.Comp_Machines_ID, dbo.Comp_Machines.Company_ID AS [Comp ID], dbo.COMPANYS.Name, 
                      dbo.Machines.Machine_Name AS [Machine Name], dbo.Machines.Model, dbo.Machines.Description
FROM         dbo.Comp_Machines LEFT OUTER JOIN
                      dbo.Machines ON dbo.Comp_Machines.Machine_ID = dbo.Machines.Machines_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Comp_Machines.Company_ID = dbo.COMPANYS.Company_Id
ORDER BY dbo.Comp_Machines.Comp_Machines_ID, [Comp ID]
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Companys_Drop_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Companys_Drop_list]
AS
SELECT     dbo.COMPANYS.Company_No, dbo.COMPANYS.Name, dbo.COMPANYS.Address1, dbo.COMPANYS.Address2, dbo.COMPANYS.Address3, 
                      dbo.COMPANYS.Country, dbo.COMPANYS.Town, dbo.COMPANYS.Postcode, dbo.COMPANYS.Telephone, dbo.COMPANYS.Fax, dbo.COMPANYS.Email, 
                      dbo.COMPANYS.Company_Id, dbo.COMPANYS.Customer, dbo.COMPANYS.Supplier, dbo.COMPANYS.End_User, dbo.COMPANYS.Manufacturer, 
                      dbo.COMPANYS.Transport, dbo.COMPANYS.SubContractor, dbo.COMPANYS.Misc, dbo.COMPANYS.Deleted
FROM         dbo.COMPANYS LEFT OUTER JOIN
                      dbo.Employee ON dbo.COMPANYS.salesperson_id__employee_Id = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.COMPANY_AREA ON dbo.COMPANYS.CoyArea__area_id = dbo.COMPANY_AREA.Area_Id LEFT OUTER JOIN
                      dbo.INDUSTRY ON dbo.COMPANYS.CoyType__type_id = dbo.INDUSTRY.Industry_Id LEFT OUTER JOIN
                      dbo.VAT ON dbo.COMPANYS.VATRateID = dbo.VAT.VAT_ID LEFT OUTER JOIN
                      dbo.Price_List ON dbo.COMPANYS.Pricelist = dbo.Price_List.PriceList_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Reports_Parts_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Reports_Parts_List]
AS
SELECT     dbo.Reports_Parts.Reports_Parts_ID, dbo.Reports.rptName AS [Report Name], dbo.Part.Part_No AS [Part No], dbo.Reports.Report_ID, dbo.Reports_Parts.Part_ID
FROM         dbo.Part RIGHT OUTER JOIN
                      dbo.Reports_Parts ON dbo.Part.Part_Id = dbo.Reports_Parts.Part_ID LEFT OUTER JOIN
                      dbo.Reports ON dbo.Reports_Parts.Report_ID = dbo.Reports.Report_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Return_to_supplier_Stock_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Return_to_supplier_Stock_List]
AS
SELECT     dbo.Return_to_supplier_Stock.Return_to_supplier_Stock_ID, dbo.Return_to_supplier_Stock.Issue__Return_to_Supplier_id, 
                      dbo.Return_to_supplier_Stock.Total_Qty AS Qty, dbo.Return_to_supplier_Stock.Total_Length AS Length, 
                      dbo.Return_to_supplier_Stock.Total_Breadth AS Bredth, dbo.Part.Part_No AS [Part No.], dbo.Grn.Grn_No AS [Grn No.], 
                      dbo.Stock.Batch_no AS [Batch No.], dbo.Stock.Serial_no AS [Serial No.], dbo.Stock.Cast_Heat_No AS [Cast No.]
FROM         dbo.Part RIGHT OUTER JOIN
                      dbo.Return_to_supplier_Stock LEFT OUTER JOIN
                      dbo.Stock ON dbo.Return_to_supplier_Stock.Stock__Stock_id = dbo.Stock.Stock_ID ON dbo.Part.Part_Id = dbo.Stock.Part__Part_Id LEFT OUTER JOIN
                      dbo.Grn ON dbo.Stock.Grn__Grn_id = dbo.Grn.Grn_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Group_code_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Group_code_Drop_List]
AS
SELECT     dbo.Group_Code.Groupcode_Id, dbo.Group_Code.Group_Code AS [Group Code], dbo.Group_Code.Description, dbo.CATEGORY.Category
FROM         dbo.Group_Code LEFT OUTER JOIN
                      dbo.CATEGORY ON dbo.Group_Code.Category__category_id = dbo.CATEGORY.Category_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Group_Code_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Group_Code_List]
AS
SELECT     dbo.Group_Code.Groupcode_Id, dbo.Group_Code.Group_Code AS [Group Code], dbo.Group_Code.Description, 
                      dbo.Group_Code.Requires_Approval AS [Requires Approval], dbo.Group_Code.counter, dbo.Group_Code.Budget, dbo.CATEGORY.Category, 
                      dbo.Group_Code.Category__category_id, dbo.Nominals.Nominal AS [Sales Nominal], Nominals_1.Nominal AS [WIP Nominal], 
                      Nominals_2.Nominal AS [Stock Nominal], Nominals_3.Nominal AS [Write Nominal], Nominals_4.Nominal AS [Cost Nominal], 
                      dbo.CATEGORY.Category_Id
FROM         dbo.Group_Code LEFT OUTER JOIN
                      dbo.CATEGORY ON dbo.Group_Code.Category__category_id = dbo.CATEGORY.Category_Id LEFT OUTER JOIN
                      dbo.Nominals ON dbo.Group_Code.Sales_nom = dbo.Nominals.Nominal_ID LEFT OUTER JOIN
                      dbo.Nominals Nominals_1 ON dbo.Group_Code.WIP_nom = Nominals_1.Nominal_ID LEFT OUTER JOIN
                      dbo.Nominals Nominals_2 ON dbo.Group_Code.Stock_nom = Nominals_2.Nominal_ID LEFT OUTER JOIN
                      dbo.Nominals Nominals_3 ON dbo.Group_Code.Write_nom = Nominals_3.Nominal_ID LEFT OUTER JOIN
                      dbo.Nominals Nominals_4 ON dbo.Group_Code.Cost_nom = Nominals_4.Nominal_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Price_List_Temp]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Price_List_Temp]
AS
SELECT     dbo.Price_List.PriceList_Id, dbo.Part.Part_Id, dbo.Price_List.Modified, dbo.Price_List.Description AS [Price List], 
                      dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.Part.On_Order AS [On Order], 
                      dbo.Part.Min_Order AS [Min Order], dbo.Part.In_Stock AS [In Stock], dbo.Part.Lead_Time AS [Lead Time], dbo.Part.Drawing_No AS [Drawing No], 
                      dbo.Part.Re_Order AS [Re Order], dbo.Part.Recomended_Order AS [Recomended Order], dbo.Part.Required, 
                      dbo.Part.In_Stock - dbo.Part.Required AS [Free Stock], dbo.Group_Code.Group_Code AS [Group Code], dbo.Part.Cost
FROM         dbo.Group_Code RIGHT OUTER JOIN
                      dbo.Part ON dbo.Group_Code.Groupcode_Id = dbo.Part.Groupcode__Groupcode_id CROSS JOIN
                      dbo.MULTICURRENCY RIGHT OUTER JOIN
                      dbo.Price_List ON dbo.MULTICURRENCY.MultiCurrency_ID = dbo.Price_List.Currency__MultiCurrency_ID
WHERE     (dbo.Part.For_Sale <> 0) AND (dbo.Part.Status__Part_status_id <> 7) AND (dbo.Part.Deleted = 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[MULTICURRENCY_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[MULTICURRENCY_List]
AS
SELECT     MultiCurrency_ID, MultiCurrency_Currency, MultiCurrency_Account_Code, MultiCurrency_Default, MultiCurrency_Multiply_Factor, 
                      MultiCurrency_Percentage_Mark_Up, MultiCurrency_Symbol, modified_by, modified
FROM         dbo.MULTICURRENCY
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[MULTICURRENCY_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[MULTICURRENCY_Drop_List]
AS
SELECT     MultiCurrency_ID, MultiCurrency_Currency, MultiCurrency_Account_Code, MultiCurrency_Default, MultiCurrency_Multiply_Factor, 
                      MultiCurrency_Percentage_Mark_Up, MultiCurrency_Symbol, modified, modified_by
FROM         dbo.MULTICURRENCY
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accts_Credit_Vat]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Accts_Credit_Vat]
AS
SELECT     dbo.Credit_Part.Credit__CREDITS_ID AS Credit_Id, SUM(dbo.Credit_Part.Total) AS Total, SUM(dbo.Credit_Part.VAT) AS Vat, dbo.VAT.Account_Code
FROM         dbo.VAT LEFT OUTER JOIN
                      dbo.Credit_Part ON dbo.VAT.VAT_ID = dbo.Credit_Part.VAT_ID
GROUP BY dbo.Credit_Part.Credit__CREDITS_ID, dbo.VAT.Account_Code
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accts_Credit_Nominals]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Accts_Credit_Nominals]
AS
SELECT     dbo.Credit_Part.Credit__CREDITS_ID AS Credit_Id, SUM(dbo.Credit_Part.Total) AS Total, dbo.Nominals.Nominal_ID, dbo.Nominals.Cost_code, 
                      dbo.Nominals.Department, dbo.Nominals.Analysis_Code
FROM         dbo.Nominals RIGHT OUTER JOIN
                      dbo.Part RIGHT OUTER JOIN
                      dbo.Credit_Part ON dbo.Part.Part_Id = dbo.Credit_Part.Part__Part_id ON dbo.Nominals.Nominal_ID = dbo.Part.Sales_nom__Nominal_id
GROUP BY dbo.Credit_Part.Credit__CREDITS_ID, dbo.Nominals.Nominal_ID, dbo.Nominals.Cost_code, dbo.Nominals.Department, dbo.Nominals.Analysis_Code
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Conversions_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Conversions_Drop_List]
AS
SELECT     dbo.Conversions.Conversion_Id, UOM_2.Unit_of_Measure AS [From], UOM_1.Unit_of_Measure AS [To], dbo.Conversions.By_Part AS [By Part], 
                      dbo.Conversions.Multiply_By AS [Multiply By], dbo.Conversions.System, dbo.Conversions.From__UOM_id, dbo.Conversions.To__UOM_id, 
                      dbo.Conversions.Part__Part_id, dbo.Conversions.For_Spec
FROM         dbo.Conversions LEFT OUTER JOIN
                      dbo.UOM AS UOM_1 ON dbo.Conversions.To__UOM_id = UOM_1.UOM_ID LEFT OUTER JOIN
                      dbo.UOM AS UOM_2 ON dbo.Conversions.From__UOM_id = UOM_2.UOM_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[UOM_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[UOM_List]
AS
SELECT     UOM_ID, Unit_of_Measure AS [Unit of Measure], Abbreviation, Length, Area, Non_Divisible AS [Non Divisible], System
FROM         dbo.UOM
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Conversions_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Conversions_List]
AS
SELECT     dbo.Conversions.Conversion_Id, UOM_2.Unit_of_Measure AS [From], UOM_1.Unit_of_Measure AS [To], dbo.Conversions.By_Part AS [By Part], 
                      dbo.Conversions.Multiply_By AS [Multiply By], dbo.Conversions.System, dbo.Conversions.From__UOM_id, dbo.Conversions.To__UOM_id, 
                      dbo.Conversions.Part__Part_id, dbo.Conversions.For_Spec
FROM         dbo.Conversions LEFT OUTER JOIN
                      dbo.UOM AS UOM_1 ON dbo.Conversions.To__UOM_id = UOM_1.UOM_ID LEFT OUTER JOIN
                      dbo.UOM AS UOM_2 ON dbo.Conversions.From__UOM_id = UOM_2.UOM_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[UOM_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[UOM_Drop_List]
AS
SELECT     UOM_ID, Unit_of_Measure, Abbreviation, Length, Area, Non_Divisible, System
FROM         dbo.UOM
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[UOM_From_Conversion_Id]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[UOM_From_Conversion_Id]
AS
SELECT     dbo.Conversions.Conversion_Id, dbo.UOM.Unit_of_Measure, dbo.Conversions.Multiply_By
FROM         dbo.Conversions LEFT OUTER JOIN
                      dbo.UOM ON dbo.Conversions.To__UOM_id = dbo.UOM.UOM_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Return_to_Wo_Stock_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Return_to_Wo_Stock_List]
AS
SELECT     dbo.Return_to_Wo_Stock.Return_to_Wo_Stock_ID, dbo.Return_to_Wo_Stock.Issue__Return_to_WO_id, dbo.Return_to_Wo_Stock.Total_Qty AS Qty, 
                      dbo.Return_to_Wo_Stock.Total_Length AS Length, dbo.Return_to_Wo_Stock.Total_Breadth AS Bredth, dbo.Part.Part_No AS [Part No.], 
                      dbo.Grn.Grn_No AS [Grn No.], dbo.Stock.Batch_no AS [Batch No.], dbo.Stock.Serial_no AS [Serial No.], dbo.Stock.Cast_Heat_No AS [Cast No.]
FROM         dbo.Return_to_Wo_Stock LEFT OUTER JOIN
                      dbo.Stock ON dbo.Return_to_Wo_Stock.Stock__Stock_id = dbo.Stock.Stock_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.Stock.Part__Part_Id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Grn ON dbo.Stock.Grn__Grn_id = dbo.Grn.Grn_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Ret_To_Supp_Related_Doc_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Ret_To_Supp_Related_Doc_List]
AS
SELECT     Ret_To_Supp_Related_Doc_ID, Against__Return_to_supplier_ID, Description, Document_Path
FROM         dbo.Ret_To_Supp_Related_Doc
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Nominals_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Nominals_Drop_List]
AS
SELECT     Nominal_ID, Description, Department, Cost_code, Carriage_nom, Analysis_Code, Nominal, Bank_Account AS [Bank Account]
FROM         dbo.Nominals
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_item_Stock_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Delivery_item_Stock_List]
AS
SELECT     dbo.Delivery_item_Stock.Delivery_item_Stock_ID, dbo.Delivery_item_Stock.Delivery_Item_id, dbo.Delivery_item_Stock.Total_Qty AS Qty, 
                      dbo.Delivery_item_Stock.Total_Length AS Length, dbo.Delivery_item_Stock.Total_Breadth AS Bredth, dbo.Part.Part_No AS [Part No.], 
                      dbo.Grn.Grn_No AS [Grn No.], dbo.Stock.Batch_no AS [Batch No.], dbo.Stock.Serial_no AS [Serial No.], dbo.Stock.Cast_Heat_No AS [Cast No.], 
                      dbo.Delivery_item_Stock.Stock__Stock_id, dbo.Stock.On_Hire AS [On Hire], dbo.LOCATION.Location, 
                      dbo.Delivery_item_Stock.Qty_Returned AS [Qty Returned], dbo.Delivery_item_Stock.Qty_To_Return AS [Qty To Return]
FROM         dbo.Delivery_item_Stock LEFT OUTER JOIN
                      dbo.LOCATION RIGHT OUTER JOIN
                      dbo.Stock ON dbo.LOCATION.Location_id = dbo.Stock.Location__location_id ON 
                      dbo.Delivery_item_Stock.Stock__Stock_id = dbo.Stock.Stock_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.Stock.Part__Part_Id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Grn ON dbo.Stock.Grn__Grn_id = dbo.Grn.Grn_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Item_Stock_Total_Qty]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Delivery_Item_Stock_Total_Qty]
AS
SELECT     Delivery_Item_id, SUM(Total_Qty) AS Total
FROM         dbo.Delivery_item_Stock
GROUP BY Delivery_Item_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Item_Customer_Return_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Delivery_Item_Customer_Return_List]
AS
SELECT     dbo.Delivery_item_Stock.Qty_To_Return AS [Qty To Return], dbo.Delivery_item_Stock.Qty_Returned AS [Qty Returned], dbo.Delivery_item_Stock.Delivery_Item_id, 
                      dbo.Delivery_item_Stock.Total_Qty AS Qty, dbo.Delivery_item_Stock.Total_Length AS Length, dbo.Delivery_item_Stock.Total_Breadth AS Bredth, 
                      dbo.Part.Part_No AS [Part No.], dbo.Grn.Grn_No AS [Grn No.], dbo.Stock.Batch_no AS [Batch No.], dbo.Stock.Serial_no AS [Serial No.], 
                      dbo.Stock.Cast_Heat_No AS [Cast No.], dbo.Delivery_item_Stock.Stock__Stock_id, dbo.Stock.On_Hire AS [On Hire], dbo.LOCATION.Location, 
                      dbo.Delivery_item_Stock.Delivery_item_Stock_ID AS [Del Item Stock ID]
FROM         dbo.Delivery_item_Stock LEFT OUTER JOIN
                      dbo.LOCATION RIGHT OUTER JOIN
                      dbo.Stock ON dbo.LOCATION.Location_id = dbo.Stock.Location__location_id ON dbo.Delivery_item_Stock.Stock__Stock_id = dbo.Stock.Stock_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.Stock.Part__Part_Id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Grn ON dbo.Stock.Grn__Grn_id = dbo.Grn.Grn_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Item_Stock_Total_Batch_Qty]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Delivery_Item_Stock_Total_Batch_Qty]
AS
SELECT     Stock__Stock_id, SUM(Total_Qty) AS Total
FROM         dbo.Delivery_item_Stock
GROUP BY Stock__Stock_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Related_Docs_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Related_Docs_List]
AS
SELECT     WO_Related_Doc_ID, Against__WORK_ORDERS_ID, Description, Document_Path
FROM         dbo.WO_Related_Doc
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Cust_Ret_Related_Doc_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Cust_Ret_Related_Doc_List]
AS
SELECT     Cust_Ret_Related_Doc_ID, Against__Customer_Return_ID, Description, Document_Path
FROM         dbo.Cust_Ret_Related_Doc
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Production_Plan_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Production_Plan_List]
AS
SELECT     dbo.Production_Plan.Production_Plan_ID, dbo.Production_Plan_Status.Status, dbo.Production_Plan.Fully_Planned, dbo.Production_Plan.Complete, 
                      dbo.Production_Plan.Actual_Run, dbo.Production_Plan.Actual_Setup, dbo.Production_Plan.Actual_Total, dbo.Production_Plan.From_Date, 
                      dbo.Production_Plan.To_Date, dbo.Production_Plan.OS_Run, dbo.Production_Plan.OS_Setup, dbo.Production_Plan.OS_Total, 
                      dbo.UDData.UDData_Data AS UserDefinable1, UDData_1.UDData_Data AS UserDefinable2, dbo.Employee.Name, dbo.Production_Plan.Number_Ops_Comp, 
                      dbo.Production_Plan.Percentage_Ops_Comp, dbo.Production_Plan.Notes_Non_RTF AS Notes
FROM         dbo.Production_Plan_Status RIGHT OUTER JOIN
                      dbo.Production_Plan LEFT OUTER JOIN
                      dbo.UDData UDData_1 ON dbo.Production_Plan.UDF2__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.UDData ON dbo.Production_Plan.UDF1__UDData_ID = dbo.UDData.UDData_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.Production_Plan.Plan__Employee_ID = dbo.Employee.Employee_Id ON 
                      dbo.Production_Plan_Status.Production_Plan_Status_ID = dbo.Production_Plan.Status__Production_Plan_Status_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[UDData_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[UDData_Drop_List]
AS
SELECT     dbo.UDData.*
FROM         dbo.UDData
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[UDData_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[UDData_List]
AS
SELECT     UDData_ID, Modified, UDData_Data AS Data, Field__UDField_ID
FROM         dbo.UDData
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Production_Plan_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Production_Plan_Drop_List]
AS
SELECT     dbo.Production_Plan.*, dbo.Employee.Name AS Employee, UDData_1.UDData_Data AS UserDefinable1, dbo.UDData.UDData_Data AS UserDefinable2
FROM         dbo.Production_Plan_Status RIGHT OUTER JOIN
                      dbo.Production_Plan LEFT OUTER JOIN
                      dbo.UDData UDData_1 ON dbo.Production_Plan.UDF2__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.UDData ON dbo.Production_Plan.UDF1__UDData_ID = dbo.UDData.UDData_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.Production_Plan.Plan__Employee_ID = dbo.Employee.Employee_Id ON 
                      dbo.Production_Plan_Status.Production_Plan_Status_ID = dbo.Production_Plan.Status__Production_Plan_Status_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Button_Specific_Groups]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[User_Button_Specific_Groups]
AS
SELECT     dbo.User_Buttons.[User id], dbo.User_Buttons.Group_id, dbo.ButtonGroups.Group_Text
FROM         dbo.Buttons RIGHT OUTER JOIN
                      dbo.User_Buttons ON dbo.Buttons.[Button id] = dbo.User_Buttons.[Button Id] LEFT OUTER JOIN
                      dbo.ButtonGroups ON dbo.User_Buttons.Group_id = dbo.ButtonGroups.Group_id
WHERE     (dbo.User_Buttons.Visible <> 0) AND (dbo.Buttons.HideMe = 0)
GROUP BY dbo.User_Buttons.[User id], dbo.User_Buttons.Group_id, dbo.ButtonGroups.Group_Text
HAVING      (NOT (dbo.User_Buttons.Group_id IS NULL) AND dbo.User_Buttons.Group_id <> 0)
' 
GO
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Menu_Info]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[User_Menu_Info] as SELECT [User_Buttons].[User id], Buttons.[Button id], Buttons.Icon, Buttons.[group], Buttons.Text, [User_Buttons].Visible, Buttons.ShortCut, Buttons.[order], Buttons.AddNew, Buttons.HideMe, ButtonGroups.Group_Text
FROM (Buttons RIGHT JOIN User_Buttons ON Buttons.[Button id] = [User_Buttons].[Button Id]) LEFT JOIN ButtonGroups ON Buttons.[group]= ButtonGroups.Group_id
WHERE ((([User_Buttons].Visible)=1) AND ((Buttons.HideMe)=0))
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User Buttons Visible]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[User Buttons Visible]
AS
SELECT     dbo.User_Buttons.[User id], dbo.User_Buttons.[Button Id], dbo.User_Buttons.Visible, dbo.User_Buttons.AUTONUMBERSQL, 
                      dbo.User_Buttons.Group_id, dbo.ButtonGroups.Group_Text
FROM         dbo.User_Buttons LEFT OUTER JOIN
                      dbo.ButtonGroups ON dbo.User_Buttons.Group_id = dbo.ButtonGroups.Group_id
WHERE     (dbo.User_Buttons.Visible <> 0)
' 
GO
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Buttons_Select_Distinct]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[User_Buttons_Select_Distinct] as SELECT [User_Buttons].[Button Id], [User_Buttons].[User id] AS User_id, Buttons.Text, [User_Buttons].Visible, Buttons.ShortCut, Buttons.[group]
FROM ButtonGroups RIGHT JOIN (User_Buttons RIGHT JOIN Buttons ON [User_Buttons].[Button Id] = Buttons.[Button id]) ON ButtonGroups.Group_id = Buttons.[group]
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Buttons_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[User_Buttons_List]
AS
SELECT     dbo.User_Buttons.AUTONUMBERSQL, dbo.User_Buttons.Visible, dbo.Buttons.Text AS Button, dbo.User_Buttons.[User id], 
                      dbo.User_Buttons.Group_id
FROM         dbo.User_Buttons LEFT OUTER JOIN
                      dbo.Buttons ON dbo.User_Buttons.[Button Id] = dbo.Buttons.[Button id]
' 
GO
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Buttons_Visible_Text]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[User_Buttons_Visible_Text] as SELECT User_Buttons.[Button Id], User_Buttons.[User id] AS User_id, Buttons.Text, User_Buttons.Visible
FROM User_Buttons LEFT JOIN Buttons ON User_Buttons.[Button Id] = Buttons.[Button id]
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[UDField_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[UDField_List]
AS
SELECT     dbo.UDField.*
FROM         dbo.UDField
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Department_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Department_List]
AS
SELECT     Department_id, Department, modified, modified_by
FROM         dbo.Department
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Employee_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Employee_Drop_List]
AS
SELECT     dbo.Employee.Employee_Id, dbo.Employee.Employee_No AS [Employee No], dbo.Employee.Name, dbo.COMPANY_POSITIONS.[Position], 
                      dbo.Department.Department, dbo.Employee.Employee_Left AS [Employee Left]
FROM         dbo.Employee LEFT OUTER JOIN
                      dbo.Department ON dbo.Employee.Department__Department_id = dbo.Department.Department_id LEFT OUTER JOIN
                      dbo.COMPANY_POSITIONS ON dbo.Employee.[Position] = dbo.COMPANY_POSITIONS.Position_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Employee_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Employee_list]
AS
SELECT     dbo.Employee.Employee_Id, dbo.Employee.Employee_No AS [Employee No], dbo.Employee.Name, dbo.COMPANY_POSITIONS.[Position], 
                      dbo.Department.Department, dbo.Employee.Date_Left AS [Date Left], dbo.Employee.Employee_Left AS [Employee Left]
FROM         dbo.Employee LEFT OUTER JOIN
                      dbo.Department ON dbo.Employee.Department__Department_id = dbo.Department.Department_id LEFT OUTER JOIN
                      dbo.COMPANY_POSITIONS ON dbo.Employee.[Position] = dbo.COMPANY_POSITIONS.Position_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Department_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Department_Drop_List]
AS
SELECT     dbo.Department.*
FROM         dbo.Department
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Time_In_Attendance_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Time_In_Attendance_List]
AS
SELECT     dbo.Time_in_Attendance.Time_in_Attendance_ID, dbo.Time_in_Attendance.Employee__Employee_ID, dbo.Time_in_Attendance.Start_Date AS [Start Date], 
                      dbo.Time_in_Attendance.End_Date AS [End Date], dbo.Time_in_Attendance.Problem, dbo.Time_in_Attendance.Problem_Description AS [Problem Description], 
                      dbo.Employee.Employee_No AS [Employee No], dbo.Employee.Name AS [Employee Name], dbo.Time_in_Attendance.Start_Time AS [Start Time], 
                      dbo.Time_in_Attendance.End_Time AS [End Time], dbo.Time_in_Attendance.Effective_Hours AS [Effective Hours], 
                      dbo.Time_in_Attendance.Total_Hours AS [Total Hours], dbo.Time_in_Attendance.Eff_Hours_Rate1 AS [Eff Hrs Rate1], 
                      dbo.Time_in_Attendance.Eff_Hours_Rate2 AS [Eff Hrs Rate2], dbo.Time_in_Attendance.Eff_Hours_Rate3 AS [Eff Hrs Rate3], 
                      dbo.Time_in_Attendance.Eff_Hours_Rate4 AS [Eff Hrs Rate4], dbo.Time_in_Attendance.Eff_Hours_Rate5 AS [Eff Hrs Rate5], 
                      dbo.Time_in_Attendance.Eff_Hours_Rate6 AS [Eff Hrs Rate6], dbo.Time_in_Attendance.Manually_Edited AS [Manually Edited], 
                      dbo.Time_in_Attendance.External_Calc AS [External Calc], dbo.Department.Department, dbo.Employee.Forename, dbo.Employee.Surname, 
                      dbo.SFDC_Transactions.Absence_Type, dbo.SFDC_Transactions.Paid, dbo.SFDC_Transactions.Notes
FROM         dbo.SFDC_Transactions RIGHT OUTER JOIN
                      dbo.Time_in_Attendance ON dbo.SFDC_Transactions.TA__Time_in_Attendance_ID = dbo.Time_in_Attendance.Time_in_Attendance_ID LEFT OUTER JOIN
                      dbo.Department RIGHT OUTER JOIN
                      dbo.Employee ON dbo.Department.Department_id = dbo.Employee.Department__Department_id ON 
                      dbo.Time_in_Attendance.Employee__Employee_ID = dbo.Employee.Employee_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Impact_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Impact_Drop_List]
AS
SELECT     Impact_ID, Unit, Modified, Modified_By
FROM         dbo.Impact
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Impact_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Impact_List]
AS
SELECT     Impact_ID, Unit, Modified, Modified_By
FROM         dbo.Impact
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Help_Buttons_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Help_Buttons_List]
AS
SELECT     Help_Button_Id, Document, Location
FROM         dbo.Help_Buttons
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Help_Button_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Help_Button_List]
AS
SELECT     Help_Button_Id, Document, Location
FROM         dbo.Help_Buttons
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Kilos]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Kilos]
AS
SELECT     dbo.Stock.Stock_ID, dbo.Stock.Total_Qty * dbo.Part.Wieght AS Kilos
FROM         dbo.Stock LEFT OUTER JOIN
                      dbo.Part ON dbo.Stock.Part__Part_Id = dbo.Part.Part_Id
WHERE     (dbo.Part.Wieght <> 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Per_Tonne]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Per_Tonne]
AS
SELECT     dbo.Stock.Stock_ID, dbo.Stock.Cost / NULLIF (dbo.Part.Wieght / 1000, 0) AS [Cost Per Tonne], dbo.Stock.Total_Qty / NULLIF (dbo.Stock.Avg_Length, 0) 
                      AS [Bars Remaining]
FROM         dbo.Stock LEFT OUTER JOIN
                      dbo.Part ON dbo.Stock.Part__Part_Id = dbo.Part.Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Location_Ids_Grouped]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Location_Ids_Grouped]
AS
SELECT     Location__location_id, Part__Part_Id, SUM(Qty) AS Qty, SUM(Total_Qty) AS QLB
FROM         dbo.Stock
WHERE     (Total_Qty > 0) AND (Complete = 1)
GROUP BY Location__location_id, Part__Part_Id
HAVING      (Location__location_id > 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Consignment_Qty_By_Part]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Consignment_Qty_By_Part]
AS
SELECT     Part__Part_Id, SUM(Consignment_Qty) AS [Consignment Qty]
FROM         dbo.Stock
GROUP BY Part__Part_Id
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Consignment_Qty_By_Part', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[20] 2[9] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Stock"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 288
               Right = 459
            End
            DisplayFlags = 280
            TopColumn = 148
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1845
         Alias = 1725
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Consignment_Qty_By_Part'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Consignment_Qty_By_Part', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Consignment_Qty_By_Part'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Consignment]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Consignment]
AS
SELECT     dbo.Stock.Part__Part_Id, dbo.LOCATION.Consignment, dbo.Stock.Consignment_Qty AS Qty
FROM         dbo.Stock INNER JOIN
                      dbo.LOCATION ON dbo.Stock.Location__location_id = dbo.LOCATION.Location_id
WHERE     (dbo.LOCATION.Consignment = 1)
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Stock_Consignment', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Stock"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 321
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "LOCATION"
            Begin Extent = 
               Top = 6
               Left = 359
               Bottom = 125
               Right = 568
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Stock_Consignment'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Stock_Consignment', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Stock_Consignment'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Quarantine]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Quarantine]
AS
SELECT     dbo.Stock.Part__Part_Id, dbo.LOCATION.Quarantine, dbo.Stock.Quarantine_Qty AS Qty
FROM         dbo.Stock INNER JOIN
                      dbo.LOCATION ON dbo.Stock.Location__location_id = dbo.LOCATION.Location_id
WHERE     (dbo.LOCATION.Quarantine = 1)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_In_Feet]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_In_Feet]
AS
SELECT     Stock_ID, Total_Qty * 3.28 AS Feet
FROM         dbo.Stock
WHERE     (Length > 0) AND (Bredth = 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Total_Cost]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Total_Cost]
AS
SELECT     SUM(Total_Qty * Cost) AS [Total Cost], SUM(Total_Qty) AS [Total Qty], Part__Part_Id, Date_In
FROM         dbo.Stock
GROUP BY Part__Part_Id, Date_In
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Average_Stock_Cost_Over_180]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Average_Stock_Cost_Over_180]
AS
SELECT     TOP 100 PERCENT AVG(Cost) AS [Avg Stock Cost], Part__Part_Id
FROM         dbo.Stock
WHERE     (Date_In >= GETDATE() - 180)
GROUP BY Part__Part_Id
HAVING      (AVG(Cost) > 0)
ORDER BY Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[MSG_Non_Conformance_MK]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[MSG_Non_Conformance_MK]
AS
SELECT     dbo.Non_Conformance.Non_Conformance_No, dbo.Non_Conformance_Type.NC_Type, dbo.Non_Conformance.NC_Type_Description_Non_RTF, 
                      dbo.Non_Conformance_Cause.Description_RTF, dbo.Non_Conformance.NC_Cause_Description_Non_RTF, dbo.Non_Conformance.Date_Identified, 
                      dbo.Part.Part_No
FROM         dbo.Non_Conformance LEFT OUTER JOIN
                      dbo.Part ON dbo.Non_Conformance.Part__Part_ID = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Non_Conformance_Type ON 
                      dbo.Non_Conformance.NC__Non_Conformance_Type_ID = dbo.Non_Conformance_Type.Non_Conformance_Type_ID LEFT OUTER JOIN
                      dbo.Non_Conformance_Cause ON dbo.Non_Conformance.Non_Conformance_Cause_ID = dbo.Non_Conformance_Cause.Non_Conformance_Cause_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Analysis_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_Analysis_List]
AS
SELECT     dbo.Part_Analysis.Part_Analysis_ID, dbo.Part_Analysis.Date_Performed AS [Date Performed], dbo.Part.Part_No AS [Part No], 
                      dbo.Part.Description AS Description, dbo.Part_Analysis.Qty AS Qty, dbo.Part_Analysis.In_Use AS [In Use], 
                      dbo.Employee.Name AS [Performed By]
FROM         dbo.Part_Analysis LEFT OUTER JOIN
                      dbo.Employee ON dbo.Part_Analysis.Performed_by = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.Part ON dbo.Part_Analysis.Part__Part_ID = dbo.Part.Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PI_Item_History_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PI_Item_History_List]
AS
SELECT     dbo.PI_Item_History.PI_Item_History_ID, dbo.PI_Item_History.Modified, dbo.PI_Item_History.Price_Change, dbo.PI_Item_History.Qty_Change, 
                      dbo.PI_Item_History.Total_Change, dbo.PI_Item_History.Vat_Rate, dbo.PI_Item_History.Vat_Amount, dbo.PI_Item_History.History_Date, dbo.PI_Item_History.PI_Item, 
                      dbo.Employee.Name AS Modified_By, dbo.Part.Part_No
FROM         dbo.PI_Item_History LEFT OUTER JOIN
                      dbo.Part ON dbo.PI_Item_History.PartID = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Employee ON dbo.PI_Item_History.Modified_By = dbo.Employee.Employee_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contract_Notes_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Contract_Notes_List]
AS
SELECT     dbo.Contract_Notes.Contract_Notes_ID, dbo.Contract_Notes.Note_Non_Rtf AS Note, dbo.Employee.Name AS [Modified By], 
                      dbo.Contract_Notes.Modified, dbo.Contract_Notes.Parent__Sales_Order_Lines_ID
FROM         dbo.Contract_Notes LEFT OUTER JOIN
                      dbo.Employee ON dbo.Contract_Notes.Modified_By = dbo.Employee.Employee_Id
' 
GO
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Employee_Pics]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Employee_Pics]
AS
SELECT     dbo.Employee.Name, dbo.Employee_Picture.Employee_Picture, dbo.Employee.Employee_Id
FROM         dbo.Employee LEFT OUTER JOIN
                      dbo.Employee_Picture ON dbo.Employee.Employee_Id = dbo.Employee_Picture.Employee__Employee_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contract_Status_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Contract_Status_List]
AS
SELECT     dbo.Contract_Status.Contract_status_id, dbo.Contract_Status.Contract_Status AS Status, dbo.Contract_Status.Modified, 
                      dbo.Employee.Name AS [Modified By]
FROM         dbo.Contract_Status LEFT OUTER JOIN
                      dbo.Employee ON dbo.Contract_Status.Modified_by = dbo.Employee.Employee_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Adjustments_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Adjustments_List]
AS
SELECT     dbo.Stock_Adjustments.Stock_Adjustments_ID, dbo.Stock_Adjustments.Parent__Stock_ID, dbo.Stock_Adjustments.Modified AS [Date], 
                      dbo.Employee.Name AS [Adjusted By], dbo.Stock_Adjustments.Previous_Qty AS [Previous Qty], dbo.Stock_Adjustments.Previous_Length AS [Previous Length], 
                      dbo.Stock_Adjustments.Previous_Breadth AS [Previous Breadth], dbo.Stock_Adjustments.Reason, dbo.Stock_Adjustments.New_Qty AS [New Qty], 
                      dbo.Stock_Adjustments.New_Length AS [New Length], dbo.Stock_Adjustments.New_Breadth AS [New Breadth]
FROM         dbo.Stock_Adjustments LEFT OUTER JOIN
                      dbo.Employee ON dbo.Stock_Adjustments.Modified_By = dbo.Employee.Employee_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contract_Status_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Contract_Status_Drop_List]
AS
SELECT     dbo.Contract_Status.Contract_status_id, dbo.Contract_Status.Contract_Status AS Status, dbo.Contract_Status.Modified, 
                      dbo.Employee.Name AS [Modified By]
FROM         dbo.Contract_Status LEFT OUTER JOIN
                      dbo.Employee ON dbo.Contract_Status.Modified_by = dbo.Employee.Employee_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sy_Passwords_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Sy_Passwords_List]
AS
SELECT     dbo.SY_Passwords.User_ID, dbo.SY_Passwords.UserName, dbo.Sy_Groups.Name AS [Group], dbo.Employee.Name AS Employee, dbo.SY_Passwords.Locked, 
                      dbo.SY_Passwords.[Group] AS Group_id, dbo.SY_Passwords.Quote_Limit AS [Quote Limit], dbo.SY_Passwords.Licence_String AS [Licence String], 
                      dbo.SY_Passwords.Logged_In AS [Logged In], dbo.SY_Passwords.Purchase_Limit AS [Purchase Limit], dbo.SY_Passwords.Deleted
FROM         dbo.SY_Passwords LEFT OUTER JOIN
                      dbo.Employee ON dbo.SY_Passwords.EmployeeId = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.Sy_Groups ON dbo.SY_Passwords.[Group] = dbo.Sy_Groups.ID
WHERE     (dbo.SY_Passwords.Deleted IS NULL) OR
                      (dbo.SY_Passwords.Deleted = 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Heat_Treatments_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Heat_Treatments_List]
AS
SELECT     Heat_Treatments_ID, [Value], Modified, Modified_By
FROM         dbo.Heat_Treatments
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Heat_Treatments_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Heat_Treatments_Drop_List]
AS
SELECT     Heat_Treatments_ID, [Value], Modified, Modified_By
FROM         dbo.Heat_Treatments
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[INDUSTRY_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[INDUSTRY_List]
AS
SELECT     Industry_Id, Industry, Modified, Modified_by
FROM         dbo.INDUSTRY
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[INDUSTRY_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[INDUSTRY_Drop_List]
AS
SELECT     Industry_Id, Industry, Modified, Modified_by
FROM         dbo.INDUSTRY
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Process_Capacity]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Process_Capacity]
AS
SELECT     TOP (100) PERCENT dbo.Process.Process_Name, dbo.Process.Process_Id, dbo.Calendar_Records.Total_Hours * (dbo.Calendar_Records.Efficiency / 100) 
                      AS Capacity, dbo.Calendar_Records.Day_Of_Week
FROM         dbo.Process LEFT OUTER JOIN
                      dbo.Calendar_Records ON dbo.Process.Calendar__Calendar_id = dbo.Calendar_Records.Calendar__Calendar_ID
WHERE     (dbo.Process.Deleted = 0) OR
                      (dbo.Process.Deleted IS NULL)
ORDER BY dbo.Process.Process_Name
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Tensile_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Tensile_Drop_List]
AS
SELECT     Tensile_ID, Unit, Modified, Modified_By
FROM         dbo.Tensile
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Tensile_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Tensile_List]
AS
SELECT     Tensile_ID, Unit, Modified, Modified_By
FROM         dbo.Tensile
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_10_Details]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Orders_Op_10_Details]
AS
SELECT     dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name AS [OP 10 Process], dbo.Wo_Route_SChedule.Complete AS [OP 10 Complete]
FROM         dbo.Process RIGHT OUTER JOIN
                      dbo.Route ON dbo.Process.Process_Id = dbo.Route.Process__Process_id RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule ON dbo.Route.Route_id = dbo.Wo_Route_SChedule.Route_Id
WHERE     (dbo.Route.Op_No = ''10'') AND (dbo.Route.Released = 1) AND (dbo.Wo_Route_SChedule.Do_Not_Use = 0)
GROUP BY dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name, dbo.Wo_Route_SChedule.Complete
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_150_Details]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Orders_Op_150_Details]
AS
SELECT     dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name AS [OP 150 Process], dbo.Wo_Route_SChedule.Complete AS [OP 150 Complete]
FROM         dbo.Process RIGHT OUTER JOIN
                      dbo.Route ON dbo.Process.Process_Id = dbo.Route.Process__Process_id RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule ON dbo.Route.Route_id = dbo.Wo_Route_SChedule.Route_Id
WHERE     (dbo.Route.Op_No = ''150'') AND (dbo.Route.Released = 1) AND (dbo.Wo_Route_SChedule.Do_Not_Use = 0)
GROUP BY dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name, dbo.Wo_Route_SChedule.Complete
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_30_Details]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Orders_Op_30_Details]
AS
SELECT     dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name AS [OP 30 Process], dbo.Wo_Route_SChedule.Complete AS [OP 30 Complete]
FROM         dbo.Process RIGHT OUTER JOIN
                      dbo.Route ON dbo.Process.Process_Id = dbo.Route.Process__Process_id RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule ON dbo.Route.Route_id = dbo.Wo_Route_SChedule.Route_Id
WHERE     (dbo.Route.Op_No = ''30'') AND (dbo.Route.Released = 1) AND (dbo.Wo_Route_SChedule.Do_Not_Use = 0)
GROUP BY dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name, dbo.Wo_Route_SChedule.Complete
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_130_Details]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Orders_Op_130_Details]
AS
SELECT     dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name AS [OP 130 Process], dbo.Wo_Route_SChedule.Complete AS [OP 130 Complete]
FROM         dbo.Process RIGHT OUTER JOIN
                      dbo.Route ON dbo.Process.Process_Id = dbo.Route.Process__Process_id RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule ON dbo.Route.Route_id = dbo.Wo_Route_SChedule.Route_Id
WHERE     (dbo.Route.Op_No = ''130'') AND (dbo.Route.Released = 1) AND (dbo.Wo_Route_SChedule.Do_Not_Use = 0)
GROUP BY dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name, dbo.Wo_Route_SChedule.Complete
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_160_Details]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Orders_Op_160_Details]
AS
SELECT     dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name AS [OP 160 Process], dbo.Wo_Route_SChedule.Complete AS [OP 160 Complete]
FROM         dbo.Process RIGHT OUTER JOIN
                      dbo.Route ON dbo.Process.Process_Id = dbo.Route.Process__Process_id RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule ON dbo.Route.Route_id = dbo.Wo_Route_SChedule.Route_Id
WHERE     (dbo.Route.Op_No = ''160'') AND (dbo.Route.Released = 1) AND (dbo.Wo_Route_SChedule.Do_Not_Use = 0)
GROUP BY dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name, dbo.Wo_Route_SChedule.Complete
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_80_Details]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Orders_Op_80_Details]
AS
SELECT     dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name AS [OP 80 Process], dbo.Wo_Route_SChedule.Complete AS [OP 80 Complete]
FROM         dbo.Process RIGHT OUTER JOIN
                      dbo.Route ON dbo.Process.Process_Id = dbo.Route.Process__Process_id RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule ON dbo.Route.Route_id = dbo.Wo_Route_SChedule.Route_Id
WHERE     (dbo.Route.Op_No = ''80'') AND (dbo.Route.Released = 1) AND (dbo.Wo_Route_SChedule.Do_Not_Use = 0)
GROUP BY dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name, dbo.Wo_Route_SChedule.Complete
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_50_Details]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Orders_Op_50_Details]
AS
SELECT     dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name AS [OP 50 Process], dbo.Wo_Route_SChedule.Complete AS [OP 50 Complete]
FROM         dbo.Process RIGHT OUTER JOIN
                      dbo.Route ON dbo.Process.Process_Id = dbo.Route.Process__Process_id RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule ON dbo.Route.Route_id = dbo.Wo_Route_SChedule.Route_Id
WHERE     (dbo.Route.Op_No = ''50'') AND (dbo.Route.Released = 1) AND (dbo.Wo_Route_SChedule.Do_Not_Use = 0)
GROUP BY dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name, dbo.Wo_Route_SChedule.Complete
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Ops_Complete]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Ops_Complete]
AS
SELECT     WO_ID, Date_Complete
FROM         dbo.Wo_Route_SChedule
WHERE     (NOT (Date_Complete IS NULL))
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Order_LSD]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Order_LSD]
AS
SELECT     WO_ID, MIN(Last_Start_Date) AS Last_Start_Date
FROM         dbo.Wo_Route_SChedule
WHERE     (Seq_No = 1) AND (NOT (Last_Start_Date IS NULL))
GROUP BY WO_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Complete_Date]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Complete_Date]
AS
SELECT     TOP 100 PERCENT Wo_Route_SChedule_1.WO_ID, MAX(Wo_Route_SChedule_1.Scheduled_Complete_date) AS Complete_date
FROM         dbo.Wo_Route_SChedule RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule Wo_Route_SChedule_1 ON dbo.Wo_Route_SChedule.WO_ID = Wo_Route_SChedule_1.WO_ID AND 
                      dbo.Wo_Route_SChedule.Predessesor_Route_id = Wo_Route_SChedule_1.Route_Id
WHERE     (Wo_Route_SChedule_1.Complete = 0) AND (Wo_Route_SChedule_1.Do_Not_Use = 0) AND (Wo_Route_SChedule_1.Cancelled = 0)
GROUP BY Wo_Route_SChedule_1.WO_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Prod_Planned]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Prod_Planned]
AS
SELECT     SUM(dbo.Route.Setup_Time / 3600) AS Setup_Time, SUM(dbo.Route.Run_Time / 3600) AS Run_Time, 
                      SUM(dbo.Route.Run_Time / 3600 * dbo.Route.Charge) AS Run_Charge, SUM(dbo.Route.Setup_Time / 3600 * dbo.Route.Charge) AS Setup_Charge, 
                      SUM(dbo.Route.Run_Time / 3600 * dbo.Route.Cost) AS Run_Mach_Cost, SUM(dbo.Route.Setup_Time / 3600 * dbo.Route.Cost) AS Setup_MAch_Cost, 
                      SUM((dbo.Route.Run_Time / 3600) * (dbo.Route.Labour_cost * dbo.Route.No_Men)) AS Run_Lab_Cost, 
                      SUM(dbo.Route.Setup_Time / 3600 * dbo.Route.Labour_cost) AS Setup_Lab_Cost, dbo.Wo_Route_SChedule.WO_ID
FROM         dbo.Route RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule ON dbo.Route.Route_id = dbo.Wo_Route_SChedule.Route_Id
WHERE     (dbo.Wo_Route_SChedule.Do_Not_Use = 0)
GROUP BY dbo.Wo_Route_SChedule.WO_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PrevOPTemp]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PrevOPTemp]
AS
SELECT     dbo.Wo_Route_SChedule.Route_Id, dbo.Wo_Route_SChedule.WO_ID, dbo.Route.Op_No
FROM         dbo.Wo_Route_SChedule LEFT OUTER JOIN
                      dbo.Route ON dbo.Wo_Route_SChedule.Route_Id = dbo.Route.Route_id
WHERE     (dbo.Wo_Route_SChedule.Complete = 0) AND (dbo.Wo_Route_SChedule.Do_Not_Use = 0) AND (dbo.Wo_Route_SChedule.Cancelled = 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_100_Details]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Orders_Op_100_Details]
AS
SELECT     dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name AS [OP 100 Process], dbo.Wo_Route_SChedule.Complete AS [OP 100 Complete]
FROM         dbo.Process RIGHT OUTER JOIN
                      dbo.Route ON dbo.Process.Process_Id = dbo.Route.Process__Process_id RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule ON dbo.Route.Route_id = dbo.Wo_Route_SChedule.Route_Id
WHERE     (dbo.Route.Op_No = ''100'') AND (dbo.Route.Released = 1) AND (dbo.Wo_Route_SChedule.Do_Not_Use = 0)
GROUP BY dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name, dbo.Wo_Route_SChedule.Complete
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Scheduling_Last_Ops]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Scheduling_Last_Ops]
AS
SELECT     TOP 100 PERCENT dbo.Wo_Route_SChedule.Predessesor_Route_id, Wo_Route_SChedule_1.Seq_No, 
                      Wo_Route_SChedule_1.Wo_Route_SChedule_ID, Wo_Route_SChedule_1.WO_ID, Wo_Route_SChedule_1.Do_Not_Use, 
                      Wo_Route_SChedule_1.Complete, Wo_Route_SChedule_1.Cancelled
FROM         dbo.Wo_Route_SChedule RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule Wo_Route_SChedule_1 ON dbo.Wo_Route_SChedule.WO_ID = Wo_Route_SChedule_1.WO_ID AND 
                      dbo.Wo_Route_SChedule.Predessesor_Route_id = Wo_Route_SChedule_1.Route_Id
WHERE     (dbo.Wo_Route_SChedule.Predessesor_Route_id IS NULL) AND (Wo_Route_SChedule_1.Complete = 0) AND (Wo_Route_SChedule_1.Do_Not_Use = 0) 
                      AND (Wo_Route_SChedule_1.Cancelled = 0)
ORDER BY Wo_Route_SChedule_1.Seq_No DESC
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_140_Details]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Orders_Op_140_Details]
AS
SELECT     dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name AS [OP 140 Process], dbo.Wo_Route_SChedule.Complete AS [OP 140 Complete]
FROM         dbo.Process RIGHT OUTER JOIN
                      dbo.Route ON dbo.Process.Process_Id = dbo.Route.Process__Process_id RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule ON dbo.Route.Route_id = dbo.Wo_Route_SChedule.Route_Id
WHERE     (dbo.Route.Op_No = ''140'') AND (dbo.Route.Released = 1) AND (dbo.Wo_Route_SChedule.Do_Not_Use = 0)
GROUP BY dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name, dbo.Wo_Route_SChedule.Complete
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Live_Operations]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Live_Operations]
AS
SELECT     Wo_Route_SChedule_ID, Route_Id, WorkCentre_ID, WO_ID
FROM         dbo.Wo_Route_SChedule
WHERE     (Complete = 0) AND (Cancelled = 0) AND (Active = 1)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Scheduling_Live_Ops]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Scheduling_Live_Ops]
AS
SELECT     dbo.Wo_Route_SChedule.*
FROM         dbo.Wo_Route_SChedule
WHERE     (Do_Not_Use = 0) AND (Complete = 0) AND (Cancelled = 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Order_Op10_Complete]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Order_Op10_Complete]
AS
SELECT     dbo.Wo_Route_SChedule.WO_ID, dbo.Wo_Route_SChedule.Started, dbo.Route.Op_No, dbo.Wo_Route_SChedule.Wo_Route_SChedule_ID, 
                      dbo.Wo_Route_SChedule.Route_Id
FROM         dbo.Wo_Route_SChedule FULL OUTER JOIN
                      dbo.Route ON dbo.Wo_Route_SChedule.Route_Id = dbo.Route.Route_id
WHERE     (dbo.Route.Op_No = ''10'') AND (dbo.Wo_Route_SChedule.Complete = 1) AND (dbo.Wo_Route_SChedule.Do_Not_Use = 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_40_Details]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Orders_Op_40_Details]
AS
SELECT     dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name AS [OP 40 Process], dbo.Wo_Route_SChedule.Complete AS [OP 40 Complete]
FROM         dbo.Process RIGHT OUTER JOIN
                      dbo.Route ON dbo.Process.Process_Id = dbo.Route.Process__Process_id RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule ON dbo.Route.Route_id = dbo.Wo_Route_SChedule.Route_Id
WHERE     (dbo.Route.Op_No = ''40'') AND (dbo.Route.Released = 1) AND (dbo.Wo_Route_SChedule.Do_Not_Use = 0)
GROUP BY dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name, dbo.Wo_Route_SChedule.Complete
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_20_Details]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Orders_Op_20_Details]
AS
SELECT     dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name AS [OP 20 Process], dbo.Wo_Route_SChedule.Complete AS [OP 20 Complete]
FROM         dbo.Process RIGHT OUTER JOIN
                      dbo.Route ON dbo.Process.Process_Id = dbo.Route.Process__Process_id RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule ON dbo.Route.Route_id = dbo.Wo_Route_SChedule.Route_Id
WHERE     (dbo.Route.Op_No = ''20'') AND (dbo.Route.Released = 1) AND (dbo.Wo_Route_SChedule.Do_Not_Use = 0)
GROUP BY dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name, dbo.Wo_Route_SChedule.Complete
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_90_Details]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Orders_Op_90_Details]
AS
SELECT     dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name AS [OP 90 Process], dbo.Wo_Route_SChedule.Complete AS [OP 90 Complete]
FROM         dbo.Process RIGHT OUTER JOIN
                      dbo.Route ON dbo.Process.Process_Id = dbo.Route.Process__Process_id RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule ON dbo.Route.Route_id = dbo.Wo_Route_SChedule.Route_Id
WHERE     (dbo.Route.Op_No = ''90'') AND (dbo.Route.Released = 1) AND (dbo.Wo_Route_SChedule.Do_Not_Use = 0)
GROUP BY dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name, dbo.Wo_Route_SChedule.Complete
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_70_Details]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Orders_Op_70_Details]
AS
SELECT     dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name AS [OP 70 Process], dbo.Wo_Route_SChedule.Complete AS [OP 70 Complete]
FROM         dbo.Process RIGHT OUTER JOIN
                      dbo.Route ON dbo.Process.Process_Id = dbo.Route.Process__Process_id RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule ON dbo.Route.Route_id = dbo.Wo_Route_SChedule.Route_Id
WHERE     (dbo.Route.Op_No = ''70'') AND (dbo.Route.Released = 1) AND (dbo.Wo_Route_SChedule.Do_Not_Use = 0)
GROUP BY dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name, dbo.Wo_Route_SChedule.Complete
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_110_Details]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Orders_Op_110_Details]
AS
SELECT     dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name AS [OP 110 Process], dbo.Wo_Route_SChedule.Complete AS [OP 110 Complete]
FROM         dbo.Process RIGHT OUTER JOIN
                      dbo.Route ON dbo.Process.Process_Id = dbo.Route.Process__Process_id RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule ON dbo.Route.Route_id = dbo.Wo_Route_SChedule.Route_Id
WHERE     (dbo.Route.Op_No = ''110'') AND (dbo.Route.Released = 1) AND (dbo.Wo_Route_SChedule.Do_Not_Use = 0)
GROUP BY dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name, dbo.Wo_Route_SChedule.Complete
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_60_Details]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Orders_Op_60_Details]
AS
SELECT     dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name AS [OP 60 Process], dbo.Wo_Route_SChedule.Complete AS [OP 60 Complete]
FROM         dbo.Process RIGHT OUTER JOIN
                      dbo.Route ON dbo.Process.Process_Id = dbo.Route.Process__Process_id RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule ON dbo.Route.Route_id = dbo.Wo_Route_SChedule.Route_Id
WHERE     (dbo.Route.Op_No = ''60'') AND (dbo.Route.Released = 1) AND (dbo.Wo_Route_SChedule.Do_Not_Use = 0)
GROUP BY dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name, dbo.Wo_Route_SChedule.Complete
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Order_OP20_Complete]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Order_OP20_Complete]
AS
SELECT     dbo.Wo_Route_SChedule.WO_ID, dbo.Wo_Route_SChedule.Started, dbo.Route.Op_No, dbo.Wo_Route_SChedule.Wo_Route_SChedule_ID, 
                      dbo.Wo_Route_SChedule.Route_Id
FROM         dbo.Wo_Route_SChedule FULL OUTER JOIN
                      dbo.Route ON dbo.Wo_Route_SChedule.Route_Id = dbo.Route.Route_id
WHERE     (dbo.Route.Op_No = ''20'') AND (dbo.Wo_Route_SChedule.Complete = 1) AND (dbo.Wo_Route_SChedule.Do_Not_Use = 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Op_120_Details]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Orders_Op_120_Details]
AS
SELECT     dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name AS [OP 120 Process], dbo.Wo_Route_SChedule.Complete AS [OP 120 Complete]
FROM         dbo.Process RIGHT OUTER JOIN
                      dbo.Route ON dbo.Process.Process_Id = dbo.Route.Process__Process_id RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule ON dbo.Route.Route_id = dbo.Wo_Route_SChedule.Route_Id
WHERE     (dbo.Route.Op_No = ''120'') AND (dbo.Route.Released = 1) AND (dbo.Wo_Route_SChedule.Do_Not_Use = 0)
GROUP BY dbo.Wo_Route_SChedule.WO_ID, dbo.Process.Process_Name, dbo.Wo_Route_SChedule.Complete
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contact_Marketing_Category_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Contact_Marketing_Category_List]
AS
SELECT     ConCatId, ConCat, Modified, Modified_By
FROM         dbo.Contact_Marketing_Category
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contact_Marketing_Category_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Contact_Marketing_Category_Drop_List]
AS
SELECT     ConCatId, ConCat, Modified, Modified_By
FROM         dbo.Contact_Marketing_Category
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Hardness_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Hardness_Drop_List]
AS
SELECT     Hardness_ID, Unit, Modified, Modified_By
FROM         dbo.Hardness
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Hardness_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Hardness_List]
AS
SELECT     Hardness_ID, Unit, Modified, Modified_By
FROM         dbo.Hardness
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_TimeScales_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Delivery_TimeScales_List]
AS
SELECT     Delivery_TimeScales_ID, Time_Scale AS [Time Scale]
FROM         dbo.Delivery_TimeScales
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_TimeScales_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Delivery_TimeScales_Drop_List]
AS
SELECT     Delivery_TimeScales_ID, Time_Scale AS [Time Scale]
FROM         dbo.Delivery_TimeScales
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[CONTACT_POSITION_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[CONTACT_POSITION_Drop_List]
AS
SELECT     ConPosId, ConPos, Modified
FROM         dbo.CONTACT_POSITION
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[CONTACT_POSITION_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[CONTACT_POSITION_List]
AS
SELECT     ConPosId, ConPos, Modified
FROM         dbo.CONTACT_POSITION
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[NCnoofRecsLast12MonthsByOrigin]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[NCnoofRecsLast12MonthsByOrigin]
AS
SELECT     COUNT(Non_Conformance_ID) AS NoRecsLast12Months, NC__Non_Conformance_Origin_ID
FROM         dbo.Non_Conformance
WHERE     (Date_Recorded >= DATEADD(yyyy, - 1, GETDATE()))
GROUP BY NC__Non_Conformance_Origin_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[NCNoofRecByTypeLast12Mths]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[NCNoofRecByTypeLast12Mths]
AS
SELECT     COUNT(Non_Conformance_ID) AS NoRecsLast12Months, NC__Non_Conformance_Type_ID
FROM         dbo.Non_Conformance
WHERE     (Date_Recorded >= DATEADD(yyyy, - 1, GETDATE()))
GROUP BY NC__Non_Conformance_Type_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Incidents_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Incidents_Drop_List]
AS
SELECT     Incidents_ID, Incident_Date, Incident_Time, Asset_No
FROM         dbo.Incidents
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Incidents_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Incidents_list]
AS
SELECT     Requested_By, Incident_Date AS [Incident Date], Incident_Time AS [Incident Time], Machine_Id, Position, Asset_No, Priority, Production_Stopped, 
                      Eng_Work_Start_Date, Eng_Work_Start_Time, Eng_Work_End_Date, Eng_Work_End_Time, Maint_Dept_Data, Status_Id, Mach_Comp_Fault, 
                      Mach_Fault_Characterisation, Root_Cause
FROM         dbo.Incidents
' 
GO
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Buttons_Select]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[User_Buttons_Select] as SELECT Buttons.Text, Buttons.ShortCut, Buttons.[group], Buttons.[Button id]
FROM ButtonGroups RIGHT JOIN Buttons ON ButtonGroups.Group_id = Buttons.[group]
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Workflow_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Workflow_List]
AS
SELECT     TOP (100) PERCENT dbo.Workflow.Workflow_ID, dbo.Workflow.Contract_ID, dbo.Workflow.Workflow_Question, 
                      dbo.Workflow_Questions.Question_Num AS [Question Number], dbo.Workflow_Questions.Question, dbo.Workflow.Response, dbo.Workflow_Questions.Quality, 
                      dbo.Workflow_Questions.Commercial, dbo.Workflow_Questions.Production, dbo.Workflow_Questions.Finance, dbo.Workflow_Questions.Planning, 
                      dbo.Workflow.Caveat
FROM         dbo.Workflow INNER JOIN
                      dbo.Workflow_Questions ON dbo.Workflow.Workflow_Question = dbo.Workflow_Questions.Workflow_Questions_ID
ORDER BY [Question Number]
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Workflow_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Workflow"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 221
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Workflow_Questions"
            Begin Extent = 
               Top = 6
               Left = 259
               Bottom = 125
               Right = 464
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1890
         Alias = 1530
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Workflow_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Workflow_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Workflow_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Workflow_Questions_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Workflow_Questions_list]
AS
SELECT     Workflow_Questions_ID AS Id, Question_Num AS [Question Number], Question, Question_Type AS [Question Type], Deleted, Quality, Commercial, Production, Finance, 
                      Planning
FROM         dbo.Workflow_Questions
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VAT_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[VAT_List]
AS
SELECT     VAT_ID, Account_Code AS [Account Code], Description, Rate, Date_Set AS [Date Set], modified, modified_by
FROM         dbo.VAT
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VAT_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[VAT_Drop_List]
AS
SELECT     VAT_ID, Rate, Description, Date_Set, Account_Code, modified, modified_by
FROM         dbo.VAT
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Multi_Scrap_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Multi_Scrap_list]
AS
SELECT     Multi_Scrap_ID, Modified, Modified_By, Scrap_Qty AS QTY, Scrap_Reason AS Reason, Times_Id
FROM         dbo.Multi_Scrap
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Multi_Scrap_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Multi_Scrap"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 199
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Multi_Scrap_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Multi_Scrap_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Multi_Scrap_list'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Calendar_Exception_type_drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Calendar_Exception_type_drop_List]
AS
SELECT     Calendar_Exception_type_ID, Exception_type AS [Exception Type], Modified
FROM         dbo.Calendar_Exception_type
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Process_Calendar_Exceptions_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Process_Calendar_Exceptions_List]
AS
SELECT     dbo.Process_Calendar_exceptions.Process_Calendar_exceptions_ID, dbo.Process_Calendar_exceptions.Process__Process_id, 
                      dbo.Process_Calendar_exceptions.Description, dbo.Process_Calendar_exceptions.Exception_Date AS [Exception Date], 
                      dbo.Calendar_Exception_type.Exception_type AS [Exception type], dbo.Process_Calendar_exceptions.Start, dbo.Process_Calendar_exceptions.Finish, 
                      dbo.Process_Calendar_exceptions.Non_Working AS [Non Working]
FROM         dbo.Process_Calendar_exceptions LEFT OUTER JOIN
                      dbo.Calendar_Exception_type ON 
                      dbo.Process_Calendar_exceptions.Type__Calendar_Exception_type_ID = dbo.Calendar_Exception_type.Calendar_Exception_type_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Calendar_Exception_type_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Calendar_Exception_type_List]
AS
SELECT     Calendar_Exception_type_ID, Exception_type AS [Exception Type], Modified
FROM         dbo.Calendar_Exception_type
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WC_Calendar_exceptions_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WC_Calendar_exceptions_List]
AS
SELECT     dbo.WC_Calendar_exceptions.WC_Calendar_exceptions_ID, dbo.WC_Calendar_exceptions.WC__Work_centre_id, 
                      dbo.WC_Calendar_exceptions.Description, dbo.WC_Calendar_exceptions.Exception_Date AS [Exception Date], 
                      dbo.Calendar_Exception_type.Exception_type AS [Exception type], dbo.WC_Calendar_exceptions.Start, dbo.WC_Calendar_exceptions.Finish, 
                      dbo.WC_Calendar_exceptions.Non_Working AS [Non Working]
FROM         dbo.WC_Calendar_exceptions LEFT OUTER JOIN
                      dbo.Calendar_Exception_type ON 
                      dbo.WC_Calendar_exceptions.Type__Calendar_Exception_type_ID = dbo.Calendar_Exception_type.Calendar_Exception_type_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Con_NOtes_Test]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Con_NOtes_Test]
AS
SELECT     Contract_Notes_ID, Modified, Note
FROM         dbo.Contract_Notes
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Calendar_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Calendar_Drop_List]
AS
SELECT     Calendar_id, Calendar_Name AS [Calendar Name]
FROM         dbo.Calendar
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Process_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Process_list]
AS
SELECT     dbo.Process.Process_Id, dbo.Process.Process_Name AS Process, dbo.Process.Process_Description AS Description, dbo.Process.Charge, dbo.Process.Cost, 
                      dbo.Process.Labour_cost AS [Labour cost], dbo.Process.Abbreviation, dbo.Process.Modified, dbo.Process.Modified_By, dbo.CATEGORY.Category_Id, 
                      dbo.CATEGORY.Category, dbo.Process.Capacity_Week AS [Capacity Week], dbo.Process.Calendar__Calendar_id, dbo.Calendar.Calendar_Name AS Calendar, 
                      dbo.Process.Display_Order AS [Display Order], dbo.Process.Deleted
FROM         dbo.Process LEFT OUTER JOIN
                      dbo.Calendar ON dbo.Process.Calendar__Calendar_id = dbo.Calendar.Calendar_id LEFT OUTER JOIN
                      dbo.CATEGORY ON dbo.Process.Category = dbo.CATEGORY.Category_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Calendar_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Calendar_List]
AS
SELECT     Calendar_id, Calendar_Name AS [Calendar Name]
FROM         dbo.Calendar
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Settings_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Settings_List]
AS
SELECT     Label, Description, Value, Setting
FROM         dbo.System_Settings
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Settings_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[29] 4[25] 2[10] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "System_Settings"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 194
               Right = 224
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1965
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Settings_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Settings_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Settings_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Machines_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Machines_List]
AS
SELECT     Machines_ID, Machine_Name, Model, Description
FROM         dbo.Machines
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Machines_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Machines_Drop_List]
AS
SELECT     Machines_ID, Machine_Name, Model, Description
FROM         dbo.Machines
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Bom_Versions_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Bom_Versions_Drop_List]
AS
SELECT     Version_Name, Version_Description, Part__Part_Id
FROM         dbo.Bom_Versions
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[CofC_related_Docs_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[CofC_related_Docs_List]
AS
SELECT     CofC_related_Docs_ID, Against__CofC_ID, Description, Document_Path
FROM         dbo.CofC_related_Docs
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Company_Related_Docs_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Company_Related_Docs_list]
AS
SELECT     Company_Related_Docs_ID, Against__COMPANYS_ID, Description, Document_Path
FROM         dbo.Company_Related_Docs
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[CofC_SpecTests_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[CofC_SpecTests_List]
AS
SELECT     CofC_SpecTests_ID, For__CofC_ID, Result, SpecTest
FROM         dbo.CofC_SpecTests
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[NC_Related_Docs_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[NC_Related_Docs_List]
AS
SELECT     NC_Related_Docs_ID, Document_Path AS [Document Path], Description, For__Non_Conformance_ID
FROM         dbo.NC_Related_Docs
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Campaign_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Campaign_Drop_List]
AS
SELECT     dbo.Campaign.*
FROM         dbo.Campaign
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Campaign_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Campaign_List]
AS
SELECT     Campaign_id, Campaign, modified, modified_by
FROM         dbo.Campaign
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Related_Docs_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Delivery_Related_Docs_list]
AS
SELECT     Delivery_Related_Docs_ID, Against__Delivery_ID, Description, Document_Path
FROM         dbo.Delivery_Related_Docs
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Non_Conformance_Origin_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Non_Conformance_Origin_Drop_List]
AS
SELECT     Non_Conformance_Origin_ID, NC_Origin
FROM         dbo.Non_Conformance_Origin
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Non_Conformance_Origin_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Non_Conformance_Origin_List]
AS
SELECT     Non_Conformance_Origin_ID, NC_Origin AS [NC Origin]
FROM         dbo.Non_Conformance_Origin
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Category_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Category_list]
AS
SELECT     Category_Id, Category, Description, modified, modified_by
FROM         dbo.CATEGORY
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Category_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Category_Drop_List]
AS
SELECT     dbo.CATEGORY.*
FROM         dbo.CATEGORY
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WC_Related_Docs_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WC_Related_Docs_list]
AS
SELECT     WC_Related_Docs_ID, Against__Work_Centre_ID, Description, Document_Path
FROM         dbo.WC_Related_Docs
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Non_Conformance_Cause_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Non_Conformance_Cause_List]
AS
SELECT     Non_Conformance_Cause_ID, Cause_Type AS [Cause Type]
FROM         dbo.Non_Conformance_Cause
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Non_Conformance_Cause_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Non_Conformance_Cause_Drop_List]
AS
SELECT     Non_Conformance_Cause_ID, Cause_Type
FROM         dbo.Non_Conformance_Cause
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Ext_location_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Ext_location_Drop_List]
AS
SELECT     Ext_Location_ID, Location
FROM         dbo.Ext_Location
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Ext_Location_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Ext_Location_List]
AS
SELECT     Ext_Location_ID, Location
FROM         dbo.Ext_Location
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Non_Conformance_Type_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Non_Conformance_Type_Drop_List]
AS
SELECT     Non_Conformance_Type_ID, NC_Type
FROM         dbo.Non_Conformance_Type
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Non_Conformance_Type_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Non_Conformance_Type_List]
AS
SELECT     Non_Conformance_Type_ID, NC_Type AS [NC Type]
FROM         dbo.Non_Conformance_Type
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[EnqLines_Related_Docs_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[EnqLines_Related_Docs_list]
AS
SELECT     EnqLines_Related_Docs_ID, Against__ENQUIRY_LINES_ID, Description, Document_Path
FROM         dbo.EnqLines_Related_Docs
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Address]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Delivery_Address]
AS
SELECT     dbo.COMPANY_ADDRESS.*
FROM         dbo.COMPANY_ADDRESS
WHERE     (Delivery_Address = 1)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Action_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Action_Drop_List]
AS
SELECT     Action_ID, [Action]
FROM         dbo.Action
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Action_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Action_List]
AS
SELECT     Action_ID, [Action]
FROM         dbo.Action
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[SOL_Related_Docs_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[SOL_Related_Docs_list]
AS
SELECT     SOL_Related_Docs_ID, Against__Sales_Order_Lines_ID, Description, Document_Path
FROM         dbo.SOL_Related_Docs
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[NC_Action_Type_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[NC_Action_Type_Drop_List]
AS
SELECT     NC_Action_Type_ID, Action_Type
FROM         dbo.NC_Action_Type
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[NC_Action_Type_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[NC_Action_Type_List]
AS
SELECT     NC_Action_Type_ID, Action_Type AS [Action Type]
FROM         dbo.NC_Action_Type
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[POR_Status_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[POR_Status_List]
AS
SELECT     POR_Status_ID, Status
FROM         dbo.POR_Status
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[POR_Status_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[POR_Status_Drop_List]
AS
SELECT     POR_Status_ID, Status
FROM         dbo.POR_Status
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Prod_Related_Docs_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Prod_Related_Docs_list]
AS
SELECT     Prod_Related_Docs_ID, Against__Production_Plan_ID, Description, Document_Path
FROM         dbo.Prod_Related_Docs
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Price_List_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Price_List_Drop_List]
AS
SELECT     PriceList_Id, Description, Modified, Modified_By
FROM         dbo.Price_List
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PO_Related_Docs_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PO_Related_Docs_list]
AS
SELECT     PO_Related_Docs_ID, Against__Purchase_Order_ID, Description, Document_Path
FROM         dbo.PO_Related_Docs
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Employee_Related_Docs_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Employee_Related_Docs_List]
AS
SELECT     Employee_Related_Docs_ID, Against__Employee_ID, Description, Document_Path
FROM         dbo.Employee_Related_Docs
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Activity_Type_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Activity_Type_List]
AS
SELECT     Activity_Type_ID, Modified, Activity_Type AS [Activity Type]
FROM         dbo.Activity_Type
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Activity_Type_Drop_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Activity_Type_Drop_list]
AS
SELECT     Activity_Type_ID, Modified, Activity_Type AS [Activity Type]
FROM         dbo.Activity_Type
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[COMPANY_AREA_Drop_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[COMPANY_AREA_Drop_list]
AS
SELECT     Area_Id, Area, Modified, Modified_by
FROM         dbo.COMPANY_AREA
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[COMPANY_AREA_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[COMPANY_AREA_List]
AS
SELECT     Area_Id, Area, Modified, Modified_by
FROM         dbo.COMPANY_AREA
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sy_Groups_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Sy_Groups_Drop_List]
AS
SELECT     ID, Name AS [Group]
FROM         dbo.Sy_Groups
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sy_Groups_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Sy_Groups_List]
AS
SELECT     ID, Name AS [Group]
FROM         dbo.Sy_Groups
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Activity_Related_Doc_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Activity_Related_Doc_List]
AS
SELECT     Activity_Related_Doc_ID, Against__Activity_ID, Description, Document_Path AS [Document Path]
FROM         dbo.Activity_Related_Doc
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Costs_Temp_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Costs_Temp_List]
AS
SELECT     Stock_ID, SUM(Planned_Setup_Hrs) AS Planned_Setup_Hrs, SUM(Planned_Run_Hrs) AS Planned_Run_Hrs, SUM(Planned_Setup_Machine_Cost) 
                      AS Planned_Setup_Machine_Cost, SUM(Planned_Run_Machine_Cost) AS Planned_Run_Machine_Cost, SUM(Planned_Setup_Labour_Cost) 
                      AS Planned_Setup_Labour_Cost, SUM(Planned_Run_Labour_Cost) AS Planned_Run_Labour_Cost, SUM(Planned_Total_Cost) AS Planned_Total_Cost, 
                      SUM(Actual_Setup_hrs) AS Actual_Setup_hrs, SUM(Actual_Run_Hrs) AS Actual_Run_Hrs, SUM(Actual_Setup_Machine_Cost) AS Actual_Setup_Machine_Cost, 
                      SUM(Actual_Run_Machine_Cost) AS Actual_Run_Machine_Cost, SUM(Actual_Setup_Labour_Cost) AS Actual_Setup_Labour_Cost, SUM(Actual_Run_Labour_Cost) 
                      AS Actual_Run_Labour_Cost, SUM(Actual_Total_Cost) AS Actual_Total_Cost, SUM(Planned_Material_Cost) AS Planned_Material_Cost, SUM(Actual_Material_Cost) 
                      AS Actual_Material_Cost, SUM(Planned_Sub_Con_Cost) AS Planned_Sub_Con_Cost, SUM(Actual_Sub_Con_Costs) AS Actual_Sub_Con_Costs, 
                      SUM(Planned_Expenses) AS Planned_Expenses, SUM(Actual_Expenses) AS Actual_Expenses, SUM(Planned_Sub_Ass_Man_Cost) AS Planned_Sub_Ass_Man_Cost, 
                      SUM(Actual_Sub_Ass_Man_Cost) AS Actual_Sub_Ass_Man_Cost
FROM         dbo.Stock_Costs_Temp
GROUP BY Stock_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[COMPANY_POSITIONS_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[COMPANY_POSITIONS_Drop_List]
AS
SELECT     dbo.COMPANY_POSITIONS.*
FROM         dbo.COMPANY_POSITIONS
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Company_Positions_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Company_Positions_List]
AS
SELECT     Position_ID, [Position], modified_by, modified
FROM         dbo.COMPANY_POSITIONS
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquiry_Lost_Reasons_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Enquiry_Lost_Reasons_Drop_List]
AS
SELECT     Enquiry_Lost_Reasons_id, Reason_Lost
FROM         dbo.Enquiry_Lost_Reasons
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquiry_Lost_Reasons_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Enquiry_Lost_Reasons_List]
AS
SELECT     Enquiry_Lost_Reasons_id, Reason_Lost
FROM         dbo.Enquiry_Lost_Reasons
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Process_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Process_Drop_List]
AS
SELECT     Process_Id, Process_Name AS Name, Process_Description AS Description, Abbreviation
FROM         dbo.Process
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[ENQUIRY_RELATED_DOC_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[ENQUIRY_RELATED_DOC_list]
AS
SELECT     Enquiry_Related_Docs_id, AgainstEnquiry__Enquiry_Id, Description, Document_Path
FROM         dbo.ENQUIRY_RELATED_DOC
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[CREDIT_TERM_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[CREDIT_TERM_Drop_List]
AS
SELECT     C_id, c_term, Modified, Modified_By
FROM         dbo.CREDIT_TERM
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[CREDIT_TERM_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[CREDIT_TERM_List]
AS
SELECT     C_id, c_term, Modified, Modified_By
FROM         dbo.CREDIT_TERM
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Employee_Training_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Employee_Training_List]
AS
SELECT     Employee_Training_ID, Start_Date AS [Start Date], End_Date AS [End Date], Description, Certificate_Achieved AS [Certificate Achieved], 
                      Parent__Employee_ID
FROM         dbo.Employee_Training
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquiry_Line_Group_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Enquiry_Line_Group_Drop_List]
AS
SELECT     Enquiry_Line_Group_ID, Group_Name AS [Group Name]
FROM         dbo.Enquiry_Line_Group
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquiry_Line_Group_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Enquiry_Line_Group_List]
AS
SELECT     Enquiry_Line_Group_ID, Group_Name AS [Group Name]
FROM         dbo.Enquiry_Line_Group
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_take_total_by_part]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_take_total_by_part]
AS
SELECT     Part__Part_ID, SUM(Qty) AS Total, For__Stock_Take_ID
FROM         dbo.Stock_Take_Item
GROUP BY Part__Part_ID, For__Stock_Take_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_take_total_by_location]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_take_total_by_location]
AS
SELECT     TOP 100 PERCENT SUM(Qty) AS [Total Qty], Part__Part_ID, LOCATION__LOCATION_ID, For__Stock_Take_ID, SUM(Qty_Outstanding) AS [Total Qty Outstanding]
FROM         dbo.Stock_Take_Item
GROUP BY Part__Part_ID, LOCATION__LOCATION_ID, For__Stock_Take_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Drawing_Related_Docs_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Drawing_Related_Docs_List]
AS
SELECT     Drawing_Related_Docs_ID, Against__Drawing_No_ID, Description, Description_Path, Modified, Modified_By
FROM         dbo.Drawing_Related_Docs
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_List_Weekly_Balance]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_List_Weekly_Balance]
AS
SELECT     dbo.Part.Part_Id, ISNULL(dbo.PLWWB_WO_W1.W1, 0) + ISNULL(dbo.PLWWB_PO_W1.W1, 0) - ISNULL(dbo.PLWWB_WR_W1.W1, 0) AS W1, 
                      ISNULL(dbo.PLWWB_WO_W2.W2, 0) + ISNULL(dbo.PLWWB_PO_W2.W2, 0) - ISNULL(dbo.PLWWB_WR_W2.W2, 0) AS W2, ISNULL(dbo.PLWWB_WO_W3.W3, 0) 
                      + ISNULL(dbo.PLWWB_PO_W3.W3, 0) - ISNULL(dbo.PLWWB_WR_W3.W3, 0) AS W3, ISNULL(dbo.PLWWB_WO_W4.W4, 0) + ISNULL(dbo.PLWWB_PO_W4.W4, 0) 
                      - ISNULL(dbo.PLWWB_WR_W4.W4, 0) AS W4, ISNULL(dbo.PLWWB_WO_W5.W5, 0) + ISNULL(dbo.PLWWB_PO_W5.W5, 0) - ISNULL(dbo.PLWWB_WR_W5.W5, 0) 
                      AS W5, ISNULL(dbo.PLWWB_WO_W6.W6, 0) + ISNULL(dbo.PLWWB_PO_W6.W6, 0) - ISNULL(dbo.PLWWB_WR_W6.W6, 0) AS W6, 
                      ISNULL(dbo.PLWWB_WO_W7.W7, 0) + ISNULL(dbo.PLWWB_PO_W7.W7, 0) - ISNULL(dbo.PLWWB_WR_W7.W7, 0) AS W7, ISNULL(dbo.PLWWB_WO_W8.W8, 0) 
                      + ISNULL(dbo.PLWWB_PO_W8.W8, 0) - ISNULL(dbo.PLWWB_WR_W8.W8, 0) AS W8, ISNULL(dbo.PLWWB_WO_W9.W9, 0) + ISNULL(dbo.PLWWB_PO_W9.W9, 0) 
                      - ISNULL(dbo.PLWWB_WR_W9.W9, 0) AS W9, ISNULL(dbo.PLWWB_WO_W10.W10, 0) + ISNULL(dbo.PLWWB_PO_W10.W10, 0) 
                      - ISNULL(dbo.PLWWB_WR_W10.W10, 0) AS W10, ISNULL(dbo.PLWWB_WO_W11.W11, 0) + ISNULL(dbo.PLWWB_PO_W11.W11, 0) 
                      - ISNULL(dbo.PLWWB_WR_W11.W11, 0) AS W11, ISNULL(dbo.PLWWB_WO_W12.W12, 0) + ISNULL(dbo.PLWWB_PO_W12.W12, 0) 
                      - ISNULL(dbo.PLWWB_WR_W12.W12, 0) AS W12, ISNULL(dbo.PLWWB_WO_W13.W13, 0) + ISNULL(dbo.PLWWB_PO_W13.W13, 0) 
                      - ISNULL(dbo.PLWWB_WR_W13.W13, 0) AS W13, ISNULL(dbo.PLWWB_WO_W14.W14, 0) + ISNULL(dbo.PLWWB_PO_W14.W14, 0) 
                      - ISNULL(dbo.PLWWB_WR_W14.W14, 0) AS W14, ISNULL(dbo.PLWWB_WO_W15.W15, 0) + ISNULL(dbo.PLWWB_PO_W15.W15, 0) 
                      - ISNULL(dbo.PLWWB_WR_W15.W15, 0) AS W15, ISNULL(dbo.PLWWB_WO_W16.W16, 0) + ISNULL(dbo.PLWWB_PO_W16.W16, 0) 
                      - ISNULL(dbo.PLWWB_WR_W16.W16, 0) AS W16, ISNULL(dbo.PLWWB_WO_W17.W17, 0) + ISNULL(dbo.PLWWB_PO_W17.W17, 0) 
                      - ISNULL(dbo.PLWWB_WR_W17.W17, 0) AS W17, ISNULL(dbo.PLWWB_WO_W18.W18, 0) + ISNULL(dbo.PLWWB_PO_W18.W18, 0) 
                      - ISNULL(dbo.PLWWB_WR_W18.W18, 0) AS W18, ISNULL(dbo.PLWWB_WO_W19.W19, 0) + ISNULL(dbo.PLWWB_PO_W19.W19, 0) 
                      - ISNULL(dbo.PLWWB_WR_W19.W19, 0) AS W19, ISNULL(dbo.PLWWB_WO_W20.W20, 0) + ISNULL(dbo.PLWWB_PO_W20.W20, 0) 
                      - ISNULL(dbo.PLWWB_WR_W20.W20, 0) AS W20, ISNULL(dbo.PLWWB_WO_W21.W21, 0) + ISNULL(dbo.PLWWB_PO_W21.W21, 0) 
                      - ISNULL(dbo.PLWWB_WR_W21.W21, 0) AS W21, ISNULL(dbo.PLWWB_WO_W22.W22, 0) + ISNULL(dbo.PLWWB_PO_W22.W22, 0) 
                      - ISNULL(dbo.PLWWB_WR_W22.W22, 0) AS W22, ISNULL(dbo.PLWWB_WO_W23.W23, 0) + ISNULL(dbo.PLWWB_PO_W23.W23, 0) 
                      - ISNULL(dbo.PLWWB_WR_W23.W23, 0) AS W23, ISNULL(dbo.PLWWB_WO_W24.W24, 0) + ISNULL(dbo.PLWWB_PO_W24.W24, 0) 
                      - ISNULL(dbo.PLWWB_WR_W24.W24, 0) AS W24, ISNULL(dbo.PLWWB_WO_W26.W26, 0) + ISNULL(dbo.PLWWB_PO_W26.W26, 0) 
                      - ISNULL(dbo.PLWWB_WR_W26.W26, 0) AS W25, ISNULL(dbo.PLWWB_WO_W26.W26, 0) + ISNULL(dbo.PLWWB_PO_W26.W26, 0) 
                      - ISNULL(dbo.PLWWB_WR_W26.W26, 0) AS W26
FROM         dbo.Part LEFT OUTER JOIN
                      dbo.PLWWB_WO_W26 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W26.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W25 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W25.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W24 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W24.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W23 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W23.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W22 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W22.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W21 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W21.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W20 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W20.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W19 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W19.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W18 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W18.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W17 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W17.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W16 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W16.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W15 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W15.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W14 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W14.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W13 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W13.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W12 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W12.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W11 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W11.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W10 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W10.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W9 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W9.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W8 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W8.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W7 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W7.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W6 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W6.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W5 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W5.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W4 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W4.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W3 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W3.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W2 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W2.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WO_W1 ON dbo.Part.Part_Id = dbo.PLWWB_WO_W1.Part_ID__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W26 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W26.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W25 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W25.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W24 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W24.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W23 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W23.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W22 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W22.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W21 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W21.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W20 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W20.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W19 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W19.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W18 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W18.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W17 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W17.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W16 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W16.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W15 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W15.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W14 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W14.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W13 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W13.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W12 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W12.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W11 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W11.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W10 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W10.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W9 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W9.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W8 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W8.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W7 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W7.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W6 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W6.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W5 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W5.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W4 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W4.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W3 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W3.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W2 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W2.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_WR_W1 ON dbo.Part.Part_Id = dbo.PLWWB_WR_W1.Part__Part_Id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W26 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W26.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W25 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W25.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W24 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W24.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W23 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W23.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W22 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W22.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W21 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W21.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W20 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W20.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W19 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W19.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W18 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W18.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W17 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W17.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W16 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W16.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W15 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W15.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W14 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W14.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W13 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W13.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W12 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W12.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W11 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W11.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W10 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W10.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W9 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W9.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W8 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W8.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W7 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W7.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W6 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W6.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W5 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W5.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W4 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W4.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W3 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W3.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W2 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W2.Part__Part_id LEFT OUTER JOIN
                      dbo.PLWWB_PO_W1 ON dbo.Part.Part_Id = dbo.PLWWB_PO_W1.Part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Misc_Issue_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Misc_Issue_List]
AS
SELECT     dbo.Misc_Issue.Misc_Issue_ID, dbo.Misc_Issue.Issue_Date AS [Date], dbo.Misc_Issue.Qty, dbo.Misc_Issue.Production, dbo.Part.Part_No AS [Part No], 
                      dbo.COMPANYS.Name AS [To Company], dbo.Employee.Name AS [To Employee], dbo.UOM_From_Conversion_Id.Unit_of_Measure AS [Issue UOM], 
                      dbo.Misc_Issue.Issue_Qty AS [Issue Qty], dbo.UOM.Unit_of_Measure AS [Stock UOM], dbo.Misc_Issue.Notes_Non_RTF AS Notes, 
                      dbo.Misc_Issue.By_Stock_Take AS [By Stock Take], dbo.Misc_Issue.Scrap, UDData_1.UDData_Data AS UserDefinable1, UDData_2.UDData_Data AS UserDefinable2, 
                      UDData_3.UDData_Data AS UserDefinable3, UDData_4.UDData_Data AS UserDefinable4, UDData_5.UDData_Data AS UserDefinable5, 
                      UDData_6.UDData_Data AS UserDefinable6
FROM         dbo.COMPANYS RIGHT OUTER JOIN
                      dbo.UDData UDData_1 RIGHT OUTER JOIN
                      dbo.UDData UDData_2 RIGHT OUTER JOIN
                      dbo.UDData UDData_6 RIGHT OUTER JOIN
                      dbo.Misc_Issue ON UDData_6.UDData_ID = dbo.Misc_Issue.UDF6__UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_5 ON dbo.Misc_Issue.UDF5__UDData_ID = UDData_5.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_4 ON dbo.Misc_Issue.UDF4__UDData_ID = UDData_4.UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_3 ON dbo.Misc_Issue.UDF3__UDData_ID = UDData_3.UDData_ID ON UDData_2.UDData_ID = dbo.Misc_Issue.UDF2__UDData_ID ON 
                      UDData_1.UDData_ID = dbo.Misc_Issue.UDF1__UDData_ID LEFT OUTER JOIN
                      dbo.UOM_From_Conversion_Id ON dbo.Misc_Issue.Issue_UOM__Conversions_ID = dbo.UOM_From_Conversion_Id.Conversion_Id LEFT OUTER JOIN
                      dbo.UOM RIGHT OUTER JOIN
                      dbo.Part ON dbo.UOM.UOM_ID = dbo.Part.Unit_of_measure__Uom_id ON dbo.Misc_Issue.Part__Part_Id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Employee ON dbo.Misc_Issue.Employee__Employee_id = dbo.Employee.Employee_Id ON 
                      dbo.COMPANYS.Company_Id = dbo.Misc_Issue.Company__COMPANYS_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_List]
AS
SELECT     dbo.Stock.Stock_ID, dbo.Stock.Batch_no AS [Batch no], dbo.Stock.Bredth AS Breadth, dbo.Stock.Cast_Heat_No AS [Cast Heat No], dbo.Stock.Cost, 
                      dbo.Stock.Date_In AS [Date In], dbo.Stock.From_WO__WO_id, dbo.Part_Revision.Revision AS [WO Part Revision], dbo.Stock.Grn__Grn_id, dbo.Stock.Length, 
                      dbo.Stock.Location__location_id, dbo.Stock.Notes, dbo.Stock.Original_Batch AS [Original Batch], dbo.Stock.OriginalQty, dbo.Stock.Part__Part_Id, dbo.Stock.Qty, 
                      dbo.Stock.Qty_Allocated AS [Qty Allocated], dbo.Stock.Qty_Available AS [Qty Available], dbo.Stock.Serial_no AS [Serial no], dbo.Stock.Total_Qty AS [Total Qty], 
                      dbo.Stock.Use_By_Date AS [Use By Date], dbo.Stock_Status.Status, dbo.Part.Part_No AS [Part No], dbo.Part.Description, 
                      dbo.Part.Equivalent_Size AS [Equivalent Size], dbo.Part.Wieght AS [Kilos UOM], dbo.Part_type.Part_type AS [Part Type], dbo.Part.On_Order AS [On Order], 
                      dbo.Part.Supplier__Company_id, dbo.Grn.Grn_No AS [Grn No], dbo.LOCATION.Location, dbo.Group_Code.Group_Code AS [Group Code], dbo.Stock.WDV, 
                      dbo.Building.Building, WORK_ORDERS_2.WO_No AS [Manufactured On], dbo.LOCATION.Capacity, dbo.CATEGORY.Category, 
                      UDData_1.UDData_Data AS UserDefinable1, UDData_2.UDData_Data AS UserDefinable2, UDData_3.UDData_Data AS UserDefinable3, 
                      UDData_4.UDData_Data AS UserDefinable4, UDData_5.UDData_Data AS UserDefinable5, UDData_6.UDData_Data AS UserDefinable6, 
                      dbo.Stock.Part_Description_On_Receipt AS [Part Description On Receipt], dbo.Stock.On_Hire AS [On Hire], dbo.Purchase_Order.Po_No AS [PO No], 
                      dbo.Po_Lines.Drawing_Revision AS [PO Part Revision], dbo.COMPANYS.Name AS [Third Party Results], COMPANYS_1.Name AS [Third Party Results Two], 
                      dbo.Stock.Consignment_Stock AS [Consignment Stock], dbo.Stock.Avg_Length AS [Avg Length], dbo.Stock_Per_Tonne.[Cost Per Tonne], 
                      dbo.Stock_Per_Tonne.[Bars Remaining], CASE WHEN dbo.Stock.Avg_Length > 0 THEN dbo.Stock.Cost / dbo.Stock.Avg_Length ELSE 0 END AS [Cost Per Bar], 
                      dbo.Stock_In_Feet.Feet, dbo.Stock.Original__Stock_ID, dbo.Stock_Kilos.Kilos, dbo.Stock.Qty_Remaining AS [Qty Remaining], dbo.Part.Cost AS [Cost UOM], 
                      COMPANYS_2.Name AS Supplier, dbo.Specification.Name AS Specification, dbo.Part.Required, dbo.Building.Building_Id, 
                      dbo.Stock.Part_Notes_Non_RTF AS [Part Notes], dbo.WO_STATUS.Wo_Status AS [WO Status], LOCATION_1.Location AS [Preferred Location], 
                      dbo.Stock.Quarantine_Qty AS [Quarantine Qty], dbo.Stock.Supplier_CofC AS [Supplier CofC], dbo.WORK_ORDERS.WO_No AS [For WO], 
                      dbo.Stock.Consignment_Qty AS [Consignment Qty]
FROM         dbo.COMPANYS AS COMPANYS_2 RIGHT OUTER JOIN
                      dbo.Purchase_Order ON COMPANYS_2.Company_Id = dbo.Purchase_Order.Supplier__COMPANYS_ID RIGHT OUTER JOIN
                      dbo.Po_Lines LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Po_Lines.Wo__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID ON 
                      dbo.Purchase_Order.Purchase_Order_ID = dbo.Po_Lines.Po__PO_ID RIGHT OUTER JOIN
                      dbo.UDData AS UDData_4 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_6 RIGHT OUTER JOIN
                      dbo.COMPANYS RIGHT OUTER JOIN
                      dbo.COMPANYS AS COMPANYS_1 RIGHT OUTER JOIN
                      dbo.Stock_In_Feet RIGHT OUTER JOIN
                      dbo.Stock_Kilos RIGHT OUTER JOIN
                      dbo.Part_Revision RIGHT OUTER JOIN
                      dbo.WO_STATUS RIGHT OUTER JOIN
                      dbo.WORK_ORDERS AS WORK_ORDERS_1 ON dbo.WO_STATUS.WO_status_Id = WORK_ORDERS_1.Status__Wo_Status_Id ON 
                      dbo.Part_Revision.Part_revision_Id = WORK_ORDERS_1.Revision_Id__Revision_id RIGHT OUTER JOIN
                      dbo.Stock LEFT OUTER JOIN
                      dbo.Specification ON dbo.Stock.Specification__Specification_ID = dbo.Specification.Specification_ID ON 
                      WORK_ORDERS_1.WORK_ORDERS_ID = dbo.Stock.From_WO__WO_id ON dbo.Stock_Kilos.Stock_ID = dbo.Stock.Stock_ID ON 
                      dbo.Stock_In_Feet.Stock_ID = dbo.Stock.Stock_ID LEFT OUTER JOIN
                      dbo.Stock_Per_Tonne ON dbo.Stock.Stock_ID = dbo.Stock_Per_Tonne.Stock_ID ON COMPANYS_1.Company_Id = dbo.Stock.ThirdPartyResultsTwo__COMPANYS_ID ON
                       dbo.COMPANYS.Company_Id = dbo.Stock.ThirdPartyResultsOne__COMPANYS_ID ON UDData_6.UDData_ID = dbo.Stock.UDF6__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_5 ON dbo.Stock.UDF5__UDData_ID = UDData_5.UDData_ID ON UDData_4.UDData_ID = dbo.Stock.UDF4__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_3 ON dbo.Stock.UDF3__UDData_ID = UDData_3.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON dbo.Stock.UDF2__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON dbo.Stock.UDF1__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.WORK_ORDERS AS WORK_ORDERS_2 ON dbo.Stock.Manufactured_On__WORK_ORDERS_ID = WORK_ORDERS_2.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.LOCATION LEFT OUTER JOIN
                      dbo.Building ON dbo.LOCATION.Building__Building_id = dbo.Building.Building_Id ON dbo.Stock.Location__location_id = dbo.LOCATION.Location_id LEFT OUTER JOIN
                      dbo.Part_type RIGHT OUTER JOIN
                      dbo.Group_Code LEFT OUTER JOIN
                      dbo.CATEGORY ON dbo.Group_Code.Category__category_id = dbo.CATEGORY.Category_Id RIGHT OUTER JOIN
                      dbo.UOM RIGHT OUTER JOIN
                      dbo.LOCATION AS LOCATION_1 RIGHT OUTER JOIN
                      dbo.Part ON LOCATION_1.Location_id = dbo.Part.Preferred_Location__Location_id ON dbo.UOM.UOM_ID = dbo.Part.Unit_of_measure__Uom_id ON 
                      dbo.Group_Code.Groupcode_Id = dbo.Part.Groupcode__Groupcode_id ON dbo.Part_type.part_type_id = dbo.Part.Type__Part_Type_Id ON 
                      dbo.Stock.Part__Part_Id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Stock_Status ON dbo.Stock.Status__Stock_status_id = dbo.Stock_Status.Stock_Status_Id LEFT OUTER JOIN
                      dbo.Grn ON dbo.Stock.Grn__Grn_id = dbo.Grn.Grn_ID ON dbo.Po_Lines.Po_Lines_ID = dbo.Stock.From_Po_Lines__Po_Lines_id
WHERE     (dbo.Stock.Complete = 1) AND (dbo.Stock.Total_Qty > 0) OR
                      (dbo.Stock.Complete = 1) AND (dbo.Stock.Quarantine_Qty > 0) OR
                      (dbo.Stock.Complete = 1) AND (dbo.Stock.Consignment_Qty > 0)
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Stock_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[6] 4[77] 2[3] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -1130
         Left = 0
      End
      Begin Tables = 
         Begin Table = "COMPANYS_2"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Purchase_Order"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 341
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Po_Lines"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_4"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_6"
            Begin Extent = 
               Top = 486
               Left = 252
               Bottom = 605
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 350
            End
            ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Stock_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Stock_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS_1"
            Begin Extent = 
               Top = 726
               Left = 38
               Bottom = 845
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Stock_In_Feet"
            Begin Extent = 
               Top = 846
               Left = 38
               Bottom = 935
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Stock_Kilos"
            Begin Extent = 
               Top = 846
               Left = 236
               Bottom = 935
               Right = 396
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part_Revision"
            Begin Extent = 
               Top = 936
               Left = 38
               Bottom = 1055
               Right = 254
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WO_STATUS"
            Begin Extent = 
               Top = 936
               Left = 292
               Bottom = 1025
               Right = 452
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS_1"
            Begin Extent = 
               Top = 1056
               Left = 38
               Bottom = 1175
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Stock"
            Begin Extent = 
               Top = 1176
               Left = 38
               Bottom = 1295
               Right = 321
            End
            DisplayFlags = 280
            TopColumn = 159
         End
         Begin Table = "Specification"
            Begin Extent = 
               Top = 1296
               Left = 38
               Bottom = 1415
               Right = 260
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Stock_Per_Tonne"
            Begin Extent = 
               Top = 1296
               Left = 298
               Bottom = 1400
               Right = 461
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_5"
            Begin Extent = 
               Top = 1404
               Left = 298
               Bottom = 1523
               Right = 474
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_3"
            Begin Extent = 
               Top = 1416
               Left = 38
               Bottom = 1535
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_2"
            Begin Extent = 
               Top = 1524
               Left = 252
               Bottom = 1643
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_1"
            Begin Extent = 
               Top = 1536
               Left = 38
               Bottom = 1655
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS_2"
            Begin Extent = 
               Top = 1656
               Left = 38
               Bottom = 1775
               Right = 319
            End
            Displ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Stock_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane3' , N'SCHEMA',N'dbo', N'VIEW',N'Stock_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane3', @value=N'ayFlags = 280
            TopColumn = 0
         End
         Begin Table = "LOCATION"
            Begin Extent = 
               Top = 1776
               Left = 38
               Bottom = 1895
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Building"
            Begin Extent = 
               Top = 1776
               Left = 285
               Bottom = 1895
               Right = 445
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part_type"
            Begin Extent = 
               Top = 1896
               Left = 38
               Bottom = 1985
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Group_Code"
            Begin Extent = 
               Top = 1986
               Left = 38
               Bottom = 2105
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "CATEGORY"
            Begin Extent = 
               Top = 2106
               Left = 38
               Bottom = 2225
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UOM"
            Begin Extent = 
               Top = 2106
               Left = 236
               Bottom = 2225
               Right = 407
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "LOCATION_1"
            Begin Extent = 
               Top = 2226
               Left = 38
               Bottom = 2345
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 2346
               Left = 38
               Bottom = 2465
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Stock_Status"
            Begin Extent = 
               Top = 2226
               Left = 285
               Bottom = 2330
               Right = 462
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Grn"
            Begin Extent = 
               Top = 2466
               Left = 38
               Bottom = 2585
               Right = 202
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 2265
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Stock_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Stock_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=3 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Stock_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Works_Orders_Detailed_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Works_Orders_Detailed_List]
AS
SELECT     dbo.WORK_ORDERS.WORK_ORDERS_ID, dbo.WORK_ORDERS.WO_No AS [WO No], COMPANYS_2.Name AS [SO Customer], dbo.WORK_ORDERS.Qty, 
                      dbo.WORK_ORDERS.Qty_Complete AS [Qty Complete], dbo.WO_STATUS.Wo_Status AS Status, dbo.SALES_ORDERS.Customers_PO AS [Cust PO], 
                      dbo.WORK_ORDERS.Date_Required AS [Date Required], dbo.WORK_ORDERS.Estimated_Complete_Date AS [Est Completion Date], Part_1.Part_No AS [Part No], 
                      Part_1.Description AS [Part Description], UDData_1.UDData_Data AS UD1, UDData_2.UDData_Data AS UD2, UDData_3.UDData_Data AS UD3, 
                      UDData_4.UDData_Data AS UD4, UDData_5.UDData_Data AS UD5, dbo.UDData.UDData_Data AS UD6, 
                      dbo.Work_Orders_Op_10_Details.[OP 10 Process] AS [10 Process], dbo.Work_Orders_Op_10_Details.[OP 10 Complete] AS [10 Complete], 
                      dbo.Work_Orders_Op_20_Details.[OP 20 Process] AS [20 Process], dbo.Work_Orders_Op_20_Details.[OP 20 Complete] AS [20 Complete], 
                      dbo.Work_Orders_Op_30_Details.[OP 30 Process] AS [30 Process], dbo.Work_Orders_Op_30_Details.[OP 30 Complete] AS [30 Complete], 
                      dbo.Work_Orders_Op_40_Details.[OP 40 Process] AS [40 Process], dbo.Work_Orders_Op_40_Details.[OP 40 Complete] AS [40 Complete], 
                      dbo.Work_Orders_Op_50_Details.[OP 50 Process] AS [50 Process], dbo.Work_Orders_Op_50_Details.[OP 50 Complete] AS [50 Complete], 
                      dbo.Work_Orders_Op_60_Details.[OP 60 Process] AS [60 Process], dbo.Work_Orders_Op_60_Details.[OP 60 Complete] AS [60 Complete], 
                      dbo.Work_Orders_Op_70_Details.[OP 70 Process] AS [70 Process], dbo.Work_Orders_Op_70_Details.[OP 70 Complete] AS [70 Complete], 
                      dbo.Work_Orders_Op_80_Details.[OP 80 Process] AS [80 Process], dbo.Work_Orders_Op_80_Details.[OP 80 Complete] AS [80 Complete], 
                      dbo.Work_Orders_Op_90_Details.[OP 90 Process] AS [90 Process], dbo.Work_Orders_Op_90_Details.[OP 90 Complete] AS [90 Complete], 
                      dbo.Work_Orders_Op_100_Details.[OP 100 Process] AS [100 Process], dbo.Work_Orders_Op_100_Details.[OP 100 Complete] AS [100 Complete], 
                      dbo.Work_Orders_Op_110_Details.[OP 110 Process] AS [110 Process], dbo.Work_Orders_Op_110_Details.[OP 110 Complete] AS [110 Complete], 
                      dbo.Work_Orders_Op_120_Details.[OP 120 Process] AS [120 Process], dbo.Work_Orders_Op_120_Details.[OP 120 Complete] AS [120 Complete], 
                      dbo.Work_Orders_Op_130_Details.[OP 130 Process] AS [130 Process], dbo.Work_Orders_Op_130_Details.[OP 130 Complete] AS [130 Complete], 
                      dbo.Work_Orders_Op_140_Details.[OP 140 Process] AS [140 Process], dbo.Work_Orders_Op_140_Details.[OP 140 Complete] AS [140 Complete], 
                      dbo.Work_Orders_Op_150_Details.[OP 150 Process] AS [150 Process], dbo.Work_Orders_Op_150_Details.[OP 150 Complete] AS [150 Complete], 
                      dbo.Work_Orders_Op_160_Details.[OP 160 Process] AS [160 Process], dbo.Work_Orders_Op_160_Details.[OP 160 Complete] AS [160 Complete], 
                      dbo.Work_Order_Main_Material.Main_material, dbo.Work_Order_Main_Material.[Main Mat Part No], dbo.Work_Order_Main_Material.[[Main Mat Part Description], 
                      dbo.Work_Order_Main_Material.[[Main Mat Qty Req], dbo.Work_Order_Main_Material.[[Main Mat Preferred Supplier], 
                      dbo.Work_Order_Main_Material.[[Main Mat PO No], dbo.Work_Order_Main_Material.[Main Mat Supplier], dbo.Work_Order_Main_Material.[[Main Mat Date Required], 
                      dbo.Work_Order_Main_Material.[Main Mat Date Promised], dbo.Work_Order_Main_Material.[Main Mat PO Status], 
                      dbo.WORK_ORDERS.Notes_Non_RTF AS Notes
FROM         dbo.COMPANYS AS COMPANYS_2 LEFT OUTER JOIN
                      dbo.SALES_ORDERS ON COMPANYS_2.Company_Id = dbo.SALES_ORDERS.Customers_ID__Companys RIGHT OUTER JOIN
                      dbo.WO_STATUS RIGHT OUTER JOIN
                      dbo.Work_Orders_Op_140_Details RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines RIGHT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Sales_Order_Lines.Sales_Order_Lines_ID = dbo.WORK_ORDERS.So_Line_Id LEFT OUTER JOIN
                      dbo.Work_Order_Main_Material ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Work_Order_Main_Material.[WO ID] LEFT OUTER JOIN
                      dbo.Work_Orders_Op_160_Details ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Work_Orders_Op_160_Details.WO_ID LEFT OUTER JOIN
                      dbo.Work_Orders_Op_150_Details ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Work_Orders_Op_150_Details.WO_ID ON 
                      dbo.Work_Orders_Op_140_Details.WO_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Work_Orders_Op_130_Details ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Work_Orders_Op_130_Details.WO_ID LEFT OUTER JOIN
                      dbo.Work_Orders_Op_120_Details ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Work_Orders_Op_120_Details.WO_ID LEFT OUTER JOIN
                      dbo.Work_Orders_Op_110_Details ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Work_Orders_Op_110_Details.WO_ID LEFT OUTER JOIN
                      dbo.Work_Orders_Op_100_Details ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Work_Orders_Op_100_Details.WO_ID LEFT OUTER JOIN
                      dbo.Work_Orders_Op_90_Details ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Work_Orders_Op_90_Details.WO_ID LEFT OUTER JOIN
                      dbo.Work_Orders_Op_80_Details ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Work_Orders_Op_80_Details.WO_ID LEFT OUTER JOIN
                      dbo.Work_Orders_Op_70_Details ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Work_Orders_Op_70_Details.WO_ID LEFT OUTER JOIN
                      dbo.Work_Orders_Op_60_Details ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Work_Orders_Op_60_Details.WO_ID LEFT OUTER JOIN
                      dbo.Work_Orders_Op_50_Details ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Work_Orders_Op_50_Details.WO_ID LEFT OUTER JOIN
                      dbo.Work_Orders_Op_40_Details ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Work_Orders_Op_40_Details.WO_ID LEFT OUTER JOIN
                      dbo.Work_Orders_Op_30_Details ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Work_Orders_Op_30_Details.WO_ID LEFT OUTER JOIN
                      dbo.Work_Orders_Op_20_Details ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Work_Orders_Op_20_Details.WO_ID LEFT OUTER JOIN
                      dbo.Work_Orders_Op_10_Details ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Work_Orders_Op_10_Details.WO_ID LEFT OUTER JOIN
                      dbo.UDData ON dbo.WORK_ORDERS.UDF6__UDData_ID = dbo.UDData.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_5 ON dbo.WORK_ORDERS.UDF5__UDData_ID = UDData_5.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_4 ON dbo.WORK_ORDERS.UDF4__UDData_ID = UDData_4.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_3 ON dbo.WORK_ORDERS.UDF3__UDData_ID = UDData_3.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON dbo.WORK_ORDERS.UDF2__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON dbo.WORK_ORDERS.UDF1__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.Part AS Part_1 ON dbo.WORK_ORDERS.Part_ID__Part_id = Part_1.Part_Id ON dbo.WO_STATUS.WO_status_Id = dbo.WORK_ORDERS.Status__Wo_Status_Id ON 
                      dbo.SALES_ORDERS.SALES_ORDERS_ID = dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID
WHERE     (dbo.WORK_ORDERS.WO_No > '''')
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Works_Orders_Detailed_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -288
         Left = 0
      End
      Begin Tables = 
         Begin Table = "COMPANYS_2"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDERS"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 282
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WO_STATUS"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 335
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Work_Orders_Op_140_Details"
            Begin Extent = 
               Top = 246
               Left = 236
               Bottom = 350
               Right = 408
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines"
            Begin Extent = 
               Top = 354
               Left = 38
               Bottom = 473
               Right = 320
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 474
               Left = 38
               Bottom = 593
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 67
         End
         Begin Table = "Work_Order_Main_Material"
            Begin Extent = 
               Top = 594
               Left = 38
               Bottom = 713
             ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Works_Orders_Detailed_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Works_Orders_Detailed_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'  Right = 264
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Work_Orders_Op_160_Details"
            Begin Extent = 
               Top = 594
               Left = 302
               Bottom = 698
               Right = 474
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Work_Orders_Op_150_Details"
            Begin Extent = 
               Top = 702
               Left = 302
               Bottom = 806
               Right = 474
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Work_Orders_Op_130_Details"
            Begin Extent = 
               Top = 714
               Left = 38
               Bottom = 818
               Right = 210
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Work_Orders_Op_120_Details"
            Begin Extent = 
               Top = 810
               Left = 248
               Bottom = 914
               Right = 420
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Work_Orders_Op_110_Details"
            Begin Extent = 
               Top = 822
               Left = 38
               Bottom = 926
               Right = 210
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Work_Orders_Op_100_Details"
            Begin Extent = 
               Top = 918
               Left = 248
               Bottom = 1022
               Right = 420
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Work_Orders_Op_90_Details"
            Begin Extent = 
               Top = 930
               Left = 38
               Bottom = 1034
               Right = 204
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Work_Orders_Op_80_Details"
            Begin Extent = 
               Top = 1026
               Left = 242
               Bottom = 1130
               Right = 408
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Work_Orders_Op_70_Details"
            Begin Extent = 
               Top = 1038
               Left = 38
               Bottom = 1142
               Right = 204
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Work_Orders_Op_60_Details"
            Begin Extent = 
               Top = 1134
               Left = 242
               Bottom = 1238
               Right = 408
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Work_Orders_Op_50_Details"
            Begin Extent = 
               Top = 1146
               Left = 38
               Bottom = 1250
               Right = 204
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Work_Orders_Op_40_Details"
            Begin Extent = 
               Top = 1242
               Left = 242
               Bottom = 1346
               Right = 408
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Work_Orders_Op_30_Details"
            Begin Extent = 
               Top = 1254
               Left = 38
               Bottom = 1358
               Right = 204
            End
            DisplayFlags = 280
            TopCol' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Works_Orders_Detailed_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane3' , N'SCHEMA',N'dbo', N'VIEW',N'Works_Orders_Detailed_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane3', @value=N'umn = 0
         End
         Begin Table = "Work_Orders_Op_20_Details"
            Begin Extent = 
               Top = 1350
               Left = 242
               Bottom = 1454
               Right = 408
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Work_Orders_Op_10_Details"
            Begin Extent = 
               Top = 1362
               Left = 38
               Bottom = 1466
               Right = 204
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData"
            Begin Extent = 
               Top = 1458
               Left = 242
               Bottom = 1577
               Right = 418
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_5"
            Begin Extent = 
               Top = 1470
               Left = 38
               Bottom = 1589
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_4"
            Begin Extent = 
               Top = 1578
               Left = 252
               Bottom = 1697
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_3"
            Begin Extent = 
               Top = 1590
               Left = 38
               Bottom = 1709
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_2"
            Begin Extent = 
               Top = 1698
               Left = 252
               Bottom = 1817
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_1"
            Begin Extent = 
               Top = 1710
               Left = 38
               Bottom = 1829
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part_1"
            Begin Extent = 
               Top = 1830
               Left = 38
               Bottom = 1949
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 3420
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Works_Orders_Detailed_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Works_Orders_Detailed_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=3 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Works_Orders_Detailed_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Purchase_Enquiry_Qty_With_Prices]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Purchase_Enquiry_Qty_With_Prices]
AS
SELECT     dbo.Purchase_Enquiry_Qty.Purchase_Enquiry_Qty_ID, dbo.Purchase_Enquiry_Qty.Parent__Purchase_Enquiry_ID, dbo.Purchase_Enquiry_Qty.Qty, 
                      UOM_From_Conversion_Id_1.Unit_of_Measure AS UOM, dbo.Purchase_Enquiry_Qty.No_RFQ_Sent AS [No RFQ Sent], 
                      dbo.Purchase_Enquiry_Qty.No_Prices_Recieved AS [No Prices Received], dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name AS Supplier, 
                      dbo.Supplier_Part_Qty_Price.Qty AS [Supplier Qty], dbo.Supplier_Part_Qty_Price.Price, UOM_From_Conversion_Id_1.Unit_of_Measure AS [Supplier UOM], 
                      dbo.Supplier_Part_Qty_Price.Lead_Time_in_Days AS [Lead Time], dbo.Supplier_Part_Qty_Price.Stock_qty AS [Stock Qty], 
                      dbo.Supplier_Part_Qty_Price.Stock_Price AS [Stock Price], dbo.Supplier_Part_Qty_Price.Supplier_Part_qty_Price_id, 
                      dbo.COMPANYS.Default_Currency__MultiCurrency_ID
FROM         dbo.COMPANYS RIGHT OUTER JOIN
                      dbo.Purchase_Enquiry_Qty LEFT OUTER JOIN
                      dbo.UOM_From_Conversion_Id UOM_From_Conversion_Id_1 RIGHT OUTER JOIN
                      dbo.Supplier_Part_Qty_Price ON UOM_From_Conversion_Id_1.Conversion_Id = dbo.Supplier_Part_Qty_Price.Uom__Conversion_Id ON 
                      dbo.Purchase_Enquiry_Qty.Purchase_Enquiry_Qty_ID = dbo.Supplier_Part_Qty_Price.PriceFor__Purchase_Enquiry_Qty_ID ON 
                      dbo.COMPANYS.Company_Id = dbo.Supplier_Part_Qty_Price.Supplier__Company_Id LEFT OUTER JOIN
                      dbo.UOM_From_Conversion_Id UOM_From_Conversion_Id_2 ON dbo.Purchase_Enquiry_Qty.UOM__Conversions_ID = UOM_From_Conversion_Id_2.Conversion_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Purchase_Enquiry_Qty_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Purchase_Enquiry_Qty_List]
AS
SELECT     dbo.Purchase_Enquiry_Qty.Purchase_Enquiry_Qty_ID, dbo.Purchase_Enquiry_Qty.Parent__Purchase_Enquiry_ID, dbo.Purchase_Enquiry_Qty.Qty, 
                      dbo.UOM_From_Conversion_Id.Unit_of_Measure AS UOM, dbo.Purchase_Enquiry_Qty.No_RFQ_Sent AS [No RFQ Sent], 
                      dbo.Purchase_Enquiry_Qty.No_Prices_Recieved AS [No Prices Received]
FROM         dbo.Purchase_Enquiry_Qty LEFT OUTER JOIN
                      dbo.UOM_From_Conversion_Id ON dbo.Purchase_Enquiry_Qty.UOM__Conversions_ID = dbo.UOM_From_Conversion_Id.Conversion_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Purchase_Order_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Purchase_Order_List]
AS
SELECT     dbo.Purchase_Order.Purchase_Order_ID, dbo.Purchase_Order.Date_Raised AS Date, dbo.Purchase_Order.Date_Sent AS [Date sent], 
                      dbo.Purchase_Order.Po_No AS [PO No], dbo.Purchase_Order.Reference, dbo.Purchase_Order.Internal_Notes_non_rtf AS [Internal Note], 
                      dbo.Purchase_Order.Supplier__COMPANYS_ID, dbo.Po_Type.PO_Type AS [PO Type], dbo.CONTACTS.Name AS Contact, 
                      dbo.Purchase_order_Status.Purchase_Order_Status AS Status, dbo.COMPANYS.Name AS Supplier, dbo.COMPANYS.Company_No AS [Company No], 
                      dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, dbo.Employee.Name AS [Raised By], dbo.UDData.UDData_Data AS POUserDefinable1, 
                      UDData_1.UDData_Data AS POUserDefinable2, UDData_2.UDData_Data AS POUserDefinable3, UDData_3.UDData_Data AS POUserDefinable4, 
                      UDData_4.UDData_Data AS POUserDefinable5, UDData_5.UDData_Data AS POUserDefinable6, dbo.Purchase_order_Status.Purchase_order_StatuS_Id, 
                      dbo.Purchase_Order.Currency_Total_Exc_Vat AS [Total Exc Vat], dbo.Purchase_Order.Currency_Total_Vat AS [Total Vat], 
                      dbo.Purchase_Order.Currency_Total_Inc_Vat AS [Total Inc Vat], Employee_1.Name AS [Authorised By], dbo.Purchase_Order.Authorised_Date AS [Authorised Date], 
                      dbo.Purchase_Order.Purchase__Authorised AS Authorised, dbo.PO_Receipt_Received.[Date Received]
FROM         dbo.COMPANYS RIGHT OUTER JOIN
                      dbo.MULTICURRENCY RIGHT OUTER JOIN
                      dbo.UDData AS UDData_2 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_4 RIGHT OUTER JOIN
                      dbo.Purchase_Order LEFT OUTER JOIN
                      dbo.PO_Receipt_Received ON dbo.Purchase_Order.Purchase_Order_ID = dbo.PO_Receipt_Received.[PO ID] LEFT OUTER JOIN
                      dbo.Employee AS Employee_1 ON dbo.Purchase_Order.Authorised_By = Employee_1.Employee_Id LEFT OUTER JOIN
                      dbo.UDData AS UDData_5 ON dbo.Purchase_Order.UDF6__UDData_ID = UDData_5.UDData_ID ON 
                      UDData_4.UDData_ID = dbo.Purchase_Order.UDF5__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_3 ON dbo.Purchase_Order.UDF4__UDData_ID = UDData_3.UDData_ID ON 
                      UDData_2.UDData_ID = dbo.Purchase_Order.UDF3__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON dbo.Purchase_Order.UDF2__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.UDData ON dbo.Purchase_Order.UDF1__UDData_ID = dbo.UDData.UDData_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.Purchase_Order.Raised_By_id__Employee_id = dbo.Employee.Employee_Id ON 
                      dbo.MULTICURRENCY.MultiCurrency_ID = dbo.Purchase_Order.Currency__Currency_Id LEFT OUTER JOIN
                      dbo.Po_Type ON dbo.Purchase_Order.Type__Po_Type_Id = dbo.Po_Type.Po_Type_ID ON 
                      dbo.COMPANYS.Company_Id = dbo.Purchase_Order.Supplier__COMPANYS_ID LEFT OUTER JOIN
                      dbo.Purchase_order_Status ON dbo.Purchase_Order.Status__Purchase_order_Status_Id = dbo.Purchase_order_Status.Purchase_order_StatuS_Id LEFT OUTER JOIN
                      dbo.CONTACTS ON dbo.Purchase_Order.Contact_id__CONTACTS_ID = dbo.CONTACTS.Contact_id
WHERE     (dbo.Purchase_Order.Po_No > '''')
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Last_Purchased_Part_PO]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Last_Purchased_Part_PO]
AS
SELECT        TOP (100) PERCENT dbo.Po_Lines.Po_Lines_ID, dbo.Part.Part_No, dbo.Purchase_Order.Po_No, dbo.Part.Part_Id, dbo.Po_Lines.Wo__WORK_ORDERS_ID, 
                         dbo.Po_Lines.Date_Added, dbo.Po_Lines.Date_Promised, dbo.Po_Lines.Date_Required, dbo.Purchase_order_Status.Purchase_Order_Status AS [PO Status], 
                         dbo.Po_Lines.Qty_Delivered AS [QTY Delivered], dbo.COMPANYS.Name AS [Supplier Name]
FROM            dbo.Purchase_Order INNER JOIN
                         dbo.Po_Lines ON dbo.Purchase_Order.Purchase_Order_ID = dbo.Po_Lines.Po__PO_ID INNER JOIN
                         dbo.First_PO ON dbo.Po_Lines.Po_Lines_ID = dbo.First_PO.[PO Line ID] INNER JOIN
                         dbo.Purchase_order_Status ON dbo.Purchase_order_Status.Purchase_order_StatuS_Id = dbo.Purchase_Order.Status__Purchase_order_Status_Id INNER JOIN
                         dbo.COMPANYS ON dbo.Purchase_Order.Supplier__COMPANYS_ID = dbo.COMPANYS.Company_Id INNER JOIN
                         dbo.Part ON dbo.Po_Lines.Part__Part_id = dbo.Part.Part_Id
ORDER BY dbo.Po_Lines.Date_Added
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Invoices_List_With_Parts]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Invoices_List_With_Parts]
AS
SELECT     dbo.Invoices_List.INVOICES_ID, dbo.Invoices_List.[Date Raised], dbo.Invoices_List.[Due Date], dbo.Invoices_List.[Invoice No], dbo.Invoices_List.[Sent To Accounts], 
                      dbo.Invoices_List.[Tax Date], dbo.Invoices_List.Company, dbo.Invoices_List.[Sales Person], dbo.Invoices_List.Status, dbo.Invoices_List.Contact, 
                      dbo.Invoices_List.Currency, dbo.Invoices_List.Address1, dbo.Invoices_List.Address2, dbo.Invoices_List.Address3, dbo.Invoices_List.Postcode, 
                      dbo.Invoices_List.[Total Exc Vat], dbo.Invoices_List.Vat, dbo.Invoices_List.[Total Inc Vat], dbo.Invoices_List.Posted, dbo.Invoices_List.ForCompany__COMPANYS_ID, 
                      dbo.Invoices_List.Notes, dbo.Invoices_List.UserDefinable1, dbo.Invoices_List.UserDefinable2, dbo.Invoices_List.UserDefinable3, dbo.Invoices_List.UserDefinable4, 
                      dbo.Invoices_List.UserDefinable5, dbo.Invoices_List.UserDefinable6, dbo.Invoices_List.[EU Country Code], dbo.Invoices_List.Country, 
                      dbo.Invoices_List.[Invoice Paid], dbo.Invoice_Part.Invoice_Part_ID, dbo.Invoice_Part.Description_Non_Rtf AS Description, dbo.Invoice_Part.Invoice__INVOICES_ID, 
                      dbo.Invoice_Part.Price, dbo.Invoice_Part.Qty, dbo.Invoice_Part.Qty_Credited AS [Qty Credited], dbo.Invoice_Part.Ref AS Reference, 
                      dbo.Invoice_Part.Sent_To_Accounts AS [Line Sent To Accounts], dbo.Invoice_Part.So_line__Sales_Order_Lines_ID, dbo.Invoice_Part.Total, 
                      dbo.Invoice_Part.Value_Credited AS [Value Credited], dbo.Invoice_Part.VAT AS [Line VAT], dbo.Invoice_Part.VAT_Rate AS [VAT Rate], dbo.Part.Part_No AS [Part No], 
                      dbo.Delivery_Item.Ref AS [Delivery Ref], dbo.Invoice_Part_Status.Invoice_Item_Status AS [Line Status], dbo.Part.Part_Id AS [Part ID], 
                      dbo.Group_Code.Group_Code AS [Group Code], dbo.Delivery.Advice_No AS [Advice No], dbo.Sales_Order_Lines.Contract_No AS [Contract No], dbo.Nominals.Nominal, 
                      dbo.Invoice_Part.Value_Paid AS [Value Paid], dbo.SALES_ORDERS.Customers_PO AS [Customers PO], UDData_1.UDData_Data AS [SO UserDefinable1], 
                      UDData_2.UDData_Data AS [SO UserDefinable2], UDData_3.UDData_Data AS [SO UserDefinable3], UDData_4.UDData_Data AS [SO UserDefinable4], 
                      UDData_5.UDData_Data AS [SO UserDefinable5], UDData_6.UDData_Data AS [SO UserDefinable6], dbo.Invoice_Part.Paid, 
                      dbo.Part_Comodity_Codes.Comodity_Code AS [Commodity Code], dbo.Part_Comodity_Codes.Description AS [Commodity Description], 
                      dbo.Part.Finnished_Weight AS [Finished Weight], UDData_7.UDData_Data AS [Company UD Data 1], UDData_8.UDData_Data AS [Company UD Data 2], 
                      UDData_9.UDData_Data AS [Company UD Data 3], UDData_10.UDData_Data AS [Company UD Data 4], UDData_11.UDData_Data AS [Company UD Data 5], 
                      UDData_12.UDData_Data AS [Company UD Data 6], dbo.INDUSTRY.Industry AS [SO Industry], dbo.Invoice_Part.Cust_Return AS [CR Pending], 
                      UDData_17.UDData_Data AS [SO UD Data 1], UDData_13.UDData_Data AS [SO UD Data 2], UDData_14.UDData_Data AS [SO UD Data 3], 
                      UDData_15.UDData_Data AS [SO UD Data 4], UDData_16.UDData_Data AS [SO UD Data 5], dbo.UDData.UDData_Data AS [SO UD Data 6], 
                      dbo.Sales_Order_Lines.Qty AS [SO Line Qty]
FROM         dbo.INDUSTRY RIGHT OUTER JOIN
                      dbo.UDData AS UDData_14 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_15 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_16 RIGHT OUTER JOIN
                      dbo.UDData RIGHT OUTER JOIN
                      dbo.SALES_ORDERS ON dbo.UDData.UDData_ID = dbo.SALES_ORDERS.UDF6__UDData_ID ON UDData_16.UDData_ID = dbo.SALES_ORDERS.UDF5__UDData_ID ON
                       UDData_15.UDData_ID = dbo.SALES_ORDERS.UDF4__UDData_ID ON UDData_14.UDData_ID = dbo.SALES_ORDERS.UDF3__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_13 ON dbo.SALES_ORDERS.UDF2__UDData_ID = UDData_13.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_17 ON dbo.SALES_ORDERS.UDF1__UDData_ID = UDData_17.UDData_ID ON 
                      dbo.INDUSTRY.Industry_Id = dbo.SALES_ORDERS.type_ID__Industry RIGHT OUTER JOIN
                      dbo.UDData AS UDData_3 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_4 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_5 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_6 RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON UDData_6.UDData_ID = dbo.Sales_Order_Lines.UDF6__UDData_ID ON 
                      UDData_5.UDData_ID = dbo.Sales_Order_Lines.UDF5__UDData_ID ON UDData_4.UDData_ID = dbo.Sales_Order_Lines.UDF4__UDData_ID ON 
                      UDData_3.UDData_ID = dbo.Sales_Order_Lines.UDF3__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON dbo.Sales_Order_Lines.UDF2__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON dbo.Sales_Order_Lines.UDF1__UDData_ID = UDData_1.UDData_ID ON 
                      dbo.SALES_ORDERS.SALES_ORDERS_ID = dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID RIGHT OUTER JOIN
                      dbo.Invoice_Part LEFT OUTER JOIN
                      dbo.Nominals ON dbo.Invoice_Part.Nominal__Nominals_ID = dbo.Nominals.Nominal_ID ON 
                      dbo.Sales_Order_Lines.Sales_Order_Lines_ID = dbo.Invoice_Part.So_line__Sales_Order_Lines_ID RIGHT OUTER JOIN
                      dbo.Invoices_List ON dbo.Invoice_Part.Invoice__INVOICES_ID = dbo.Invoices_List.INVOICES_ID LEFT OUTER JOIN
                      dbo.Invoice_Part_Status ON dbo.Invoice_Part.Status__Invoice_Part_Status_ID = dbo.Invoice_Part_Status.Invoice_Part_Status_ID LEFT OUTER JOIN
                      dbo.Group_Code RIGHT OUTER JOIN
                      dbo.Part LEFT OUTER JOIN
                      dbo.Part_Comodity_Codes ON dbo.Part.Comodity__Comodity_id = dbo.Part_Comodity_Codes.Part_Comodity_Codes_id ON 
                      dbo.Group_Code.Groupcode_Id = dbo.Part.Groupcode__Groupcode_id ON dbo.Invoice_Part.Part__Part_id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Delivery LEFT OUTER JOIN
                      dbo.UDData AS UDData_7 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_11 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_12 RIGHT OUTER JOIN
                      dbo.COMPANYS ON UDData_12.UDData_ID = dbo.COMPANYS.UDF6__UDData_ID ON UDData_11.UDData_ID = dbo.COMPANYS.UDF5__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_10 ON dbo.COMPANYS.UDF4__UDData_ID = UDData_10.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_9 ON dbo.COMPANYS.UDF3__UDData_ID = UDData_9.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_8 ON dbo.COMPANYS.UDF2__UDData_ID = UDData_8.UDData_ID ON UDData_7.UDData_ID = dbo.COMPANYS.UDF1__UDData_ID ON 
                      dbo.Delivery.Company__Company_id = dbo.COMPANYS.Company_Id RIGHT OUTER JOIN
                      dbo.Delivery_Item ON dbo.Delivery.Delivery_ID = dbo.Delivery_Item.Delivery__Delivery_id ON 
                      dbo.Invoice_Part.delivery_Line__Delivery_Item_ID = dbo.Delivery_Item.Delivery_Item_ID
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Invoices_List_With_Parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -576
         Left = 0
      End
      Begin Tables = 
         Begin Table = "INDUSTRY"
            Begin Extent = 
               Top = 726
               Left = 252
               Bottom = 845
               Right = 412
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_14"
            Begin Extent = 
               Top = 774
               Left = 878
               Bottom = 893
               Right = 1054
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_15"
            Begin Extent = 
               Top = 929
               Left = 344
               Bottom = 1048
               Right = 520
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_16"
            Begin Extent = 
               Top = 910
               Left = 564
               Bottom = 1029
               Right = 740
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData"
            Begin Extent = 
               Top = 894
               Left = 748
               Bottom = 1013
               Right = 924
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDERS"
            Begin Extent = 
               Top = 846
               Left = 38
               Bottom = 985
               Right = 282
            End
            DisplayFlags = 280
            TopColumn = 50
         End
         Begin Table = "UDData_13"
            Begin Extent = 
               Top = 774
               Left = 664
               Bottom = 893
               Right = 840
            End
    ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Invoices_List_With_Parts'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Invoices_List_With_Parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'        DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_17"
            Begin Extent = 
               Top = 774
               Left = 450
               Bottom = 893
               Right = 626
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_3"
            Begin Extent = 
               Top = 246
               Left = 286
               Bottom = 365
               Right = 462
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_4"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_5"
            Begin Extent = 
               Top = 366
               Left = 252
               Bottom = 485
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_6"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 320
            End
            DisplayFlags = 280
            TopColumn = 24
         End
         Begin Table = "UDData_2"
            Begin Extent = 
               Top = 486
               Left = 252
               Bottom = 605
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_1"
            Begin Extent = 
               Top = 726
               Left = 38
               Bottom = 845
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Invoice_Part"
            Begin Extent = 
               Top = 966
               Left = 38
               Bottom = 1085
               Right = 286
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Nominals"
            Begin Extent = 
               Top = 1086
               Left = 38
               Bottom = 1205
               Right = 295
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Invoices_List"
            Begin Extent = 
               Top = 1206
               Left = 38
               Bottom = 1325
               Right = 272
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Invoice_Part_Status"
            Begin Extent = 
               Top = 1326
               Left = 38
               Bottom = 1415
               Right = 242
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Group_Code"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 299
            End
            DisplayFlags = 280
 ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Invoices_List_With_Parts'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane3' , N'SCHEMA',N'dbo', N'VIEW',N'Invoices_List_With_Parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane3', @value=N'           TopColumn = 0
         End
         Begin Table = "Part_Comodity_Codes"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 248
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Delivery"
            Begin Extent = 
               Top = 1416
               Left = 38
               Bottom = 1535
               Right = 278
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_7"
            Begin Extent = 
               Top = 1326
               Left = 280
               Bottom = 1445
               Right = 456
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_11"
            Begin Extent = 
               Top = 1536
               Left = 38
               Bottom = 1655
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_12"
            Begin Extent = 
               Top = 1536
               Left = 252
               Bottom = 1655
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 1656
               Left = 38
               Bottom = 1775
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_10"
            Begin Extent = 
               Top = 1776
               Left = 38
               Bottom = 1895
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_9"
            Begin Extent = 
               Top = 1776
               Left = 252
               Bottom = 1895
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_8"
            Begin Extent = 
               Top = 1896
               Left = 38
               Bottom = 2015
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Delivery_Item"
            Begin Extent = 
               Top = 2016
               Left = 38
               Bottom = 2135
               Right = 303
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 1605
         Table = 2010
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Invoices_List_With_Parts'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Invoices_List_With_Parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=3 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Invoices_List_With_Parts'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Po_Receipt_List_With_Parts]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Po_Receipt_List_With_Parts]
AS
SELECT     dbo.Po_Receipt_List.Po_Receipt_ID, dbo.Po_Receipt_List.[Advice No], dbo.Po_Receipt_List.Date, dbo.Po_Receipt_List.[PO No], dbo.Po_Receipt_List.Company, 
                      dbo.Po_Receipt_List.Invoiced, dbo.Po_Receipt_List.Status, dbo.Po_Receipt_List.[Total Value], dbo.Po_Receipt_List.Company_Id, 
                      dbo.Po_Receipt_List.[Marked As Invoiced], dbo.Part.Part_No AS [Part No], dbo.Po_Lines.Description_Non_Rtf AS Description, dbo.Po_Receipt_Line.Qty AS [Stock Qty], 
                      dbo.Po_Receipt_Line.Qty_Invoiced AS [QTy Invoiced], dbo.Po_Receipt_Line.Qty_Returned AS [Qty Returned], dbo.Po_Receipt_Line.Cost, dbo.Grn.Grn_No AS [Grn No], 
                      dbo.Po_Receipt_Line.Transaction_Qty AS Qty, dbo.UOM_From_Conversion_Id.Unit_of_Measure AS UOM, 
                      dbo.Po_Receipt_Line.po_line__Po_Lines_ID AS Po_Lines_ID, dbo.Grn.Grn_ID AS [Grn ID], dbo.Po_Receipt_Line.Po_Receipt_Line_ID, dbo.Po_Receipt_Line.Value, 
                      dbo.Po_Lines.Item_No AS [PO Line Item No], dbo.Sales_Order_Lines.Contract_No AS [Contract No], dbo.WORK_ORDERS.WO_No AS [WO No], 
                      dbo.Supplier_Part.Supplier_Part_No AS [Supplier Part No], dbo.Po_Lines.Breadth_Ordered AS [Breadth Ordered], dbo.Po_Lines.Length_Ordered AS [Length Ordered], 
                      dbo.Po_Lines.Price_Per_Tonne AS [Price Per Tonne], 
                      dbo.Po_Receipt_Line.Qty * dbo.Po_Lines.Breadth_Ordered * dbo.Po_Lines.Length_Ordered * dbo.Part.Wieght AS Tonnage, 
                      dbo.Group_Code.Group_Code AS [Group Code], dbo.Po_Receipt_Line.Complete_PO_Line AS Complete, dbo.Employee.Name AS [Inspected By], 
                      dbo.Non_Conformance.Non_Conformance_No AS [NC No], dbo.Inspection_Result.Result AS [Inspection Result], dbo.Shipped_Direct.Direct AS [Shipped Direct], 
                      dbo.SubContract_Delivery.SubContract_Delivery_ID AS [Consignment No], dbo.Po_Receipt_Line.Inspection_Details AS [Inspection Details], 
                      dbo.Po_Receipt_List.[Accepted By], dbo.Po_Receipt_List.[Raised By], dbo.Po_Receipt_List.Modified, dbo.Po_Receipt_List.[Modified By], 
                      dbo.Part_Comodity_Codes.Comodity_Code AS [Comodity Code]
FROM         dbo.Po_Lines LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Po_Lines.Wo__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Purchase_Order LEFT OUTER JOIN
                      dbo.Supplier_Part ON dbo.Purchase_Order.Supplier__COMPANYS_ID = dbo.Supplier_Part.Supplier__Companys_id ON 
                      dbo.Po_Lines.Part__Part_id = dbo.Supplier_Part.Part__Part_id AND dbo.Po_Lines.Po__PO_ID = dbo.Purchase_Order.Purchase_Order_ID LEFT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.Po_Lines.SoLine__Sales_Order_Lines_ID = dbo.Sales_Order_Lines.Sales_Order_Lines_ID LEFT OUTER JOIN
                      dbo.Part LEFT OUTER JOIN
                      dbo.Part_Comodity_Codes ON dbo.Part.Comodity__Comodity_id = dbo.Part_Comodity_Codes.Part_Comodity_Codes_id LEFT OUTER JOIN
                      dbo.Group_Code ON dbo.Part.Groupcode__Groupcode_id = dbo.Group_Code.Groupcode_Id ON dbo.Po_Lines.Part__Part_id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Inspection_Result RIGHT OUTER JOIN
                      dbo.SubContract_Delivery RIGHT OUTER JOIN
                      dbo.Po_Receipt_Line ON dbo.SubContract_Delivery.SubContract_Delivery_ID = dbo.Po_Receipt_Line.POR__SubContract_Delivery_ID LEFT OUTER JOIN
                      dbo.Shipped_Direct ON dbo.Po_Receipt_Line.Direct__Shipped_Direct_ID = dbo.Shipped_Direct.Shipped_Direct_ID ON 
                      dbo.Inspection_Result.Inspection_Result_ID = dbo.Po_Receipt_Line.Result__Inspection_Result_ID LEFT OUTER JOIN
                      dbo.Non_Conformance ON dbo.Po_Receipt_Line.Insp__Non_Conformance_ID = dbo.Non_Conformance.Non_Conformance_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.Po_Receipt_Line.Inspected__Employee_ID = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.UOM_From_Conversion_Id ON dbo.Po_Receipt_Line.Transaction_UOM__Conversions_ID = dbo.UOM_From_Conversion_Id.Conversion_Id LEFT OUTER JOIN
                      dbo.Grn ON dbo.Po_Receipt_Line.Grn_Id__Grn_ID = dbo.Grn.Grn_ID ON dbo.Po_Lines.Po_Lines_ID = dbo.Po_Receipt_Line.po_line__Po_Lines_ID RIGHT OUTER JOIN
                      dbo.Po_Receipt_List ON dbo.Po_Receipt_Line.Po_Receipt__PO_Receipt_Id = dbo.Po_Receipt_List.Po_Receipt_ID
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Po_Receipt_List_With_Parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -576
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Inspection_Result"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 230
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SubContract_Delivery"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 296
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Po_Receipt_Line"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 300
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Shipped_Direct"
            Begin Extent = 
               Top = 6
               Left = 268
               Bottom = 125
               Right = 446
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Non_Conformance"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 326
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Employee"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UOM_From_Conversion_Id"
            Begin Extent = 
               Top = 486
               Left = 305
               Bottom = 590
             ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Po_Receipt_List_With_Parts'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Po_Receipt_List_With_Parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'  Right = 476
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Grn"
            Begin Extent = 
               Top = 594
               Left = 305
               Bottom = 713
               Right = 469
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Group_Code"
            Begin Extent = 
               Top = 726
               Left = 38
               Bottom = 845
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Po_Lines"
            Begin Extent = 
               Top = 846
               Left = 38
               Bottom = 965
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 966
               Left = 38
               Bottom = 1085
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Purchase_Order"
            Begin Extent = 
               Top = 1086
               Left = 38
               Bottom = 1205
               Right = 341
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Supplier_Part"
            Begin Extent = 
               Top = 1206
               Left = 38
               Bottom = 1325
               Right = 265
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines"
            Begin Extent = 
               Top = 1326
               Left = 38
               Bottom = 1445
               Right = 320
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Po_Receipt_List"
            Begin Extent = 
               Top = 1446
               Left = 38
               Bottom = 1565
               Right = 221
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part_Comodity_Codes"
            Begin Extent = 
               Top = 582
               Left = 514
               Bottom = 831
               Right = 724
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 2220
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Po_Receipt_List_With_Parts'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Po_Receipt_List_With_Parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Po_Receipt_List_With_Parts'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Report_Labels_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Report_Labels_List]
AS
SELECT     dbo.Reports_List.Report_ID, dbo.Reports_List.[Text Display], dbo.Reports_List.Customer_Specific, dbo.Reports_List.Part_Specific, 
                      dbo.Reports_Companies_List.Company_ID, dbo.Reports_Parts_List.Part_ID, dbo.Reports_Users_List.User_Id__User_Id, dbo.Reports_List.rptGroup_ID
FROM         dbo.Reports_List LEFT OUTER JOIN
                      dbo.Reports_Users_List ON dbo.Reports_List.Report_ID = dbo.Reports_Users_List.Report_Id__Reports_Report_Id LEFT OUTER JOIN
                      dbo.Reports_Parts_List ON dbo.Reports_List.Report_ID = dbo.Reports_Parts_List.Report_ID LEFT OUTER JOIN
                      dbo.Reports_Companies_List ON dbo.Reports_List.Report_ID = dbo.Reports_Companies_List.Report_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Scheduled_Deliveries]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Scheduled_Deliveries]
AS
SELECT     dbo.SO_Delivery_Schedule.SO_Delivery_Schedule_ID, dbo.SO_Delivery_Schedule.Delivery_Date AS [Delivery Date], 
                      dbo.SO_Delivery_Schedule.Dispatch_Date AS [Despatch Date], dbo.SO_Delivery_Schedule.created, Employee_2.Name AS [Created By], 
                      dbo.SO_Delivery_Schedule.Firm, dbo.SO_Delivery_Schedule.Qty, dbo.SO_Delivery_Schedule.Qty_Delivered AS [Qty Delivered], 
                      dbo.SO_Delivery_Schedule.Qty_Processed AS [Qty Processed], dbo.SO_Delivery_Schedule.Qty_Returned AS [Qty Returned], dbo.SO_Delivery_Schedule.Reference, 
                      dbo.SO_Delivery_Schedule.Requested_Date AS [Requested Date], dbo.SO_Delivery_Schedule.Sales_Order_Lines_id, 
                      dbo.Sales_Order_Lines.Contract_No AS [Contract No], dbo.SALES_ORDERS.Sales_No AS [Sales No], dbo.SALES_ORDERS.Customers_ID__Companys, 
                      dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name AS Customer, dbo.Part.Part_No AS [Part No], dbo.Part.Description, 
                      dbo.Sales_Order_Lines.Blanket, dbo.Sales_Order_Lines.Scheduled, dbo.Sales_Order_Lines.Standard, 
                      dbo.Part.In_Stock * dbo.UOM_From_Conversion_Id.Multiply_By AS [UOM In Stock], dbo.UOM_From_Conversion_Id.Unit_of_Measure AS UOM, 
                      dbo.SO_Delivery_Schedule.Total_Qty AS [Total Qty], dbo.COMPANY_ADDRESS.Address1, dbo.COMPANY_ADDRESS.Address2, dbo.COMPANY_ADDRESS.Address3, 
                      dbo.COMPANY_ADDRESS.Country, dbo.COMPANY_ADDRESS.Postcode, dbo.COMPANY_ADDRESS.Fax, dbo.COMPANY_ADDRESS.Telephone, 
                      dbo.COMPANY_ADDRESS.Town, dbo.COMPANY_ADDRESS.Note_Non_RTF AS [Address Notes], UDData_18.UDData_Data AS UserDefinable1, 
                      UDData_1.UDData_Data AS UserDefinable2, UDData_2.UDData_Data AS UserDefinable3, UDData_3.UDData_Data AS UserDefinable4, 
                      UDData_4.UDData_Data AS UserDefinable5, UDData_5.UDData_Data AS UserDefinable6, dbo.Group_Code.Group_Code AS [Group Code], 
                      Employee_1.Name AS [Sales Person], dbo.SO_Delivery_Schedule.Notes_Non_RTF AS Notes, dbo.SO_Delivery_Schedule.Deleted, dbo.INDUSTRY.Industry, 
                      dbo.SALES_ORDERS.SALES_ORDERS_ID, dbo.Delivery_Line_In_Stock.[Del Line in Stock], dbo.Sales_Order_Lines.Notes_non_rtf AS [Line Notes], 
                      dbo.SO_Delivery_Schedule.Notes AS Formated_Notes, dbo.Quote_Line_Qty.Reference AS [Quote No], dbo.COMPANYS.CreditStatus AS [On Hold], 
                      dbo.Sales_Order_Lines.On_Hold AS [SO On Hold], dbo.SO_Delivery_Schedule.Forcast, UDData_6.UDData_Data AS SOUserDefinable1, 
                      UDData_7.UDData_Data AS SOUserDefinable2, UDData_8.UDData_Data AS SOUserDefinable3, UDData_9.UDData_Data AS SOUserDefinable4, 
                      UDData_10.UDData_Data AS SOUserDefinable5, UDData_11.UDData_Data AS SOUserDefinable6, 
                      dbo.SO_Delivery_Schedule.Scheduled_Complete_Date AS [Scheduled Complete Date], dbo.SALES_ORDERS.Customers_PO AS [Customers PO], 
                      dbo.Sales_Order_Lines.Week_No AS [Week No], 
                      dbo.Sales_Order_Lines.Qty - dbo.Sales_Order_Lines.Qty_Delivered + dbo.Sales_Order_Lines.Qty_Returned AS [Qty Outstanding], 
                      UDData_12.UDData_Data AS CustomerUDF1, UDData_13.UDData_Data AS CustomerUDF2, UDData_14.UDData_Data AS CustomerUDF3, 
                      UDData_15.UDData_Data AS CustomerUDF4, UDData_16.UDData_Data AS CustomerUDF5, UDData_17.UDData_Data AS CustomerUDF6, 
                      dbo.SO_Delivery_Schedule.Packing_Qty AS [Packing Qty], dbo.Sales_Order_Lines.On_Hire AS [On Hire], dbo.COMPANY_ADDRESS.Alternative_Name, 
                      dbo.Sales_Order_Lines.Priority, dbo.LOCATION.Location AS [Preferred Location], dbo.SALES_ORDERS.Customers_Order_date AS [Ordered Date], 
                      dbo.SALES_ORDER_LINE_STATUS.Sales_Order_line_Status AS [Line Status], dbo.Sales_Order_Lines.Run_No AS [Run No], 
                      dbo.Sales_Order_Lines.Sales_Order_Lines_ID AS [SO Line ID], dbo.SO_Delivery_Schedule.Grid_Sort_Order, dbo.Sales_Order_Lines.Direct_PO AS [Direct PO]
FROM         dbo.Delivery_Line_In_Stock RIGHT OUTER JOIN
                      dbo.SO_Delivery_Schedule ON dbo.Delivery_Line_In_Stock.SO_Delivery_Schedule_id = dbo.SO_Delivery_Schedule.SO_Delivery_Schedule_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_10 RIGHT OUTER JOIN
                      dbo.SALES_ORDER_LINE_STATUS RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON 
                      dbo.SALES_ORDER_LINE_STATUS.Sales_order_line_Status_Id = dbo.Sales_Order_Lines.Status__Sales_Order_Line_Status_Id LEFT OUTER JOIN
                      dbo.UDData AS UDData_11 ON dbo.Sales_Order_Lines.UDF6__UDData_ID = UDData_11.UDData_ID ON 
                      UDData_10.UDData_ID = dbo.Sales_Order_Lines.UDF5__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_9 ON dbo.Sales_Order_Lines.UDF4__UDData_ID = UDData_9.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_8 ON dbo.Sales_Order_Lines.UDF3__UDData_ID = UDData_8.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_7 ON dbo.Sales_Order_Lines.UDF2__UDData_ID = UDData_7.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_6 ON dbo.Sales_Order_Lines.UDF1__UDData_ID = UDData_6.UDData_ID LEFT OUTER JOIN
                      dbo.Quote_Line_Qty ON dbo.Sales_Order_Lines.Quote__Quote_Line_qty_Id = dbo.Quote_Line_Qty.Quote_Line_qty_id LEFT OUTER JOIN
                      dbo.INDUSTRY ON dbo.Sales_Order_Lines.Industry__INDUSTRY_ID = dbo.INDUSTRY.Industry_Id LEFT OUTER JOIN
                      dbo.UOM_From_Conversion_Id ON dbo.Sales_Order_Lines.UOM__Conversion_Id = dbo.UOM_From_Conversion_Id.Conversion_Id ON 
                      dbo.SO_Delivery_Schedule.Sales_Order_Lines_id = dbo.Sales_Order_Lines.Sales_Order_Lines_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_18 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_1 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_5 RIGHT OUTER JOIN
                      dbo.Group_Code RIGHT OUTER JOIN
                      dbo.LOCATION RIGHT OUTER JOIN
                      dbo.Part ON dbo.LOCATION.Location_id = dbo.Part.Preferred_Location__Location_id ON dbo.Group_Code.Groupcode_Id = dbo.Part.Groupcode__Groupcode_id ON 
                      UDData_5.UDData_ID = dbo.Part.UDF6__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_4 ON dbo.Part.UDF5__UDData_ID = UDData_4.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_3 ON dbo.Part.UDF4__UDData_ID = UDData_3.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON dbo.Part.UDF3__UDData_ID = UDData_2.UDData_ID ON UDData_1.UDData_ID = dbo.Part.UDF2__UDData_ID ON 
                      UDData_18.UDData_ID = dbo.Part.UDF1__UDData_ID ON dbo.Sales_Order_Lines.Part_Id__Part_Id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.UDData AS UDData_16 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_17 RIGHT OUTER JOIN
                      dbo.COMPANYS ON UDData_17.UDData_ID = dbo.COMPANYS.UDF6__UDData_ID ON UDData_16.UDData_ID = dbo.COMPANYS.UDF5__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_15 ON dbo.COMPANYS.UDF4__UDData_ID = UDData_15.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_14 ON dbo.COMPANYS.UDF3__UDData_ID = UDData_14.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_13 ON dbo.COMPANYS.UDF2__UDData_ID = UDData_13.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_12 ON dbo.COMPANYS.UDF1__UDData_ID = UDData_12.UDData_ID RIGHT OUTER JOIN
                      dbo.COMPANY_ADDRESS RIGHT OUTER JOIN
                      dbo.SALES_ORDERS LEFT OUTER JOIN
                      dbo.Employee AS Employee_1 ON dbo.SALES_ORDERS.Salesman_id__Employee = Employee_1.Employee_Id ON 
                      dbo.COMPANY_ADDRESS.Address_Id = dbo.SALES_ORDERS.Delivery__Company_Address_id ON 
                      dbo.COMPANYS.Company_Id = dbo.SALES_ORDERS.Customers_ID__Companys ON 
                      dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID = dbo.SALES_ORDERS.SALES_ORDERS_ID LEFT OUTER JOIN
                      dbo.Employee AS Employee_2 ON dbo.SO_Delivery_Schedule.created_by = Employee_2.Employee_Id
WHERE     (dbo.Sales_Order_Lines.Status__Sales_Order_Line_Status_Id < 8) AND 
                      (dbo.SO_Delivery_Schedule.Total_Qty > dbo.SO_Delivery_Schedule.Qty_Delivered - dbo.SO_Delivery_Schedule.Qty_Returned) AND 
                      (NOT (dbo.SO_Delivery_Schedule.Sales_Order_Lines_id IS NULL)) AND (NOT (dbo.SALES_ORDERS.Sales_No IS NULL)) OR
                      (dbo.Sales_Order_Lines.Status__Sales_Order_Line_Status_Id < 8) AND 
                      (dbo.SO_Delivery_Schedule.Total_Qty > dbo.SO_Delivery_Schedule.Qty_Delivered - dbo.SO_Delivery_Schedule.Qty_Returned) AND 
                      (dbo.SO_Delivery_Schedule.Sales_Order_Lines_id IS NULL) AND (dbo.SALES_ORDERS.Sales_No IS NULL)
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Scheduled_Deliveries', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[44] 4[18] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Delivery_Line_In_Stock"
            Begin Extent = 
               Top = 846
               Left = 38
               Bottom = 935
               Right = 249
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SO_Delivery_Schedule"
            Begin Extent = 
               Top = 726
               Left = 247
               Bottom = 845
               Right = 465
            End
            DisplayFlags = 280
            TopColumn = 21
         End
         Begin Table = "UDData_10"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDER_LINE_STATUS"
            Begin Extent = 
               Top = 6
               Left = 252
               Bottom = 125
               Right = 473
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 320
            End
            DisplayFlags = 280
            TopColumn = 3
         End
         Begin Table = "UDData_11"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_9"
            Begin Extent = 
               Top = 246
               Left = 252
               Bottom = 365
               Ri' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Scheduled_Deliveries'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Scheduled_Deliveries', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'ght = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_8"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_7"
            Begin Extent = 
               Top = 366
               Left = 252
               Bottom = 485
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_6"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Quote_Line_Qty"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "INDUSTRY"
            Begin Extent = 
               Top = 486
               Left = 252
               Bottom = 605
               Right = 412
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UOM_From_Conversion_Id"
            Begin Extent = 
               Top = 726
               Left = 38
               Bottom = 830
               Right = 209
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_18"
            Begin Extent = 
               Top = 846
               Left = 287
               Bottom = 965
               Right = 463
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_1"
            Begin Extent = 
               Top = 936
               Left = 38
               Bottom = 1055
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_5"
            Begin Extent = 
               Top = 966
               Left = 252
               Bottom = 1085
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Group_Code"
            Begin Extent = 
               Top = 1086
               Left = 38
               Bottom = 1205
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "LOCATION"
            Begin Extent = 
               Top = 1206
               Left = 38
               Bottom = 1325
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 1326
               Left = 38
               Bottom = 1445
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_4"
            Begin Extent = 
               Top = 1206
               Left = 285
               Bottom = 1325
               Right = 461
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_3"
            Begin Extent = 
               Top = 1446
               Left = 38
               Bottom = 1565
               Right = 214
            End
   ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Scheduled_Deliveries'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane3' , N'SCHEMA',N'dbo', N'VIEW',N'Scheduled_Deliveries', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane3', @value=N'         DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_2"
            Begin Extent = 
               Top = 1446
               Left = 252
               Bottom = 1565
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_16"
            Begin Extent = 
               Top = 1566
               Left = 38
               Bottom = 1685
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_17"
            Begin Extent = 
               Top = 1566
               Left = 252
               Bottom = 1685
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 1686
               Left = 38
               Bottom = 1805
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_15"
            Begin Extent = 
               Top = 1806
               Left = 38
               Bottom = 1925
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_14"
            Begin Extent = 
               Top = 1806
               Left = 252
               Bottom = 1925
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_13"
            Begin Extent = 
               Top = 1926
               Left = 38
               Bottom = 2045
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_12"
            Begin Extent = 
               Top = 1926
               Left = 252
               Bottom = 2045
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANY_ADDRESS"
            Begin Extent = 
               Top = 2046
               Left = 38
               Bottom = 2165
               Right = 277
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDERS"
            Begin Extent = 
               Top = 2166
               Left = 38
               Bottom = 2285
               Right = 282
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Employee_1"
            Begin Extent = 
               Top = 2286
               Left = 38
               Bottom = 2405
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Employee_2"
            Begin Extent = 
               Top = 2406
               Left = 38
               Bottom = 2525
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 84
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
     ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Scheduled_Deliveries'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane4' , N'SCHEMA',N'dbo', N'VIEW',N'Scheduled_Deliveries', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane4', @value=N'    Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1980
         Alias = 1350
         Table = 2175
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Scheduled_Deliveries'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Scheduled_Deliveries', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=4 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Scheduled_Deliveries'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Required]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Orders_Required]
AS
SELECT     dbo.Allocation_Outstanding.Allocations_ID, dbo.Allocation_Outstanding.Breadth, dbo.Allocation_Outstanding.Cancelled, dbo.Allocation_Outstanding.Complete, 
                      dbo.Allocation_Outstanding.[Date Created], dbo.Allocation_Outstanding.[Date Required], dbo.Allocation_Outstanding.Length, dbo.Allocation_Outstanding.Qty, 
                      dbo.Allocation_Outstanding.[Qty Complete], dbo.Allocation_Outstanding.[Qty Processed], dbo.Allocation_Outstanding.[Total Qty], dbo.Allocation_Outstanding.Type, 
                      dbo.Allocation_Outstanding.Source, dbo.Allocation_Outstanding.WO__Works_order_Id, dbo.Allocation_Outstanding.[For WO], 
                      dbo.Allocation_Outstanding.[For Contract No], dbo.Allocation_Outstanding.Released, dbo.Allocation_Outstanding.[Created By], 
                      dbo.Allocation_Outstanding.[Deleted From BOM], dbo.Allocation_Outstanding.[BOM Supplier], dbo.Allocation_Outstanding.Part__Part_Id, 
                      dbo.Allocation_Outstanding.[On Part BOM], dbo.Allocation_Outstanding.SO__Sales_Order_Line_id, dbo.Allocation_Outstanding.SO_Delivery_Schedule_id, 
                      dbo.Allocation_Outstanding.Purchase_Enquiry_Raised, dbo.Allocation_Outstanding.Notes, dbo.Allocation_Outstanding.[Week No], 
                      dbo.Allocation_Outstanding.[Wo Status], dbo.Parts_Required.Part_Id, dbo.Parts_Required.Type__Part_Type_Id, dbo.Parts_Required.[In Stock], 
                      dbo.Parts_Required.[Min Order], dbo.Parts_Required.[On Order], dbo.Parts_Required.[Part No], dbo.Parts_Required.[Re Order], 
                      dbo.Parts_Required.[Recomended Order], dbo.Parts_Required.[Total Required], dbo.Parts_Required.[Unit of Measure], dbo.Parts_Required.[Part Description], 
                      dbo.Parts_Required.[Drawing No], dbo.Parts_Required.Category, dbo.Parts_Required.[Group Code], dbo.Parts_Required.[Lead Time], dbo.Parts_Required.[Part type], 
                      dbo.Parts_Required.[Pref Supplier], dbo.Parts_Required.Country, dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name AS Customer, 
                      UDData_1.UDData_Data AS UserDefinable1, UDData_2.UDData_Data AS UserDefinable2, UDData_3.UDData_Data AS UserDefinable3, 
                      UDData_4.UDData_Data AS UserDefinable4, UDData_5.UDData_Data AS UserDefinable5, UDData_6.UDData_Data AS UserDefinable6, 
                      dbo.Allocation_Outstanding.Purchase_Enquiry_Raised AS [Purchase Enquiry Raised], dbo.Part_Status.Part_Status AS [Part Status], dbo.INDUSTRY.Industry, 
                      dbo.Allocation_Outstanding.Qty - dbo.Allocation_Outstanding.[Qty Processed] AS Outstanding, 
                      dbo.SALES_ORDER_LINE_STATUS.Sales_Order_line_Status AS [SO Line Status], dbo.Sales_Order_Lines.Priority AS [SO Priority], dbo.SO_Delivery_Schedule.Firm, 
                      dbo.SO_Delivery_Schedule.Dispatch_Date AS [Dispatch Date], dbo.SALES_ORDERS.Customers_PO AS [Customer PO]
FROM         dbo.SO_Delivery_Schedule RIGHT OUTER JOIN
                      dbo.Allocation_Outstanding ON dbo.SO_Delivery_Schedule.SO_Delivery_Schedule_ID = dbo.Allocation_Outstanding.SO_Delivery_Schedule_id LEFT OUTER JOIN
                      dbo.SALES_ORDERS LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.SALES_ORDERS.Customers_ID__Companys = dbo.COMPANYS.Company_Id RIGHT OUTER JOIN
                      dbo.SALES_ORDER_LINE_STATUS RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON 
                      dbo.SALES_ORDER_LINE_STATUS.Sales_order_line_Status_Id = dbo.Sales_Order_Lines.Status__Sales_Order_Line_Status_Id LEFT OUTER JOIN
                      dbo.INDUSTRY ON dbo.Sales_Order_Lines.Industry__INDUSTRY_ID = dbo.INDUSTRY.Industry_Id ON 
                      dbo.SALES_ORDERS.SALES_ORDERS_ID = dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID ON 
                      dbo.Allocation_Outstanding.SO__Sales_Order_Line_id = dbo.Sales_Order_Lines.Sales_Order_Lines_ID RIGHT OUTER JOIN
                      dbo.Parts_Required LEFT OUTER JOIN
                      dbo.UDData AS UDData_3 RIGHT OUTER JOIN
                      dbo.Part LEFT OUTER JOIN
                      dbo.UDData AS UDData_6 ON dbo.Part.UDF6__UDData_ID = UDData_6.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_5 ON dbo.Part.UDF5__UDData_ID = UDData_5.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_4 ON dbo.Part.UDF4__UDData_ID = UDData_4.UDData_ID ON UDData_3.UDData_ID = dbo.Part.UDF3__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON dbo.Part.UDF2__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON dbo.Part.UDF1__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.Part_Status ON dbo.Part.Status__Part_status_id = dbo.Part_Status.Part_Status_id ON dbo.Parts_Required.Part_Id = dbo.Part.Part_Id ON 
                      dbo.Allocation_Outstanding.Part__Part_Id = dbo.Parts_Required.Part_Id
WHERE     (dbo.Parts_Required.Type__Part_Type_Id = 1 OR
                      dbo.Parts_Required.Type__Part_Type_Id = 6 OR
                      dbo.Parts_Required.Type__Part_Type_Id = 9 OR
                      dbo.Parts_Required.Type__Part_Type_Id = 10 OR
                      dbo.Parts_Required.Type__Part_Type_Id = 11 OR
                      dbo.Parts_Required.Type__Part_Type_Id = 12) AND (dbo.Allocation_Outstanding.Type IS NULL) AND (dbo.Allocation_Outstanding.Released = 1 OR
                      dbo.Allocation_Outstanding.Released IS NULL) OR
                      (dbo.Allocation_Outstanding.Type = ''Manufactured'') AND (dbo.Allocation_Outstanding.Released = 1 OR
                      dbo.Allocation_Outstanding.Released IS NULL)
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Work_Orders_Required', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "SO_Delivery_Schedule"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 256
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Allocation_Outstanding"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 251
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDERS"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 282
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDER_LINE_STATUS"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 259
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 320
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "INDUSTRY"
            Begin Extent = 
               Top = 6
               Left = 294
               Bottom = 125
               Rig' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Work_Orders_Required'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Work_Orders_Required', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'ht = 454
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Parts_Required"
            Begin Extent = 
               Top = 726
               Left = 38
               Bottom = 845
               Right = 229
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_3"
            Begin Extent = 
               Top = 126
               Left = 289
               Bottom = 245
               Right = 465
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 846
               Left = 38
               Bottom = 965
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_6"
            Begin Extent = 
               Top = 486
               Left = 297
               Bottom = 605
               Right = 473
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_5"
            Begin Extent = 
               Top = 726
               Left = 267
               Bottom = 845
               Right = 443
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_4"
            Begin Extent = 
               Top = 966
               Left = 38
               Bottom = 1085
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_2"
            Begin Extent = 
               Top = 966
               Left = 252
               Bottom = 1085
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_1"
            Begin Extent = 
               Top = 1086
               Left = 38
               Bottom = 1205
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part_Status"
            Begin Extent = 
               Top = 1086
               Left = 252
               Bottom = 1190
               Right = 465
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Work_Orders_Required'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Work_Orders_Required', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Work_Orders_Required'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Purchase_Orders_Required]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Purchase_Orders_Required]
AS
SELECT     dbo.Allocation_Outstanding.Allocations_ID, dbo.Allocation_Outstanding.Breadth, dbo.Allocation_Outstanding.Cancelled, dbo.Allocation_Outstanding.Complete, 
                      dbo.Allocation_Outstanding.[Date Created], dbo.Allocation_Outstanding.[Date Required], dbo.Allocation_Outstanding.Length, dbo.Allocation_Outstanding.Qty, 
                      dbo.Allocation_Outstanding.[Qty Complete], dbo.Allocation_Outstanding.[Qty Processed], dbo.Allocation_Outstanding.[Total Qty], dbo.Allocation_Outstanding.Type, 
                      dbo.Allocation_Outstanding.Source, dbo.Allocation_Outstanding.WO__Works_order_Id, dbo.Allocation_Outstanding.[For WO], 
                      dbo.Allocation_Outstanding.[For Contract No], dbo.Allocation_Outstanding.Released, dbo.Allocation_Outstanding.[Created By], 
                      dbo.Allocation_Outstanding.[Deleted From BOM], dbo.Allocation_Outstanding.[BOM Supplier], dbo.Allocation_Outstanding.Part__Part_Id, 
                      dbo.Allocation_Outstanding.[On Part BOM], dbo.Allocation_Outstanding.SO__Sales_Order_Line_id, dbo.Allocation_Outstanding.SO_Delivery_Schedule_id, 
                      dbo.Allocation_Outstanding.Purchase_Enquiry_Raised, dbo.Allocation_Outstanding.Notes, dbo.Allocation_Outstanding.[Week No], 
                      dbo.Allocation_Outstanding.[Wo Status], dbo.Parts_Required.Part_Id, dbo.Parts_Required.Type__Part_Type_Id, dbo.Parts_Required.[In Stock], 
                      dbo.Parts_Required.[Min Order], dbo.Parts_Required.[On Order], dbo.Parts_Required.[Part No], dbo.Parts_Required.[Re Order], 
                      dbo.Parts_Required.[Recomended Order], dbo.Parts_Required.[Total Required], dbo.Parts_Required.[Unit of Measure], dbo.Parts_Required.[Part Description], 
                      dbo.Parts_Required.[Drawing No], dbo.Parts_Required.Category, dbo.Parts_Required.[Group Code], dbo.Parts_Required.[Lead Time], dbo.Parts_Required.[Part type], 
                      dbo.Parts_Required.[Pref Supplier], dbo.SALES_ORDERS.Customers_PO AS [Customers PO], dbo.COMPANYS.Company_No AS [Company No], 
                      dbo.COMPANYS.Name AS Customer, dbo.Allocation_Outstanding.Purchase_Enquiry_Raised AS [Purchase Enquiry Raised], dbo.INDUSTRY.Industry, 
                      dbo.SO_Delivery_Schedule.Firm, dbo.Parts_Required.[Total Required] - (dbo.Parts_Required.[In Stock] + dbo.Parts_Required.[On Order]) AS Net, 
                      UDData_1.UDData_Data AS UserDefined1, UDData_2.UDData_Data AS UserDefined2, UDData_3.UDData_Data AS UserDefined3, 
                      UDData_4.UDData_Data AS UserDefined4, UDData_5.UDData_Data AS UserDefined5, UDData_6.UDData_Data AS UserDefined6, 
                      UDData_7.UDData_Data AS SOL_UserDefined1, UDData_8.UDData_Data AS SOL_UserDefined2, UDData_9.UDData_Data AS SOL_UserDefined3, 
                      UDData_10.UDData_Data AS SOL_UserDefined4, UDData_11.UDData_Data AS SOL_UserDefined5, UDData_12.UDData_Data AS SOL_UserDefined6, 
                      dbo.SO_Delivery_Schedule.Dispatch_Date AS [Dispatch Date], dbo.Parts_Required.Country, dbo.Part.Notes_Non_RTF AS [Part Notes]
FROM         dbo.UDData AS UDData_10 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_12 RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON UDData_12.UDData_ID = dbo.Sales_Order_Lines.UDF6__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_11 ON dbo.Sales_Order_Lines.UDF5__UDData_ID = UDData_11.UDData_ID ON 
                      UDData_10.UDData_ID = dbo.Sales_Order_Lines.UDF4__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_9 ON dbo.Sales_Order_Lines.UDF3__UDData_ID = UDData_9.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_8 ON dbo.Sales_Order_Lines.UDF2__UDData_ID = UDData_8.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_7 ON dbo.Sales_Order_Lines.UDF1__UDData_ID = UDData_7.UDData_ID LEFT OUTER JOIN
                      dbo.INDUSTRY ON dbo.Sales_Order_Lines.Industry__INDUSTRY_ID = dbo.INDUSTRY.Industry_Id LEFT OUTER JOIN
                      dbo.SALES_ORDERS LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.SALES_ORDERS.Customers_ID__Companys = dbo.COMPANYS.Company_Id ON 
                      dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID = dbo.SALES_ORDERS.SALES_ORDERS_ID RIGHT OUTER JOIN
                      dbo.SO_Delivery_Schedule RIGHT OUTER JOIN
                      dbo.Allocation_Outstanding ON dbo.SO_Delivery_Schedule.SO_Delivery_Schedule_ID = dbo.Allocation_Outstanding.SO_Delivery_Schedule_id ON 
                      dbo.Sales_Order_Lines.Sales_Order_Lines_ID = dbo.Allocation_Outstanding.SO__Sales_Order_Line_id RIGHT OUTER JOIN
                      dbo.Parts_Required LEFT OUTER JOIN
                      dbo.Part LEFT OUTER JOIN
                      dbo.UDData AS UDData_6 ON dbo.Part.UDF6__UDData_ID = UDData_6.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_5 ON dbo.Part.UDF5__UDData_ID = UDData_5.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_4 ON dbo.Part.UDF4__UDData_ID = UDData_4.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON dbo.Part.UDF2__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_3 ON dbo.Part.UDF3__UDData_ID = UDData_3.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON dbo.Part.UDF1__UDData_ID = UDData_1.UDData_ID ON dbo.Parts_Required.Part_Id = dbo.Part.Part_Id ON 
                      dbo.Allocation_Outstanding.Part__Part_Id = dbo.Parts_Required.Part_Id
WHERE     (dbo.Parts_Required.Type__Part_Type_Id = 2 OR
                      dbo.Parts_Required.Type__Part_Type_Id = 3 OR
                      dbo.Parts_Required.Type__Part_Type_Id = 4 OR
                      dbo.Parts_Required.Type__Part_Type_Id = 5 OR
                      dbo.Parts_Required.Type__Part_Type_Id = 7 OR
                      dbo.Parts_Required.Type__Part_Type_Id = 8) AND (dbo.Allocation_Outstanding.Type IS NULL) OR
                      (dbo.Allocation_Outstanding.Type = ''Purchased'')
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Purchase_Orders_Required', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -1056
         Left = 0
      End
      Begin Tables = 
         Begin Table = "UDData_10"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_12"
            Begin Extent = 
               Top = 6
               Left = 252
               Bottom = 125
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 320
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_11"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_9"
            Begin Extent = 
               Top = 246
               Left = 252
               Bottom = 365
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_8"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_7"
            Begin Extent = 
               Top = 366
               Left = 252
               Bottom = 485
               Right = 428
            End
         ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Purchase_Orders_Required'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Purchase_Orders_Required', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'   DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "INDUSTRY"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDERS"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 282
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 726
               Left = 38
               Bottom = 845
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SO_Delivery_Schedule"
            Begin Extent = 
               Top = 486
               Left = 236
               Bottom = 605
               Right = 454
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Allocation_Outstanding"
            Begin Extent = 
               Top = 846
               Left = 38
               Bottom = 965
               Right = 251
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Parts_Required"
            Begin Extent = 
               Top = 966
               Left = 38
               Bottom = 1085
               Right = 229
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 1086
               Left = 38
               Bottom = 1205
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 83
         End
         Begin Table = "UDData_6"
            Begin Extent = 
               Top = 846
               Left = 289
               Bottom = 965
               Right = 465
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_5"
            Begin Extent = 
               Top = 966
               Left = 267
               Bottom = 1085
               Right = 443
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_4"
            Begin Extent = 
               Top = 1206
               Left = 38
               Bottom = 1325
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_2"
            Begin Extent = 
               Top = 1206
               Left = 252
               Bottom = 1325
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_3"
            Begin Extent = 
               Top = 1326
               Left = 38
               Bottom = 1445
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_1"
            Begin Extent = 
               Top = 1326
               Left = 252
               Bottom = 1445
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 68
         Width = 284
         Width = 1500
         Width = 1500
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Purchase_Orders_Required'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane3' , N'SCHEMA',N'dbo', N'VIEW',N'Purchase_Orders_Required', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane3', @value=N'         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Purchase_Orders_Required'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Purchase_Orders_Required', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=3 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Purchase_Orders_Required'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Transaction_Max_PO_Receipt]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Transaction_Max_PO_Receipt]
AS
SELECT     part__Part_id, MAX(Transaction_date) AS Transaction_date
FROM         dbo.Stock_Transaction_List
WHERE     (Type = ''P.O. Reciept'')
GROUP BY part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Transaction_Max_WO_Receipt]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Transaction_Max_WO_Receipt]
AS
SELECT     part__Part_id, MAX(Transaction_date) AS Transaction_date
FROM         dbo.Stock_Transaction_List
WHERE     (Type = ''W.O. Reciept'')
GROUP BY part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Transaction_Max_Misc_Receipt]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Transaction_Max_Misc_Receipt]
AS
SELECT     part__Part_id, MAX(Transaction_date) AS Transaction_date
FROM         dbo.Stock_Transaction_List
WHERE     (Type = ''Misc. Reciept'')
GROUP BY part__Part_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Quick_Work_Orders_List_With_Parts]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Quick_Work_Orders_List_With_Parts]
AS
SELECT     dbo.Quick_Work_Orders_List.*, dbo.Work_Orders_Analysis.Work_Orders_Analysis_ID AS Work_Orders_Analysis_ID, 
                      dbo.Work_Orders_Analysis.Actual_Expenses_Cost AS [Actual Expenses Cost], dbo.Work_Orders_Analysis.Actual_Manu_Cost AS [Actual Manu Cost], 
                      dbo.Work_Orders_Analysis.Actual_Material_Cost AS [Actual Material Cost], dbo.Work_Orders_Analysis.Actual_Run_Charge AS [Actual Run Charge], 
                      dbo.Work_Orders_Analysis.Actual_Run_Hours AS [Actual Run Hours], dbo.Work_Orders_Analysis.Actual_Run_Lab_Cost AS [Actual Run Lab Cost], 
                      dbo.Work_Orders_Analysis.Actual_Run_WC_Cost AS [Actual Run WC Cost], dbo.Work_Orders_Analysis.Actual_Setup_Charge AS [Actual Setup Charge], 
                      dbo.Work_Orders_Analysis.Actual_Setup_Hours AS [Actual Setup Hours], 
                      dbo.Work_Orders_Analysis.Actual_Setup_Lab_Cost AS [Actual Setup Lab Cost], 
                      dbo.Work_Orders_Analysis.Actual_Setup_WC_Cost AS [Actual Setup WC Cost], 
                      dbo.Work_Orders_Analysis.Actual_SubCon_Cost AS [Actual SubCon Cost], dbo.Work_Orders_Analysis.Actuals_Date AS [Actuals Date], 
                      dbo.Work_Orders_Analysis.Planned_Expenses_Cost AS [Planned Expenses Cost], 
                      dbo.Work_Orders_Analysis.Planned_Manu_Cost AS [Planned Manu Cost], 
                      dbo.Work_Orders_Analysis.Planned_Material_Cost AS [Planned Material Cost], 
                      dbo.Work_Orders_Analysis.Planned_Run_Charge AS [Planned Run Charge], dbo.Work_Orders_Analysis.Planned_Run_Hours AS [Planned Run Hours], 
                      dbo.Work_Orders_Analysis.Planned_Run_Lab_Cost AS [Planned Run Lab Cost], 
                      dbo.Work_Orders_Analysis.Planned_Run_WC_Cost AS [Planned Run WC Cost], 
                      dbo.Work_Orders_Analysis.Planned_Setup_Charge AS [Planned Setup Charge], 
                      dbo.Work_Orders_Analysis.Planned_Setup_Lab_Cost AS [Planned Setup Lab Cost], 
                      dbo.Work_Orders_Analysis.Planned_Setup_Hours AS [Planned Setup Hours], 
                      dbo.Work_Orders_Analysis.Planned_Setup_WC_Cost AS [Planned Setup WC Cost], 
                      dbo.Work_Orders_Analysis.Planned_SubCon_Cost AS [Planned SubCon Cost], dbo.Work_Orders_Analysis.PO_Manu_Cost AS [PO Manu Cost], 
                      dbo.Work_Orders_Analysis.PO_Material_Cost AS [PO Material Cost], dbo.Work_Orders_Analysis.PO_SubCon_Cost AS [PO SubCon Cost], 
                      dbo.Work_Orders_Analysis.Total_Cost_Actual AS [Total Cost Actual], dbo.Work_Orders_Analysis.Total_Cost_Planned AS [Total Cost Planned], 
                      dbo.Work_Orders_Analysis.Total_Variance AS [Total Variance], dbo.Work_Orders_Analysis.Variance_Charge AS [Variance Charge], 
                      dbo.Work_Orders_Analysis.Variance_Expenses_Cost AS [Variance Expenses Cost], dbo.Work_Orders_Analysis.Variance_Hours AS [Variance Hours], 
                      dbo.Work_Orders_Analysis.Variance_Lab_Cost AS [Variance Lab Cost], dbo.Work_Orders_Analysis.Variance_Manu_Cost AS [Variance Manu Cost], 
                      dbo.Work_Orders_Analysis.Variance_Material_Cost AS [Variance Material Cost], 
                      dbo.Work_Orders_Analysis.Variance_SubCon_Cost AS [Variance SubCon Cost], dbo.Work_Orders_Analysis.Variance_WC_Cost AS [Variance WC Cost], 
                      dbo.Work_Orders_Analysis.Actual_Material_Returns AS [Material Returned], 
                      dbo.Work_Orders_Analysis.Actual_SubCon_Returns AS [SubCon Returned]
FROM         dbo.Quick_Work_Orders_List LEFT OUTER JOIN
                      dbo.Work_Orders_Analysis ON dbo.Quick_Work_Orders_List.WORK_ORDERS_ID = dbo.Work_Orders_Analysis.Parent__WORK_ORDERS_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Cutting_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Cutting_List]
AS
SELECT dbo.Allocation_Outstanding.Allocations_ID, dbo.Allocation_Outstanding.Breadth, dbo.Allocation_Outstanding.Cancelled, dbo.Allocation_Outstanding.Complete, 
               dbo.Allocation_Outstanding.[Date Created], dbo.Allocation_Outstanding.[Date Required], dbo.Allocation_Outstanding.Length, dbo.Allocation_Outstanding.Qty, 
               dbo.Allocation_Outstanding.[Qty Complete], dbo.Allocation_Outstanding.[Qty Processed], dbo.Allocation_Outstanding.[Total Qty], 
               dbo.Allocation_Outstanding.Type, dbo.Allocation_Outstanding.Source, dbo.Allocation_Outstanding.WO__Works_order_Id, dbo.Allocation_Outstanding.[For WO], 
               dbo.Allocation_Outstanding.[For Contract No], dbo.Allocation_Outstanding.Released, dbo.Allocation_Outstanding.[Created By], 
               dbo.Allocation_Outstanding.[Deleted From BOM], dbo.Allocation_Outstanding.[BOM Supplier], dbo.Allocation_Outstanding.Part__Part_Id, 
               dbo.Allocation_Outstanding.[On Part BOM], dbo.Allocation_Outstanding.SO__Sales_Order_Line_id, dbo.Allocation_Outstanding.SO_Delivery_Schedule_id, 
               dbo.Allocation_Outstanding.Purchase_Enquiry_Raised, dbo.Allocation_Outstanding.Notes, dbo.Allocation_Outstanding.[Week No], 
               dbo.Allocation_Outstanding.[Wo Status], dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name AS Customer, 
               UDData_1.UDData_Data AS UserDefinable1, UDData_2.UDData_Data AS UserDefinable2, UDData_3.UDData_Data AS UserDefinable3, 
               UDData_4.UDData_Data AS UserDefinable4, UDData_5.UDData_Data AS UserDefinable5, UDData_6.UDData_Data AS UserDefinable6, 
               dbo.Allocation_Outstanding.Purchase_Enquiry_Raised AS [Purchase Enquiry Raised], dbo.INDUSTRY.Industry, dbo.Part.Part_No AS [Part No], 
               Part_1.Part_No AS [For Part No], Part_1.Description AS [For Part Desc], dbo.WORK_ORDERS.Date_Required AS [WO Date Required], 
               dbo.Group_Code.Group_Code, dbo.CATEGORY.Category
FROM  dbo.UDData AS UDData_2 RIGHT OUTER JOIN
               dbo.CATEGORY RIGHT OUTER JOIN
               dbo.Group_Code ON dbo.CATEGORY.Category_Id = dbo.Group_Code.Category__category_id RIGHT OUTER JOIN
               dbo.Part ON dbo.Group_Code.Groupcode_Id = dbo.Part.Groupcode__Groupcode_id LEFT OUTER JOIN
               dbo.UDData AS UDData_6 ON dbo.Part.UDF6__UDData_ID = UDData_6.UDData_ID LEFT OUTER JOIN
               dbo.UDData AS UDData_5 ON dbo.Part.UDF5__UDData_ID = UDData_5.UDData_ID LEFT OUTER JOIN
               dbo.UDData AS UDData_4 ON dbo.Part.UDF4__UDData_ID = UDData_4.UDData_ID LEFT OUTER JOIN
               dbo.UDData AS UDData_3 ON dbo.Part.UDF3__UDData_ID = UDData_3.UDData_ID ON UDData_2.UDData_ID = dbo.Part.UDF2__UDData_ID LEFT OUTER JOIN
               dbo.UDData AS UDData_1 ON dbo.Part.UDF1__UDData_ID = UDData_1.UDData_ID RIGHT OUTER JOIN
               dbo.Allocation_Outstanding LEFT OUTER JOIN
               dbo.WORK_ORDERS LEFT OUTER JOIN
               dbo.Part AS Part_1 ON dbo.WORK_ORDERS.Part_ID__Part_id = Part_1.Part_Id ON 
               dbo.Allocation_Outstanding.WO__Works_order_Id = dbo.WORK_ORDERS.WORK_ORDERS_ID ON 
               dbo.Part.Part_Id = dbo.Allocation_Outstanding.Part__Part_Id LEFT OUTER JOIN
               dbo.INDUSTRY RIGHT OUTER JOIN
               dbo.Sales_Order_Lines ON dbo.INDUSTRY.Industry_Id = dbo.Sales_Order_Lines.Industry__INDUSTRY_ID LEFT OUTER JOIN
               dbo.SALES_ORDERS LEFT OUTER JOIN
               dbo.COMPANYS ON dbo.SALES_ORDERS.Customers_ID__Companys = dbo.COMPANYS.Company_Id ON 
               dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID = dbo.SALES_ORDERS.SALES_ORDERS_ID ON 
               dbo.Allocation_Outstanding.SO__Sales_Order_Line_id = dbo.Sales_Order_Lines.Sales_Order_Lines_ID
WHERE (dbo.Allocation_Outstanding.Type = ''Cutting'')
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Wo_Route_SChedule_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Wo_Route_SChedule_list]
AS
SELECT     dbo.Wo_Route_SChedule.Wo_Route_SChedule_ID, dbo.WORK_ORDERS.WO_No AS [WO No], dbo.Wo_Route_SChedule.Complete, 
                      dbo.Wo_Route_SChedule.Date_Complete AS [Date Complete], dbo.Wo_Route_SChedule.Do_Not_Use AS [Do Not Use], 
                      dbo.Wo_Route_SChedule.Last_Start_Date AS [Last Start Date], dbo.Wo_Route_SChedule.Priority, dbo.Wo_Route_SChedule.Qty_Complete AS [Qty Complete], 
                      dbo.Wo_Route_SChedule.Route_Id, dbo.Wo_Route_SChedule.Scheduled_Complete_date AS [Scheduled Complete date], 
                      dbo.Wo_Route_SChedule.Start_Date AS [Start Date], dbo.Wo_Route_SChedule.WO_ID, dbo.Wo_Route_SChedule.WorkCentre_ID, 
                      dbo.Wo_Route_SChedule.Actual_Run_Time AS [Actual Run Time], dbo.Wo_Route_SChedule.Actual_Setup_Time AS [Actual Setup Time], 
                      dbo.Wo_Route_SChedule.Conflict, dbo.Wo_Route_SChedule.Early, dbo.Wo_Route_SChedule.First_Start_Date AS [First Start Date], 
                      dbo.Wo_Route_SChedule.Last_End_Date AS [Last End Date], dbo.Wo_Route_SChedule.Late, dbo.Wo_Route_SChedule.Locked, 
                      dbo.Wo_Route_SChedule.Material_Arrival_Date AS [Material Arrival Date], dbo.Wo_Route_SChedule.Material_Id, 
                      dbo.Wo_Route_SChedule.Per_Complete AS [Per Complete], dbo.Wo_Route_SChedule.Problems_Accepted AS [Problems Accepted], 
                      dbo.Wo_Route_SChedule.Requires_Material AS [Requires Material], dbo.Wo_Route_SChedule.Seq_No AS [Seq No], dbo.Wo_Route_SChedule.Started, 
                      dbo.Wo_Route_SChedule.Stopped, dbo.Wo_Route_SChedule.Use_Setup_Time AS [Use Setup Time], dbo.Wo_Route_SChedule.Setup_Time AS [Setup Time], 
                      dbo.Wo_Route_SChedule.Run_Time AS [Run Time], dbo.Wo_Route_SChedule.Inter_Op_Time AS [Inter Op Time], 
                      dbo.Wo_Route_SChedule.Date_Started AS [Date Started], dbo.Work_Centre.WC_Name AS [WC Name], dbo.Work_Centre.Work_Centre_No AS [WC No], 
                      dbo.Part.Part_No AS [Part No], dbo.Part.Description AS [Part Description], dbo.Route.Op_No AS [Op No], dbo.Route.Description AS [OP Description], dbo.Route.Deleted, 
                      dbo.Process.Process_Description AS Process, dbo.Wo_Route_SChedule.Notes_Non_RTF AS Notes, dbo.WORK_ORDERS.Route_versions_id, 
                      dbo.Wo_Route_SChedule.Cancelled, dbo.Wo_Route_SChedule.Temp_Removed
FROM         dbo.Wo_Route_SChedule INNER JOIN
                      dbo.WO_Op_List ON dbo.Wo_Route_SChedule.Wo_Route_SChedule_ID = dbo.WO_Op_List.Wo_Route_SChedule_ID LEFT OUTER JOIN
                      dbo.Process RIGHT OUTER JOIN
                      dbo.Route ON dbo.Process.Process_Id = dbo.Route.Process__Process_id ON dbo.Wo_Route_SChedule.Route_Id = dbo.Route.Route_id LEFT OUTER JOIN
                      dbo.Work_Centre ON dbo.Wo_Route_SChedule.WorkCentre_ID = dbo.Work_Centre.Work_Centre_id LEFT OUTER JOIN
                      dbo.Part RIGHT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Part.Part_Id = dbo.WORK_ORDERS.Part_ID__Part_id ON dbo.Wo_Route_SChedule.WO_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Wo_Route_SChedule_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Wo_Route_SChedule"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 274
            End
            DisplayFlags = 280
            TopColumn = 54
         End
         Begin Table = "WO_Op_List"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 249
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Process"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 239
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Route"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 298
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Work_Centre"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 239
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 726
               Left = 38
               Bottom = 845
               Right = 319
            End
            Disp' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Wo_Route_SChedule_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Wo_Route_SChedule_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'layFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Wo_Route_SChedule_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Wo_Route_SChedule_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Wo_Route_SChedule_list'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contract_View_Temp_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Contract_View_Temp_List]
AS
SELECT     dbo.Contract_View_Temp.Contract_View_Temp_ID, dbo.Contract_View_Temp.Screen_id, dbo.Contract_View_Temp.Visible, 
                      dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.Part.Drawing_No AS [Drawing No], dbo.Part.In_Stock AS [In Stock], dbo.Allocations.Cancelled, 
                      dbo.Allocations.Complete, dbo.Allocations.Date_Required AS [Date Required], dbo.Allocations.Date_Created AS [Date Created], dbo.Allocations.Qty, 
                      dbo.Allocations.Qty_Complete AS [Qty Complete], dbo.Allocations.Qty_Processed AS [Qty Processed], dbo.Allocations.Length, dbo.Allocations.Breadth, 
                      dbo.Allocations.Total_Qty AS [Total Qty], dbo.WORK_ORDERS.WO_No AS [WO No], dbo.Bom.Length AS BL, dbo.Bom.Qty AS BQty, 
                      dbo.Bom.Breadth AS BB, dbo.Bom.Extra_Qty AS [Extra Qty], dbo.Bom.Sundry, dbo.Contract_View_Temp.Tree_index, 
                      dbo.Contract_View_Po_Count.[No POs], dbo.Contract_View_Po_Count.First_Po_Line_Id, dbo.Purchase_Order.Po_No AS [First PO No], 
                      dbo.WORK_ORDERS.Date_Required AS [WO Date Required]
FROM         dbo.Po_Lines LEFT OUTER JOIN
                      dbo.Purchase_Order ON dbo.Po_Lines.Po__PO_ID = dbo.Purchase_Order.Purchase_Order_ID RIGHT OUTER JOIN
                      dbo.Contract_View_Po_Count ON dbo.Po_Lines.Po_Lines_ID = dbo.Contract_View_Po_Count.First_Po_Line_Id RIGHT OUTER JOIN
                      dbo.Contract_View_Temp ON 
                      dbo.Contract_View_Po_Count.Allocation__Allocations_ID = dbo.Contract_View_Temp.Alloc__Allocations_ID LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Contract_View_Temp.WO__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Bom ON dbo.Contract_View_Temp.Bom__Bom_id = dbo.Bom.Bom_id LEFT OUTER JOIN
                      dbo.Part ON dbo.Contract_View_Temp.Part__Part_ID = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Allocations ON dbo.Contract_View_Temp.Alloc__Allocations_ID = dbo.Allocations.Allocations_ID
WHERE     (dbo.Contract_View_Temp.Visible = 1)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Chemistry_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Chemistry_List]
AS
SELECT     dbo.Stock.Stock_ID, dbo.Stock.Batch_no AS [Batch no], dbo.Stock.Bredth AS Breadth, dbo.Stock.Cast_Heat_No AS [Cast Heat No], dbo.Stock.Cost, 
                      dbo.Stock.Date_In AS [Date In], dbo.Stock.From_WO__WO_id, dbo.Stock.Grn__Grn_id, dbo.Stock.Length, dbo.Stock.Location__location_id, dbo.Stock.Notes, 
                      dbo.Stock.Original_Batch AS [Original Batch], dbo.Stock.OriginalQty, dbo.Stock.Part__Part_Id, dbo.Stock.Qty, dbo.Stock.Qty_Allocated AS [Qty Allocated], 
                      dbo.Stock.Qty_Available AS [Qty Available], dbo.Stock.Serial_no AS [Serial no], dbo.Stock.Total_Qty AS [Total Qty], dbo.Stock.Use_By_Date AS [Use By Date], 
                      dbo.Stock_Status.Status, dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.Part.Equivalent_Size AS [Equivalent Size], dbo.Part.Wieght AS [Kilos UOM], 
                      dbo.Part_type.Part_type AS [Part Type], dbo.Part.Supplier__Company_id, dbo.Part.On_Order AS [On Order], dbo.Grn.Grn_No AS [Grn No], dbo.LOCATION.Location, 
                      dbo.Group_Code.Group_Code AS [Group Code], dbo.Stock.WDV, dbo.Building.Building, dbo.WORK_ORDERS.WO_No AS [Manufactured On], dbo.LOCATION.Capacity, 
                      dbo.CATEGORY.Category, UDData_1.UDData_Data AS UserDefinable1, UDData_2.UDData_Data AS UserDefinable2, UDData_3.UDData_Data AS UserDefinable3, 
                      UDData_4.UDData_Data AS UserDefinable4, UDData_5.UDData_Data AS UserDefinable5, UDData_6.UDData_Data AS UserDefinable6, 
                      dbo.Stock.Part_Description_On_Receipt AS [Part Description On Receipt], dbo.Stock.On_Hire AS [On Hire], dbo.Purchase_Order.Po_No AS [PO No], 
                      dbo.Stock.Material_Review_Board AS [Material Review Board], dbo.Stock.C_Min AS [C Supplier Results], dbo.Stock.Si_Min AS [Si Supplier Results], 
                      dbo.Stock.Mn_Min AS [Mn Supplier Results], dbo.Stock.P_Min AS [P Supplier Results], dbo.Stock.S_Min AS [S Supplier Results], 
                      dbo.Stock.CR_Min AS [CR Supplier Results], dbo.Stock.Ni_Min AS [Ni Supplier Results], dbo.Stock.Al_Min AS [Al Supplier Results], 
                      dbo.Stock.Cu_Min AS [Cu Supplier Results], dbo.Stock.Sn_Min AS [Sn Supplier Results], dbo.Stock.V_Min AS [V Supplier Results], 
                      dbo.Stock.Nb_Min AS [Nb Supplier Results], dbo.Stock.N_Min AS [N Supplier Results], dbo.Stock.Co_Min AS [Co Supplier Results], 
                      dbo.Stock.Ta_Min AS [Ta Supplier Results], dbo.Stock.B_Min AS [B Supplier Results], dbo.Stock.C_Eq_Min AS [Mo Supplier Results], 
                      dbo.Stock.Ti_SupplierResults AS [Ti Supplier Results], dbo.Stock.C_Max AS [C Third Party Results], dbo.Stock.Si_Max AS [Si Third Party Results], 
                      dbo.Stock.Mn_Max AS [Mn Third Party Results], dbo.Stock.P_Max AS [P Third Party Results], dbo.Stock.S_Max AS [S Third Party Results], 
                      dbo.Stock.CR_Max AS [CR Third Party Results], dbo.Stock.Ni_Max AS [Ni Third Party Results], dbo.Stock.Al_Max AS [Al Third Party Results], 
                      dbo.Stock.Cu_Max AS [Cu Third Party Results], dbo.Stock.Sn_Max AS [Sn Third Party Results], dbo.Stock.V_Max AS [V Third Party Results], 
                      dbo.Stock.Nb_Max AS [Nb Third Party Results], dbo.Stock.N_Max AS [N Third Party Results], dbo.Stock.Co_Max AS [Co Third Party Results], 
                      dbo.Stock.Ta_Max AS [Ta Third Party Results], dbo.Stock.B_Max AS [B Third Party Results], dbo.Stock.C_Eq_Max AS [Mo Third Party Results], 
                      dbo.Stock.Ti_ThirdPartyResultsOne AS [Ti Third PartyResults], dbo.Stock.C_ThirdPartyResultsTwo AS [C Third PartyResults Two], 
                      dbo.Stock.Si_ThirdPartyResultsTwo AS [Si Third PartyResults Two], dbo.Stock.Mn_ThirdPartyResultsTwo AS [Mn Third PartyResults Two], 
                      dbo.Stock.P_ThirdPartyResultsTwo AS [P Third PartyResults Two], dbo.Stock.S_ThirdPartyResultsTwo AS [S Third PartyResults Two], 
                      dbo.Stock.CR_ThirdPartyResultsTwo AS [CR Third PartyResults Two], dbo.Stock.Ni_ThirdPartyResultsTwo AS [Ni Third PartyResults Two], 
                      dbo.Stock.Al_ThirdPartyResultsTwo AS [Al Third PartyResults Two], dbo.Stock.Cu_ThirdPartyResultsTwo AS [Cul Third PartyResults Two], 
                      dbo.Stock.Sn_ThirdPartyResultsTwo AS [Sn Third PartyResults Two], dbo.Stock.V_ThirdPartyResultsTwo AS [V Third PartyResults Two], 
                      dbo.Stock.Nb_ThirdPartyResultsTwo AS [Nb Third PartyResults Two], dbo.Stock.N_ThirdPartyResultsTwo AS [N Third PartyResults Two], 
                      dbo.Stock.Co_ThirdPartyResultsTwo AS [Co Third PartyResults Two], dbo.Stock.Ta_ThirdPartyResultsTwo AS [Ta Third PartyResults Two], 
                      dbo.Stock.B_ThirdPartyResultsTwo AS [B Third PartyResults Two], dbo.Stock.Mo_ThirdPartyResultsTwo AS [Mo Third PartyResults Two], 
                      dbo.Stock.Ti_ThirdPartyResultsTwo AS [Ti Third PartyResults Two], dbo.COMPANYS.Name AS [Third Party Results], COMPANYS_1.Name AS [Third Party Results Two], 
                      dbo.Stock.Consignment_Stock AS [Consignment Stock], dbo.Stock.Austenise_Degrees, dbo.Stock.Austenise_Hours, dbo.Stock.Elongation_Percentage AS Elongation, 
                      dbo.Stock.Fe_Max, dbo.Stock.Fe_Min AS [Fe Min], dbo.Stock.Fe_ThirdPartyResultsTwo, dbo.Stock.Hardness, dbo.Stock.Hardness_Max AS [Hardness Max], 
                      dbo.Stock.Hardness_Min AS [Hardness Min], dbo.Stock.Impact1, dbo.Stock.Impact2, dbo.Stock.Impact3, dbo.Stock.Mg_Max, dbo.Stock.Mg_Min AS [Mg Min], 
                      dbo.Stock.Mg_ThirdPartyResultsTwo, dbo.Stock.Normalise_Degrees, dbo.Stock.Normalise_Hours, dbo.Stock.Pb_Max, dbo.Stock.Pb_Min AS [Pb Min], 
                      dbo.Stock.Pb_ThirdPartyResultsTwo, dbo.Stock.Reduction_Percentage AS Reduction, dbo.Stock.Se_Max, dbo.Stock.Se_Min AS [Se Min], 
                      dbo.Stock.Se_ThirdPartyResultsTwo, dbo.Stock.Temper_Degrees, dbo.Stock.Temper_Hours, dbo.Stock.Tensile, dbo.Stock.W_Max, dbo.Stock.W_Min AS [W Min], 
                      dbo.Stock.Yield1, dbo.Stock.Yield2, dbo.Stock.Zn_Max, dbo.Stock.Zn_Min AS [Zn Min], dbo.Stock.Zn_ThirdPartyResultsTwo, dbo.Stock.Impact_Avg AS [Impact Avg], 
                      dbo.Stock.Impact_Min AS [Impact Min], dbo.Stock.Material_Notes, dbo.Stock.Material_Notes_Non_Rtf, dbo.Stock.Sampling_Method, dbo.Stock.Ultrasonic_Tests, 
                      dbo.Stock.Impact_Temp AS [Impact Temp], dbo.Specification.Name AS Specification, dbo.Stock.Avg_Length AS [Avg Length], dbo.Stock_Per_Tonne.[Cost Per Tonne], 
                      dbo.Stock_Per_Tonne.[Bars Remaining], dbo.Stock.Cost * dbo.Stock.Avg_Length AS [Cost Per Bar], dbo.Stock_Kilos.Kilos
FROM         dbo.LOCATION LEFT OUTER JOIN
                      dbo.Building ON dbo.LOCATION.Building__Building_id = dbo.Building.Building_Id RIGHT OUTER JOIN
                      dbo.UDData UDData_1 RIGHT OUTER JOIN
                      dbo.UDData UDData_3 RIGHT OUTER JOIN
                      dbo.UDData UDData_5 RIGHT OUTER JOIN
                      dbo.UDData UDData_6 RIGHT OUTER JOIN
                      dbo.Specification RIGHT OUTER JOIN
                      dbo.Stock_Kilos RIGHT OUTER JOIN
                      dbo.Stock ON dbo.Stock_Kilos.Stock_ID = dbo.Stock.Stock_ID LEFT OUTER JOIN
                      dbo.Stock_Per_Tonne ON dbo.Stock.Stock_ID = dbo.Stock_Per_Tonne.Stock_ID ON 
                      dbo.Specification.Specification_ID = dbo.Stock.Specification__Specification_ID LEFT OUTER JOIN
                      dbo.COMPANYS COMPANYS_1 ON dbo.Stock.ThirdPartyResultsTwo__COMPANYS_ID = COMPANYS_1.Company_Id LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Stock.ThirdPartyResultsOne__COMPANYS_ID = dbo.COMPANYS.Company_Id ON UDData_6.UDData_ID = dbo.Stock.UDF6__UDData_ID ON 
                      UDData_5.UDData_ID = dbo.Stock.UDF5__UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_4 ON dbo.Stock.UDF4__UDData_ID = UDData_4.UDData_ID ON UDData_3.UDData_ID = dbo.Stock.UDF3__UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_2 ON dbo.Stock.UDF2__UDData_ID = UDData_2.UDData_ID ON UDData_1.UDData_ID = dbo.Stock.UDF1__UDData_ID LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Stock.Manufactured_On__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID ON 
                      dbo.LOCATION.Location_id = dbo.Stock.Location__location_id LEFT OUTER JOIN
                      dbo.Part_type RIGHT OUTER JOIN
                      dbo.Part LEFT OUTER JOIN
                      dbo.Group_Code LEFT OUTER JOIN
                      dbo.CATEGORY ON dbo.Group_Code.Category__category_id = dbo.CATEGORY.Category_Id ON 
                      dbo.Part.Groupcode__Groupcode_id = dbo.Group_Code.Groupcode_Id ON dbo.Part_type.part_type_id = dbo.Part.Type__Part_Type_Id ON 
                      dbo.Stock.Part__Part_Id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Stock_Status ON dbo.Stock.Status__Stock_status_id = dbo.Stock_Status.Stock_Status_Id LEFT OUTER JOIN
                      dbo.Grn ON dbo.Stock.Grn__Grn_id = dbo.Grn.Grn_ID LEFT OUTER JOIN
                      dbo.Po_Lines LEFT OUTER JOIN
                      dbo.Purchase_Order ON dbo.Po_Lines.Po__PO_ID = dbo.Purchase_Order.Purchase_Order_ID ON 
                      dbo.Stock.From_Po_Lines__Po_Lines_id = dbo.Po_Lines.Po_Lines_ID
WHERE     (dbo.Stock.Complete = 1) AND (dbo.Stock.Total_Qty > 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_list_All]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_list_All]
AS
SELECT     dbo.Stock.Stock_ID, dbo.Stock.Batch_no AS [Batch no], dbo.Stock.Bredth AS Breadth, dbo.Stock.Cast_Heat_No AS [Cast Heat No], dbo.Stock.Cost, 
                      dbo.Stock.Date_In AS [Date In], dbo.Stock.From_WO__WO_id, dbo.Stock.Grn__Grn_id, dbo.Stock.Length, dbo.Stock.Location__location_id, dbo.Stock.Notes, 
                      dbo.Stock.Original_Batch AS [Original Batch], dbo.Stock.OriginalQty, dbo.Stock.Part__Part_Id, dbo.Stock.Qty, dbo.Stock.Qty_Allocated AS [Qty Allocated], 
                      dbo.Stock.Qty_Available AS [Qty Available], dbo.Stock.Serial_no AS [Serial no], dbo.Stock.Total_Qty AS [Total Qty], dbo.Stock.Use_By_Date AS [Use By Date], 
                      dbo.Stock_Status.Status, dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.Part.Equivalent_Size AS [Equivalent Size], dbo.Part.Wieght AS [Kilos UOM], 
                      dbo.Part_type.Part_type AS [Part Type], dbo.Part.On_Order AS [On Order], dbo.Grn.Grn_No AS [Grn No], dbo.LOCATION.Location, dbo.Stock.WDV, 
                      dbo.WORK_ORDERS.WO_No AS [Manufactured On], dbo.Group_Code.Group_Code, dbo.CATEGORY.Category, dbo.LOCATION.Capacity, 
                      UDData_1.UDData_Data AS UserDefinable1, UDData_2.UDData_Data AS UserDefinable2, UDData_3.UDData_Data AS UserDefinable3, 
                      UDData_4.UDData_Data AS UserDefinable4, UDData_5.UDData_Data AS UserDefinable5, UDData_6.UDData_Data AS UserDefinable6, 
                      dbo.Stock.From_Po_Lines__Po_Lines_id, dbo.Stock.On_Hire AS [On Hire], dbo.Stock.Part_Description_On_Receipt AS [Part Description On Receipt], 
                      dbo.COMPANYS.Name AS [Third Party Results], COMPANYS_1.Name AS [Third Party Results Two], dbo.Stock.Consignment_Stock AS [Consignment Stock], 
                      dbo.Stock.Avg_Length AS [Avg Length], dbo.Stock_Per_Tonne.[Cost Per Tonne], dbo.Stock_Per_Tonne.[Bars Remaining], 
                      dbo.Stock.Cost * dbo.Stock.Avg_Length AS [Cost Per Bar], dbo.Stock_In_Feet.Feet, dbo.Stock.Original__Stock_ID, dbo.Stock_Kilos.Kilos, dbo.Part.Cost AS [Cost UOM], 
                      COMPANYS_2.Name AS Supplier, dbo.Specification.Name AS Specification, dbo.Part.Required, dbo.Building.Building, dbo.Stock.Quarantine_Qty, 
                      dbo.Part.Notes_Non_RTF AS [Part Notes]
FROM         dbo.Building RIGHT OUTER JOIN
                      dbo.LOCATION ON dbo.Building.Building_Id = dbo.LOCATION.Building__Building_id RIGHT OUTER JOIN
                      dbo.UDData AS UDData_4 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_5 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_6 RIGHT OUTER JOIN
                      dbo.Stock_In_Feet RIGHT OUTER JOIN
                      dbo.COMPANYS AS COMPANYS_2 RIGHT OUTER JOIN
                      dbo.Purchase_Order ON COMPANYS_2.Company_Id = dbo.Purchase_Order.Supplier__COMPANYS_ID RIGHT OUTER JOIN
                      dbo.Po_Lines ON dbo.Purchase_Order.Purchase_Order_ID = dbo.Po_Lines.Po__PO_ID RIGHT OUTER JOIN
                      dbo.Stock LEFT OUTER JOIN
                      dbo.Specification ON dbo.Stock.Specification__Specification_ID = dbo.Specification.Specification_ID ON 
                      dbo.Po_Lines.Po_Lines_ID = dbo.Stock.From_Po_Lines__Po_Lines_id LEFT OUTER JOIN
                      dbo.Stock_Kilos ON dbo.Stock.Stock_ID = dbo.Stock_Kilos.Stock_ID ON dbo.Stock_In_Feet.Stock_ID = dbo.Stock.Stock_ID LEFT OUTER JOIN
                      dbo.Stock_Per_Tonne ON dbo.Stock.Stock_ID = dbo.Stock_Per_Tonne.Stock_ID LEFT OUTER JOIN
                      dbo.COMPANYS AS COMPANYS_1 ON dbo.Stock.ThirdPartyResultsTwo__COMPANYS_ID = COMPANYS_1.Company_Id LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Stock.ThirdPartyResultsOne__COMPANYS_ID = dbo.COMPANYS.Company_Id ON UDData_6.UDData_ID = dbo.Stock.UDF6__UDData_ID ON 
                      UDData_5.UDData_ID = dbo.Stock.UDF5__UDData_ID ON UDData_4.UDData_ID = dbo.Stock.UDF4__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_3 ON dbo.Stock.UDF3__UDData_ID = UDData_3.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON dbo.Stock.UDF2__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON dbo.Stock.UDF1__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Stock.Manufactured_On__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID ON 
                      dbo.LOCATION.Location_id = dbo.Stock.Location__location_id LEFT OUTER JOIN
                      dbo.Part LEFT OUTER JOIN
                      dbo.Group_Code LEFT OUTER JOIN
                      dbo.CATEGORY ON dbo.Group_Code.Category__category_id = dbo.CATEGORY.Category_Id ON 
                      dbo.Part.Groupcode__Groupcode_id = dbo.Group_Code.Groupcode_Id LEFT OUTER JOIN
                      dbo.Part_type ON dbo.Part.Type__Part_Type_Id = dbo.Part_type.part_type_id ON dbo.Stock.Part__Part_Id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Stock_Status ON dbo.Stock.Status__Stock_status_id = dbo.Stock_Status.Stock_Status_Id LEFT OUTER JOIN
                      dbo.Grn ON dbo.Stock.Grn__Grn_id = dbo.Grn.Grn_ID
WHERE     (dbo.Stock.Complete = 1)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_History_Stock]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_History_Stock]
AS
SELECT     dbo.Stock.Part__Part_Id, dbo.Stock.Stock_ID, dbo.Stock_Status.Status, dbo.Grn.Grn_No AS GrnNo, dbo.LOCATION.Location, dbo.Stock.Qty, 
                      dbo.Stock.Batch_no AS [Batch no], dbo.Stock.Serial_no AS [Serial no], dbo.Stock.Cast_Heat_No AS [Cast Heat No], dbo.Stock.Length, dbo.Stock.Bredth AS Breadth, 
                      dbo.Stock.Date_In AS [Date In], dbo.Stock.Notes, dbo.Stock.Avg_Length AS [Avg Length], dbo.Stock_Per_Tonne.[Cost Per Tonne], 
                      dbo.Stock_Per_Tonne.[Bars Remaining], dbo.Stock.Cost * dbo.Stock.Avg_Length AS [Cost Per Bar], dbo.Stock.Cost, dbo.Stock.From_WO__WO_id, 
                      dbo.Stock.Grn__Grn_id, dbo.Stock.Location__location_id, dbo.Stock.Original_Batch AS [Original Batch], dbo.Stock.OriginalQty, 
                      dbo.Stock.Qty_Allocated AS [Qty Allocated], dbo.Stock.Qty_Available AS [Qty Available], dbo.Stock.Total_Qty AS [Total Qty], dbo.Stock.Use_By_Date AS [Use By Date], 
                      dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.Part.Equivalent_Size AS [Equivalent Size], dbo.Part.Wieght AS [Kilos UOM], 
                      dbo.Part_type.Part_type AS [Part Type], dbo.Part.On_Order AS [On Order], dbo.Part.Supplier__Company_id, dbo.Group_Code.Group_Code AS [Group Code], 
                      dbo.Stock.WDV, dbo.Building.Building, dbo.WORK_ORDERS.WO_No AS [Manufactured On], dbo.LOCATION.Capacity, dbo.CATEGORY.Category, 
                      dbo.Stock.Part_Description_On_Receipt AS [Part Description On Receipt], dbo.Stock.On_Hire AS [On Hire], dbo.Purchase_Order.Po_No AS [PO No], 
                      dbo.Stock.Consignment_Stock AS [Consignment Stock], dbo.Stock_Kilos.Kilos, dbo.Stock_In_Feet.Feet
FROM         dbo.Po_Lines LEFT OUTER JOIN
                      dbo.Purchase_Order ON dbo.Po_Lines.Po__PO_ID = dbo.Purchase_Order.Purchase_Order_ID RIGHT OUTER JOIN
                      dbo.Stock LEFT OUTER JOIN
                      dbo.Stock_In_Feet ON dbo.Stock.Stock_ID = dbo.Stock_In_Feet.Stock_ID LEFT OUTER JOIN
                      dbo.Stock_Kilos ON dbo.Stock.Stock_ID = dbo.Stock_Kilos.Stock_ID ON dbo.Po_Lines.Po_Lines_ID = dbo.Stock.From_Po_Lines__Po_Lines_id LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Stock.Manufactured_On__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Part_type RIGHT OUTER JOIN
                      dbo.Group_Code LEFT OUTER JOIN
                      dbo.CATEGORY ON dbo.Group_Code.Category__category_id = dbo.CATEGORY.Category_Id RIGHT OUTER JOIN
                      dbo.Part ON dbo.Group_Code.Groupcode_Id = dbo.Part.Groupcode__Groupcode_id ON dbo.Part_type.part_type_id = dbo.Part.Type__Part_Type_Id ON 
                      dbo.Stock.Part__Part_Id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Stock_Per_Tonne ON dbo.Stock.Stock_ID = dbo.Stock_Per_Tonne.Stock_ID LEFT OUTER JOIN
                      dbo.Grn ON dbo.Stock.Grn__Grn_id = dbo.Grn.Grn_ID LEFT OUTER JOIN
                      dbo.Stock_Status ON dbo.Stock.Status__Stock_status_id = dbo.Stock_Status.Stock_Status_Id LEFT OUTER JOIN
                      dbo.Building RIGHT OUTER JOIN
                      dbo.LOCATION ON dbo.Building.Building_Id = dbo.LOCATION.Building__Building_id ON dbo.Stock.Location__location_id = dbo.LOCATION.Location_id
WHERE     (dbo.Stock.Qty > 0) AND (dbo.Stock.Complete = 1)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Chemistry_list_All]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Chemistry_list_All]
AS
SELECT     dbo.Stock.Stock_ID, dbo.Stock.Batch_no AS [Batch no], dbo.Stock.Bredth AS Breadth, dbo.Stock.Cast_Heat_No AS [Cast Heat No], dbo.Stock.Cost, 
                      dbo.Stock.Date_In AS [Date In], dbo.Stock.From_WO__WO_id, dbo.Stock.Grn__Grn_id, dbo.Stock.Length, dbo.Stock.Location__location_id, dbo.Stock.Notes, 
                      dbo.Stock.Original_Batch AS [Original Batch], dbo.Stock.OriginalQty, dbo.Stock.Part__Part_Id, dbo.Stock.Qty, dbo.Stock.Qty_Allocated AS [Qty Allocated], 
                      dbo.Stock.Qty_Available AS [Qty Available], dbo.Stock.Serial_no AS [Serial no], dbo.Stock.Total_Qty AS [Total Qty], dbo.Stock.Use_By_Date AS [Use By Date], 
                      dbo.Stock_Status.Status, dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.Part.Equivalent_Size AS [Equivalent Size], dbo.Part.Wieght AS [Kilo UOM], 
                      dbo.Part_type.Part_type AS [Part Type], dbo.Part.On_Order AS [On Order], dbo.Part.Supplier__Company_id, dbo.Grn.Grn_No AS [Grn No], dbo.LOCATION.Location, 
                      dbo.Group_Code.Group_Code AS [Group Code], dbo.Stock.WDV, dbo.Building.Building, dbo.WORK_ORDERS.WO_No AS [Manufactured On], dbo.LOCATION.Capacity, 
                      dbo.CATEGORY.Category, UDData_1.UDData_Data AS UserDefinable1, UDData_2.UDData_Data AS UserDefinable2, UDData_3.UDData_Data AS UserDefinable3, 
                      UDData_4.UDData_Data AS UserDefinable4, UDData_5.UDData_Data AS UserDefinable5, UDData_6.UDData_Data AS UserDefinable6, 
                      dbo.Stock.Part_Description_On_Receipt AS [Part Description On Receipt], dbo.Stock.On_Hire AS [On Hire], dbo.Purchase_Order.Po_No AS [PO No], 
                      dbo.Stock.Material_Review_Board AS [Material Review Board], dbo.Stock.C_Min AS [C Supplier Results], dbo.Stock.Si_Min AS [Si Supplier Results], 
                      dbo.Stock.Mn_Min AS [Mn Supplier Results], dbo.Stock.P_Min AS [P Supplier Results], dbo.Stock.S_Min AS [S Supplier Results], 
                      dbo.Stock.CR_Min AS [CR Supplier Results], dbo.Stock.Ni_Min AS [Ni Supplier Results], dbo.Stock.Al_Min AS [Al Supplier Results], 
                      dbo.Stock.Cu_Min AS [Cu Supplier Results], dbo.Stock.Sn_Min AS [Sn Supplier Results], dbo.Stock.V_Min AS [V Supplier Results], 
                      dbo.Stock.Nb_Min AS [Nb Supplier Results], dbo.Stock.N_Min AS [N Supplier Results], dbo.Stock.Co_Min AS [Co Supplier Results], 
                      dbo.Stock.Ta_Min AS [Ta Supplier Results], dbo.Stock.B_Min AS [B Supplier Results], dbo.Stock.C_Eq_Min AS [Mo Supplier Results], 
                      dbo.Stock.Ti_SupplierResults AS [Ti Supplier Results], dbo.Stock.C_Max AS [C Third Party Results], dbo.Stock.Si_Max AS [Si Third Party Results], 
                      dbo.Stock.Mn_Max AS [Mn Third Party Results], dbo.Stock.P_Max AS [P Third Party Results], dbo.Stock.S_Max AS [S Third Party Results], 
                      dbo.Stock.CR_Max AS [CR Third Party Results], dbo.Stock.Ni_Max AS [Ni Third Party Results], dbo.Stock.Al_Max AS [Al Third Party Results], 
                      dbo.Stock.Cu_Max AS [Cu Third Party Results], dbo.Stock.Sn_Max AS [Sn Third Party Results], dbo.Stock.V_Max AS [V Third Party Results], 
                      dbo.Stock.Nb_Max AS [Nb Third Party Results], dbo.Stock.N_Max AS [N Third Party Results], dbo.Stock.Co_Max AS [Co Third Party Results], 
                      dbo.Stock.Ta_Max AS [Ta Third Party Results], dbo.Stock.B_Max AS [B Third Party Results], dbo.Stock.C_Eq_Max AS [Mo Third Party Results], 
                      dbo.Stock.Ti_ThirdPartyResultsOne AS [Ti Third PartyResults], dbo.Stock.C_ThirdPartyResultsTwo AS [C Third PartyResults Two], 
                      dbo.Stock.Si_ThirdPartyResultsTwo AS [Si Third PartyResults Two], dbo.Stock.Mn_ThirdPartyResultsTwo AS [Mn Third PartyResults Two], 
                      dbo.Stock.P_ThirdPartyResultsTwo AS [P Third PartyResults Two], dbo.Stock.S_ThirdPartyResultsTwo AS [S Third PartyResults Two], 
                      dbo.Stock.CR_ThirdPartyResultsTwo AS [CR Third PartyResults Two], dbo.Stock.Ni_ThirdPartyResultsTwo AS [Ni Third PartyResults Two], 
                      dbo.Stock.Al_ThirdPartyResultsTwo AS [Al Third PartyResults Two], dbo.Stock.Cu_ThirdPartyResultsTwo AS [Cul Third PartyResults Two], 
                      dbo.Stock.Sn_ThirdPartyResultsTwo AS [Sn Third PartyResults Two], dbo.Stock.V_ThirdPartyResultsTwo AS [V Third PartyResults Two], 
                      dbo.Stock.Nb_ThirdPartyResultsTwo AS [Nb Third PartyResults Two], dbo.Stock.N_ThirdPartyResultsTwo AS [N Third PartyResults Two], 
                      dbo.Stock.Co_ThirdPartyResultsTwo AS [Co Third PartyResults Two], dbo.Stock.Ta_ThirdPartyResultsTwo AS [Ta Third PartyResults Two], 
                      dbo.Stock.B_ThirdPartyResultsTwo AS [B Third PartyResults Two], dbo.Stock.Mo_ThirdPartyResultsTwo AS [Mo Third PartyResults Two], 
                      dbo.Stock.Ti_ThirdPartyResultsTwo AS [Ti Third PartyResults Two], dbo.COMPANYS.Name AS [Third Party Results], COMPANYS_1.Name AS [Third Party Results Two], 
                      dbo.Stock.Consignment_Stock AS [Consignment Stock], dbo.Stock.Austenise_Degrees, dbo.Stock.Austenise_Hours, dbo.Stock.Elongation_Percentage AS Elongation, 
                      dbo.Stock.Fe_Max, dbo.Stock.Fe_Min AS [Fe Min], dbo.Stock.Fe_ThirdPartyResultsTwo, dbo.Stock.Hardness, dbo.Stock.Hardness_Max AS [Hardness Max], 
                      dbo.Stock.Hardness_Min AS [Hardness Min], dbo.Stock.Impact1, dbo.Stock.Impact2, dbo.Stock.Impact3, dbo.Stock.Mg_Max, dbo.Stock.Mg_Min AS [Mg Min], 
                      dbo.Stock.Mg_ThirdPartyResultsTwo, dbo.Stock.Normalise_Degrees, dbo.Stock.Normalise_Hours, dbo.Stock.Pb_Max, dbo.Stock.Pb_Min AS [Pb Min], 
                      dbo.Stock.Pb_ThirdPartyResultsTwo, dbo.Stock.Reduction_Percentage AS Reduction, dbo.Stock.Se_Max, dbo.Stock.Se_Min AS [Se Min], 
                      dbo.Stock.Se_ThirdPartyResultsTwo, dbo.Stock.Temper_Degrees, dbo.Stock.Temper_Hours, dbo.Stock.Tensile, dbo.Stock.W_Max, dbo.Stock.W_Min AS [W Min], 
                      dbo.Stock.Yield1, dbo.Stock.Yield2, dbo.Stock.Zn_Max, dbo.Stock.Zn_Min AS [Zn Min], dbo.Stock.Zn_ThirdPartyResultsTwo, dbo.Stock.Impact_Avg AS [Impact Avg], 
                      dbo.Stock.Impact_Min AS [Impact Min], dbo.Stock.Material_Notes, dbo.Stock.Material_Notes_Non_Rtf, dbo.Stock.Sampling_Method, dbo.Stock.Ultrasonic_Tests, 
                      dbo.Stock.Impact_Temp AS [Impact Temp], dbo.Specification.Name AS Specification, dbo.Stock.Avg_Length AS [Avg Length], dbo.Stock_Per_Tonne.[Cost Per Tonne], 
                      dbo.Stock_Per_Tonne.[Bars Remaining], dbo.Stock.Cost * dbo.Stock.Avg_Length AS [Cost Per Bar], dbo.Stock_Kilos.Kilos
FROM         dbo.Part_type RIGHT OUTER JOIN
                      dbo.Part LEFT OUTER JOIN
                      dbo.Group_Code LEFT OUTER JOIN
                      dbo.CATEGORY ON dbo.Group_Code.Category__category_id = dbo.CATEGORY.Category_Id ON 
                      dbo.Part.Groupcode__Groupcode_id = dbo.Group_Code.Groupcode_Id ON dbo.Part_type.part_type_id = dbo.Part.Type__Part_Type_Id RIGHT OUTER JOIN
                      dbo.WORK_ORDERS RIGHT OUTER JOIN
                      dbo.UDData UDData_2 RIGHT OUTER JOIN
                      dbo.UDData UDData_4 RIGHT OUTER JOIN
                      dbo.UDData UDData_5 RIGHT OUTER JOIN
                      dbo.COMPANYS COMPANYS_1 RIGHT OUTER JOIN
                      dbo.Stock_Per_Tonne RIGHT OUTER JOIN
                      dbo.Stock_Kilos RIGHT OUTER JOIN
                      dbo.Stock ON dbo.Stock_Kilos.Stock_ID = dbo.Stock.Stock_ID ON dbo.Stock_Per_Tonne.Stock_ID = dbo.Stock.Stock_ID LEFT OUTER JOIN
                      dbo.Specification ON dbo.Stock.Specification__Specification_ID = dbo.Specification.Specification_ID ON 
                      COMPANYS_1.Company_Id = dbo.Stock.ThirdPartyResultsTwo__COMPANYS_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Stock.ThirdPartyResultsOne__COMPANYS_ID = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.UDData UDData_6 ON dbo.Stock.UDF6__UDData_ID = UDData_6.UDData_ID ON UDData_5.UDData_ID = dbo.Stock.UDF5__UDData_ID ON 
                      UDData_4.UDData_ID = dbo.Stock.UDF4__UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_3 ON dbo.Stock.UDF3__UDData_ID = UDData_3.UDData_ID ON UDData_2.UDData_ID = dbo.Stock.UDF2__UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_1 ON dbo.Stock.UDF1__UDData_ID = UDData_1.UDData_ID ON 
                      dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Stock.Manufactured_On__WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.LOCATION LEFT OUTER JOIN
                      dbo.Building ON dbo.LOCATION.Building__Building_id = dbo.Building.Building_Id ON dbo.Stock.Location__location_id = dbo.LOCATION.Location_id ON 
                      dbo.Part.Part_Id = dbo.Stock.Part__Part_Id LEFT OUTER JOIN
                      dbo.Stock_Status ON dbo.Stock.Status__Stock_status_id = dbo.Stock_Status.Stock_Status_Id LEFT OUTER JOIN
                      dbo.Grn ON dbo.Stock.Grn__Grn_id = dbo.Grn.Grn_ID LEFT OUTER JOIN
                      dbo.Po_Lines LEFT OUTER JOIN
                      dbo.Purchase_Order ON dbo.Po_Lines.Po__PO_ID = dbo.Purchase_Order.Purchase_Order_ID ON 
                      dbo.Stock.From_Po_Lines__Po_Lines_id = dbo.Po_Lines.Po_Lines_ID
WHERE     (dbo.Stock.Complete = 1)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PO_lines_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PO_lines_Drop_List]
AS
SELECT     dbo.Po_Lines.Po_Lines_ID, dbo.Po_Lines.Qty, dbo.Po_Lines.Length_Ordered AS Length, dbo.Po_Lines.Breadth_Ordered AS Breadth, 
                      dbo.Po_Lines.Cancelled, dbo.Po_Lines.Complete, dbo.Po_Lines.Date_Added AS [Date], dbo.Po_Lines.Date_Promised AS [Date Promised], 
                      dbo.Po_Lines.Date_Required AS [Date Required], dbo.Po_Lines.Deleted, dbo.Po_Lines.Invoiced, dbo.Po_Lines.Po__PO_ID, 
                      dbo.Po_Lines.Description_Non_Rtf AS Description, dbo.Po_Lines.Price_Quoted AS Price, dbo.Po_Lines.Qty_Invoiced AS [Qty Invoiced], 
                      dbo.Po_Lines.Qty_Delivered AS [Qty Delivered], dbo.Po_Lines.Qty_Returned AS [Qty Returned], dbo.Po_Lines.Supplier_Ref AS [Supplier Ref], 
                      dbo.Po_Lines.Total, dbo.Po_Lines.Vat_rate AS [Vat rate], dbo.Part.Part_No AS [Part No], dbo.WORK_ORDERS.WO_No AS [For WO No], 
                      dbo.Employee.Name AS [For Employee], dbo.COMPANYS.Name AS Supplier, dbo.Po_Lines.Wo__WORK_ORDERS_ID, dbo.Purchase_Order.Date_Sent, 
                      dbo.Purchase_Order.Po_No, dbo.UOM_From_Conversion_Id.Unit_of_Measure AS UOM, dbo.Po_Lines.Vat_Amount AS VAT, 
                      dbo.Po_Lines.Total_Qty AS [Total Qty], dbo.Purchase_Order.Supplier__COMPANYS_ID, dbo.Po_Lines.Item_No AS [Item No]
FROM         dbo.WORK_ORDERS RIGHT OUTER JOIN
                      dbo.Employee RIGHT OUTER JOIN
                      dbo.UOM_From_Conversion_Id RIGHT OUTER JOIN
                      dbo.Po_Lines ON dbo.UOM_From_Conversion_Id.Conversion_Id = dbo.Po_Lines.UOM__Conversions_ID LEFT OUTER JOIN
                      dbo.Purchase_Order ON dbo.Po_Lines.Po__PO_ID = dbo.Purchase_Order.Purchase_Order_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Purchase_Order.Supplier__COMPANYS_ID = dbo.COMPANYS.Company_Id ON 
                      dbo.Employee.Employee_Id = dbo.Po_Lines.For_Employee__Employee_id ON 
                      dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Po_Lines.Wo__WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.Po_Lines.Part__Part_id = dbo.Part.Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Po_Lines_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Po_Lines_List]
AS
SELECT     dbo.Po_Lines.Po_Lines_ID, dbo.Po_Lines.Qty, dbo.Po_Lines.Length_Ordered AS Length, dbo.Po_Lines.Breadth_Ordered AS Breadth, dbo.Po_Lines.Cancelled, 
                      dbo.Po_Lines.Complete, dbo.Po_Lines.Date_Added AS Date, dbo.Po_Lines.Date_Promised AS [Date Promised], dbo.Po_Lines.Date_Required AS [Date Required], 
                      dbo.Po_Lines.Deleted, dbo.Po_Lines.Invoiced, dbo.Po_Lines.Po__PO_ID, dbo.Po_Lines.Description_Non_Rtf AS Description, dbo.Po_Lines.Price_Quoted AS Price, 
                      dbo.Po_Lines.Qty_Invoiced AS [Qty Invoiced], dbo.Po_Lines.Qty_Delivered AS [Qty Delivered], dbo.Po_Lines.Qty_Returned AS [Qty Returned], 
                      dbo.Po_Lines.Supplier_Ref AS [Supplier Ref], dbo.Po_Lines.Total, dbo.Po_Lines.Vat_rate AS [Vat rate], dbo.Part.Part_No AS [Part No], 
                      dbo.WORK_ORDERS.WO_No AS [For WO No], WORK_ORDERS_1.WO_No AS [Manufactured On], dbo.Employee.Name AS [For Employee], 
                      dbo.COMPANYS.Name AS Supplier, dbo.Po_Lines.Wo__WORK_ORDERS_ID, dbo.Purchase_Order.Date_Sent AS [Date Sent], dbo.Purchase_Order.Po_No AS [Po No], 
                      dbo.UOM_From_Conversion_Id.Unit_of_Measure AS UOM, dbo.Po_Lines.Vat_Amount AS VAT, dbo.Po_Lines.Total_Qty AS [Total Qty], 
                      dbo.Po_Lines.Allocation__Allocations_ID, dbo.Po_Lines.Notes_non_rtf AS Notes, dbo.Ext_Location.Location AS [Ext Location], 
                      dbo.Purchase_Order.Supplier__COMPANYS_ID, dbo.Po_Lines.SoLine__Sales_Order_Lines_ID, dbo.Po_Lines.Item_No AS [Item No], 
                      dbo.Po_Lines.Marked_As_Invoiced AS [Marked As Invoiced], dbo.Po_Lines.Qty_Credited AS [Qty Credited], dbo.Po_Lines.Credited, 
                      dbo.Po_Lines.Consignment_Stock AS [Consignment Stock], dbo.Part.Equivalent_Size AS [Equivalent Size], dbo.Group_Code.Group_Code AS [Group Code], 
                      COMPANYS_1.Name AS [SO Company], dbo.SALES_ORDER_LINE_STATUS.Sales_Order_line_Status
FROM         dbo.UOM_From_Conversion_Id RIGHT OUTER JOIN
                      dbo.Ext_Location RIGHT OUTER JOIN
                      dbo.Po_Lines LEFT OUTER JOIN
                      dbo.WORK_ORDERS AS WORK_ORDERS_1 RIGHT OUTER JOIN
                      dbo.WORK_ORDERS LEFT OUTER JOIN
                      dbo.SALES_ORDER_LINE_STATUS RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON 
                      dbo.SALES_ORDER_LINE_STATUS.Sales_order_line_Status_Id = dbo.Sales_Order_Lines.Status__Sales_Order_Line_Status_Id LEFT OUTER JOIN
                      dbo.SALES_ORDERS LEFT OUTER JOIN
                      dbo.COMPANYS AS COMPANYS_1 ON dbo.SALES_ORDERS.Customers_ID__Companys = COMPANYS_1.Company_Id ON 
                      dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID = dbo.SALES_ORDERS.SALES_ORDERS_ID ON 
                      dbo.WORK_ORDERS.So_Line_Id = dbo.Sales_Order_Lines.Sales_Order_Lines_ID ON 
                      WORK_ORDERS_1.WORK_ORDERS_ID = dbo.WORK_ORDERS.Manufactured_on__WORK_ORDERS_ID ON 
                      dbo.Po_Lines.Wo__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID ON 
                      dbo.Ext_Location.Ext_Location_ID = dbo.Po_Lines.Location__Ext_Location_ID ON 
                      dbo.UOM_From_Conversion_Id.Conversion_Id = dbo.Po_Lines.UOM__Conversions_ID LEFT OUTER JOIN
                      dbo.Purchase_Order ON dbo.Po_Lines.Po__PO_ID = dbo.Purchase_Order.Purchase_Order_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Purchase_Order.Supplier__COMPANYS_ID = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.Employee ON dbo.Po_Lines.For_Employee__Employee_id = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.Part LEFT OUTER JOIN
                      dbo.Group_Code ON dbo.Part.Groupcode__Groupcode_id = dbo.Group_Code.Groupcode_Id ON dbo.Po_Lines.Part__Part_id = dbo.Part.Part_Id
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Po_Lines_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[35] 2[5] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -576
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Purchase_Order"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 341
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UOM_From_Conversion_Id"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 230
               Right = 209
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Ext_Location"
            Begin Extent = 
               Top = 126
               Left = 247
               Bottom = 245
               Right = 415
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Po_Lines"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS_1"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDERS"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 282
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS_1"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 350
     ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Po_Lines_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Po_Lines_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'       End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines"
            Begin Extent = 
               Top = 726
               Left = 38
               Bottom = 845
               Right = 320
            End
            DisplayFlags = 280
            TopColumn = 35
         End
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 846
               Left = 38
               Bottom = 965
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 966
               Left = 38
               Bottom = 1085
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Employee"
            Begin Extent = 
               Top = 1086
               Left = 38
               Bottom = 1205
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 1206
               Left = 38
               Bottom = 1325
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Group_Code"
            Begin Extent = 
               Top = 1326
               Left = 38
               Bottom = 1445
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDER_LINE_STATUS"
            Begin Extent = 
               Top = 689
               Left = 511
               Bottom = 870
               Right = 732
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 2970
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Po_Lines_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Po_Lines_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Po_Lines_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PI_Item_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PI_Item_List]
AS
SELECT     dbo.PI_Item.PI_Item_ID, dbo.PI_Item.Notes_non_rtf AS [Item Notes], dbo.PI_Item.Qty_Payed AS [Qty Paid], dbo.PI_Item.Qty_Credited AS [Qty Credited], 
                      dbo.PI_Item.Supplier_Ref AS [Supplier Ref], dbo.PI_Item.Total, dbo.PI_Item.Total_Qty AS [Total Qty], dbo.PI_Item.Vat_Amount AS [Vat Amount], 
                      dbo.PI_Item.Vat_rate AS [Vat rate], dbo.PI_Item.Description_Non_Rtf AS Description, dbo.PI_Item.Parent__Purchase_Invoice_ID, dbo.PI_Item.Price, 
                      dbo.PI_Item.Approved_for_Payment AS [Approved for Payment], dbo.UOM_From_Conversion_Id.Unit_of_Measure AS UOM, dbo.Part.Part_No AS [Part No], 
                      dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, dbo.PI_Item.Part__Part_id, dbo.Nominals.Nominal, dbo.Nominals.Description AS [Nominal Description], 
                      dbo.Nominals.Nominal_ID, dbo.Purchase_Order.Po_No AS [Po No], dbo.Po_Lines.Length_Ordered AS [Length Ordered], 
                      dbo.Po_Lines.Breadth_Ordered AS [Breadth Ordered], dbo.Po_Lines.Qty_Returned AS [Qty Returned], dbo.Po_Lines.Qty AS [PO Line Qty], dbo.Employee.Name
FROM         dbo.Purchase_Order LEFT OUTER JOIN
                      dbo.Employee ON dbo.Purchase_Order.Raised_By_id__Employee_id = dbo.Employee.Employee_Id RIGHT OUTER JOIN
                      dbo.Po_Lines ON dbo.Purchase_Order.Purchase_Order_ID = dbo.Po_Lines.Po__PO_ID RIGHT OUTER JOIN
                      dbo.PI_Item ON dbo.Po_Lines.Po_Lines_ID = dbo.PI_Item.FromPOLine__Po_Lines_ID LEFT OUTER JOIN
                      dbo.Nominals ON dbo.PI_Item.Nominal__Nominals_ID = dbo.Nominals.Nominal_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.PI_Item.Part__Part_id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.UOM_From_Conversion_Id ON dbo.PI_Item.UOM__Conversions_ID = dbo.UOM_From_Conversion_Id.Conversion_Id LEFT OUTER JOIN
                      dbo.MULTICURRENCY ON dbo.PI_Item.Currency_Id = dbo.MULTICURRENCY.MultiCurrency_ID
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'PI_Item_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Purchase_Order"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 341
            End
            DisplayFlags = 280
            TopColumn = 18
         End
         Begin Table = "Employee"
            Begin Extent = 
               Top = 6
               Left = 379
               Bottom = 195
               Right = 608
            End
            DisplayFlags = 280
            TopColumn = 25
         End
         Begin Table = "Po_Lines"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 24
         End
         Begin Table = "PI_Item"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 281
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Nominals"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 295
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UOM_From_Conversion_Id"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 710
               Right = 209
            End
         ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'PI_Item_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'PI_Item_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'   DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "MULTICURRENCY"
            Begin Extent = 
               Top = 714
               Left = 38
               Bottom = 833
               Right = 302
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 1635
         Table = 2205
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'PI_Item_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'PI_Item_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'PI_Item_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Price_List_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Price_List_List]
AS
SELECT     dbo.Price_List_Temp.PriceList_Id, dbo.Price_List_Temp.Part_Id, dbo.Price_List_Temp.Modified, dbo.Price_List_Temp.[Price List], dbo.Price_List_Temp.Currency, 
                      dbo.Price_List_Temp.[Part No], dbo.Price_List_Temp.Description, dbo.Price_List_Temp.[On Order], dbo.Price_List_Temp.[Min Order], dbo.Price_List_Temp.[In Stock], 
                      dbo.Price_List_Temp.[Lead Time], dbo.Price_List_Temp.[Drawing No], dbo.Price_List_Temp.[Re Order], dbo.Price_List_Temp.[Recomended Order], 
                      dbo.Price_List_Temp.Required, dbo.Price_List_Temp.[Free Stock], dbo.Price_List_Temp.[Group Code], dbo.Price_List_Temp.Cost, 
                      dbo.PriceList_PartQtyPrice.PriceList_PartQtyPrice_ID, dbo.PriceList_PartQtyPrice.Modified AS [Price Modified], dbo.PriceList_PartQtyPrice.Qty, 
                      dbo.PriceList_PartQtyPrice.Price, dbo.PriceList_PartQtyPrice.Date_Added AS [Date Added], dbo.UOM_From_Conversion_Id.Unit_of_Measure AS UOM, 
                      dbo.Employee.Name AS [Modified By], dbo.Part_Discount_Group.Part_Discount_Group AS [Part Discount Group], dbo.Part_Status.Part_Status AS [Part Status], 
                      dbo.UDData.UDData_Data AS [Part UD 1], UDData_1.UDData_Data AS [Part UD 2], UDData_2.UDData_Data AS [Part UD 3], UDData_5.UDData_Data AS [Part UD 4], 
                      UDData_4.UDData_Data AS [Part UD 5], UDData_3.UDData_Data AS [Part UD 6]
FROM         dbo.UOM_From_Conversion_Id RIGHT OUTER JOIN
                      dbo.Part_Discount_Group RIGHT OUTER JOIN
                      dbo.UDData AS UDData_4 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_3 RIGHT OUTER JOIN
                      dbo.Part ON UDData_3.UDData_ID = dbo.Part.UDF6__UDData_ID ON UDData_4.UDData_ID = dbo.Part.UDF5__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_5 ON dbo.Part.UDF4__UDData_ID = UDData_5.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON dbo.Part.UDF3__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON dbo.Part.UDF2__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.UDData ON dbo.Part.UDF1__UDData_ID = dbo.UDData.UDData_ID LEFT OUTER JOIN
                      dbo.Part_Status ON dbo.Part.Status__Part_status_id = dbo.Part_Status.Part_Status_id ON 
                      dbo.Part_Discount_Group.Part_Discount_Group_ID = dbo.Part.Discount__Part_Discount_Group_ID LEFT OUTER JOIN
                      dbo.PriceList_PartQtyPrice ON dbo.Part.Part_Id = dbo.PriceList_PartQtyPrice.Part__Part_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.PriceList_PartQtyPrice.Modified_By = dbo.Employee.Employee_Id RIGHT OUTER JOIN
                      dbo.Price_List_Temp ON dbo.PriceList_PartQtyPrice.Part__Part_ID = dbo.Price_List_Temp.Part_Id AND 
                      dbo.PriceList_PartQtyPrice.Parent__Price_List_ID = dbo.Price_List_Temp.PriceList_Id ON 
                      dbo.UOM_From_Conversion_Id.Conversion_Id = dbo.PriceList_PartQtyPrice.UOM__Conversions_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Credits_List_With_Parts]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Credits_List_With_Parts]
AS
SELECT     dbo.Credits_List.CREDITS_ID, dbo.Credits_List.[Credit No], dbo.Credits_List.[Date Raised], dbo.Credits_List.[Sent To Accounts], dbo.Credits_List.[Tax Date], 
                      dbo.Credits_List.Contact, dbo.Credits_List.Company, dbo.Credits_List.Status, dbo.Credits_List.Posted, dbo.Credits_List.Company__COMPANYS_ID, 
                      dbo.Credits_List.[Total Exc Vat], dbo.Credits_List.Vat, dbo.Credits_List.[Total Inc Vat], dbo.Credits_List.[Do Not Post], dbo.Credit_Part.Credit_Part_ID, 
                      dbo.Credit_Part.Credit__CREDITS_ID, dbo.Credit_Part.Description_Non_Rtf AS Description, dbo.Credit_Part.Paid, dbo.Credit_Part.Price, dbo.Credit_Part.Qty, 
                      dbo.Credit_Part.Ref AS Reference, dbo.Credit_Part.Sent_To_Accounts AS [Line Sent To Accounts], dbo.Credit_Part.Total, dbo.Credit_Part.VAT_Rate AS [VAT Rate], 
                      Sales_Order_Lines_1.Contract_No AS [Contract No], dbo.Credit_Part_Status.Credit_Part_Status AS [Line Status], dbo.Part.Part_No AS [Part No], 
                      dbo.Invoice_Part.Ref AS [Invioce line], dbo.UDData.UDData_Data AS [SO UD Data 1], UDData_1.UDData_Data AS [SO UD Data 2], 
                      UDData_2.UDData_Data AS [SO UD Data 3], UDData_3.UDData_Data AS [SO UD Data 4], UDData_4.UDData_Data AS [SO UD Data 5], 
                      UDData_5.UDData_Data AS [SO UD Data 6]
FROM         dbo.Invoice_Part RIGHT OUTER JOIN
                      dbo.UDData AS UDData_3 RIGHT OUTER JOIN
                      dbo.SALES_ORDERS LEFT OUTER JOIN
                      dbo.UDData AS UDData_5 ON dbo.SALES_ORDERS.UDF6__UDData_ID = UDData_5.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_4 ON dbo.SALES_ORDERS.UDF5__UDData_ID = UDData_4.UDData_ID ON 
                      UDData_3.UDData_ID = dbo.SALES_ORDERS.UDF4__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON dbo.SALES_ORDERS.UDF3__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON dbo.SALES_ORDERS.UDF2__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.UDData ON dbo.SALES_ORDERS.UDF1__UDData_ID = dbo.UDData.UDData_ID RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.SALES_ORDERS.SALES_ORDERS_ID = dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID RIGHT OUTER JOIN
                      dbo.Credit_Part ON dbo.Sales_Order_Lines.Sales_Order_Lines_ID = dbo.Credit_Part.SoLine__Sales_Order_Lines_ID RIGHT OUTER JOIN
                      dbo.Credits_List ON dbo.Credit_Part.Credit__CREDITS_ID = dbo.Credits_List.CREDITS_ID LEFT OUTER JOIN
                      dbo.Credit_Part_Status ON dbo.Credit_Part.Status__Credit_Part_Status_ID = dbo.Credit_Part_Status.Credit_Part_Status_id LEFT OUTER JOIN
                      dbo.Sales_Order_Lines AS Sales_Order_Lines_1 ON 
                      dbo.Credit_Part.SoLine__Sales_Order_Lines_ID = Sales_Order_Lines_1.Sales_Order_Lines_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.Credit_Part.Part__Part_id = dbo.Part.Part_Id ON dbo.Invoice_Part.Invoice_Part_ID = dbo.Credit_Part.Invoice_part__Invoice_Part_ID
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Credits_List_With_Parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[38] 4[23] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Credit_Part"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 281
            End
            DisplayFlags = 280
            TopColumn = 4
         End
         Begin Table = "Credits_List"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 256
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Credit_Part_Status"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 233
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines_1"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 320
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Invoice_Part"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 286
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines"
            Begin Extent = 
               Top = 102
               Left = 62
               Bottom = 236
               Right = 259
      ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Credits_List_With_Parts'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Credits_List_With_Parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'      End
            DisplayFlags = 280
            TopColumn = 31
         End
         Begin Table = "SALES_ORDERS"
            Begin Extent = 
               Top = 82
               Left = 49
               Bottom = 254
               Right = 293
            End
            DisplayFlags = 280
            TopColumn = 49
         End
         Begin Table = "UDData_1"
            Begin Extent = 
               Top = 49
               Left = 340
               Bottom = 168
               Right = 516
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData"
            Begin Extent = 
               Top = 12
               Left = 336
               Bottom = 131
               Right = 512
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_2"
            Begin Extent = 
               Top = 79
               Left = 341
               Bottom = 198
               Right = 517
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_3"
            Begin Extent = 
               Top = 102
               Left = 343
               Bottom = 221
               Right = 519
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_4"
            Begin Extent = 
               Top = 132
               Left = 346
               Bottom = 251
               Right = 522
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_5"
            Begin Extent = 
               Top = 156
               Left = 351
               Bottom = 275
               Right = 527
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Credits_List_With_Parts'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Credits_List_With_Parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Credits_List_With_Parts'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[AllocationQtyComplete]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[AllocationQtyComplete]
AS
SELECT     dbo.Allocations.Allocations_ID, SUM(dbo.WO_ISSUE_STock_List.Qty) AS TotalIssued
FROM         dbo.Allocations LEFT OUTER JOIN
                      dbo.WO_ISSUE_STock_List ON dbo.Allocations.WO__Works_order_Id = dbo.WO_ISSUE_STock_List.ForWO__WORK_ORDERS_ID AND 
                      dbo.Allocations.Part__Part_Id = dbo.WO_ISSUE_STock_List.Part_Id
GROUP BY dbo.Allocations.Allocations_ID
HAVING      (NOT (SUM(dbo.WO_ISSUE_STock_List.Qty) IS NULL))
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Over_Issue]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Over_Issue]
AS
SELECT     dbo.Allocations_List.*, WO__Works_order_Id AS Expr1, Qty - [Qty Complete] AS Expr3
FROM         dbo.Allocations_List
WHERE     (WO__Works_order_Id = 17) AND (Qty - [Qty Complete] < 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Manu_Cost_Alt]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Actual_Manu_Cost_Alt]
AS
SELECT     dbo.WO_Analysis_Actual_Material_Temp.ForWO__WORK_ORDERS_ID, SUM(dbo.WORK_ORDERS.Qty) AS WO_Qty, 
                      SUM(dbo.WO_Total_Issues.QLB - dbo.WO_Total_Issues.Qty_Returned) AS Issue_Qty, dbo.WO_Total_Issues.Part__Part_Id, SUM(dbo.Allocations_List.Qty) 
                      AS Required, SUM(dbo.WO_Total_Issues.Material_Cost) AS Material_Cost
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.WO_Total_Issues INNER JOIN
                      dbo.WO_Analysis_Actual_Material_Temp ON dbo.WO_Total_Issues.WO_ISSUE_ID = dbo.WO_Analysis_Actual_Material_Temp.WO_ISSUE_ID ON 
                      dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.WO_Total_Issues.ForWO__WORK_ORDERS_ID INNER JOIN
                      dbo.Allocations_List ON dbo.WO_Total_Issues.ForWO__WORK_ORDERS_ID = dbo.Allocations_List.WO__Works_order_Id AND 
                      dbo.WO_Total_Issues.Part__Part_Id = dbo.Allocations_List.Part__Part_Id INNER JOIN
                      dbo.Part ON dbo.WO_Total_Issues.Part__Part_Id = dbo.Part.Part_Id
WHERE     (dbo.Part.Type__Part_Type_Id <> 2)
GROUP BY dbo.WO_Analysis_Actual_Material_Temp.ForWO__WORK_ORDERS_ID, dbo.WO_Total_Issues.Part__Part_Id
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Analysis_Actual_Manu_Cost_Alt', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[22] 4[42] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -96
         Left = 0
      End
      Begin Tables = 
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 96
               Left = 285
               Bottom = 216
               Right = 582
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WO_Analysis_Actual_Material_Temp"
            Begin Extent = 
               Top = 6
               Left = 285
               Bottom = 96
               Right = 531
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Allocations_List"
            Begin Extent = 
               Top = 216
               Left = 375
               Bottom = 335
               Right = 589
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 222
               Left = 38
               Bottom = 341
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WO_Total_Issues"
            Begin Extent = 
               Top = 102
               Left = 38
               Bottom = 221
               Right = 268
            End
            DisplayFlags = 280
            TopColumn = 2
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Analysis_Actual_Manu_Cost_Alt'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Analysis_Actual_Manu_Cost_Alt', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Analysis_Actual_Manu_Cost_Alt'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Analysis_Actual_Manu_Cost_Alt', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Analysis_Actual_Manu_Cost_Alt'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Material_Cost_Alt]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Actual_Material_Cost_Alt]
AS
SELECT     dbo.WO_Analysis_Actual_Material_Temp.ForWO__WORK_ORDERS_ID, SUM(dbo.WORK_ORDERS.Qty) AS WO_Qty, 
                      SUM(dbo.WO_Total_Issues.QLB - dbo.WO_Total_Issues.Qty_Returned) AS Issue_Qty, dbo.WO_Total_Issues.Part__Part_Id, SUM(dbo.Allocations_List.Qty) 
                      AS Required, SUM(dbo.WO_Total_Issues.Material_Cost) AS Material_Cost
FROM         dbo.WORK_ORDERS INNER JOIN
                      dbo.WO_Total_Issues INNER JOIN
                      dbo.WO_Analysis_Actual_Material_Temp ON dbo.WO_Total_Issues.WO_ISSUE_ID = dbo.WO_Analysis_Actual_Material_Temp.WO_ISSUE_ID ON 
                      dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.WO_Total_Issues.ForWO__WORK_ORDERS_ID INNER JOIN
                      dbo.Allocations_List ON dbo.WO_Total_Issues.ForWO__WORK_ORDERS_ID = dbo.Allocations_List.WO__Works_order_Id AND 
                      dbo.WO_Total_Issues.Part__Part_Id = dbo.Allocations_List.Part__Part_Id INNER JOIN
                      dbo.Part ON dbo.WO_Total_Issues.Part__Part_Id = dbo.Part.Part_Id
WHERE     (dbo.Part.Type__Part_Type_Id = 2)
GROUP BY dbo.WO_Analysis_Actual_Material_Temp.ForWO__WORK_ORDERS_ID, dbo.WO_Total_Issues.Part__Part_Id
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Analysis_Actual_Material_Cost_Alt', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[16] 4[32] 2[12] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 216
               Left = 38
               Bottom = 335
               Right = 335
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WO_Total_Issues"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 268
            End
            DisplayFlags = 280
            TopColumn = 2
         End
         Begin Table = "WO_Analysis_Actual_Material_Temp"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 215
               Right = 284
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Allocations_List"
            Begin Extent = 
               Top = 37
               Left = 434
               Bottom = 277
               Right = 648
            End
            DisplayFlags = 280
            TopColumn = 13
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 336
               Left = 38
               Bottom = 455
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Co' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Analysis_Actual_Material_Cost_Alt'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Analysis_Actual_Material_Cost_Alt', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'lumn = 5085
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Analysis_Actual_Material_Cost_Alt'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Analysis_Actual_Material_Cost_Alt', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Analysis_Actual_Material_Cost_Alt'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Main_Mat]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Main_Mat]
AS
SELECT        dbo.First_Purchased_Mat.BOM_ORDER, dbo.Bom.Bom_Part__part_id, dbo.Part.Part_No, dbo.First_Purchased_Mat.Main_Part__part_id
FROM            dbo.First_Purchased_Mat INNER JOIN
                         dbo.Bom ON dbo.First_Purchased_Mat.BOM_ORDER = dbo.Bom.Bom_Order AND 
                         dbo.First_Purchased_Mat.Main_Part__part_id = dbo.Bom.Main_Part__part_id INNER JOIN
                         dbo.Part ON dbo.Bom.Bom_Part__part_id = dbo.Part.Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Production_Plan_List_With_Parts]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Production_Plan_List_With_Parts]
AS
SELECT     dbo.Production_Plan_List.Production_Plan_ID, dbo.Production_Ops.Production_Ops_ID, dbo.Production_Plan_List.Status, dbo.Active_Ops_Complete.*, 
                      dbo.Production_Plan_List.Fully_Planned, dbo.Production_Plan_List.Actual_Run, dbo.Production_Plan_List.Actual_Setup, dbo.Production_Plan_List.Actual_Total, 
                      dbo.Production_Plan_List.From_Date, dbo.Production_Plan_List.To_Date, dbo.Production_Plan_List.OS_Run, dbo.Production_Plan_List.OS_Setup, 
                      dbo.Production_Plan_List.OS_Total, dbo.Production_Plan_List.UserDefinable1, dbo.Production_Plan_List.UserDefinable2, 
                      dbo.Production_Plan_List.Name AS Employee, dbo.Production_Plan_List.Number_Ops_Comp, dbo.Production_Plan_List.Percentage_Ops_Comp, 
                      dbo.Production_Plan_List.Notes AS [Plan Notes], dbo.Production_Plan_List.Complete AS [Plan Complete]
FROM         dbo.Production_Ops RIGHT OUTER JOIN
                      dbo.Production_Plan_List ON dbo.Production_Ops.Production_Plan_ID = dbo.Production_Plan_List.Production_Plan_ID LEFT OUTER JOIN
                      dbo.Active_Ops_Complete ON dbo.Production_Ops.Wo_Route_SChedule_ID = dbo.Active_Ops_Complete.Wo_Route_SChedule_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Production_Ops_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Production_Ops_list]
AS
SELECT     dbo.Active_Ops_Complete.Wo_Route_SChedule_ID, dbo.Active_Ops_Complete.Complete, dbo.Active_Ops_Complete.[Date Complete], 
                      dbo.Active_Ops_Complete.[Do Not Use], dbo.Active_Ops_Complete.[Last Start Date], dbo.Active_Ops_Complete.Priority, dbo.Active_Ops_Complete.[Qty Complete], 
                      dbo.Active_Ops_Complete.[Scheduled Complete date], dbo.Active_Ops_Complete.[Start Date], dbo.Active_Ops_Complete.[Actual Run Time], 
                      dbo.Active_Ops_Complete.[Actual Setup Time], dbo.Active_Ops_Complete.Conflict, dbo.Active_Ops_Complete.Early, dbo.Active_Ops_Complete.[First Start Date], 
                      dbo.Active_Ops_Complete.[Last End Date], dbo.Active_Ops_Complete.Late, dbo.Active_Ops_Complete.Locked, dbo.Active_Ops_Complete.[Materia _Arrival_Date], 
                      dbo.Active_Ops_Complete.[Per Complete], dbo.Active_Ops_Complete.[Problems Accepted], dbo.Active_Ops_Complete.[Requires Material], 
                      dbo.Active_Ops_Complete.[Seq No], dbo.Active_Ops_Complete.Started, dbo.Active_Ops_Complete.Stopped, dbo.Active_Ops_Complete.[Use Setup Time], 
                      dbo.Active_Ops_Complete.[Setup Time], dbo.Active_Ops_Complete.[Run Time], dbo.Active_Ops_Complete.[Inter Op Time], dbo.Active_Ops_Complete.[Date Started], 
                      dbo.Active_Ops_Complete.[WO No], dbo.Active_Ops_Complete.[Contract No], dbo.Active_Ops_Complete.[Op No], dbo.Active_Ops_Complete.[OP Description], 
                      dbo.Active_Ops_Complete.Process, dbo.Active_Ops_Complete.[Route Version], dbo.Active_Ops_Complete.[Part No], dbo.Active_Ops_Complete.[Part Description], 
                      dbo.Active_Ops_Complete.[WC Name], dbo.Active_Ops_Complete.[WC No], dbo.Active_Ops_Complete.Cancelled, dbo.Active_Ops_Complete.Route_id, 
                      dbo.Active_Ops_Complete.WORK_ORDERS_ID, dbo.Active_Ops_Complete.Work_Centre_id, dbo.Active_Ops_Complete.Process_Id, 
                      dbo.Active_Ops_Complete.Location, dbo.Active_Ops_Complete.[WO Status], dbo.Active_Ops_Complete.[WO Date Required], 
                      dbo.Active_Ops_Complete.[WO Date Raised], dbo.Active_Ops_Complete.Notes, dbo.Active_Ops_Complete.[WO On Hold], 
                      dbo.Active_Ops_Complete.[Contract On Hold], dbo.Active_Ops_Complete.Qty, dbo.Active_Ops_Complete.Customer, 
                      dbo.Active_Ops_Complete.[Estimated Complete Date], dbo.Active_Ops_Complete.[Display Order], dbo.Active_Ops_Complete.[Plan Exists], 
                      dbo.Production_Ops.Production_Ops_ID, dbo.Production_Plan.Production_Plan_ID, dbo.Production_Plan_Status.Status, dbo.Production_Ops.Sort_Order, 
                      dbo.Active_Ops_Complete.Grid_Sort_Order, dbo.Route.Op_No AS [Next OP]
FROM         dbo.Route RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule ON dbo.Route.Route_id = dbo.Wo_Route_SChedule.Route_Id RIGHT OUTER JOIN
                      dbo.Active_Ops_Complete ON dbo.Wo_Route_SChedule.Wo_Route_SChedule_ID = dbo.Active_Ops_Complete.Next_Op RIGHT OUTER JOIN
                      dbo.Production_Ops ON dbo.Active_Ops_Complete.Wo_Route_SChedule_ID = dbo.Production_Ops.Wo_Route_SChedule_ID LEFT OUTER JOIN
                      dbo.Production_Plan_Status RIGHT OUTER JOIN
                      dbo.Production_Plan ON dbo.Production_Plan_Status.Production_Plan_Status_ID = dbo.Production_Plan.Status__Production_Plan_Status_ID ON 
                      dbo.Production_Ops.Production_Plan_ID = dbo.Production_Plan.Production_Plan_ID
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Production_Ops_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -30
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Production_Ops"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 2
         End
         Begin Table = "Production_Plan_Status"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 258
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Production_Plan"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 301
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Active_Ops_Complete"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 249
            End
            DisplayFlags = 280
            TopColumn = 54
         End
         Begin Table = "Wo_Route_SChedule"
            Begin Extent = 
               Top = 64
               Left = 357
               Bottom = 245
               Right = 593
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Route"
            Begin Extent = 
               Top = 51
               Left = 661
               Bottom = 272
               Right = 921
            End
            DisplayFlags = 280
            TopColumn = 11
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 12
         Width = 284' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Production_Ops_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Production_Ops_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 3045
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Production_Ops_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Production_Ops_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Production_Ops_list'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Invoice_Part_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Invoice_Part_List]
AS
SELECT     dbo.Invoice_Part.Invoice_Part_ID, dbo.Invoice_Part.Description_Non_Rtf AS Description, dbo.Invoice_Part.Invoice__INVOICES_ID, dbo.Invoice_Part.Price, 
                      dbo.Invoice_Part.Qty, dbo.Invoice_Part.Qty_Credited AS [Qty Credited], dbo.Invoice_Part.Ref AS Reference, dbo.Invoice_Part.Sent_To_Accounts AS [Sent To Accounts], 
                      dbo.Invoice_Part.So_line__Sales_Order_Lines_ID, dbo.Invoice_Part.Total, dbo.Invoice_Part.Value_Credited AS [Value Credited], dbo.Invoice_Part.VAT, 
                      dbo.Invoice_Part.VAT_Rate AS [VAT Rate], dbo.Part.Part_No AS [Part No], dbo.Delivery_Item.Ref AS [Delivery Ref], 
                      dbo.Invoice_Part_Status.Invoice_Item_Status AS [Line Status], dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name AS Company, 
                      dbo.INVOICES.Date_Raised AS [Date Raised], dbo.INVOICES.Invoice_No AS [Invoice No], dbo.INVOICES.Tax_Date AS [Tax Date], 
                      dbo.UOM_From_Conversion_Id.Unit_of_Measure AS UOM, dbo.COMPANYS.Company_Id, dbo.Invoice_Part.Value_Paid AS [Value Paid], 
                      dbo.INVOICES.Notes_Non_RTF AS [Invoice Note], dbo.SALES_ORDERS.Customers_PO AS [Customers PO], UDData_1.UDData_Data AS [SO UserDefinable1], 
                      UDData_2.UDData_Data AS [SO UserDefinable2], UDData_3.UDData_Data AS [SO UserDefinable3], UDData_4.UDData_Data AS [SO UserDefinable4], 
                      UDData_5.UDData_Data AS [SO UserDefinable5], UDData_6.UDData_Data AS [SO UserDefinable6], dbo.Invoice_Part.Paid, 
                      dbo.COMPANYS.EU_Country_Code AS [EU Country Code], dbo.Invoice_Part.Cust_Return AS [CR Pending]
FROM         dbo.Delivery_Item RIGHT OUTER JOIN
                      dbo.Invoice_Part LEFT OUTER JOIN
                      dbo.UDData UDData_1 RIGHT OUTER JOIN
                      dbo.UDData UDData_3 RIGHT OUTER JOIN
                      dbo.UDData UDData_4 RIGHT OUTER JOIN
                      dbo.UDData UDData_6 RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON UDData_6.UDData_ID = dbo.Sales_Order_Lines.UDF6__UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_5 ON dbo.Sales_Order_Lines.UDF5__UDData_ID = UDData_5.UDData_ID ON 
                      UDData_4.UDData_ID = dbo.Sales_Order_Lines.UDF4__UDData_ID ON UDData_3.UDData_ID = dbo.Sales_Order_Lines.UDF3__UDData_ID LEFT OUTER JOIN
                      dbo.UDData UDData_2 ON dbo.Sales_Order_Lines.UDF2__UDData_ID = UDData_2.UDData_ID ON 
                      UDData_1.UDData_ID = dbo.Sales_Order_Lines.UDF1__UDData_ID LEFT OUTER JOIN
                      dbo.SALES_ORDERS ON dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID = dbo.SALES_ORDERS.SALES_ORDERS_ID ON 
                      dbo.Invoice_Part.So_line__Sales_Order_Lines_ID = dbo.Sales_Order_Lines.Sales_Order_Lines_ID LEFT OUTER JOIN
                      dbo.UOM_From_Conversion_Id ON dbo.Invoice_Part.UOM__Conversions_ID = dbo.UOM_From_Conversion_Id.Conversion_Id LEFT OUTER JOIN
                      dbo.INVOICES ON dbo.Invoice_Part.Invoice__INVOICES_ID = dbo.INVOICES.INVOICES_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.INVOICES.ForCompany__COMPANYS_ID = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.Invoice_Part_Status ON dbo.Invoice_Part.Status__Invoice_Part_Status_ID = dbo.Invoice_Part_Status.Invoice_Part_Status_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.Invoice_Part.Part__Part_id = dbo.Part.Part_Id ON dbo.Delivery_Item.Delivery_Item_ID = dbo.Invoice_Part.delivery_Line__Delivery_Item_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Accounts_Entry_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Accounts_Entry_List]
AS
SELECT     dbo.Accounts_Entry.Accounts_Entry_ID, dbo.Accounts_Entry.Date_Entered AS [Date Entered], dbo.Accounts_Entry.Processed AS Posted, 
                      dbo.Accounts_Entry.Reference1, dbo.Accounts_Entry.Reference2, dbo.Accounts_Entry.Tax_Date AS [Posting Date], dbo.Accounts_Entry.BookMark, 
                      dbo.Week.Week_No AS [Week No], dbo.Entry_Type.Entry_Type AS [Entry Type], dbo.Employee.Name AS [Entered By], 
                      dbo.Periods.Period_No AS [Period No], dbo.Accounts_Entry.Date_Posted AS [Date Posted], dbo.Accounts_Entry.Currency_Total_Credit AS Total, 
                      dbo.COMPANYS.Company_No AS [Sales Acc No], dbo.COMPANYS.Name AS Company, dbo.COMPANYS.SupplierAccNo AS [Purch Acc No], 
                      dbo.Accounts_Entry.Company__COMPANYS_ID, dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, dbo.Accounts_entry_Balance.Balance, 
                      dbo.Accounts_Entry.Due_Date AS [Due Date]
FROM         dbo.Accounts_Entry LEFT OUTER JOIN
                      dbo.MULTICURRENCY ON dbo.Accounts_Entry.Currency__MULTICURRENCY_ID = dbo.MULTICURRENCY.MultiCurrency_ID LEFT OUTER JOIN
                      dbo.Accounts_entry_Balance ON dbo.Accounts_Entry.Accounts_Entry_ID = dbo.Accounts_entry_Balance.Accounts_Entry_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Accounts_Entry.Company__COMPANYS_ID = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.Employee ON dbo.Accounts_Entry.Entered_By = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.Entry_Type ON dbo.Accounts_Entry.Type__Entry_Type_ID = dbo.Entry_Type.Entry_Type_ID LEFT OUTER JOIN
                      dbo.Periods ON dbo.Accounts_Entry.Period__Periods_ID = dbo.Periods.Periods_ID LEFT OUTER JOIN
                      dbo.Week ON dbo.Accounts_Entry.Week__Week_ID = dbo.Week.Week_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_orders_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Sales_orders_list]
AS
SELECT     dbo.SALES_ORDERS.SALES_ORDERS_ID, dbo.SALES_ORDERS.Sales_No AS [Sales No], dbo.COMPANYS.Company_No AS [Company No], 
                      dbo.COMPANYS.Name AS Customer, dbo.CONTACTS.Name AS Contact, dbo.SALES_ORDERS.SO_Date AS [SO Date], 
                      dbo.SALES_ORDERS.Customers_PO AS [Customers PO], Employee_2.Name AS SalesPerson, Companys_1.Name AS [End User], dbo.INDUSTRY.Industry, 
                      dbo.SALES_ORDERS.Acknowledged, dbo.SALES_ORDERS.Customers_Order_date AS [PO date], dbo.COMPANY_ADDRESS.Address1, 
                      dbo.COMPANY_ADDRESS.Address2, dbo.COMPANY_ADDRESS.Address3, dbo.COMPANY_ADDRESS.Town, dbo.COMPANY_ADDRESS.Country, 
                      dbo.COMPANY_ADDRESS.Postcode, dbo.SALES_ORDER_STATUS.Sales_Order_Status AS [SO Status], dbo.SALES_ORDERS.Notes_non_rtf AS Notes, 
                      dbo.COMPANY_AREA.Area AS [Company Area], dbo.SALES_ORDERS.Customers_ID__Companys, dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, 
                      Employee_1.Name AS [Created By], dbo.SALES_ORDERS.created AS [Created Date], dbo.SALES_ORDERS.Internal_Notes_Non_RTF AS [Internal Notes], 
                      dbo.SALES_ORDERS.First_Order AS [First Order], dbo.COMPANYS.CreditStatus AS [On Hold], dbo.COMPANYS.Telephone, UDData_1.UDData_Data AS UserDefinable1, 
                      UDData_2.UDData_Data AS UserDefinable2, UDData_3.UDData_Data AS UserDefinable3, UDData_4.UDData_Data AS UserDefinable4, 
                      UDData_5.UDData_Data AS UserDefinable5, UDData_6.UDData_Data AS UserDefinable6, CONTACTS_1.Name AS [End User Contact], 
                      dbo.SALES_ORDERS.Currency_Total_Exc_Vat AS [Total Exc Vat], dbo.SALES_ORDERS.Currency_Total_Vat AS [Total Vat], 
                      dbo.SALES_ORDERS.Currency_Total_Inc_Vat AS [Total Inc Vat], dbo.Delivery_Address.Address1 AS [Del Address 1], 
                      dbo.Delivery_Address.Address2 AS [Del Address 2], dbo.Delivery_Address.Address3 AS [Del Address 3], dbo.Delivery_Address.Country AS [Del Country], 
                      dbo.Delivery_Address.Postcode AS [Del Postcode], dbo.SALES_ORDERS.Can_Deliver, dbo.SALES_ORDERS.Total_Weight AS [Total Weight], 
                      dbo.SALES_ORDERS.Contract_Reviewed
FROM         dbo.MULTICURRENCY RIGHT OUTER JOIN
                      dbo.CONTACTS RIGHT OUTER JOIN
                      dbo.UDData AS UDData_3 RIGHT OUTER JOIN
                      dbo.SALES_ORDERS LEFT OUTER JOIN
                      dbo.Delivery_Address ON dbo.SALES_ORDERS.Customers_ID__Companys = dbo.Delivery_Address.ParentCompany__Company_Id LEFT OUTER JOIN
                      dbo.CONTACTS AS CONTACTS_1 ON dbo.SALES_ORDERS.End_User_Id__CONTACTS = CONTACTS_1.Contact_id LEFT OUTER JOIN
                      dbo.UDData AS UDData_6 ON dbo.SALES_ORDERS.UDF6__UDData_ID = UDData_6.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_5 ON dbo.SALES_ORDERS.UDF5__UDData_ID = UDData_5.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_4 ON dbo.SALES_ORDERS.UDF4__UDData_ID = UDData_4.UDData_ID ON 
                      UDData_3.UDData_ID = dbo.SALES_ORDERS.UDF3__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON dbo.SALES_ORDERS.UDF2__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON dbo.SALES_ORDERS.UDF1__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.Employee AS Employee_1 ON dbo.SALES_ORDERS.created_by = Employee_1.Employee_Id LEFT OUTER JOIN
                      dbo.Employee AS Employee_2 ON dbo.SALES_ORDERS.Salesman_id__Employee = Employee_2.Employee_Id LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.SALES_ORDERS.Customers_ID__Companys = dbo.COMPANYS.Company_Id ON 
                      dbo.CONTACTS.Contact_id = dbo.SALES_ORDERS.Contact_Id__Contacts LEFT OUTER JOIN
                      dbo.INDUSTRY ON dbo.SALES_ORDERS.type_ID__Industry = dbo.INDUSTRY.Industry_Id LEFT OUTER JOIN
                      dbo.COMPANYS AS Companys_1 ON dbo.SALES_ORDERS.End_User_Id__Companys = Companys_1.Company_Id LEFT OUTER JOIN
                      dbo.COMPANY_AREA ON dbo.COMPANYS.CoyArea__area_id = dbo.COMPANY_AREA.Area_Id ON 
                      dbo.MULTICURRENCY.MultiCurrency_ID = dbo.SALES_ORDERS.Currency__Currency_Id LEFT OUTER JOIN
                      dbo.COMPANY_ADDRESS ON dbo.SALES_ORDERS.SO__Company_Address_id = dbo.COMPANY_ADDRESS.Address_Id LEFT OUTER JOIN
                      dbo.SALES_ORDER_STATUS ON dbo.SALES_ORDERS.Status__Sales_Order_Status = dbo.SALES_ORDER_STATUS.Sales_order_Status_Id
WHERE     (dbo.SALES_ORDERS.Sales_No > '''')
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Sales_orders_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -288
         Left = 0
      End
      Begin Tables = 
         Begin Table = "MULTICURRENCY"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 302
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "CONTACTS"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 357
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_3"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDERS"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 282
            End
            DisplayFlags = 280
            TopColumn = 149
         End
         Begin Table = "Delivery_Address"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 277
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "CONTACTS_1"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 357
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_6"
            Begin Extent = 
               Top = 246
               Left = 252
               Bottom = 365
               Right = 428
            End
 ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Sales_orders_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Sales_orders_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'           DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_5"
            Begin Extent = 
               Top = 726
               Left = 38
               Bottom = 845
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_4"
            Begin Extent = 
               Top = 726
               Left = 252
               Bottom = 845
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_2"
            Begin Extent = 
               Top = 846
               Left = 38
               Bottom = 965
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_1"
            Begin Extent = 
               Top = 846
               Left = 252
               Bottom = 965
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Employee_1"
            Begin Extent = 
               Top = 966
               Left = 38
               Bottom = 1085
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Employee_2"
            Begin Extent = 
               Top = 1086
               Left = 38
               Bottom = 1205
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 1206
               Left = 38
               Bottom = 1325
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "INDUSTRY"
            Begin Extent = 
               Top = 486
               Left = 315
               Bottom = 605
               Right = 475
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Companys_1"
            Begin Extent = 
               Top = 1326
               Left = 38
               Bottom = 1445
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANY_AREA"
            Begin Extent = 
               Top = 966
               Left = 305
               Bottom = 1085
               Right = 465
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANY_ADDRESS"
            Begin Extent = 
               Top = 1446
               Left = 38
               Bottom = 1565
               Right = 277
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDER_STATUS"
            Begin Extent = 
               Top = 1566
               Left = 38
               Bottom = 1685
               Right = 237
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Sales_orders_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane3' , N'SCHEMA',N'dbo', N'VIEW',N'Sales_orders_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane3', @value=N'= 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Sales_orders_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Sales_orders_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=3 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Sales_orders_list'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Company_Balance]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Company_Balance]
AS
SELECT     dbo.Accounts_Entry.Company__COMPANYS_ID, MULTICURRENCY_1.MultiCurrency_Currency AS Currency, 
                      SUM(ROUND((1 / dbo.MULTICURRENCY.MultiCurrency_Multiply_Factor * MULTICURRENCY_1.MultiCurrency_Multiply_Factor) 
                      * (dbo.Nominal_Entry.Currency_Outstanding * dbo.Nominal_Entry.Factor), 2)) AS [Currency Balance], 
                      SUM(dbo.Nominal_Entry.Outstanding_Amount * dbo.Nominal_Entry.Factor) AS Balance, dbo.Company_Overdue.[Currency OverDue], 
                      dbo.Company_Overdue.OverDue
FROM         dbo.Company_Overdue RIGHT OUTER JOIN
                      dbo.COMPANYS ON dbo.Company_Overdue.Company__COMPANYS_ID = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.MULTICURRENCY MULTICURRENCY_1 ON 
                      dbo.COMPANYS.Default_Currency__MultiCurrency_ID = MULTICURRENCY_1.MultiCurrency_ID LEFT OUTER JOIN
                      dbo.Accounts_Entry ON dbo.COMPANYS.Company_Id = dbo.Accounts_Entry.Company__COMPANYS_ID LEFT OUTER JOIN
                      dbo.Nominal_Entry LEFT OUTER JOIN
                      dbo.MULTICURRENCY ON dbo.Nominal_Entry.Currency__MULTICURRENCY_ID = dbo.MULTICURRENCY.MultiCurrency_ID ON 
                      dbo.Accounts_Entry.Accounts_Entry_ID = dbo.Nominal_Entry.Parent__Accounts_Entry_ID
GROUP BY dbo.Accounts_Entry.Company__COMPANYS_ID, MULTICURRENCY_1.MultiCurrency_Currency, dbo.Company_Overdue.[Currency OverDue], 
                      dbo.Company_Overdue.OverDue
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Quote_Line_Qty_Drop_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Quote_Line_Qty_Drop_list]
AS
SELECT     dbo.Quote_Line_Qty.Quote_Line_qty_id, dbo.Quote_Line_Qty.Reference, dbo.Quote_Line_Qty.Qty, dbo.Quote_Line_Qty.Price, 
                      dbo.Quote_Line_Qty.Total, dbo.Quote_Line_Qty.Ordered, dbo.UOM_From_Conversion_Id.Unit_of_Measure AS UOM, dbo.Part.Part_No, 
                      dbo.QUOTES.Quote_No AS [Quote No], dbo.ENQUIRYS.Enquiry_No AS [Enquiry No], dbo.COMPANYS.Company_No AS [Company No], 
                      dbo.COMPANYS.Name AS [Customer Name], dbo.QUOTES.Customer_id__Companys_Id
FROM         dbo.Quote_Line_Qty LEFT OUTER JOIN
                      dbo.UOM_From_Conversion_Id ON dbo.Quote_Line_Qty.UOM = dbo.UOM_From_Conversion_Id.Conversion_Id LEFT OUTER JOIN
                      dbo.Part RIGHT OUTER JOIN
                      dbo.QUOTE_LINES ON dbo.Part.Part_Id = dbo.QUOTE_LINES.Part__Part_Id ON 
                      dbo.Quote_Line_Qty.FromQuote_Line__Quote_Line_id = dbo.QUOTE_LINES.Quote_Line_id LEFT OUTER JOIN
                      dbo.QUOTES LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.QUOTES.Customer_id__Companys_Id = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.ENQUIRYS ON dbo.QUOTES.FromEnquiry__Enquiry_ID = dbo.ENQUIRYS.Enquiry_ID ON 
                      dbo.QUOTE_LINES.Form_Quote__Quote_id = dbo.QUOTES.Quote_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Quote_Line_Qty_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Quote_Line_Qty_List]
AS
SELECT     dbo.Quote_Line_Qty.Quote_Line_qty_id, dbo.Quote_Line_Qty.Reference, dbo.Quote_Line_Qty.Qty, dbo.Quote_Line_Qty.Price, dbo.Quote_Line_Qty.Total, 
                      dbo.Quote_Line_Qty.Ordered, dbo.UOM_From_Conversion_Id.Unit_of_Measure AS UOM, dbo.Part.Part_No, dbo.QUOTES.Quote_No AS [Quote No], 
                      dbo.ENQUIRYS.Enquiry_No AS [Enquiry No], dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name AS [Customer Name], 
                      dbo.QUOTES.Customer_id__Companys_Id, dbo.QUOTES.Quote_id, dbo.Supplier_Part.Supplier_Part_No AS [Alias Part No], 
                      dbo.Sales_Order_Lines.Contract_No AS [Contract No]
FROM         dbo.UOM_From_Conversion_Id RIGHT OUTER JOIN
                      dbo.Quote_Line_Qty LEFT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.Quote_Line_Qty.Quote_Line_qty_id = dbo.Sales_Order_Lines.Quote__Quote_Line_qty_Id ON 
                      dbo.UOM_From_Conversion_Id.Conversion_Id = dbo.Quote_Line_Qty.UOM LEFT OUTER JOIN
                      dbo.Part RIGHT OUTER JOIN
                      dbo.Supplier_Part RIGHT OUTER JOIN
                      dbo.QUOTE_LINES ON dbo.Supplier_Part.Supplier_part_id = dbo.QUOTE_LINES.Alias__Supplier_Part_ID ON dbo.Part.Part_Id = dbo.QUOTE_LINES.Part__Part_Id ON 
                      dbo.Quote_Line_Qty.FromQuote_Line__Quote_Line_id = dbo.QUOTE_LINES.Quote_Line_id LEFT OUTER JOIN
                      dbo.QUOTES LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.QUOTES.Customer_id__Companys_Id = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.ENQUIRYS ON dbo.QUOTES.FromEnquiry__Enquiry_ID = dbo.ENQUIRYS.Enquiry_ID ON dbo.QUOTE_LINES.Form_Quote__Quote_id = dbo.QUOTES.Quote_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Quotes_list_with_parts]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Quotes_list_with_parts]
AS
SELECT     dbo.Quotes_list.Quote_id, dbo.Quotes_list.FromEnquiry__Enquiry_ID, dbo.Quotes_list.[Enquiry No], dbo.Quotes_list.[Quote No], dbo.Quotes_list.[Customers Ref], 
                      dbo.Quotes_list.[Reply By], dbo.Quotes_list.[Quote By], dbo.Quotes_list.No_Items, dbo.Quotes_list.Contact, dbo.Quotes_list.[Quote Date], 
                      dbo.Quotes_list.[Printed By], dbo.Quotes_list.[Sales Person], dbo.Quotes_list.Won, dbo.Quotes_list.Lost, dbo.Quotes_list.Customer, dbo.Quotes_list.Currency, 
                      dbo.Quotes_list.Customer_id__Companys_Id, dbo.Quotes_list.Campaign, dbo.Quotes_list.Area, dbo.Quotes_list.Industry, dbo.Quotes_list.Active, 
                      dbo.Quotes_list.[Internal Notes], dbo.QUOTE_LINES.Quote_Line_id, dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.Quote_Line_Qty.Qty, 
                      dbo.Quote_Line_Qty.Price, dbo.Quote_Line_Qty.Total, dbo.Quote_Line_Qty.Reference, dbo.QUOTE_LINES.Item_No AS [Item No], 
                      dbo.UOM_From_Conversion_Id.Unit_of_Measure AS UOM, dbo.Quote_Line_Qty.Ordered, dbo.QUOTE_LINES.Revision, 
                      dbo.Quote_Line_Qty.Qty_For_Expected_Order AS [Expected Order], dbo.Quote_Line_Qty.Run_Hours AS [Run Hours], 
                      dbo.Quote_Line_Qty.SetUp_Hours AS [Setup Hours], dbo.Quote_Line_Qty.Prog_Hours AS [Prog Hours], dbo.Quote_Line_Qty.Material_Cost AS [Material Cost], 
                      dbo.Quote_Line_Qty.SubCon_Cost AS [SubCon Cost], dbo.Quote_Line_Qty.Quote_Line_qty_id, dbo.QUOTE_LINES.Lost AS [Line Lost], 
                      dbo.QUOTE_LINES.Won AS [Line Won], dbo.Supplier_Part.Supplier_Part_No AS [Alias Part No], dbo.Sales_Order_Lines.Contract_No AS [Contract No], 
                      dbo.Group_Code.Group_Code, dbo.Quotes_list.[End User]
FROM         dbo.Part_Status RIGHT OUTER JOIN
                      dbo.Part LEFT OUTER JOIN
                      dbo.Group_Code ON dbo.Part.Groupcode__Groupcode_id = dbo.Group_Code.Groupcode_Id ON 
                      dbo.Part_Status.Part_Status_id = dbo.Part.Status__Part_status_id RIGHT OUTER JOIN
                      dbo.QUOTE_LINES LEFT OUTER JOIN
                      dbo.Supplier_Part ON dbo.QUOTE_LINES.Alias__Supplier_Part_ID = dbo.Supplier_Part.Supplier_part_id LEFT OUTER JOIN
                      dbo.Sales_Order_Lines RIGHT OUTER JOIN
                      dbo.Quote_Line_Qty ON dbo.Sales_Order_Lines.Quote__Quote_Line_qty_Id = dbo.Quote_Line_Qty.Quote_Line_qty_id ON 
                      dbo.QUOTE_LINES.Quote_Line_id = dbo.Quote_Line_Qty.FromQuote_Line__Quote_Line_id ON dbo.Part.Part_Id = dbo.QUOTE_LINES.Part__Part_Id RIGHT OUTER JOIN
                      dbo.Quotes_list ON dbo.QUOTE_LINES.Form_Quote__Quote_id = dbo.Quotes_list.Quote_id LEFT OUTER JOIN
                      dbo.UOM_From_Conversion_Id ON dbo.Quote_Line_Qty.UOM = dbo.UOM_From_Conversion_Id.Conversion_Id
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Quotes_list_with_parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -573
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Part_Status"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 710
               Right = 251
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 11
         End
         Begin Table = "Group_Code"
            Begin Extent = 
               Top = 444
               Left = 388
               Bottom = 563
               Right = 649
            End
            DisplayFlags = 280
            TopColumn = 4
         End
         Begin Table = "QUOTE_LINES"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 277
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Supplier_Part"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 265
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 320
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Quote_Line_Qty"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 350
            En' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Quotes_list_with_parts'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Quotes_list_with_parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'd
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Quotes_list"
            Begin Extent = 
               Top = 714
               Left = 38
               Bottom = 833
               Right = 265
            End
            DisplayFlags = 280
            TopColumn = 19
         End
         Begin Table = "UOM_From_Conversion_Id"
            Begin Extent = 
               Top = 126
               Left = 303
               Bottom = 230
               Right = 474
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 46
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Quotes_list_with_parts'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Quotes_list_with_parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Quotes_list_with_parts'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Contract_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Contract_List]
AS
SELECT     dbo.Sales_Order_Lines.Sales_Order_Lines_ID, dbo.Sales_Order_Lines.Contract_No AS [Contract No], 
                      dbo.Sales_Order_Lines.Delivery_Date AS [Delivery Date], dbo.Sales_Order_Lines.Dispatch_Date AS [Dispatch Date], 
                      dbo.Sales_Order_Lines.From_Enquiry AS [From Enquiry], dbo.Sales_Order_Lines.Length_Ordered AS [Length Ordered], 
                      dbo.Sales_Order_Lines.Gross_Price AS [Gross Price], dbo.Sales_Order_Lines.Price, dbo.Sales_Order_Lines.Priority, dbo.Sales_Order_Lines.Qty, 
                      dbo.Sales_Order_Lines.Qty_Credited AS [Qty Credited], dbo.Sales_Order_Lines.Qty_Delivered AS [Qty Delivered], 
                      dbo.Sales_Order_Lines.Qty_Invoiced AS [Qty Invoiced], dbo.Sales_Order_Lines.Qty_Processed AS [Qty Processed], 
                      dbo.Sales_Order_Lines.Qty_Returned AS [Qty Returned], dbo.Sales_Order_Lines.Requested_Date AS [Requested Date], 
                      dbo.Sales_Order_Lines.Scheduled, dbo.Sales_Order_Lines.Standard, dbo.Sales_Order_Lines.System_Price AS [System Price], 
                      dbo.Sales_Order_Lines.Total, dbo.Sales_Order_Lines.Total_Qty AS [Total Qty], dbo.Sales_Order_Lines.Vat_Rate AS [Vat Rate], 
                      dbo.Sales_Order_Lines.Vat_Amount AS [Vat Amount], dbo.Sales_Order_Lines.Value_Credited AS [Value Credited], 
                      dbo.Sales_Order_Lines.Value_Invoiced AS [Value Invoiced], dbo.UOM_From_Conversion_Id.Unit_of_Measure AS UOM, 
                      dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID, dbo.Part.Part_No AS [Part No], dbo.Part.Description, 
                      dbo.SALES_ORDERS.Sales_No AS [Sales No], dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name AS Customer, 
                      dbo.Sales_Order_Lines.Breadth_Ordered AS [Breadth Ordered], dbo.SALES_ORDER_LINE_STATUS.Sales_Order_line_Status AS [Line Status], 
                      dbo.INDUSTRY.Industry, dbo.Quote_Line_Qty.Reference AS [Quote No], dbo.Contract_Status.Contract_Status AS [Contract Status], 
                      dbo.SALES_ORDERS.Customers_PO AS [Customers PO], dbo.Part_Status.Part_Status AS [Part Status], dbo.Group_Code.Group_Code AS [Group Code], 
                      dbo.Part_type.Part_type AS [Part Type], dbo.Sales_Order_Lines.Week_No AS [Week No]
FROM         dbo.Part_type RIGHT OUTER JOIN
                      dbo.Part ON dbo.Part_type.part_type_id = dbo.Part.Type__Part_Type_Id LEFT OUTER JOIN
                      dbo.Group_Code ON dbo.Part.Groupcode__Groupcode_id = dbo.Group_Code.Groupcode_Id LEFT OUTER JOIN
                      dbo.Part_Status ON dbo.Part.Status__Part_status_id = dbo.Part_Status.Part_Status_id RIGHT OUTER JOIN
                      dbo.SALES_ORDER_LINE_STATUS RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines LEFT OUTER JOIN
                      dbo.Contract_Status ON dbo.Sales_Order_Lines.Contract_Status_id = dbo.Contract_Status.Contract_status_id LEFT OUTER JOIN
                      dbo.Quote_Line_Qty ON dbo.Sales_Order_Lines.Quote__Quote_Line_qty_Id = dbo.Quote_Line_Qty.Quote_Line_qty_id ON 
                      dbo.SALES_ORDER_LINE_STATUS.Sales_order_line_Status_Id = dbo.Sales_Order_Lines.Status__Sales_Order_Line_Status_Id LEFT OUTER JOIN
                      dbo.INDUSTRY RIGHT OUTER JOIN
                      dbo.SALES_ORDERS ON dbo.INDUSTRY.Industry_Id = dbo.SALES_ORDERS.type_ID__Industry ON 
                      dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID = dbo.SALES_ORDERS.SALES_ORDERS_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.SALES_ORDERS.Customers_ID__Companys = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.UOM_From_Conversion_Id ON dbo.Sales_Order_Lines.UOM__Conversion_Id = dbo.UOM_From_Conversion_Id.Conversion_Id ON 
                      dbo.Part.Part_Id = dbo.Sales_Order_Lines.Part_Id__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Item_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Delivery_Item_List]
AS
SELECT     dbo.Delivery_Item.Delivery_Item_ID, dbo.Delivery_Item.Deleted, dbo.Delivery_Item.Qty AS [Stock Qty], dbo.Delivery_Item.Length, dbo.Delivery_Item.Breadth, 
                      dbo.Delivery_Item.Qty_Invoiced AS [Qty Invoiced], dbo.Delivery_Item.Qty_Returned AS [Qty Returned], dbo.Delivery_Item.Ref AS [Line Ref.], 
                      dbo.Delivery_Item.Requested_Qty AS [Requested Qty], dbo.Delivery_Item.Weight, dbo.Sales_Order_Lines.Contract_No AS [Contract No], 
                      dbo.Delivery.Advice_No AS [Advice No], dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name AS Company, dbo.Part.Part_No AS [Part No], 
                      dbo.Delivery_Item_Status.Delivery_Status AS Status, dbo.Delivery_Item.Description_Non_Rtf, dbo.Delivery_Item.Delivery__Delivery_id, 
                      dbo.Delivery_Item.Issue_Qty AS Qty, dbo.UOM_From_Conversion_Id.Unit_of_Measure AS UOM, dbo.Part.In_Stock AS [In Stock], dbo.Delivery_Item.Has_CofC AS CofC, 
                      dbo.Sales_Order_Lines.CofC_Required AS [CofC Required], dbo.Delivery_Item.Contract__SO_Item_id, dbo.SALES_ORDERS.Customers_PO AS [Customers PO], 
                      dbo.Delivery.Date_Sent AS [Date Sent], dbo.Delivery_Item.Notes_Non_Rtf AS Notes, dbo.COMPANYS.Company_Id, dbo.Sales_Order_Lines.On_Hire AS [On Hold], 
                      dbo.WORK_ORDERS.WO_No AS [WO No], dbo.INDUSTRY.Industry, dbo.Delivery_Item.Line_Scanned, dbo.Delivery_Item.Scanned_Processed, 
                      dbo.Sales_Order_Lines.Notes_non_rtf AS [SO Line Notes], dbo.Part.Part_Id
FROM         dbo.Part RIGHT OUTER JOIN
                      dbo.WORK_ORDERS RIGHT OUTER JOIN
                      dbo.Delivery_Item ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Delivery_Item.WO__WO_Id LEFT OUTER JOIN
                      dbo.UOM_From_Conversion_Id ON dbo.Delivery_Item.Issue_UOM__Conversion_id = dbo.UOM_From_Conversion_Id.Conversion_Id ON 
                      dbo.Part.Part_Id = dbo.Delivery_Item.Part__Part_id LEFT OUTER JOIN
                      dbo.Delivery LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Delivery.Company__Company_id = dbo.COMPANYS.Company_Id ON 
                      dbo.Delivery_Item.Delivery__Delivery_id = dbo.Delivery.Delivery_ID LEFT OUTER JOIN
                      dbo.Sales_Order_Lines LEFT OUTER JOIN
                      dbo.SALES_ORDERS LEFT OUTER JOIN
                      dbo.INDUSTRY ON dbo.SALES_ORDERS.type_ID__Industry = dbo.INDUSTRY.Industry_Id ON 
                      dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID = dbo.SALES_ORDERS.SALES_ORDERS_ID ON 
                      dbo.Delivery_Item.Contract__SO_Item_id = dbo.Sales_Order_Lines.Sales_Order_Lines_ID LEFT OUTER JOIN
                      dbo.Delivery_Item_Status ON dbo.Delivery_Item.Status__Delivery_item_Status_id = dbo.Delivery_Item_Status.Delivery_Item_Status_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Delivery_List]
AS
SELECT     dbo.Delivery.Delivery_ID, dbo.Delivery.Advice_No AS [Advice No], dbo.Delivery.Date_Raised AS [Date Raised], dbo.Delivery.Date_Sent AS [Date Sent], 
                      dbo.Delivery.Total_Items AS [Total Items], dbo.Delivery.Total_Weight AS [Total Weight], COMPANYS_1.Company_No AS [Company No], 
                      COMPANYS_1.Name AS Company, dbo.COMPANY_ADDRESS.Address1, dbo.COMPANY_ADDRESS.Address2, dbo.COMPANY_ADDRESS.Address3, 
                      dbo.COMPANY_ADDRESS.Country, dbo.Delivery_Status.Delivery_Status AS Status, COMPANYS_1.Company_Id, dbo.Employee.Name AS [Raised By], 
                      dbo.Delivery.Packing_Description_Non_RTF AS [Packing Description], dbo.COMPANY_ADDRESS.Postcode, dbo.COMPANY_ADDRESS.Town, 
                      dbo.Delivery.Notes_Non_RTF AS Notes, UDData_6.UDData_Data AS UserDefinable1, UDData_1.UDData_Data AS UserDefinable2, 
                      UDData_2.UDData_Data AS UserDefinable3, UDData_3.UDData_Data AS UserDefinable4, UDData_4.UDData_Data AS UserDefinable5, 
                      UDData_5.UDData_Data AS UserDefinable6, dbo.Delivery.Address__Company_Addess_id, dbo.Delivery.Status__Delivery_Status_id, 
                      dbo.Delivery.Packing_Note AS [Packing Only], dbo.Delivery.Packing_Description_Non_RTF AS [Packing Notes], dbo.Delivery_Scanned.Delivery_ID AS Scanned, 
                      dbo.COMPANYS.Name AS [Default Shipper], dbo.Delivery.PalletLoad AS [Pallet Load], dbo.First_SO_On_Del.Expr1 AS [First SO], dbo.Delivery.Total_Weight
FROM         dbo.UDData AS UDData_6 RIGHT OUTER JOIN
                      dbo.Delivery_Scanned RIGHT OUTER JOIN
                      dbo.Delivery INNER JOIN
                      dbo.First_SO_On_Del ON dbo.Delivery.Delivery_ID = dbo.First_SO_On_Del.Delivery_ID ON 
                      dbo.Delivery_Scanned.Delivery_ID = dbo.Delivery.Delivery_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_5 ON dbo.Delivery.UDF6__UDData_ID = UDData_5.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_4 ON dbo.Delivery.UDF5__UDData_ID = UDData_4.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_3 ON dbo.Delivery.UDF4__UDData_ID = UDData_3.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON dbo.Delivery.UDF3__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON dbo.Delivery.UDF2__UDData_ID = UDData_1.UDData_ID ON UDData_6.UDData_ID = dbo.Delivery.UDF1__UDData_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.Delivery.Raised_by__Employee_id = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.COMPANYS RIGHT OUTER JOIN
                      dbo.COMPANYS AS COMPANYS_1 ON dbo.COMPANYS.Company_Id = COMPANYS_1.Shipping_Company_ID ON 
                      dbo.Delivery.Company__Company_id = COMPANYS_1.Company_Id RIGHT OUTER JOIN
                      dbo.Delivery_Status ON dbo.Delivery.Status__Delivery_Status_id = dbo.Delivery_Status.Delivery_Status_Id LEFT OUTER JOIN
                      dbo.COMPANY_ADDRESS ON dbo.Delivery.Address__Company_Addess_id = dbo.COMPANY_ADDRESS.Address_Id
WHERE     (dbo.Delivery.Advice_No > '''')
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_ManuReturn_Cost]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Actual_ManuReturn_Cost]
AS
SELECT     dbo.WO_Analysis_Actual_ManuReturn_Temp.ForWO__WORK_ORDERS_ID, SUM(dbo.Stock.Cost * dbo.Stock.OriginalQty) AS Return_Cost
FROM         dbo.WO_Analysis_Actual_ManuReturn_Temp LEFT OUTER JOIN
                      dbo.Stock ON dbo.WO_Analysis_Actual_ManuReturn_Temp.GRN__Grn_ID = dbo.Stock.Grn__Grn_id
WHERE     (dbo.WO_Analysis_Actual_ManuReturn_Temp.Type__Part_Type_Id = 1) OR
                      (dbo.WO_Analysis_Actual_ManuReturn_Temp.Type__Part_Type_Id = 6)
GROUP BY dbo.WO_Analysis_Actual_ManuReturn_Temp.ForWO__WORK_ORDERS_ID
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Analysis_Actual_ManuReturn_Cost', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "WO_Analysis_Actual_ManuReturn_Temp"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 110
               Right = 284
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Stock"
            Begin Extent = 
               Top = 114
               Left = 38
               Bottom = 233
               Right = 337
            End
            DisplayFlags = 280
            TopColumn = 22
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Analysis_Actual_ManuReturn_Cost'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Analysis_Actual_ManuReturn_Cost', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Analysis_Actual_ManuReturn_Cost'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Enquirys_list_with_Parts]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Enquirys_list_with_Parts]
AS
SELECT     dbo.Enquirys_list.Enquiry_ID, dbo.Enquirys_list.[Enquiry No], dbo.Enquirys_list.[Customers Ref], dbo.Enquirys_list.[Reply By], dbo.Enquirys_list.[Enquiry Status], 
                      dbo.Enquirys_list.[Date Entered], dbo.Enquirys_list.[Quote By], dbo.Enquirys_list.Customer, dbo.Enquirys_list.Contact, dbo.Enquirys_list.[Sales Person], 
                      dbo.Enquirys_list.Estimator, dbo.Enquirys_list.[Chase date], dbo.Enquirys_list.Campaign, dbo.Enquirys_list.[Calculated Value], dbo.Enquirys_list.[Total Value], 
                      dbo.Enquirys_list.Currency, dbo.Enquirys_list.[Enquiry State], dbo.Enquirys_list.Customer_id__Companys_Id, dbo.Enquirys_list.[Enquiry Notes], 
                      dbo.Enquirys_list.[End User], dbo.Enquirys_list.Currency_id, dbo.Enquirys_list.[Athorised By], dbo.Enquirys_list.Authorised, dbo.Enquirys_list.Telephone, 
                      dbo.Enquirys_list.[Internal Notes], dbo.Enquirys_list.Area, dbo.Enquirys_list.Industry, dbo.Enquirys_list.UserDefinable1, dbo.Enquirys_list.UserDefinable2, 
                      dbo.Enquirys_list.UserDefinable3, dbo.Enquirys_list.UserDefinable4, dbo.Enquirys_list.UserDefinable5, dbo.Enquirys_list.UserDefinable6, 
                      dbo.ENQUIRY_LINES.Enquiry_Line_id, dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.Part_Status.Part_Status AS [Part Status], 
                      dbo.ENQUIRY_LINES.Revision, dbo.ENQUIRY_LINES.Won, dbo.ENQUIRY_LINES.Lost, dbo.ENQUIRY_LINES.Declined, 
                      dbo.ENQUIRY_LINES.Reason_Declined AS [Reason Declined], dbo.ENQUIRY_LINES.Item_No AS [Item No], dbo.Group_Code.Group_Code AS [Group Code], 
                      dbo.CATEGORY.Category, dbo.Enquiry_Lost_Reasons.Reason_Lost AS [Reason Lost], dbo.ENQUIRY_LINE_QTY.Ordered, dbo.ENQUIRY_LINE_QTY.Price, 
                      dbo.ENQUIRY_LINE_QTY.Qty, dbo.ENQUIRY_LINE_QTY.Total, dbo.UOM_From_Conversion_Id.Unit_of_Measure AS UOM, 
                      dbo.ENQUIRY_LINE_QTY.Qty_For_Expected_Order AS [Expected Order], dbo.ENQUIRY_LINE_QTY.SetUp_Hours AS [SetUp Hours], 
                      dbo.ENQUIRY_LINE_QTY.Run_Hours AS [Run Hours], dbo.ENQUIRY_LINE_QTY.SubCon_Cost AS [SubCon Cost], 
                      dbo.ENQUIRY_LINE_QTY.Material_Cost AS [Material Cost], dbo.ENQUIRY_LINE_QTY.Prog_Hours AS [Prog Hours], dbo.Part.Last_SO_Price AS [Last SO Price], 
                      dbo.ENQUIRY_LINES.Notes_Non_RTF AS Notes, dbo.Supplier_Part.Supplier_Part_No AS [Alias Part No], dbo.ENQUIRY_LINES.Decision_Date AS [Decision Date], 
                      UDData_1.UDData_Data AS [Part UD1], UDData_2.UDData_Data AS [Part UD2], UDData_3.UDData_Data AS [Part UD3], UDData_4.UDData_Data AS [Part UD4], 
                      UDData_5.UDData_Data AS [Part UD5], UDData_6.UDData_Data AS [Part UD6]
FROM         dbo.UDData AS UDData_2 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_6 RIGHT OUTER JOIN
                      dbo.Part ON UDData_6.UDData_ID = dbo.Part.UDF6__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_5 ON dbo.Part.UDF5__UDData_ID = UDData_5.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_4 ON dbo.Part.UDF4__UDData_ID = UDData_4.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_3 ON dbo.Part.UDF3__UDData_ID = UDData_3.UDData_ID ON UDData_2.UDData_ID = dbo.Part.UDF2__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON dbo.Part.UDF1__UDData_ID = UDData_1.UDData_ID RIGHT OUTER JOIN
                      dbo.Enquirys_list LEFT OUTER JOIN
                      dbo.Supplier_Part RIGHT OUTER JOIN
                      dbo.ENQUIRY_LINES ON dbo.Supplier_Part.Supplier_part_id = dbo.ENQUIRY_LINES.Alias__Supplier_Part_ID LEFT OUTER JOIN
                      dbo.ENQUIRY_LINE_QTY LEFT OUTER JOIN
                      dbo.UOM_From_Conversion_Id ON dbo.ENQUIRY_LINE_QTY.UOM__conversion_id = dbo.UOM_From_Conversion_Id.Conversion_Id ON 
                      dbo.ENQUIRY_LINES.Enquiry_Line_id = dbo.ENQUIRY_LINE_QTY.FromEnq_Line__Enquiry_Line_id LEFT OUTER JOIN
                      dbo.Enquiry_Lost_Reasons ON dbo.ENQUIRY_LINES.Lost_Reason__Enquiry_Lost_Reasons_Id = dbo.Enquiry_Lost_Reasons.Enquiry_Lost_Reasons_id ON 
                      dbo.Enquirys_list.Enquiry_ID = dbo.ENQUIRY_LINES.Enquiry_Line__Enquiry_id ON dbo.Part.Part_Id = dbo.ENQUIRY_LINES.Part__Part_Id LEFT OUTER JOIN
                      dbo.Part_Status ON dbo.Part.Status__Part_status_id = dbo.Part_Status.Part_Status_id LEFT OUTER JOIN
                      dbo.Group_Code LEFT OUTER JOIN
                      dbo.CATEGORY ON dbo.Group_Code.Category__category_id = dbo.CATEGORY.Category_Id ON dbo.Part.Groupcode__Groupcode_id = dbo.Group_Code.Groupcode_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_Order_Lines_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Sales_Order_Lines_List]
AS
SELECT     dbo.Sales_Order_Lines.Sales_Order_Lines_ID, dbo.Sales_Order_Lines.Contract_No AS [Contract No], dbo.Sales_Order_Lines.Delivery_Date AS [Delivery Date], 
                      dbo.Sales_Order_Lines.Dispatch_Date AS [Despatch Date], dbo.Sales_Order_Lines.From_Enquiry AS [From Enquiry], 
                      dbo.Sales_Order_Lines.Length_Ordered AS [Length Ordered], dbo.Sales_Order_Lines.Gross_Price AS [Gross Price], dbo.Sales_Order_Lines.Price, 
                      dbo.Sales_Order_Lines.Priority, dbo.Sales_Order_Lines.Qty, dbo.Sales_Order_Lines.Qty_Credited AS [Qty Credited], 
                      dbo.Sales_Order_Lines.Qty_Delivered AS [Qty Delivered], dbo.Sales_Order_Lines.Qty_Invoiced AS [Qty Invoiced], 
                      dbo.Sales_Order_Lines.Qty_Processed AS [Qty Processed], dbo.Sales_Order_Lines.Qty_Returned AS [Qty Returned], 
                      dbo.Sales_Order_Lines.Requested_Date AS [Requested Date], dbo.Sales_Order_Lines.Scheduled, dbo.Sales_Order_Lines.Standard, 
                      dbo.Sales_Order_Lines.System_Price AS [System Price], dbo.Sales_Order_Lines.Total, dbo.Sales_Order_Lines.Total_Qty AS [Total Qty], 
                      dbo.Sales_Order_Lines.Vat_Rate AS [Vat Rate], dbo.Sales_Order_Lines.Vat_Amount AS [Vat Amount], dbo.Sales_Order_Lines.Value_Credited AS [Value Credited], 
                      dbo.Sales_Order_Lines.Value_Invoiced AS [Value Invoiced], dbo.UOM_From_Conversion_Id.Unit_of_Measure AS UOM, 
                      dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID, dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.SALES_ORDERS.Sales_No AS [Sales No], 
                      dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name AS Customer, dbo.Sales_Order_Lines.Breadth_Ordered AS [Breadth Ordered], 
                      dbo.SALES_ORDER_LINE_STATUS.Sales_Order_line_Status AS [Line Status], dbo.Sales_Order_Lines.Date_Complete AS [Date Complete], 
                      dbo.Part.In_Stock AS [In Stock], dbo.Sales_Order_Lines.On_Hold AS [On Hold], dbo.Sales_Order_Lines.Projected_Value AS [Projected Value], 
                      dbo.COMPANYS.Company_Id, dbo.Sales_Order_Lines.Week_No AS [Week No], dbo.Sales_Order_Lines.Notes_non_rtf AS [Line Notes], 
                      dbo.Sales_Order_Lines.Discount, dbo.Sales_Order_Lines.Discount2, dbo.Sales_Order_Lines.Discount3, dbo.Supplier_Part.Supplier_Part_No AS [Alias Part No], 
                      dbo.Sales_Order_Lines.Packing_Qty AS [Contract Packing Qty], dbo.Part.Packing_Qty AS [Part Packing Qty], dbo.Sales_Order_Lines.On_Hire AS [On Hire], 
                      dbo.INDUSTRY.Industry, dbo.Sales_Order_Lines.Part_Id__Part_Id, dbo.Sales_Order_Lines.On_Hire_ID, dbo.Sales_Order_Lines.Top_Level, 
                      dbo.Sales_Order_Lines.Sub_Level, dbo.Sales_Order_Lines.Top_Level_SOL_ID, dbo.Building.Building, dbo.Sales_Order_Lines.Item_No, 
                      dbo.Sales_Order_Lines.Qty - (dbo.Sales_Order_Lines.Qty_Delivered - dbo.Sales_Order_Lines.Qty_Returned) AS Outstanding, dbo.Sales_Order_Lines.Can_Deliver, 
                      dbo.Part_Status.Part_Status AS [Part Status], dbo.Sales_Order_Lines.Direct_PO AS [Direct PO]
FROM         dbo.Part_Status RIGHT OUTER JOIN
                      dbo.Part ON dbo.Part_Status.Part_Status_id = dbo.Part.Status__Part_status_id RIGHT OUTER JOIN
                      dbo.SALES_ORDER_LINE_STATUS RIGHT OUTER JOIN
                      dbo.Supplier_Part RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines LEFT OUTER JOIN
                      dbo.Building ON dbo.Sales_Order_Lines.Building_ID = dbo.Building.Building_Id LEFT OUTER JOIN
                      dbo.INDUSTRY ON dbo.Sales_Order_Lines.Industry__INDUSTRY_ID = dbo.INDUSTRY.Industry_Id ON 
                      dbo.Supplier_Part.Supplier_part_id = dbo.Sales_Order_Lines.Alias__Supplier_Part_ID ON 
                      dbo.SALES_ORDER_LINE_STATUS.Sales_order_line_Status_Id = dbo.Sales_Order_Lines.Status__Sales_Order_Line_Status_Id LEFT OUTER JOIN
                      dbo.SALES_ORDERS ON dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID = dbo.SALES_ORDERS.SALES_ORDERS_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.SALES_ORDERS.Customers_ID__Companys = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.UOM_From_Conversion_Id ON dbo.Sales_Order_Lines.UOM__Conversion_Id = dbo.UOM_From_Conversion_Id.Conversion_Id ON 
                      dbo.Part.Part_Id = dbo.Sales_Order_Lines.Part_Id__Part_Id
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Sales_Order_Lines_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Part_Status"
            Begin Extent = 
               Top = 678
               Left = 337
               Bottom = 908
               Right = 550
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 714
               Left = 38
               Bottom = 833
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 52
         End
         Begin Table = "SALES_ORDER_LINE_STATUS"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 259
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Supplier_Part"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 265
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines"
            Begin Extent = 
               Top = 180
               Left = 36
               Bottom = 299
               Right = 318
            End
            DisplayFlags = 280
            TopColumn = 85
         End
         Begin Table = "Building"
            Begin Extent = 
               Top = 6
               Left = 297
               Bottom = 125
               Right = 457
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "INDUSTRY"
            Begin Extent = 
               Top = 126
               Left = 303
               Bottom = 245
               Right = 463
            ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Sales_Order_Lines_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Sales_Order_Lines_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDERS"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 282
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UOM_From_Conversion_Id"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 710
               Right = 209
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 1680
         Table = 1680
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Sales_Order_Lines_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Sales_Order_Lines_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Sales_Order_Lines_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Nominals_List_with_Parts]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Nominals_List_with_Parts]
AS
SELECT     dbo.Nominals_List.*, dbo.Cost_Centre_List.[Cost Centre] AS [Cost Centre], dbo.Nominal_Cost_Centre.Credit AS [CC Credit], 
                      dbo.Nominal_Cost_Centre.Debit AS [CC Debit]
FROM         dbo.Nominal_Cost_Centre RIGHT OUTER JOIN
                      dbo.Nominals_List ON dbo.Nominal_Cost_Centre.Nominal__Nominals_ID = dbo.Nominals_List.Nominal_ID LEFT OUTER JOIN
                      dbo.Cost_Centre_List ON dbo.Nominal_Cost_Centre.Cost_Centre__Cost_Centre_ID = dbo.Cost_Centre_List.Cost_Centre_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_SubReturn_Cost]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Actual_SubReturn_Cost]
AS
SELECT     dbo.WO_Analysis_Actual_SubReturn_Temp.ForWO__WORK_ORDERS_ID, SUM(dbo.Stock.Cost * dbo.Stock.OriginalQty) AS Return_Cost
FROM         dbo.WO_Analysis_Actual_SubReturn_Temp LEFT OUTER JOIN
                      dbo.Stock ON dbo.WO_Analysis_Actual_SubReturn_Temp.GRN__Grn_ID = dbo.Stock.Grn__Grn_id
GROUP BY dbo.WO_Analysis_Actual_SubReturn_Temp.ForWO__WORK_ORDERS_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Misc_Receipt_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Misc_Receipt_List]
AS
SELECT     dbo.Misc_Receipt.Misc_Receipt_ID, dbo.Misc_Receipt.Cost, dbo.Misc_Receipt.Date_in AS [Date in], dbo.Grn.Grn_No AS [Grn No], dbo.Part.Part_No AS [Part No], 
                      dbo.Part.Description, dbo.WORK_ORDERS.WO_No AS [WO No], dbo.Misc_Receipt.Qty, dbo.COMPANYS.Name AS Company, dbo.Employee.Name AS Employee, 
                      dbo.UOM_From_Conversion_Id.Unit_of_Measure AS [Receipt UOM], dbo.Misc_Receipt.Receipt_Qty AS [Reciept Qty], dbo.Misc_Receipt.Notes_Non_Rtf AS Notes, 
                      dbo.Misc_Receipt.By_Stock_Take AS [By Stock Take]
FROM         dbo.Misc_Receipt LEFT OUTER JOIN
                      dbo.UOM_From_Conversion_Id ON dbo.Misc_Receipt.Receipt_UOM__Conversions_ID = dbo.UOM_From_Conversion_Id.Conversion_Id LEFT OUTER JOIN
                      dbo.Grn ON dbo.Misc_Receipt.Grn__Grn_ID = dbo.Grn.Grn_ID LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Misc_Receipt.Wo__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.Misc_Receipt.Part__Part_ID = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Employee ON dbo.Misc_Receipt.Employee__Employee_ID = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Misc_Receipt.Company__COMPANYS_ID = dbo.COMPANYS.Company_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PriceList_PartQtyPrice_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PriceList_PartQtyPrice_List]
AS
SELECT     dbo.PriceList_PartQtyPrice.PriceList_PartQtyPrice_ID, dbo.PriceList_PartQtyPrice.Parent__Price_List_ID, dbo.Part.Part_No AS [Part No], 
                      dbo.Part.Description, dbo.PriceList_PartQtyPrice.Qty, dbo.UOM_From_Conversion_Id.Unit_of_Measure AS UOM, dbo.PriceList_PartQtyPrice.Price, 
                      dbo.PriceList_PartQtyPrice.Date_Added AS [Date Added], dbo.PriceList_PartQtyPrice.No_Discounts AS [No Discounts]
FROM         dbo.PriceList_PartQtyPrice LEFT OUTER JOIN
                      dbo.Part ON dbo.PriceList_PartQtyPrice.Part__Part_ID = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.UOM_From_Conversion_Id ON dbo.PriceList_PartQtyPrice.UOM__Conversions_ID = dbo.UOM_From_Conversion_Id.Conversion_Id
WHERE     (dbo.Part.For_Sale = 1)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[RFQ_Lines_With_Prices]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[RFQ_Lines_With_Prices]
AS
SELECT     dbo.RFQ_Lines.RFQ_Lines_ID, dbo.RFQ_Lines.Parent__Request_For_Quote_ID, dbo.RFQ_Lines.RFQ_Reference AS [RFQ Reference], dbo.Part.Part_No, 
                      dbo.Supplier_Part_Qty_Price.Qty, dbo.Supplier_Part_Qty_Price.Price, dbo.Supplier_Part_Qty_Price.Stock_Price AS [Stock Price], 
                      dbo.Supplier_Part_Qty_Price.Stock_qty AS [Stock Qty], dbo.UOM_From_Conversion_Id.Unit_of_Measure AS UOM, dbo.COMPANYS.Company_No AS [Company No], 
                      dbo.COMPANYS.Name, dbo.Purchase_Enquiry.Purchase_Enquiry_No AS [Purchase Enquiry No], dbo.RFQ_Lines.No_Prices_Recieved AS [No Prices Received], 
                      dbo.Purchase_Enquiry.ForAllocation__Allocations_ID, dbo.Purchase_Enquiry.Part__Part_ID, dbo.Supplier_Part_Qty_Price.Supplier_Part_qty_Price_id, 
                      dbo.COMPANYS.Default_Currency__MultiCurrency_ID, dbo.RFQ_Lines.PE__Purchase_Enquiry_ID, dbo.Supplier_Part_Qty_Price.Notes, 
                      dbo.Supplier_Part_Qty_Price.Notes_Non_RTF AS [Notes Non RTF], dbo.RFQ_Lines.Declined
FROM         dbo.Purchase_Enquiry LEFT OUTER JOIN
                      dbo.Part ON dbo.Purchase_Enquiry.Part__Part_ID = dbo.Part.Part_Id RIGHT OUTER JOIN
                      dbo.RFQ_Lines ON dbo.Purchase_Enquiry.Purchase_Enquiry_ID = dbo.RFQ_Lines.PE__Purchase_Enquiry_ID LEFT OUTER JOIN
                      dbo.UOM_From_Conversion_Id RIGHT OUTER JOIN
                      dbo.Supplier_Part_Qty_Price ON dbo.UOM_From_Conversion_Id.Conversion_Id = dbo.Supplier_Part_Qty_Price.Uom__Conversion_Id LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Supplier_Part_Qty_Price.Supplier__Company_Id = dbo.COMPANYS.Company_Id ON 
                      dbo.RFQ_Lines.RFQ_Lines_ID = dbo.Supplier_Part_Qty_Price.Pricefor__RFQ_Lines_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[ENQUIRY_LINE_QTY_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[ENQUIRY_LINE_QTY_List]
AS
SELECT     dbo.ENQUIRY_LINE_QTY.Enquiry_Line_qty_id, dbo.ENQUIRY_LINE_QTY.FromEnq_Line__Enquiry_Line_id, 
                      dbo.ENQUIRY_LINE_QTY.Notes_non_RTF AS Notes, dbo.ENQUIRY_LINE_QTY.Ordered, dbo.ENQUIRY_LINE_QTY.Price, 
                      dbo.ENQUIRY_LINE_QTY.Qty, dbo.ENQUIRY_LINE_QTY.Total, dbo.UOM_From_Conversion_Id.Unit_of_Measure AS UOM, 
                      dbo.ENQUIRY_LINES.Enquiry_Line__Enquiry_id, dbo.Part.Part_No AS [Part No], 
                      dbo.ENQUIRY_LINE_QTY.Qty_For_Expected_Order AS [Qty For Expected Order], dbo.ENQUIRY_LINE_QTY.Tooling_Charge AS [Tooling Charge], 
                      dbo.ENQUIRY_LINE_QTY.Prog_Charge AS [Prog Charge], dbo.ENQUIRY_LINE_QTY.Admin_Chrage AS [Admin Chrage], 
                      dbo.ENQUIRY_LINE_QTY.SetUp_Hours AS [SetUp Hours], dbo.ENQUIRY_LINE_QTY.Run_Hours AS [Run Hours], 
                      CAST(dbo.ENQUIRY_LINE_QTY.Summary__Part_Analysis_ID AS BIT) AS [Part Analysis], dbo.ENQUIRY_LINE_QTY.Profit, 
                      dbo.Supplier_Part.Supplier_Part_No AS [Alias Part No]
FROM         dbo.Supplier_Part RIGHT OUTER JOIN
                      dbo.ENQUIRY_LINES ON dbo.Supplier_Part.Supplier_part_id = dbo.ENQUIRY_LINES.Alias__Supplier_Part_ID LEFT OUTER JOIN
                      dbo.Part ON dbo.ENQUIRY_LINES.Part__Part_Id = dbo.Part.Part_Id RIGHT OUTER JOIN
                      dbo.ENQUIRY_LINE_QTY ON dbo.ENQUIRY_LINES.Enquiry_Line_id = dbo.ENQUIRY_LINE_QTY.FromEnq_Line__Enquiry_Line_id LEFT OUTER JOIN
                      dbo.UOM_From_Conversion_Id ON dbo.ENQUIRY_LINE_QTY.UOM__conversion_id = dbo.UOM_From_Conversion_Id.Conversion_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_Order_Lines_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Sales_Order_Lines_Drop_List]
AS
SELECT     dbo.Sales_Order_Lines.Sales_Order_Lines_ID, dbo.Sales_Order_Lines.Contract_No AS [Contract No], 
                      dbo.Sales_Order_Lines.Delivery_Date AS [Delivery Date], dbo.Sales_Order_Lines.Dispatch_Date AS [Dispatch Date], 
                      dbo.Sales_Order_Lines.From_Enquiry AS [From Enquiry], dbo.Sales_Order_Lines.Length_Ordered AS [Length Ordered], 
                      dbo.Sales_Order_Lines.Gross_Price AS [Gross Price], dbo.Sales_Order_Lines.Price, dbo.Sales_Order_Lines.Priority, dbo.Sales_Order_Lines.Qty, 
                      dbo.Sales_Order_Lines.Qty_Credited AS [Qty Credited], dbo.Sales_Order_Lines.Qty_Delivered AS [Qty Delivered], 
                      dbo.Sales_Order_Lines.Qty_Invoiced AS [Qty Invoiced], dbo.Sales_Order_Lines.Qty_Processed AS [Qty Processed], 
                      dbo.Sales_Order_Lines.Qty_Returned AS [Qty Returned], dbo.Sales_Order_Lines.Requested_Date AS [Requested Date], 
                      dbo.Sales_Order_Lines.Scheduled, dbo.Sales_Order_Lines.Standard, dbo.Sales_Order_Lines.System_Price AS [System Price], 
                      dbo.Sales_Order_Lines.Total, dbo.Sales_Order_Lines.Total_Qty AS [Total Qty], dbo.Sales_Order_Lines.Vat_Rate AS [Vat Rate], 
                      dbo.Sales_Order_Lines.Vat_Amount AS [Vat Amount], dbo.Sales_Order_Lines.Value_Credited AS [Value Credited], 
                      dbo.Sales_Order_Lines.Value_Invoiced AS [Value Invoiced], dbo.UOM_From_Conversion_Id.Unit_of_Measure AS UOM, 
                      dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID, dbo.Part.Part_No AS [Part No], dbo.Part.Description, 
                      dbo.SALES_ORDERS.Sales_No AS [Sales No], dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name AS Customer, 
                      dbo.Sales_Order_Lines.Breadth_Ordered AS [Breadth Ordered], dbo.COMPANYS.Company_Id
FROM         dbo.Part RIGHT OUTER JOIN
                      dbo.UOM_From_Conversion_Id RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines LEFT OUTER JOIN
                      dbo.SALES_ORDERS ON dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID = dbo.SALES_ORDERS.SALES_ORDERS_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.SALES_ORDERS.Customers_ID__Companys = dbo.COMPANYS.Company_Id ON 
                      dbo.UOM_From_Conversion_Id.Conversion_Id = dbo.Sales_Order_Lines.UOM__Conversion_Id ON 
                      dbo.Part.Part_Id = dbo.Sales_Order_Lines.Part_Id__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_by_Location]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_by_Location]
AS
SELECT     dbo.Stock_Location_Ids_Grouped.Location__location_id, dbo.Stock_Location_Ids_Grouped.Part__Part_Id, dbo.Stock_Location_Ids_Grouped.Qty, 
                      dbo.Stock_Location_Ids_Grouped.QLB, dbo.LOCATION.Location, dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.Part.Drawing_No AS [Drawing No], 
                      dbo.Group_Code.Group_Code AS [Group Code], dbo.Part_type.Part_type AS [Part type], dbo.UOM.Unit_of_Measure AS UOM, dbo.Building.Building, 
                      dbo.CATEGORY.Category, dbo.Part.On_Order AS [On Order], dbo.Part.Required
FROM         dbo.Building RIGHT OUTER JOIN
                      dbo.LOCATION ON dbo.Building.Building_Id = dbo.LOCATION.Building__Building_id RIGHT OUTER JOIN
                      dbo.UOM RIGHT OUTER JOIN
                      dbo.Part ON dbo.UOM.UOM_ID = dbo.Part.Unit_of_measure__Uom_id LEFT OUTER JOIN
                      dbo.Part_type ON dbo.Part.Type__Part_Type_Id = dbo.Part_type.part_type_id LEFT OUTER JOIN
                      dbo.Group_Code ON dbo.Part.Groupcode__Groupcode_id = dbo.Group_Code.Groupcode_Id RIGHT OUTER JOIN
                      dbo.Stock_Location_Ids_Grouped ON dbo.Part.Part_Id = dbo.Stock_Location_Ids_Grouped.Part__Part_Id ON 
                      dbo.LOCATION.Location_id = dbo.Stock_Location_Ids_Grouped.Location__location_id LEFT OUTER JOIN
                      dbo.CATEGORY ON dbo.Group_Code.Category__category_id = dbo.CATEGORY.Category_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Parts_Required_2]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Parts_Required_2]
AS
SELECT     dbo.Part.Part_Id, dbo.Part.Type__Part_Type_Id, dbo.Part.In_Stock AS [In Stock], dbo.Part.Min_Order AS [Min Order], dbo.Part.On_Order AS [On Order], 
                      dbo.Part.Part_No AS [Part No], dbo.Part.Re_Order AS [Re Order], dbo.Part.Recomended_Order AS [Recomended Order], dbo.Part.Required AS [Total Required], 
                      dbo.UOM.Unit_of_Measure AS [Unit of Measure], dbo.Part.Description AS [Part Description], dbo.Part.Drawing_No AS [Drawing No], dbo.CATEGORY.Category, 
                      dbo.Group_Code.Group_Code AS [Group Code], dbo.Part.Lead_Time AS [Lead Time], dbo.Part_type.Part_type AS [Part type], dbo.COMPANYS.Name AS [Pref Supplier], 
                      dbo.COMPANYS.Country, dbo.Non_Firm_Allocations.Non_Firm_Required + dbo.Part.Re_Order + dbo.Part.Required AS Expr2, 
                      dbo.Part.In_Stock + dbo.Part.On_Order AS Expr1
FROM         dbo.Part_type RIGHT OUTER JOIN
                      dbo.COMPANYS RIGHT OUTER JOIN
                      dbo.Non_Firm_Allocations RIGHT OUTER JOIN
                      dbo.Part ON dbo.Non_Firm_Allocations.Part__Part_Id = dbo.Part.Part_Id ON dbo.COMPANYS.Company_Id = dbo.Part.Supplier__Company_id ON 
                      dbo.Part_type.part_type_id = dbo.Part.Type__Part_Type_Id LEFT OUTER JOIN
                      dbo.Group_Code ON dbo.Part.Groupcode__Groupcode_id = dbo.Group_Code.Groupcode_Id LEFT OUTER JOIN
                      dbo.CATEGORY ON dbo.Group_Code.Category__category_id = dbo.CATEGORY.Category_Id LEFT OUTER JOIN
                      dbo.UOM ON dbo.Part.Unit_of_measure__Uom_id = dbo.UOM.UOM_ID
WHERE     (dbo.Part.Uses_Stock = 1) AND (dbo.Non_Firm_Allocations.Non_Firm_Required + dbo.Part.Re_Order + dbo.Part.Required > dbo.Part.In_Stock + dbo.Part.On_Order)
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Parts_Required_2', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Part_type"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 84
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 84
               Left = 38
               Bottom = 192
               Right = 341
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 192
               Left = 38
               Bottom = 300
               Right = 290
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Group_Code"
            Begin Extent = 
               Top = 300
               Left = 38
               Bottom = 408
               Right = 290
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "CATEGORY"
            Begin Extent = 
               Top = 192
               Left = 328
               Bottom = 300
               Right = 479
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UOM"
            Begin Extent = 
               Top = 300
               Left = 328
               Bottom = 408
               Right = 490
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Non_Firm_Allocations"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 84
               Right = 378
            End
            DisplayFla' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Parts_Required_2'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Parts_Required_2', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'gs = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 4260
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Parts_Required_2'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Parts_Required_2', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Parts_Required_2'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[RFQ_Lines_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[RFQ_Lines_List]
AS
SELECT     dbo.RFQ_Lines.RFQ_Lines_ID, dbo.RFQ_Lines.PE__Purchase_Enquiry_ID, dbo.RFQ_Lines.RFQ_Reference AS [RFQ Reference], 
                      dbo.RFQ_Lines.Parent__Request_For_Quote_ID, dbo.Request_For_Quote_List.Request_For_Quote_ID, dbo.Request_For_Quote_List.Supplier__COMPANYS_ID, 
                      dbo.Request_For_Quote_List.Status AS [RFQ Status], dbo.Request_For_Quote_List.[Date Sent], dbo.Request_For_Quote_List.Address1, 
                      dbo.Request_For_Quote_List.Address2, dbo.Request_For_Quote_List.Address3, dbo.Request_For_Quote_List.Country, dbo.Request_For_Quote_List.Postcode, 
                      dbo.Request_For_Quote_List.Contact, dbo.Request_For_Quote_List.[RFQ No], dbo.Request_For_Quote_List.[Company No], dbo.Request_For_Quote_List.Supplier, 
                      dbo.Request_For_Quote_List.Currency, dbo.Purchase_Enquiry_List.[Purchase Enquiry No], dbo.Purchase_Enquiry_List.[Date Required], 
                      dbo.Purchase_Enquiry_List.Urgent, dbo.Purchase_Enquiry_List.[Part No], dbo.Purchase_Enquiry_List.Description, 
                      dbo.Purchase_Enquiry_List.Status AS [Purchase Enquiry Status], dbo.Request_For_Quote_List.Created, dbo.Request_For_Quote_List.[Created By]
FROM         dbo.RFQ_Lines LEFT OUTER JOIN
                      dbo.Purchase_Enquiry_List ON dbo.RFQ_Lines.PE__Purchase_Enquiry_ID = dbo.Purchase_Enquiry_List.Purchase_Enquiry_ID LEFT OUTER JOIN
                      dbo.Request_For_Quote_List ON dbo.RFQ_Lines.Parent__Request_For_Quote_ID = dbo.Request_For_Quote_List.Request_For_Quote_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[RFQ_Lines_Drop_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[RFQ_Lines_Drop_List]
AS
SELECT     dbo.RFQ_Lines.RFQ_Lines_ID, dbo.RFQ_Lines.PE__Purchase_Enquiry_ID, dbo.RFQ_Lines.RFQ_Reference AS [RFQ Reference], 
                      dbo.RFQ_Lines.Parent__Request_For_Quote_ID, dbo.Request_For_Quote_List.Request_For_Quote_ID, 
                      dbo.Request_For_Quote_List.Supplier__COMPANYS_ID, dbo.Request_For_Quote_List.Status AS [RFQ Status], 
                      dbo.Request_For_Quote_List.[Date Sent], dbo.Request_For_Quote_List.Address1, dbo.Request_For_Quote_List.Address2, 
                      dbo.Request_For_Quote_List.Address3, dbo.Request_For_Quote_List.Country, dbo.Request_For_Quote_List.Postcode, 
                      dbo.Request_For_Quote_List.Contact, dbo.Request_For_Quote_List.[RFQ No], dbo.Request_For_Quote_List.[Company No], 
                      dbo.Request_For_Quote_List.Supplier, dbo.Request_For_Quote_List.Currency, dbo.Purchase_Enquiry_List.[Purchase Enquiry No], 
                      dbo.Purchase_Enquiry_List.[Date Required], dbo.Purchase_Enquiry_List.Urgent, dbo.Purchase_Enquiry_List.[Part No], 
                      dbo.Purchase_Enquiry_List.Description, dbo.Purchase_Enquiry_List.Status AS [Purchase Enquiry Status]
FROM         dbo.RFQ_Lines LEFT OUTER JOIN
                      dbo.Purchase_Enquiry_List ON dbo.RFQ_Lines.PE__Purchase_Enquiry_ID = dbo.Purchase_Enquiry_List.Purchase_Enquiry_ID LEFT OUTER JOIN
                      dbo.Request_For_Quote_List ON dbo.RFQ_Lines.Parent__Request_For_Quote_ID = dbo.Request_For_Quote_List.Request_For_Quote_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Returns_Cost]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Actual_Returns_Cost]
AS
SELECT     dbo.WO_Analysis_Actual_Return_Temp.ForWO__WORK_ORDERS_ID, SUM(dbo.Stock.Cost * dbo.Stock.OriginalQty) AS Return_Cost
FROM         dbo.WO_Analysis_Actual_Return_Temp LEFT OUTER JOIN
                      dbo.Stock ON dbo.WO_Analysis_Actual_Return_Temp.GRN__Grn_ID = dbo.Stock.Grn__Grn_id
GROUP BY dbo.WO_Analysis_Actual_Return_Temp.ForWO__WORK_ORDERS_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Material_Balance]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Material_Balance]
AS
SELECT     dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.WO_Issue_Total.[Issued Qty] AS [Total Issued], dbo.WO_Return_Total.[Return Qty] AS [Total Returned], 
                      dbo.WO_Issue_Total.[Issued Qty] - dbo.WO_Return_Total.[Return Qty] AS Balance, dbo.WORK_ORDERS.WORK_ORDERS_ID, dbo.Part.Part_Id
FROM         dbo.Part RIGHT OUTER JOIN
                      dbo.WORK_ORDERS LEFT OUTER JOIN
                      dbo.WO_Return_Total RIGHT OUTER JOIN
                      dbo.WO_Issue_Total ON dbo.WO_Return_Total.ForWO__WORK_ORDERS_ID = dbo.WO_Issue_Total.ForWO__WORK_ORDERS_ID AND 
                      dbo.WO_Return_Total.[Return Part] = dbo.WO_Issue_Total.[Issued Part] ON 
                      dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.WO_Issue_Total.ForWO__WORK_ORDERS_ID ON dbo.Part.Part_Id = dbo.WO_Issue_Total.[Issued Part]
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_History_Enquiry]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_History_Enquiry]
AS
SELECT     dbo.ENQUIRY_LINES.Part__Part_Id, dbo.Enquirys_list.Enquiry_ID, dbo.ENQUIRY_LINES.Enquiry_Line_id, dbo.Enquirys_list.[Enquiry No], 
                      dbo.Enquirys_list.Customer, dbo.Enquirys_list.[Date Entered], dbo.Enquirys_list.Contact, dbo.Enquirys_list.[Enquiry Status], 
                      dbo.Enquirys_list.[Customers Ref], dbo.ENQUIRY_LINES.Won, dbo.ENQUIRY_LINES.Lost, dbo.ENQUIRY_LINE_QTY.Qty, 
                      dbo.ENQUIRY_LINE_QTY.Price, dbo.ENQUIRY_LINE_QTY.Total
FROM         dbo.Enquirys_list LEFT OUTER JOIN
                      dbo.ENQUIRY_LINES ON dbo.Enquirys_list.Enquiry_ID = dbo.ENQUIRY_LINES.Enquiry_Line__Enquiry_id LEFT OUTER JOIN
                      dbo.ENQUIRY_LINE_QTY ON dbo.ENQUIRY_LINES.Enquiry_Line_id = dbo.ENQUIRY_LINE_QTY.FromEnq_Line__Enquiry_Line_id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_Item_Stock_Qty]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Delivery_Item_Stock_Qty]
AS
SELECT     TOP (100) PERCENT dbo.Stock.Stock_ID, dbo.Stock.From_WO__WO_id, CASE WHEN dbo.Delivery_Item_Stock_Total_Batch_Qty.Total IS NULL 
                      THEN dbo.Stock.Qty_Available ELSE dbo.Stock.Qty_Available - dbo.Delivery_Item_Stock_Total_Batch_Qty.Total END AS Qty_Free, dbo.Stock.Date_In
FROM         dbo.Stock LEFT OUTER JOIN
                      dbo.Delivery_Item_Stock_Total_Batch_Qty ON dbo.Stock.Stock_ID = dbo.Delivery_Item_Stock_Total_Batch_Qty.Stock__Stock_id
ORDER BY dbo.Stock.Date_In
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Run_Alt]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Actual_Run_Alt]
AS
SELECT     dbo.TIMES.Type__Time_Type_ID, 
                      SUM(dbo.TIMES.time_worked_1 + dbo.TIMES.time_worked_2 + dbo.TIMES.time_worked_3 + dbo.TIMES.time_worked_4 + dbo.TIMES.time_worked_5 + dbo.TIMES.time_worked_6)
                       AS ActualRunHours, dbo.TIMES.WorkOrder__WORK_ORDERS_ID, 
                      SUM((dbo.TIMES.time_worked_1 + dbo.TIMES.time_worked_2 + dbo.TIMES.time_worked_3 + dbo.TIMES.time_worked_4 + dbo.TIMES.time_worked_5 + dbo.TIMES.time_worked_6)
                       * dbo.TIMES.WC_Charge) AS ActualRunCharge, 
                      SUM((dbo.TIMES.time_worked_1 + dbo.TIMES.time_worked_2 + dbo.TIMES.time_worked_3 + dbo.TIMES.time_worked_4 + dbo.TIMES.time_worked_5 + dbo.TIMES.time_worked_6)
                       * dbo.TIMES.WC_Cost) AS ActualMachCost, SUM(((((dbo.TIMES.time_worked_1 * dbo.TIMES.rate_1 + dbo.TIMES.time_worked_2 * dbo.TIMES.rate_2) 
                      + dbo.TIMES.time_worked_3 * dbo.TIMES.rate_3) + dbo.TIMES.time_worked_4 * dbo.TIMES.rate_4) + dbo.TIMES.time_worked_5 * dbo.TIMES.rate_5) 
                      + dbo.TIMES.time_worked_6 * dbo.TIMES.rate_6) AS ActualLabCost, dbo.TIMES.Op__Wo_Route_SChedule_ID, dbo.WORK_ORDERS.Qty AS WO_Qty, 
                      dbo.WO_LABOUR_COST_TOTAL_SETUP.Qty_Complete
FROM         dbo.TIMES INNER JOIN
                      dbo.WORK_ORDERS ON dbo.TIMES.WorkOrder__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.WO_LABOUR_COST_TOTAL_SETUP ON dbo.TIMES.WorkOrder__WORK_ORDERS_ID = dbo.WO_LABOUR_COST_TOTAL_SETUP.WORK_ORDERS_ID AND 
                      dbo.TIMES.Op__Wo_Route_SChedule_ID = dbo.WO_LABOUR_COST_TOTAL_SETUP.Op__Wo_Route_SChedule_ID
GROUP BY dbo.TIMES.Type__Time_Type_ID, dbo.TIMES.WorkOrder__WORK_ORDERS_ID, dbo.TIMES.Op__Wo_Route_SChedule_ID, dbo.WORK_ORDERS.Qty, 
                      dbo.WO_LABOUR_COST_TOTAL_SETUP.Qty_Complete
HAVING      (dbo.TIMES.Type__Time_Type_ID = 1) AND (dbo.TIMES.WorkOrder__WORK_ORDERS_ID = 2287)
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Analysis_Actual_Run_Alt', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[19] 4[47] 2[5] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "TIMES"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 303
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 6
               Left = 341
               Bottom = 125
               Right = 638
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WO_LABOUR_COST_TOTAL_SETUP"
            Begin Extent = 
               Top = 6
               Left = 676
               Bottom = 110
               Right = 926
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 11
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Analysis_Actual_Run_Alt'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Analysis_Actual_Run_Alt', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Analysis_Actual_Run_Alt'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WIP_Total]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WIP_Total]
AS
SELECT     [Part Id], SUM([Qty Remaining]) AS [WIP Qty]
FROM         dbo.WIP_Stock
GROUP BY [Part Id]
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'WIP_Total', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[34] 4[15] 2[14] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "WIP_Stock"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 236
               Right = 239
            End
            DisplayFlags = 280
            TopColumn = 6
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WIP_Total'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'WIP_Total', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WIP_Total'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Material_Cost]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Actual_Material_Cost]
AS
SELECT     SUM(dbo.Stock.Cost * dbo.WO_ISSUE_STock.QLB) AS Material_Cost, dbo.WO_Analysis_Actual_Material_Temp.ForWO__WORK_ORDERS_ID
FROM         dbo.Stock INNER JOIN
                      dbo.Part ON dbo.Stock.Part__Part_Id = dbo.Part.Part_Id RIGHT OUTER JOIN
                      dbo.WO_ISSUE_STock RIGHT OUTER JOIN
                      dbo.WO_Analysis_Actual_Material_Temp ON dbo.WO_ISSUE_STock.Issue__WO_issue_id = dbo.WO_Analysis_Actual_Material_Temp.WO_ISSUE_ID ON 
                      dbo.Stock.Stock_ID = dbo.WO_ISSUE_STock.Stock__Stock_id
WHERE     (dbo.Part.Type__Part_Type_Id <> 1) AND (dbo.Part.Type__Part_Type_Id <> 6)
GROUP BY dbo.WO_Analysis_Actual_Material_Temp.ForWO__WORK_ORDERS_ID
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Analysis_Actual_Material_Cost', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Stock"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 337
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WO_ISSUE_STock"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WO_Analysis_Actual_Material_Temp"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 335
               Right = 284
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 6
               Left = 375
               Bottom = 125
               Right = 652
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
       ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Analysis_Actual_Material_Cost'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Analysis_Actual_Material_Cost', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'  Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Analysis_Actual_Material_Cost'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Analysis_Actual_Material_Cost', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Analysis_Actual_Material_Cost'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_Manu_Cost]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Actual_Manu_Cost]
AS
SELECT     dbo.WO_Analysis_Actual_Manu_Temp.ForWO__WORK_ORDERS_ID, SUM(dbo.Stock.Cost * dbo.WO_ISSUE_STock.QLB) AS Manu_Cost
FROM         dbo.Stock INNER JOIN
                      dbo.WO_ISSUE_STock INNER JOIN
                      dbo.WO_Analysis_Actual_Manu_Temp ON dbo.WO_ISSUE_STock.Issue__WO_issue_id = dbo.WO_Analysis_Actual_Manu_Temp.WO_ISSUE_ID ON 
                      dbo.Stock.Stock_ID = dbo.WO_ISSUE_STock.Stock__Stock_id INNER JOIN
                      dbo.Part ON dbo.Stock.Part__Part_Id = dbo.Part.Part_Id
WHERE     (dbo.Part.Type__Part_Type_Id = 1) OR
                      (dbo.Part.Type__Part_Type_Id = 6)
GROUP BY dbo.WO_Analysis_Actual_Manu_Temp.ForWO__WORK_ORDERS_ID
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Analysis_Actual_Manu_Cost', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[20] 2[14] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Stock"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 337
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WO_ISSUE_STock"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WO_Analysis_Actual_Manu_Temp"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 335
               Right = 308
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 6
               Left = 375
               Bottom = 125
               Right = 652
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 2685
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Analysis_Actual_Manu_Cost'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Analysis_Actual_Manu_Cost', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N' = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Analysis_Actual_Manu_Cost'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'WO_Analysis_Actual_Manu_Cost', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'WO_Analysis_Actual_Manu_Cost'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WO_Analysis_Actual_SubCon_Cost]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WO_Analysis_Actual_SubCon_Cost]
AS
SELECT     SUM(dbo.Stock.Cost * dbo.WO_ISSUE_STock.Total_Qty) AS SubCon_Cost, 
                      dbo.WO_Analysis_Actual_SubCon_Temp.ForWO__WORK_ORDERS_ID
FROM         dbo.Stock RIGHT OUTER JOIN
                      dbo.WO_ISSUE_STock RIGHT OUTER JOIN
                      dbo.WO_Analysis_Actual_SubCon_Temp ON 
                      dbo.WO_ISSUE_STock.Issue__WO_issue_id = dbo.WO_Analysis_Actual_SubCon_Temp.WO_ISSUE_ID ON 
                      dbo.Stock.Stock_ID = dbo.WO_ISSUE_STock.Stock__Stock_id
WHERE     (dbo.Stock.From_WO__WO_id = 0)
GROUP BY dbo.WO_Analysis_Actual_SubCon_Temp.ForWO__WORK_ORDERS_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_history_SO]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_history_SO]
AS
SELECT     dbo.Sales_Order_Lines.Part_Id__Part_Id AS Part__PArt_id, dbo.Sales_orders_list_with_parts.SALES_ORDERS_ID, dbo.Sales_Order_Lines.Sales_Order_Lines_ID, 
                      dbo.Sales_orders_list_with_parts.[Sales No], dbo.Sales_orders_list_with_parts.Customer, dbo.Sales_orders_list_with_parts.Contact, 
                      dbo.Sales_orders_list_with_parts.[Customers PO], dbo.Sales_orders_list_with_parts.SalesPerson, dbo.Sales_orders_list_with_parts.[SO Status], 
                      dbo.Sales_Order_Lines.Qty, dbo.Sales_Order_Lines.Qty_Delivered, dbo.Sales_Order_Lines.Qty_Invoiced, dbo.Sales_Order_Lines.Qty_Processed, 
                      dbo.Sales_Order_Lines.Qty_Returned, dbo.Sales_Order_Lines.Price, dbo.Sales_Order_Lines.Qty_Credited, dbo.Sales_Order_Lines.Priority, 
                      dbo.Sales_orders_list_with_parts.[SO Date], dbo.Sales_orders_list_with_parts.[Line Status], dbo.Sales_Order_Lines.Delivery_Date AS [Delivery Date], 
                      dbo.SO_Last_Delivery_Date.Expr1 AS [Last Delivery Date]
FROM         dbo.SO_Last_Delivery_Date RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.SO_Last_Delivery_Date.Sales_Order_Lines_id = dbo.Sales_Order_Lines.Sales_Order_Lines_ID LEFT OUTER JOIN
                      dbo.Sales_orders_list_with_parts ON dbo.Sales_Order_Lines.Sales_Order_Lines_ID = dbo.Sales_orders_list_with_parts.[Line Id]
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[User_Button_Groups]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[User_Button_Groups]
AS
SELECT     dbo.[User Buttons Visible].[User id], dbo.ButtonGroups.Group_id, dbo.ButtonGroups.Group_Text
FROM         dbo.Buttons LEFT OUTER JOIN
                      dbo.ButtonGroups ON dbo.Buttons.[Group] = dbo.ButtonGroups.Group_id RIGHT OUTER JOIN
                      dbo.[User Buttons Visible] ON dbo.Buttons.[Button id] = dbo.[User Buttons Visible].[Button Id]
WHERE     (dbo.Buttons.HideMe = 0) AND (dbo.[User Buttons Visible].Group_id = 0 OR
                      dbo.[User Buttons Visible].Group_id IS NULL)
GROUP BY dbo.[User Buttons Visible].[User id], dbo.ButtonGroups.Group_id, dbo.ButtonGroups.Group_Text
HAVING      (dbo.ButtonGroups.Group_id > 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Non_Conformance_List_With_Parts]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Non_Conformance_List_With_Parts]
AS
SELECT     dbo.Non_Conformance_List.Non_Conformance_ID, dbo.Non_Conformance_List.[NC No], dbo.Non_Conformance_List.[Company Name], 
                      dbo.Non_Conformance_List.[Part No], dbo.Non_Conformance_List.[WO No], dbo.Non_Conformance_List.[Contact Name], dbo.Non_Conformance_List.[Recorded By], 
                      dbo.Non_Conformance_List.[Date Recorded], dbo.Non_Conformance_List.[NC Qty], dbo.Non_Conformance_List.Status, dbo.Non_Conformance_List.[Date Identified], 
                      dbo.Non_Conformance_List.[NC Type Description], dbo.Non_Conformance_List.[NC Cause Description], dbo.Non_Conformance_List.Closed, 
                      dbo.Non_Conformance_List.[Date Closed], dbo.Non_Conformance_List.[Identified By], dbo.Non_Conformance_List.Parent__Non_Conformance_ID, 
                      dbo.Non_Conformance_List.[Parent NC No], dbo.Non_Conformance_List.[No Sub Items], dbo.Non_Conformance_List.Company__COMPANYS_ID, 
                      dbo.Non_Conformance_List.WORK_ORDERS__WORK_ORDERS_ID, dbo.Non_Conformance_List.[Batch Qty], dbo.Non_Conformance_List.WC, 
                      dbo.Non_Conformance_List.Culprit, dbo.Non_Conformance_List.UserDefinable1, dbo.Non_Conformance_List.UserDefinable2, 
                      dbo.Non_Conformance_List.UserDefinable3, dbo.Non_Conformance_List.UserDefinable4, dbo.Non_Conformance_List.UserDefinable5, 
                      dbo.Non_Conformance_List.UserDefinable6, dbo.Non_Conformance_List.Origin, dbo.Non_Conformance_List.Cause, dbo.Non_Conformance_List.Type, 
                      dbo.Non_Conformance_List.[Contract No], dbo.NC_Action_Type.Action_Type AS [Action Type], dbo.NC_Action.Action_Completed AS [Action Completed], 
                      dbo.NC_Action.Est_Comp_Date AS [Est Comp Date], dbo.NC_Action.Act_Compl_Date AS [Act Compl Date], dbo.NC_Action.Cost, dbo.Action.Action, 
                      dbo.Employee.Name AS [Allocated To], dbo.NC_Action.NC_Action_Description_Non_RTF AS [Act. Desc.], dbo.WORK_ORDERS.WO_No AS [Action WO No]
FROM         dbo.WORK_ORDERS RIGHT OUTER JOIN
                      dbo.NC_Action ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.NC_Action.WORK_ORDERS__WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.NC_Action.Alloc_To__Employee_ID = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.Action ON dbo.NC_Action.Action__Action_ID = dbo.Action.Action_ID LEFT OUTER JOIN
                      dbo.NC_Action_Type ON dbo.NC_Action.Action_Type__NC_Action_Type_ID = dbo.NC_Action_Type.NC_Action_Type_ID RIGHT OUTER JOIN
                      dbo.Non_Conformance_List ON dbo.NC_Action.Parent__Non_Conformance_ID = dbo.Non_Conformance_List.Non_Conformance_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[AccountsPostingErrors]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[AccountsPostingErrors]
AS
SELECT     dbo.AccountsPostedtoDebtorsCreditors.Credit, dbo.AccountsPostedtoDebtorsCreditors.Debit, 
                      dbo.AccountsPostedtoDebtorsCreditors.Parent__Accounts_Entry_ID, dbo.Accounts_Entry.Accounts_Entry_ID, dbo.COMPANYS.Company_Id, 
                      dbo.AccountsPostedtoDebtorsCreditors.Nominal_Entry_ID, dbo.AccountsPostedtoDebtorsCreditors.Nominal__Nominals_ID
FROM         dbo.COMPANYS RIGHT OUTER JOIN
                      dbo.Accounts_Entry ON dbo.COMPANYS.Company_Id = dbo.Accounts_Entry.Company__COMPANYS_ID RIGHT OUTER JOIN
                      dbo.AccountsPostedtoDebtorsCreditors ON 
                      dbo.Accounts_Entry.Accounts_Entry_ID = dbo.AccountsPostedtoDebtorsCreditors.Parent__Accounts_Entry_ID
WHERE     (dbo.Accounts_Entry.Accounts_Entry_ID IS NULL) OR
                      (dbo.COMPANYS.Company_Id IS NULL)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[AccountsCompanyBalanceTemp]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[AccountsCompanyBalanceTemp]
AS
SELECT     TOP 100 PERCENT dbo.Accounts_Entry.Company__COMPANYS_ID, SUM(dbo.AccountsPostedtoDebtorsCreditors.Credit) AS TotalCredit, 
                      SUM(dbo.AccountsPostedtoDebtorsCreditors.Debit) AS TotalDebit, 
                      SUM(dbo.AccountsPostedtoDebtorsCreditors.Debit - dbo.AccountsPostedtoDebtorsCreditors.Credit) AS Balance
FROM         dbo.Accounts_Entry RIGHT OUTER JOIN
                      dbo.AccountsPostedtoDebtorsCreditors ON 
                      dbo.Accounts_Entry.Accounts_Entry_ID = dbo.AccountsPostedtoDebtorsCreditors.Parent__Accounts_Entry_ID
GROUP BY dbo.Accounts_Entry.Company__COMPANYS_ID
ORDER BY dbo.Accounts_Entry.Company__COMPANYS_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Consignment]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_Consignment]
AS
SELECT     Part__Part_Id, SUM(Qty) AS Qty
FROM         dbo.Stock_Consignment
GROUP BY Part__Part_Id
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Part_Consignment', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Stock_Consignment"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 110
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Part_Consignment'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Part_Consignment', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Part_Consignment'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[PI_Receipts_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[PI_Receipts_List]
AS
SELECT     dbo.PI_Receipts.PI_Receipts_ID, dbo.PI_Receipts.Modified, dbo.PI_Receipts.Qty_Invoiced AS [This Qty Invoiced], dbo.Po_Receipt_Line_List.[Grn No], 
                      dbo.Po_Receipt_Line_List.[Date], dbo.Po_Receipt_Line_List.Qty, dbo.Po_Receipt_Line_List.[Qty Invoiced] AS [Total Qty Invoiced], 
                      dbo.Po_Receipt_Line_List.[Qty Returned], dbo.PI_Receipts.PI_Line__PI_Item_ID
FROM         dbo.PI_Receipts LEFT OUTER JOIN
                      dbo.Po_Receipt_Line_List ON dbo.PI_Receipts.PO__Po_Receipt_Line_ID = dbo.Po_Receipt_Line_List.Po_Receipt_Line_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[AccountsDebtorsCreditorsBalance]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[AccountsDebtorsCreditorsBalance]
AS
SELECT     SUM(dbo.AccountsPostedtoDebtorsCreditors.Credit) AS TotalCredits, SUM(dbo.AccountsPostedtoDebtorsCreditors.Debit) AS TotalDebits, 
                      dbo.AccountsPostedtoDebtorsCreditors.Nominal__Nominals_ID, 
                      SUM(dbo.AccountsPostedtoDebtorsCreditors.Debit - dbo.AccountsPostedtoDebtorsCreditors.Credit) AS Balance, dbo.Nominals.Nominal, 
                      dbo.Nominals.Description
FROM         dbo.AccountsPostedtoDebtorsCreditors LEFT OUTER JOIN
                      dbo.Nominals ON dbo.AccountsPostedtoDebtorsCreditors.Nominal__Nominals_ID = dbo.Nominals.Nominal_ID
GROUP BY dbo.AccountsPostedtoDebtorsCreditors.Nominal__Nominals_ID, dbo.Nominals.Nominal, dbo.Nominals.Description
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[AccountsNominalDIffs]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[AccountsNominalDIffs]
AS
SELECT     TOP 100 PERCENT dbo.AccountsNominalBalance.Nominal__Nominals_ID, dbo.AccountsNominalBalance.Balance, 
                      dbo.Nominals.Debit - dbo.Nominals.Credit AS BalanceOnNominal, 
                      dbo.Nominals.Debit - dbo.Nominals.Credit - dbo.AccountsNominalBalance.Balance AS Diff
FROM         dbo.AccountsNominalBalance LEFT OUTER JOIN
                      dbo.Nominals ON dbo.AccountsNominalBalance.Nominal__Nominals_ID = dbo.Nominals.Nominal_ID
ORDER BY dbo.AccountsNominalBalance.Nominal__Nominals_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Quarantine]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_Quarantine]
AS
SELECT     Part__Part_Id, SUM(Qty) AS Qty
FROM         dbo.Stock_Quarantine
GROUP BY Part__Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[For_Nominal_Entry_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[For_Nominal_Entry_List]
AS
SELECT     dbo.For_Nominal_Entry.For_Nominal_Entry_ID, dbo.For_Nominal_Entry.Parent__Nominal_Entry_ID, dbo.For_Nominal_Entry.Amount, 
                      dbo.Nominal_Entry_List.*
FROM         dbo.For_Nominal_Entry LEFT OUTER JOIN
                      dbo.Nominal_Entry_List ON dbo.For_Nominal_Entry.Entry_ID__Nominal_Entry_ID = dbo.Nominal_Entry_List.[Nominal Entry ID]
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[For_Nominal_entry_List_with_Parts]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[For_Nominal_entry_List_with_Parts]
AS
SELECT     dbo.For_Nominal_Entry.For_Nominal_Entry_ID, dbo.For_Nominal_Entry.Parent__Nominal_Entry_ID, dbo.For_Nominal_Entry.Amount, 
                      dbo.Nominal_Entry_List.*, dbo.For_Nominal_Entry.Entry_ID__Nominal_Entry_ID
FROM         dbo.For_Nominal_Entry LEFT OUTER JOIN
                      dbo.Nominal_Entry_List ON dbo.For_Nominal_Entry.Parent__Nominal_Entry_ID = dbo.Nominal_Entry_List.[Nominal Entry ID]
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Company_Discounts_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_Company_Discounts_List]
AS
SELECT     dbo.Part_Company_Discounts.Part_Company_Discounts_ID, dbo.Part_Company_Discount_Temp.Company_Discount_Group_ID, 
                      dbo.Part_Company_Discount_Temp.Part_Discount_Group_ID, dbo.Part_Company_Discount_Temp.[Company Discount Group], 
                      dbo.Part_Company_Discount_Temp.[Part Discount Group], dbo.Part_Company_Discounts.Modified, 
                      dbo.Part_Company_Discounts.Discount_1 AS [Discount 1], dbo.Part_Company_Discounts.Discount_2 AS [Discount 2], 
                      dbo.Part_Company_Discounts.Discount_3 AS [Discount 3], dbo.Part_Company_Discounts.Min_Margin AS [Min Margin]
FROM         dbo.Part_Company_Discounts RIGHT OUTER JOIN
                      dbo.Part_Company_Discount_Temp ON 
                      dbo.Part_Company_Discounts.Company__Company_Discount_Group_ID = dbo.Part_Company_Discount_Temp.Company_Discount_Group_ID AND 
                      dbo.Part_Company_Discounts.Part__Part_Discount_Group_ID = dbo.Part_Company_Discount_Temp.Part_Discount_Group_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Last_Op_Complete]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Last_Op_Complete]
AS
SELECT        TOP (100) PERCENT dbo.WO_Ops_Complete.WO_ID, MAX(dbo.Route.Op_No_Val) AS Op_No
FROM            dbo.WO_Ops_Complete INNER JOIN
                         dbo.Wo_Route_SChedule ON dbo.WO_Ops_Complete.Date_Complete = dbo.Wo_Route_SChedule.Date_Complete AND 
                         dbo.WO_Ops_Complete.WO_ID = dbo.Wo_Route_SChedule.WO_ID INNER JOIN
                         dbo.Route ON dbo.Wo_Route_SChedule.Route_Id = dbo.Route.Route_id
GROUP BY dbo.WO_Ops_Complete.WO_ID
ORDER BY dbo.WO_Ops_Complete.WO_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Scheduling_First_OPs]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Scheduling_First_OPs]
AS
SELECT     TOP 100 PERCENT dbo.Wo_Route_SChedule.Wo_Route_SChedule_ID, dbo.Wo_Route_SChedule.Seq_No, dbo.Wo_Route_SChedule.WO_ID, 
                      dbo.Wo_Route_SChedule.Complete, dbo.Wo_Route_SChedule.Do_Not_Use, dbo.Wo_Route_SChedule.Cancelled
FROM         dbo.Wo_Route_SChedule LEFT OUTER JOIN
                      dbo.Scheduling_Live_Ops ON dbo.Wo_Route_SChedule.WO_ID = dbo.Scheduling_Live_Ops.WO_ID AND 
                      dbo.Wo_Route_SChedule.Predessesor_Route_id = dbo.Scheduling_Live_Ops.Route_Id
WHERE     (dbo.Wo_Route_SChedule.Do_Not_Use = 0) AND (dbo.Wo_Route_SChedule.Complete = 0) AND (dbo.Wo_Route_SChedule.Cancelled = 0) AND 
                      (dbo.Scheduling_Live_Ops.Wo_Route_SChedule_ID IS NULL)
ORDER BY dbo.Wo_Route_SChedule.Seq_No DESC
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_SO_UOM]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_SO_UOM]
AS
SELECT     Sales_Order_Id__Sales_Orders_ID, SUM(Currency_Total_VAT) AS Currency_Total_VAT, SUM(Currency_Total_Ex_VAT) AS Currency_Total_Ex_VAT, 
                      SUM(System_Total_EX_VAT) AS System_Total_EX_VAT, SUM(System_Total_VAT) AS System_Total_VAT, SUM(Currency_Total_Inc_VAT) AS Currency_Total_Inc_VAT, 
                      SUM(System_Total_Inc_Vat) AS System_Total_Inc_Vat
FROM         dbo.Part_UOM_Conversion
GROUP BY Sales_Order_Id__Sales_Orders_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Inv_UOM]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_Inv_UOM]
AS
SELECT     Invoice__INVOICES_ID, SUM(Currency_Total_VAT) AS Currency_Total_VAT, SUM(Currency_Total_Ex_VAT) AS Currency_Total_Ex_VAT, SUM(System_Total_EX_VAT) 
                      AS System_Total_EX_VAT, SUM(System_Total_VAT) AS System_Total_VAT, SUM(Currency_Total_Inc_VAT) AS Currency_Total_Inc_VAT, SUM(System_Total_Inc_VAT) 
                      AS System_Total_Inc_VAT
FROM         dbo.Part_UOM_Conversion_Invoice
GROUP BY Invoice__INVOICES_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[AccEntryProblems]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[AccEntryProblems]
AS
SELECT     Credit, Debit, Accounts_Entry_ID, CurCredit, CurDebit, Credit - Debit AS DIff
FROM         dbo.AccEntryTotals
WHERE     (Credit - Debit < - 1)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Purchase_Order_List_With_Parts]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Purchase_Order_List_With_Parts]
AS
SELECT     dbo.Purchase_Order_List.Purchase_Order_ID, dbo.Purchase_Order_List.Date, dbo.Purchase_Order_List.[Date sent], dbo.Purchase_Order_List.[PO No], 
                      dbo.Purchase_Order_List.Reference, dbo.Purchase_Order_List.[Internal Note], dbo.Purchase_Order_List.Supplier__COMPANYS_ID, 
                      dbo.Purchase_Order_List.[PO Type], dbo.Purchase_Order_List.Contact, dbo.Purchase_Order_List.Status, dbo.Purchase_Order_List.Supplier, 
                      dbo.Purchase_Order_List.[Company No], dbo.Purchase_Order_List.Currency, dbo.Purchase_Order_List.[Raised By], dbo.Purchase_Order_List.POUserDefinable1, 
                      dbo.Purchase_Order_List.POUserDefinable2, dbo.Purchase_Order_List.POUserDefinable3, dbo.Purchase_Order_List.POUserDefinable4, 
                      dbo.Purchase_Order_List.POUserDefinable5, dbo.Purchase_Order_List.POUserDefinable6, dbo.Po_Lines.Po_Lines_ID, dbo.Po_Lines.Qty, 
                      dbo.Po_Lines.Length_Ordered AS Length, dbo.Po_Lines.Breadth_Ordered AS Breadth, dbo.Po_Lines.Cancelled, dbo.Po_Lines.Complete, 
                      dbo.Po_Lines.Date_Promised AS [Date Promised], dbo.Po_Lines.Date_Required AS [Date Required], dbo.Po_Lines.Deleted, dbo.Po_Lines.Invoiced, 
                      dbo.Po_Lines.Po__PO_ID, dbo.Po_Lines.Description_Non_Rtf AS Description, dbo.Po_Lines.Price_Quoted AS Price, dbo.Po_Lines.Qty_Invoiced AS [Qty Invoiced], 
                      dbo.Po_Lines.Qty_Delivered AS [Qty Delivered], dbo.Po_Lines.Qty_Returned AS [Qty Returned], dbo.Po_Lines.Supplier_Ref AS [Supplier Ref], dbo.Po_Lines.Total, 
                      dbo.Po_Lines.Vat_rate AS [Vat rate], dbo.Part.Part_No AS [Part No], dbo.WORK_ORDERS.WO_No AS [For WO No], WORK_ORDERS_1.WO_No AS [Manufactured On], 
                      dbo.Employee.Name AS [For Employee], dbo.Sales_Order_Lines.Contract_No AS [Contract No], dbo.Po_Lines.Notes_non_rtf AS [Line Notes], 
                      dbo.Purchase_order_Status.Purchase_Order_Status AS [Line Status], dbo.Po_Lines.Total_Qty AS [Total Qty], dbo.UDData.UDData_Data AS UserDefinable1, 
                      UDData_1.UDData_Data AS UserDefinable2, UDData_2.UDData_Data AS UserDefinable3, UDData_3.UDData_Data AS UserDefinable4, 
                      UDData_4.UDData_Data AS UserDefinable5, UDData_5.UDData_Data AS UserDefinable6, dbo.Ext_Location.Location AS [Ext Location], 
                      dbo.Part.In_Stock AS Part_In_Stock, dbo.Part.On_Order AS Part_On_Order, dbo.Part.Required AS Part_Required, dbo.Group_Code.Group_Code AS [Group Code], 
                      dbo.WO_STATUS.Wo_Status AS [WO Status], dbo.Nominals.Nominal, dbo.Po_Lines.Item_No AS [Item No], dbo.Po_Lines.Part__Part_id, 
                      dbo.Po_Lines.Marked_As_Invoiced AS [Marked As Invoiced], dbo.Part.Type__Part_Type_Id AS [Part Type ID], 
                      dbo.Po_Lines.Consignment_Stock AS [Consignment Stock], dbo.Purchase_Order_List.[Authorised By], dbo.Purchase_Order_List.[Authorised Date], 
                      dbo.Purchase_Order_List.Authorised, dbo.Part.Equivalent_Size AS [Equivalent Size], dbo.PO_Receipt_Line_Received.[Date Received] AS [Line Recvd], 
                      dbo.PO_Receipt_Date_Rcvd.Date_In AS [Date Recvd]
FROM         dbo.Purchase_Order_List LEFT OUTER JOIN
                      dbo.PO_Receipt_Date_Rcvd ON dbo.Purchase_Order_List.Purchase_Order_ID = dbo.PO_Receipt_Date_Rcvd.Po__Purchase_orders_ID LEFT OUTER JOIN
                      dbo.PO_Receipt_Line_Received RIGHT OUTER JOIN
                      dbo.Po_Lines ON dbo.PO_Receipt_Line_Received.po_line__Po_Lines_ID = dbo.Po_Lines.Po_Lines_ID LEFT OUTER JOIN
                      dbo.WORK_ORDERS LEFT OUTER JOIN
                      dbo.WORK_ORDERS AS WORK_ORDERS_1 ON 
                      dbo.WORK_ORDERS.Manufactured_on__WORK_ORDERS_ID = WORK_ORDERS_1.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.WO_STATUS ON dbo.WORK_ORDERS.Status__Wo_Status_Id = dbo.WO_STATUS.WO_status_Id ON 
                      dbo.Po_Lines.Wo__WORK_ORDERS_ID = dbo.WORK_ORDERS.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Nominals ON dbo.Po_Lines.LineNom__Nominals_ID = dbo.Nominals.Nominal_ID LEFT OUTER JOIN
                      dbo.Ext_Location ON dbo.Po_Lines.Location__Ext_Location_ID = dbo.Ext_Location.Ext_Location_ID LEFT OUTER JOIN
                      dbo.Purchase_order_Status ON dbo.Po_Lines.Status__Purchase_Order_Status_id = dbo.Purchase_order_Status.Purchase_order_StatuS_Id LEFT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.Po_Lines.SoLine__Sales_Order_Lines_ID = dbo.Sales_Order_Lines.Sales_Order_Lines_ID ON 
                      dbo.Purchase_Order_List.Purchase_Order_ID = dbo.Po_Lines.Po__PO_ID LEFT OUTER JOIN
                      dbo.Employee ON dbo.Po_Lines.For_Employee__Employee_id = dbo.Employee.Employee_Id LEFT OUTER JOIN
                      dbo.UDData RIGHT OUTER JOIN
                      dbo.UDData AS UDData_1 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_5 RIGHT OUTER JOIN
                      dbo.Part LEFT OUTER JOIN
                      dbo.Group_Code ON dbo.Part.Groupcode__Groupcode_id = dbo.Group_Code.Groupcode_Id ON UDData_5.UDData_ID = dbo.Part.UDF6__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_4 ON dbo.Part.UDF5__UDData_ID = UDData_4.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_3 ON dbo.Part.UDF4__UDData_ID = UDData_3.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON dbo.Part.UDF3__UDData_ID = UDData_2.UDData_ID ON UDData_1.UDData_ID = dbo.Part.UDF2__UDData_ID ON 
                      dbo.UDData.UDData_ID = dbo.Part.UDF1__UDData_ID ON dbo.Po_Lines.Part__Part_id = dbo.Part.Part_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Orders_List]
AS
SELECT     WORK_ORDERS_2.WORK_ORDERS_ID, WORK_ORDERS_2.WO_No AS [WO No], WORK_ORDERS_2.Total_Qty AS [Total Qty], 
                      WORK_ORDERS_2.Total_Production_Qty AS [Total Production Qty], WORK_ORDERS_2.Start_Date AS [Start Date], 
                      WORK_ORDERS_2.Estimated_Complete_Date AS [Est Comp Date], Employee_1.Name AS [For Employee], dbo.Sales_Order_Lines.Contract_No AS [Contract No], 
                      dbo.WO_STATUS.Wo_Status AS [Wo Status], dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.Part_type.Part_type AS [Part Type], 
                      WORK_ORDERS_2.Part_ID__Part_id, WORK_ORDERS_2.Qty_Complete AS [Qty Complete], WORK_ORDERS_2.Released, WORK_ORDERS_2.Printed, 
                      WORK_ORDERS_2.Material_Released AS [Material Released], WORK_ORDERS_2.Date_Raised AS [Date Raised], 
                      WORK_ORDERS_2.Date_Required AS [Date Required], WORK_ORDERS_2.Date_Started AS [Date Started], WORK_ORDERS_1.WO_No AS [For WO No], 
                      dbo.CATEGORY.Category, dbo.Group_Code.Group_Code AS [Group Code], UDData_1.UDData_Data AS UserDefinable1, UDData_2.UDData_Data AS UserDefinable2, 
                      UDData_3.UDData_Data AS UserDefinable3, UDData_4.UDData_Data AS UserDefinable4, UDData_5.UDData_Data AS UserDefinable5, 
                      UDData_6.UDData_Data AS UserDefinable6, WORK_ORDERS_2.Ops_Scheduled AS [Ops Scheduled], dbo.COMPANYS.Company_No AS [Company No], 
                      dbo.COMPANYS.Name AS [SO Customer], WORK_ORDERS_2.Complete, WORK_ORDERS_2.Complete_Date AS [Complete Date], WORK_ORDERS_2.Cancelled, 
                      UDData_7.UDData_Data AS PartUserDefinable1, UDData_8.UDData_Data AS PartUserDefinable2, UDData_9.UDData_Data AS PartUserDefinable3, 
                      UDData_10.UDData_Data AS PartUserDefinable4, UDData_11.UDData_Data AS PartUserDefinable5, UDData_12.UDData_Data AS PartUserDefinable6, 
                      dbo.Employee.Name AS FAO, dbo.Sales_Order_Lines.Sales_Order_Lines_ID, dbo.INDUSTRY.Industry, 
                      dbo.SALES_ORDER_LINE_STATUS.Sales_Order_line_Status AS [SO Line Status], dbo.Sales_Order_Lines.Priority AS [SO Priority], 
                      WORK_ORDERS_2.On_Hold AS [On Hold], WORK_ORDERS_1.wo_breadth AS Length, WORK_ORDERS_1.wo_length AS Breadth, dbo.Part.In_Stock AS [Part In Stock], 
                      dbo.Part.On_Order AS [Part On Order], dbo.Part.Required AS [Part Required], dbo.Part.Lead_Time AS [Lead Time], 
                      WORK_ORDERS_2.Scheduled_Complete_Date AS [Scheduled Complete Date], WORK_ORDERS_2.Priority, dbo.Part_Revision.Revision, 
                      WORK_ORDERS_2.Week_No AS [Week No], dbo.SALES_ORDERS.Customers_PO AS [Customers PO], WORK_ORDERS_3.WO_No AS [Manufactured On], 
                      dbo.Work_Order_Op10_Complete.Op_No, dbo.Work_Order_Op10_Complete.Started, dbo.Work_Order_Op10_Complete.Wo_Route_SChedule_ID, 
                      dbo.Sales_Order_Lines.Qty_Delivered, dbo.Sales_Order_Lines.Qty_Returned, dbo.Work_Order_OP20_Complete.Op_No AS Op_No20, 
                      dbo.Work_Order_OP20_Complete.Started AS Started20, dbo.Sales_Order_Lines.CofC_Required, dbo.Last_Op_Complete.Op_No AS [Last Op Complete], 
                      dbo.Sales_Order_Lines.Requested_Date AS [Requested Date], dbo.SO_Delivery_Schedule.Reference AS [SO Del Sched Ref], 
                      dbo.Drawing_No.Drawing_No AS [Drawing Reg No], dbo.Part.Drawing_No AS [Drawing No], WORK_ORDERS_2.Allocation_Id__Allocation_id, 
                      dbo.COMPANYS.CreditStatus AS [Company OnHold], WORK_ORDERS_2.WO_Group AS [Group], WORK_ORDERS_2.modified, Employee_2.Name AS [Modified By], 
                      dbo.Tracability.Tracabilty, WORK_ORDERS_2.Can_Deliver AS [Can Issue], UDData_13.UDData_Data AS [SO UD Data 1], UDData_15.UDData_Data AS [SO UD Data 2], 
                      UDData_14.UDData_Data AS [SO UD Data 3], UDData_18.UDData_Data AS [SO UD Data 4], UDData_16.UDData_Data AS [SO UD Data 5], 
                      UDData_17.UDData_Data AS [SO UD Data 6], dbo.Serial_No_Group.Prefix + '' '' + CAST(dbo.Serial_No_Group.Current_no AS varchar) AS [Serial No], 
                      UDData_19.UDData_Data AS UserDefinable7, UDData_20.UDData_Data AS UserDefinable8, dbo.UDData.UDData_Data AS UserDefinable9, 
                      UDData_21.UDData_Data AS UserDefinable10
FROM         dbo.UDData AS UDData_1 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_2 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_6 RIGHT OUTER JOIN
                      dbo.WORK_ORDERS AS WORK_ORDERS_3 RIGHT OUTER JOIN
                      dbo.Route RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule RIGHT OUTER JOIN
                      dbo.SO_Delivery_Schedule RIGHT OUTER JOIN
                      dbo.UDData RIGHT OUTER JOIN
                      dbo.UDData AS UDData_21 RIGHT OUTER JOIN
                      dbo.WORK_ORDERS AS WORK_ORDERS_2 ON UDData_21.UDData_ID = WORK_ORDERS_2.UDF10__UDData_ID ON 
                      dbo.UDData.UDData_ID = WORK_ORDERS_2.UDF9__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_20 ON WORK_ORDERS_2.UDF8__UDData_ID = UDData_20.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_19 ON WORK_ORDERS_2.UDF7__UDData_ID = UDData_19.UDData_ID LEFT OUTER JOIN
                      dbo.Work_Order_OP20_Complete ON WORK_ORDERS_2.Route_versions_id = dbo.Work_Order_OP20_Complete.Route_Id AND 
                      WORK_ORDERS_2.WORK_ORDERS_ID = dbo.Work_Order_OP20_Complete.WO_ID LEFT OUTER JOIN
                      dbo.Work_Order_Op10_Complete ON WORK_ORDERS_2.Route_versions_id = dbo.Work_Order_Op10_Complete.Route_Id AND 
                      WORK_ORDERS_2.WORK_ORDERS_ID = dbo.Work_Order_Op10_Complete.WO_ID LEFT OUTER JOIN
                      dbo.Last_Op_Complete ON WORK_ORDERS_2.WORK_ORDERS_ID = dbo.Last_Op_Complete.WO_ID LEFT OUTER JOIN
                      dbo.Employee AS Employee_2 ON WORK_ORDERS_2.modified_by = Employee_2.Employee_Id ON 
                      dbo.SO_Delivery_Schedule.SO_Delivery_Schedule_ID = WORK_ORDERS_2.SO_Delivery_Schedule_id LEFT OUTER JOIN
                      dbo.Employee AS Employee_1 ON WORK_ORDERS_2.For_Attention_Of_id = Employee_1.Employee_Id ON 
                      dbo.Wo_Route_SChedule.Wo_Route_SChedule_ID = WORK_ORDERS_2.LOC__Wo_Route_SChedule_ID ON 
                      dbo.Route.Route_id = dbo.Wo_Route_SChedule.Route_Id ON 
                      WORK_ORDERS_3.WORK_ORDERS_ID = WORK_ORDERS_2.Manufactured_on__WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.Part_Revision ON WORK_ORDERS_2.Revision_Id__Revision_id = dbo.Part_Revision.Part_revision_Id LEFT OUTER JOIN
                      dbo.Employee ON WORK_ORDERS_2.For_Attention_Of_id = dbo.Employee.Employee_Id ON 
                      UDData_6.UDData_ID = WORK_ORDERS_2.UDF6__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_5 ON WORK_ORDERS_2.UDF5__UDData_ID = UDData_5.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_4 ON WORK_ORDERS_2.UDF4__UDData_ID = UDData_4.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_3 ON WORK_ORDERS_2.UDF3__UDData_ID = UDData_3.UDData_ID ON UDData_2.UDData_ID = WORK_ORDERS_2.UDF2__UDData_ID ON 
                      UDData_1.UDData_ID = WORK_ORDERS_2.UDF1__UDData_ID LEFT OUTER JOIN
                      dbo.WORK_ORDERS AS WORK_ORDERS_1 ON WORK_ORDERS_2.For_Wo_Id = WORK_ORDERS_1.WORK_ORDERS_ID LEFT OUTER JOIN
                      dbo.WO_STATUS ON WORK_ORDERS_2.Status__Wo_Status_Id = dbo.WO_STATUS.WO_status_Id LEFT OUTER JOIN
                      dbo.UDData AS UDData_15 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_17 RIGHT OUTER JOIN
                      dbo.SALES_ORDERS ON UDData_17.UDData_ID = dbo.SALES_ORDERS.UDF6__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_16 ON dbo.SALES_ORDERS.UDF5__UDData_ID = UDData_16.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_18 ON dbo.SALES_ORDERS.UDF4__UDData_ID = UDData_18.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_14 ON dbo.SALES_ORDERS.UDF3__UDData_ID = UDData_14.UDData_ID ON 
                      UDData_15.UDData_ID = dbo.SALES_ORDERS.UDF2__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_13 ON dbo.SALES_ORDERS.UDF1__UDData_ID = UDData_13.UDData_ID RIGHT OUTER JOIN
                      dbo.INDUSTRY RIGHT OUTER JOIN
                      dbo.SALES_ORDER_LINE_STATUS RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON dbo.SALES_ORDER_LINE_STATUS.Sales_order_line_Status_Id = dbo.Sales_Order_Lines.Status__Sales_Order_Line_Status_Id ON 
                      dbo.INDUSTRY.Industry_Id = dbo.Sales_Order_Lines.Industry__INDUSTRY_ID ON 
                      dbo.SALES_ORDERS.SALES_ORDERS_ID = dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.SALES_ORDERS.Customers_ID__Companys = dbo.COMPANYS.Company_Id ON 
                      WORK_ORDERS_2.So_Line_Id = dbo.Sales_Order_Lines.Sales_Order_Lines_ID FULL OUTER JOIN
                      dbo.CATEGORY RIGHT OUTER JOIN
                      dbo.Group_Code RIGHT OUTER JOIN
                      dbo.UDData AS UDData_9 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_10 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_11 RIGHT OUTER JOIN
                      dbo.Tracability RIGHT OUTER JOIN
                      dbo.Serial_No_Group RIGHT OUTER JOIN
                      dbo.Part ON dbo.Serial_No_Group.Serial_No_Group_Id = dbo.Part.Serial_Group__Serial_Group_Id ON 
                      dbo.Tracability.Tracability_id = dbo.Part.Tracability LEFT OUTER JOIN
                      dbo.Drawing_No ON dbo.Part.Drawing__Drawing_No_ID = dbo.Drawing_No.Drawing_No_ID LEFT OUTER JOIN
                      dbo.Part_type ON dbo.Part.Type__Part_Type_Id = dbo.Part_type.part_type_id LEFT OUTER JOIN
                      dbo.UDData AS UDData_12 ON dbo.Part.UDF6__UDData_ID = UDData_12.UDData_ID ON UDData_11.UDData_ID = dbo.Part.UDF5__UDData_ID ON 
                      UDData_10.UDData_ID = dbo.Part.UDF4__UDData_ID ON UDData_9.UDData_ID = dbo.Part.UDF3__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_8 ON dbo.Part.UDF2__UDData_ID = UDData_8.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_7 ON dbo.Part.UDF1__UDData_ID = UDData_7.UDData_ID ON dbo.Group_Code.Groupcode_Id = dbo.Part.Groupcode__Groupcode_id ON 
                      dbo.CATEGORY.Category_Id = dbo.Group_Code.Category__category_id ON WORK_ORDERS_2.Part_ID__Part_id = dbo.Part.Part_Id
WHERE     (WORK_ORDERS_2.WO_No > '''')
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Work_Orders_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[27] 2[7] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -1180
         Left = 0
      End
      Begin Tables = 
         Begin Table = "CATEGORY"
            Begin Extent = 
               Top = 1566
               Left = 305
               Bottom = 1685
               Right = 465
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Group_Code"
            Begin Extent = 
               Top = 2646
               Left = 38
               Bottom = 2765
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_9"
            Begin Extent = 
               Top = 2046
               Left = 252
               Bottom = 2165
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_10"
            Begin Extent = 
               Top = 2166
               Left = 38
               Bottom = 2285
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_11"
            Begin Extent = 
               Top = 2406
               Left = 252
               Bottom = 2525
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Tracability"
            Begin Extent = 
               Top = 1686
               Left = 312
               Bottom = 1775
               Right = 472
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Serial_No_Group"
            Begin Extent = 
               Top = 2214
               Left = 515
               Bottom = 2492
               Right = 700
     ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Work_Orders_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Work_Orders_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'       End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 2286
               Left = 38
               Bottom = 2405
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 64
         End
         Begin Table = "Drawing_No"
            Begin Extent = 
               Top = 2166
               Left = 252
               Bottom = 2285
               Right = 477
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part_type"
            Begin Extent = 
               Top = 1776
               Left = 312
               Bottom = 1865
               Right = 472
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_12"
            Begin Extent = 
               Top = 2406
               Left = 38
               Bottom = 2525
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_8"
            Begin Extent = 
               Top = 2046
               Left = 38
               Bottom = 2165
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_7"
            Begin Extent = 
               Top = 2526
               Left = 38
               Bottom = 2645
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_15"
            Begin Extent = 
               Top = 198
               Left = 572
               Bottom = 317
               Right = 748
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_17"
            Begin Extent = 
               Top = 318
               Left = 816
               Bottom = 437
               Right = 992
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDERS"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 282
            End
            DisplayFlags = 280
            TopColumn = 51
         End
         Begin Table = "UDData_16"
            Begin Extent = 
               Top = 318
               Left = 602
               Bottom = 437
               Right = 778
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_18"
            Begin Extent = 
               Top = 318
               Left = 388
               Bottom = 437
               Right = 564
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_14"
            Begin Extent = 
               Top = 198
               Left = 786
               Bottom = 317
               Right = 962
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_13"
            Begin Extent = 
               Top = 198
               Left = 358
               Bottom = 317
               Right = 534
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "INDUSTRY"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 198
            End
            DisplayFlags ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Work_Orders_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane3' , N'SCHEMA',N'dbo', N'VIEW',N'Work_Orders_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane3', @value=N'= 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDER_LINE_STATUS"
            Begin Extent = 
               Top = 6
               Left = 236
               Bottom = 125
               Right = 457
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 320
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_2"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_5"
            Begin Extent = 
               Top = 606
               Left = 252
               Bottom = 725
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_6"
            Begin Extent = 
               Top = 726
               Left = 38
               Bottom = 845
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Employee"
            Begin Extent = 
               Top = 846
               Left = 38
               Bottom = 965
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS_3"
            Begin Extent = 
               Top = 966
               Left = 38
               Bottom = 1085
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Work_Order_Op10_Complete"
            Begin Extent = 
               Top = 726
               Left = 252
               Bottom = 845
               Right = 460
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Work_Order_OP20_Complete"
            Begin Extent = 
               Top = 1086
               Left = 38
               Bottom = 1205
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS_2"
            Begin Extent = 
               Top = 1206
               Left = 38
               Bottom = 1325
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 67
         End
         Begin Table = "Last_Op_Complete"
            Begin Extent = 
               Top = 846
               Left = 305
               Bottom = 935
               Right = 465
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Employee_2"
            Begin Extent = 
               Top = 1326
               Left = 38
               Bottom = 1445
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SO_Delivery_Schedule"
            Begin Extent = 
               Top = 1446
               Left = 38
               Bottom = 1565
               Right = 256
         ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Work_Orders_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane4' , N'SCHEMA',N'dbo', N'VIEW',N'Work_Orders_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane4', @value=N'   End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Employee_1"
            Begin Extent = 
               Top = 1566
               Left = 38
               Bottom = 1685
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Wo_Route_SChedule"
            Begin Extent = 
               Top = 1686
               Left = 38
               Bottom = 1805
               Right = 274
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Route"
            Begin Extent = 
               Top = 1806
               Left = 38
               Bottom = 1925
               Right = 298
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part_Revision"
            Begin Extent = 
               Top = 1926
               Left = 38
               Bottom = 2045
               Right = 254
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_4"
            Begin Extent = 
               Top = 1086
               Left = 284
               Bottom = 1205
               Right = 460
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_3"
            Begin Extent = 
               Top = 1446
               Left = 294
               Bottom = 1565
               Right = 470
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_1"
            Begin Extent = 
               Top = 1685
               Left = 545
               Bottom = 1804
               Right = 721
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS_1"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WO_STATUS"
            Begin Extent = 
               Top = 1326
               Left = 305
               Bottom = 1415
               Right = 465
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_19"
            Begin Extent = 
               Top = 1186
               Left = 498
               Bottom = 1305
               Right = 674
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_20"
            Begin Extent = 
               Top = 1186
               Left = 712
               Bottom = 1305
               Right = 888
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData"
            Begin Extent = 
               Top = 1186
               Left = 926
               Bottom = 1305
               Right = 1102
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_21"
            Begin Extent = 
               Top = 1186
               Left = 1140
               Bottom = 1305
               Right = 1316
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 87
         Width = 284
         Width = 1500
 ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Work_Orders_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane5' , N'SCHEMA',N'dbo', N'VIEW',N'Work_Orders_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane5', @value=N'        Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 7755
         Alias = 1710
         Table = 1425
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Work_Orders_List'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Work_Orders_List', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=5 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Work_Orders_List'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Active_Ops]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Active_Ops]
AS
SELECT     Wo_Route_SChedule_1.Wo_Route_SChedule_ID, Wo_Route_SChedule_1.Complete, Wo_Route_SChedule_1.Date_Complete AS [Date Complete], 
                      Wo_Route_SChedule_1.Do_Not_Use AS [Do Not Use], Wo_Route_SChedule_1.Last_Start_Date AS [Last Start Date], Wo_Route_SChedule_1.Priority, 
                      Wo_Route_SChedule_1.Qty_Complete AS [Qty Complete], Wo_Route_SChedule_1.Scheduled_Complete_date AS [Scheduled Complete date], 
                      Wo_Route_SChedule_1.Start_Date AS [Start Date], Wo_Route_SChedule_1.Actual_Run_Time AS [Actual Run Time], 
                      Wo_Route_SChedule_1.Actual_Setup_Time AS [Actual Setup Time], Wo_Route_SChedule_1.Conflict, Wo_Route_SChedule_1.Early, 
                      Wo_Route_SChedule_1.First_Start_Date AS [First Start Date], Wo_Route_SChedule_1.Last_End_Date AS [Last End Date], Wo_Route_SChedule_1.Late, 
                      Wo_Route_SChedule_1.Locked, Wo_Route_SChedule_1.Material_Arrival_Date AS [Materia _Arrival_Date], Wo_Route_SChedule_1.Per_Complete AS [Per Complete], 
                      Wo_Route_SChedule_1.Problems_Accepted AS [Problems Accepted], Wo_Route_SChedule_1.Requires_Material AS [Requires Material], 
                      Wo_Route_SChedule_1.Seq_No AS [Seq No], Wo_Route_SChedule_1.Started, Wo_Route_SChedule_1.Stopped, 
                      Wo_Route_SChedule_1.Use_Setup_Time AS [Use Setup Time], Wo_Route_SChedule_1.Setup_Time AS [Setup Time], 
                      Wo_Route_SChedule_1.Run_Time AS [Run Time], Wo_Route_SChedule_1.Inter_Op_Time AS [Inter Op Time], Wo_Route_SChedule_1.Date_Started AS [Date Started], 
                      dbo.WORK_ORDERS.WO_No AS [WO No], dbo.Sales_Order_Lines.Contract_No AS [Contract No], Route_1.Op_No AS [Op No], Route_1.Description AS [OP Description], 
                      dbo.Process.Process_Name AS Process, dbo.Route_versions.Version_Name AS [Route Version], dbo.Part.Part_No AS [Part No], 
                      dbo.Part.Description AS [Part Description], dbo.Work_Centre.WC_Name AS [WC Name], dbo.Work_Centre.Work_Centre_No AS [WC No], 
                      Wo_Route_SChedule_1.Cancelled, Route_1.Route_id, dbo.WORK_ORDERS.WORK_ORDERS_ID, dbo.Work_Centre.Work_Centre_id, dbo.Process.Process_Id, 
                      dbo.LOCATION.Location, dbo.Sales_Order_Lines.Dispatch_Date, dbo.Group_Code.Group_Code AS [Group Code], dbo.Last_Op_Complete.Op_No AS [Last Op Complete],
                       dbo.WO_STATUS.Wo_Status AS [WO Status], dbo.WORK_ORDERS.Date_Required AS [WO Date Required], dbo.WORK_ORDERS.Date_Raised AS [WO Date Raised], 
                      Wo_Route_SChedule_1.Notes_Non_RTF AS Notes, dbo.WORK_ORDERS.On_Hold AS [WO On Hold], dbo.Sales_Order_Lines.On_Hold AS [Contract On Hold], 
                      dbo.WORK_ORDERS.Qty, UDData_1.UDData_Data AS UserDefinable1, UDData_2.UDData_Data AS UserDefinable2, UDData_3.UDData_Data AS UserDefinable3, 
                      UDData_4.UDData_Data AS UserDefinable4, UDData_6.UDData_Data AS UserDefinable5, UDData_5.UDData_Data AS UserDefinable6, 
                      dbo.PrevOPTemp.Op_No AS PrecedingOP, dbo.COMPANYS.Name AS Customer, dbo.WORK_ORDERS.Estimated_Complete_Date AS [Estimated Complete Date], 
                      Wo_Route_SChedule_1.Active, Wo_Route_SChedule_1.Outstanding_Run_Time AS [Outstanding Run Time], 
                      Wo_Route_SChedule_1.Outstanding_Setup_Time AS [Outstanding Setup Time], Wo_Route_SChedule_1.Work_Centre_Set AS [Work Centre Set], 
                      Wo_Route_SChedule_1.First_Start_Date_Locked AS [First Start Date Locked], dbo.INDUSTRY.Industry, Wo_Route_SChedule_1.Efficiency, 
                      Wo_Route_SChedule_1.Display_Order AS [Display Order], Wo_Route_SChedule_1.Exists_On_Plan AS [Plan Exists], UDData_8.UDData_Data AS WO_UD_2, 
                      dbo.Sales_Order_Lines.Notes_non_rtf AS [SO Line Notes], dbo.Employee.Employee_No AS First_Live_Employee, 
                      dbo.WORK_ORDERS.Qty_Complete AS [WO Qty Complete], UDData_7.UDData_Data AS [SO UD Data 1], UDData_9.UDData_Data AS [SO UD Data 2], 
                      UDData_10.UDData_Data AS [SO UD Data 3], UDData_12.UDData_Data AS [SO UD Data 4], UDData_11.UDData_Data AS [SO UD Data 5], 
                      dbo.UDData.UDData_Data AS [SO UD Data 6], dbo.WORK_ORDERS.Qty AS [WO Qty], dbo.Part.Drawing_No AS [Drawing Number], 
                      dbo.Sales_Order_Lines.Requested_Date AS [SO Line Requested Date], dbo.SALES_ORDERS.Customers_PO AS [Customers PO]
FROM         dbo.UDData AS UDData_5 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_6 RIGHT OUTER JOIN
                      dbo.Part ON UDData_6.UDData_ID = dbo.Part.UDF6__UDData_ID ON UDData_5.UDData_ID = dbo.Part.UDF5__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_4 ON dbo.Part.UDF4__UDData_ID = UDData_4.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_3 ON dbo.Part.UDF3__UDData_ID = UDData_3.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON dbo.Part.UDF2__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON dbo.Part.UDF1__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.Group_Code ON dbo.Part.Groupcode__Groupcode_id = dbo.Group_Code.Groupcode_Id LEFT OUTER JOIN
                      dbo.LOCATION ON dbo.Part.Preferred_Location__Location_id = dbo.LOCATION.Location_id FULL OUTER JOIN
                      dbo.Route_versions RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines LEFT OUTER JOIN
                      dbo.UDData AS UDData_12 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_11 RIGHT OUTER JOIN
                      dbo.SALES_ORDERS LEFT OUTER JOIN
                      dbo.UDData ON dbo.SALES_ORDERS.UDF6__UDData_ID = dbo.UDData.UDData_ID ON UDData_11.UDData_ID = dbo.SALES_ORDERS.UDF5__UDData_ID ON 
                      UDData_12.UDData_ID = dbo.SALES_ORDERS.UDF4__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_10 ON dbo.SALES_ORDERS.UDF3__UDData_ID = UDData_10.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_9 ON dbo.SALES_ORDERS.UDF2__UDData_ID = UDData_9.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_7 ON dbo.SALES_ORDERS.UDF1__UDData_ID = UDData_7.UDData_ID LEFT OUTER JOIN
                      dbo.INDUSTRY RIGHT OUTER JOIN
                      dbo.COMPANYS ON dbo.INDUSTRY.Industry_Id = dbo.COMPANYS.CoyType__type_id ON 
                      dbo.SALES_ORDERS.Customers_ID__Companys = dbo.COMPANYS.Company_Id ON 
                      dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID = dbo.SALES_ORDERS.SALES_ORDERS_ID RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule AS Wo_Route_SChedule_2 LEFT OUTER JOIN
                      dbo.Route AS Route_2 ON Wo_Route_SChedule_2.Route_Id = Route_2.Route_id RIGHT OUTER JOIN
                      dbo.WO_STATUS RIGHT OUTER JOIN
                      dbo.WORK_ORDERS LEFT OUTER JOIN
                      dbo.Last_Op_Complete ON dbo.WORK_ORDERS.WORK_ORDERS_ID = dbo.Last_Op_Complete.WO_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_8 ON dbo.WORK_ORDERS.UDF2__UDData_ID = UDData_8.UDData_ID ON 
                      dbo.WO_STATUS.WO_status_Id = dbo.WORK_ORDERS.Status__Wo_Status_Id ON 
                      Wo_Route_SChedule_2.Wo_Route_SChedule_ID = dbo.WORK_ORDERS.LOC__Wo_Route_SChedule_ID ON 
                      dbo.Sales_Order_Lines.Sales_Order_Lines_ID = dbo.WORK_ORDERS.So_Line_Id RIGHT OUTER JOIN
                      dbo.Wo_Route_SChedule AS Wo_Route_SChedule_1 LEFT OUTER JOIN
                      dbo.TIMES LEFT OUTER JOIN
                      dbo.Employee ON dbo.TIMES.Employee__employee_Id = dbo.Employee.Employee_Id RIGHT OUTER JOIN
                      dbo.Min_Times ON dbo.TIMES.TIMES_ID = dbo.Min_Times.Min_Time ON 
                      Wo_Route_SChedule_1.Wo_Route_SChedule_ID = dbo.Min_Times.Op__Wo_Route_SChedule_ID LEFT OUTER JOIN
                      dbo.PrevOPTemp ON Wo_Route_SChedule_1.Predessesor_Route_id = dbo.PrevOPTemp.Route_Id AND 
                      Wo_Route_SChedule_1.WO_ID = dbo.PrevOPTemp.WO_ID LEFT OUTER JOIN
                      dbo.Work_Centre ON Wo_Route_SChedule_1.WorkCentre_ID = dbo.Work_Centre.Work_Centre_id ON 
                      dbo.WORK_ORDERS.WORK_ORDERS_ID = Wo_Route_SChedule_1.WO_ID LEFT OUTER JOIN
                      dbo.Route AS Route_1 LEFT OUTER JOIN
                      dbo.Process ON Route_1.Process__Process_id = dbo.Process.Process_Id ON Wo_Route_SChedule_1.Route_Id = Route_1.Route_id ON 
                      dbo.Route_versions.Route_Versions_id = dbo.WORK_ORDERS.Route_versions_id ON dbo.Part.Part_Id = dbo.WORK_ORDERS.Part_ID__Part_id
WHERE     (Wo_Route_SChedule_1.Complete = 0) AND (Wo_Route_SChedule_1.Cancelled = 0) AND (Wo_Route_SChedule_1.Do_Not_Use = 0)
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Active_Ops', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[49] 4[14] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -155
         Left = 0
      End
      Begin Tables = 
         Begin Table = "UDData_5"
            Begin Extent = 
               Top = 1536
               Left = 277
               Bottom = 1655
               Right = 453
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_6"
            Begin Extent = 
               Top = 1656
               Left = 38
               Bottom = 1775
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 1776
               Left = 38
               Bottom = 1895
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 7
         End
         Begin Table = "UDData_4"
            Begin Extent = 
               Top = 1656
               Left = 252
               Bottom = 1775
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_3"
            Begin Extent = 
               Top = 1896
               Left = 38
               Bottom = 2015
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_2"
            Begin Extent = 
               Top = 1896
               Left = 252
               Bottom = 2015
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_1"
            Begin Extent = 
               Top = 2016
               Left = 38
               Bottom = 2135
               Right = 214
            End
        ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Active_Ops'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Active_Ops', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'    DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Group_Code"
            Begin Extent = 
               Top = 2136
               Left = 38
               Bottom = 2255
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "LOCATION"
            Begin Extent = 
               Top = 2016
               Left = 252
               Bottom = 2135
               Right = 461
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Route_versions"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 221
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 320
            End
            DisplayFlags = 280
            TopColumn = 32
         End
         Begin Table = "UDData_12"
            Begin Extent = 
               Top = 294
               Left = 1000
               Bottom = 413
               Right = 1176
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_11"
            Begin Extent = 
               Top = 414
               Left = 510
               Bottom = 533
               Right = 686
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDERS"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 500
               Right = 282
            End
            DisplayFlags = 280
            TopColumn = 17
         End
         Begin Table = "UDData"
            Begin Extent = 
               Top = 414
               Left = 724
               Bottom = 533
               Right = 900
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_10"
            Begin Extent = 
               Top = 294
               Left = 786
               Bottom = 413
               Right = 962
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_9"
            Begin Extent = 
               Top = 294
               Left = 572
               Bottom = 413
               Right = 748
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_7"
            Begin Extent = 
               Top = 294
               Left = 358
               Bottom = 413
               Right = 534
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "INDUSTRY"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Wo_Route_SChedule_2"
            Begin Extent = 
               Top = 486
               Left = 236
               Bottom = 605
               Right = 472
            End
            DisplayFlags = 2' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Active_Ops'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane3' , N'SCHEMA',N'dbo', N'VIEW',N'Active_Ops', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane3', @value=N'80
            TopColumn = 0
         End
         Begin Table = "Route_2"
            Begin Extent = 
               Top = 726
               Left = 38
               Bottom = 845
               Right = 298
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WO_STATUS"
            Begin Extent = 
               Top = 846
               Left = 38
               Bottom = 935
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 966
               Left = 38
               Bottom = 1085
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Last_Op_Complete"
            Begin Extent = 
               Top = 1086
               Left = 38
               Bottom = 1175
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_8"
            Begin Extent = 
               Top = 846
               Left = 236
               Bottom = 965
               Right = 412
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Wo_Route_SChedule_1"
            Begin Extent = 
               Top = 1086
               Left = 236
               Bottom = 1205
               Right = 472
            End
            DisplayFlags = 280
            TopColumn = 54
         End
         Begin Table = "TIMES"
            Begin Extent = 
               Top = 1206
               Left = 38
               Bottom = 1325
               Right = 287
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Employee"
            Begin Extent = 
               Top = 1326
               Left = 38
               Bottom = 1445
               Right = 267
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Min_Times"
            Begin Extent = 
               Top = 1446
               Left = 38
               Bottom = 1535
               Right = 272
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "PrevOPTemp"
            Begin Extent = 
               Top = 1326
               Left = 305
               Bottom = 1430
               Right = 465
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Work_Centre"
            Begin Extent = 
               Top = 1536
               Left = 38
               Bottom = 1655
               Right = 239
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Route_1"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 298
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Process"
            Begin Extent = 
               Top = 6
               Left = 259
               Bottom = 125
               Right = 460
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 1410
         Table ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Active_Ops'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane4' , N'SCHEMA',N'dbo', N'VIEW',N'Active_Ops', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane4', @value=N'= 2025
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Active_Ops'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Active_Ops', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=4 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Active_Ops'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Supplier_Part_Qty_Price_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Supplier_Part_Qty_Price_List]
AS
SELECT     dbo.Supplier_Part_Qty_Price.Supplier_Part_qty_Price_id, dbo.Supplier_Part_Qty_Price.Supplier__Company_Id, dbo.Supplier_Part_Qty_Price.Part__Part_id, 
                      dbo.Supplier_Part_Qty_Price.last_Date AS [last Date], dbo.Supplier_Part_Qty_Price.Qty, dbo.Supplier_Part_Qty_Price.Price, 
                      dbo.Supplier_Part_Qty_Price.Stock_Price AS [Stock Price], dbo.Supplier_Part_Qty_Price.Stock_qty AS [Stock qty], dbo.Supplier_Part_Qty_Price.Type, 
                      dbo.UOM_From_Conversion_Id.Unit_of_Measure AS UOM, dbo.MULTICURRENCY.MultiCurrency_Currency AS Currency, dbo.Part.Part_No AS [Part No], 
                      dbo.Part.Description, dbo.Group_Code.Group_Code AS [Group Code], dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name AS Supplier, 
                      dbo.Supplier_Part_Qty_Price.Pricefor__RFQ_Lines_ID, dbo.Supplier_Part_Qty_Price.PriceFor__Purchase_Enquiry_Qty_ID, 
                      dbo.Supplier_Part_Qty_Price.Lead_Time_in_Days AS [Lead Time in Days], dbo.Part.Std_Material_Cost AS [Std Material Cost], 
                      dbo.Part.Std_Labour_Cost AS [Std Labour Cost], COMPANYS_1.Name AS [Preferred Supplier], dbo.Supplier_Part.Supplier_Part_No AS [Supplier Part No], 
                      dbo.Supplier_Part.Supplier_Part_Description AS [Supplier Part Description], dbo.Supplier_Part_Qty_Price.Notes_Non_RTF AS Notes, 
                      dbo.Supplier_Part_Qty_Price.Complies_With_Spec AS [Complies With Spec], dbo.RFQ_Lines_List.[RFQ Reference], dbo.ENQUIRYS.Enquiry_No, 
                      dbo.UDData.UDData_Data AS [Part UD1], UDData_1.UDData_Data AS [Part UD2], UDData_2.UDData_Data AS [Part UD3], 
                      dbo.Supplier_Part_Qty_Price.Supplier_Quote_Ref AS [Supplier Quote Ref], dbo.Supplier_Part_Qty_Price.Manual_Selling_Price AS [Manual Selling Price]
FROM         dbo.UOM_From_Conversion_Id RIGHT OUTER JOIN
                      dbo.COMPANYS AS COMPANYS_1 RIGHT OUTER JOIN
                      dbo.UDData RIGHT OUTER JOIN
                      dbo.UDData AS UDData_1 RIGHT OUTER JOIN
                      dbo.Part ON UDData_1.UDData_ID = dbo.Part.UDF2__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON dbo.Part.UDF3__UDData_ID = UDData_2.UDData_ID ON dbo.UDData.UDData_ID = dbo.Part.UDF1__UDData_ID ON 
                      COMPANYS_1.Company_Id = dbo.Part.Supplier__Company_id LEFT OUTER JOIN
                      dbo.Group_Code ON dbo.Part.Groupcode__Groupcode_id = dbo.Group_Code.Groupcode_Id RIGHT OUTER JOIN
                      dbo.Purchase_Enquiry LEFT OUTER JOIN
                      dbo.ENQUIRYS RIGHT OUTER JOIN
                      dbo.ENQUIRY_LINES ON dbo.ENQUIRYS.Enquiry_ID = dbo.ENQUIRY_LINES.Enquiry_Line__Enquiry_id ON 
                      dbo.Purchase_Enquiry.Enq__ENQUIRY_LINES_ID = dbo.ENQUIRY_LINES.Enquiry_Line_id RIGHT OUTER JOIN
                      dbo.Purchase_Enquiry_Qty ON dbo.Purchase_Enquiry.Purchase_Enquiry_ID = dbo.Purchase_Enquiry_Qty.Parent__Purchase_Enquiry_ID RIGHT OUTER JOIN
                      dbo.Supplier_Part_Qty_Price ON 
                      dbo.Purchase_Enquiry_Qty.Purchase_Enquiry_Qty_ID = dbo.Supplier_Part_Qty_Price.PriceFor__Purchase_Enquiry_Qty_ID LEFT OUTER JOIN
                      dbo.RFQ_Lines_List ON dbo.Supplier_Part_Qty_Price.Pricefor__RFQ_Lines_ID = dbo.RFQ_Lines_List.RFQ_Lines_ID LEFT OUTER JOIN
                      dbo.Supplier_Part ON dbo.Supplier_Part_Qty_Price.Part__Part_id = dbo.Supplier_Part.Part__Part_id AND 
                      dbo.Supplier_Part_Qty_Price.Supplier__Company_Id = dbo.Supplier_Part.Supplier__Companys_id LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Supplier_Part_Qty_Price.Supplier__Company_Id = dbo.COMPANYS.Company_Id ON 
                      dbo.Part.Part_Id = dbo.Supplier_Part_Qty_Price.Part__Part_id LEFT OUTER JOIN
                      dbo.MULTICURRENCY ON dbo.Supplier_Part_Qty_Price.Currency__MultiCurrency_Id = dbo.MULTICURRENCY.MultiCurrency_ID ON 
                      dbo.UOM_From_Conversion_Id.Conversion_Id = dbo.Supplier_Part_Qty_Price.Uom__Conversion_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Last_Op_Process]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Last_Op_Process]
AS
SELECT     dbo.WO_Ops_Complete.WO_ID, dbo.Last_Op_Complete.Op_No, dbo.Route.Process__Process_id, dbo.Process.Process_Name
FROM         dbo.WO_Ops_Complete INNER JOIN
                      dbo.Wo_Route_SChedule ON dbo.WO_Ops_Complete.Date_Complete = dbo.Wo_Route_SChedule.Date_Complete AND 
                      dbo.WO_Ops_Complete.WO_ID = dbo.Wo_Route_SChedule.WO_ID INNER JOIN
                      dbo.Route ON dbo.Wo_Route_SChedule.Route_Id = dbo.Route.Route_id INNER JOIN
                      dbo.Last_Op_Complete ON dbo.WO_Ops_Complete.WO_ID = dbo.Last_Op_Complete.WO_ID AND dbo.Route.Op_No = dbo.Last_Op_Complete.Op_No INNER JOIN
                      dbo.Process ON dbo.Route.Process__Process_id = dbo.Process.Process_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_list]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_list]
AS
SELECT     dbo.Part.Part_Id, dbo.Part.Part_No AS [Part No], dbo.Part.Description, dbo.Drawing_No.Drawing_No AS [Drawing Register No], dbo.Part.Drawing_No AS [Drawing No], 
                      dbo.Part.Lead_Time AS [Lead Time], dbo.Part.In_Stock AS [In Stock], dbo.Part.On_Order AS [On Order], dbo.Part.Required, dbo.Part.Re_Order AS [Re Order], 
                      dbo.Part.Min_Order AS [Min Order], dbo.Part.Recomended_Order AS ROQ, dbo.Part.For_Sale AS [For Sale], dbo.Part.Fully_Planned AS [Fully Planned], 
                      dbo.Part_type.Part_type AS [Part Type], dbo.UOM.Unit_of_Measure AS UOM, dbo.Tracability.Tracabilty AS Traceabilty, dbo.Part_Status.Part_Status AS Status, 
                      dbo.CATEGORY.Category, dbo.Group_Code.Group_Code AS [Group Code], dbo.UOM.Area AS [Has Area], dbo.UOM.Length AS [Has Length], 
                      dbo.UOM.Non_Divisible AS [Non Divisible], UDData_6.UDData_Data AS UserDefinable6, UDData_5.UDData_Data AS UserDefinable5, 
                      UDData_4.UDData_Data AS UserDefinable4, UDData_3.UDData_Data AS UserDefinable3, UDData_2.UDData_Data AS UserDefinable2, 
                      UDData_1.UDData_Data AS UserDefinable1, dbo.Part.Released, dbo.Part.Purchase_Enquiry_Raised AS [Purchase Enquiry Raised], 
                      dbo.LOCATION.Location AS [Pref Location], dbo.Part.Cost, dbo.Part.Finnished_Weight AS [Finnished Weight], dbo.Part.In_Stock, dbo.Part.Notes_Non_RTF AS Notes, 
                      dbo.Part.Cost_Tonne AS [Cost/Tonne], dbo.Part.Deleted, dbo.Part.Status__Part_status_id, dbo.Part.Approved, Nominals_1.Nominal AS [Cost Nominal], 
                      Nominals_2.Nominal AS [Sales Nominal], dbo.Part_Comodity_Codes.Comodity_Code AS [Comodity Code], dbo.Part.Packing_Qty AS [Packing Qty], 
                      COMPANYS_1.Name AS [Preferred Supplier], dbo.Part_Revision.Revision, dbo.Part.Average_Stock_Cost AS [Avg Stock Cost], dbo.Part.Locked, 
                      dbo.Part.Last_StockTake_Date AS [Last Stock Take], dbo.Part.Qty_In_Stock_After_StockTake AS [Qty In Stock After StockTake], 
                      dbo.Part.Qty_In_Stock_Before_StockTake AS [Qty In Stock Before StockTake], dbo.Stock_Take_Type.Name AS [Stock Take Type], 
                      dbo.Part.Equivalent_Size AS [Equivalent Size], dbo.Part.Std_Material_Cost AS [Std Material Cost], dbo.Part.Std_Labour_Cost AS [Std Labour Cost], 
                      dbo.Part.Std_Overhead_Cost AS [Std Overhead Cost], dbo.Part.MRP_Stock AS [MRP Stock], dbo.Part_Discount_Group.Part_Discount_Group AS [Part Discount Group], 
                      dbo.Part.Master_Part_Serial AS [Master Serial], dbo.Part.Master_Part_No AS [Master Part], dbo.Part.Barcode, ISNULL(dbo.Part_Quarantine.Qty, 0) AS Quarantine, 
                      dbo.WIP_Total.[WIP Qty], dbo.COMPANYS.Name AS Manufacturer, ISNULL(dbo.Part_Consignment.Qty, 0) AS Consignment
FROM         dbo.Part_Comodity_Codes RIGHT OUTER JOIN
                      dbo.Stock_Take_Type RIGHT OUTER JOIN
                      dbo.WIP_Total RIGHT OUTER JOIN
                      dbo.Part_Consignment RIGHT OUTER JOIN
                      dbo.Part ON dbo.Part_Consignment.Part__Part_Id = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Part.Manufacturer__Company_id = dbo.COMPANYS.Company_Id ON dbo.WIP_Total.[Part Id] = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Part_Quarantine ON dbo.Part.Part_Id = dbo.Part_Quarantine.Part__Part_Id LEFT OUTER JOIN
                      dbo.Part_Discount_Group ON dbo.Part.Discount__Part_Discount_Group_ID = dbo.Part_Discount_Group.Part_Discount_Group_ID LEFT OUTER JOIN
                      dbo.Drawing_No ON dbo.Part.Drawing__Drawing_No_ID = dbo.Drawing_No.Drawing_No_ID ON 
                      dbo.Stock_Take_Type.Stock_Take_Type_ID = dbo.Part.StockTake__Stock_Take_Type_ID LEFT OUTER JOIN
                      dbo.Part_Revision ON dbo.Part.Revision__revision_id = dbo.Part_Revision.Part_revision_Id LEFT OUTER JOIN
                      dbo.COMPANYS AS COMPANYS_1 ON dbo.Part.Supplier__Company_id = COMPANYS_1.Company_Id ON 
                      dbo.Part_Comodity_Codes.Part_Comodity_Codes_id = dbo.Part.Comodity__Comodity_id LEFT OUTER JOIN
                      dbo.Nominals AS Nominals_1 ON dbo.Part.Cost_nom__Nominal_id = Nominals_1.Nominal_ID LEFT OUTER JOIN
                      dbo.Nominals AS Nominals_2 ON dbo.Part.Sales_nom__Nominal_id = Nominals_2.Nominal_ID LEFT OUTER JOIN
                      dbo.LOCATION ON dbo.Part.Preferred_Location__Location_id = dbo.LOCATION.Location_id LEFT OUTER JOIN
                      dbo.UDData AS UDData_6 ON dbo.Part.UDF6__UDData_ID = UDData_6.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_5 ON dbo.Part.UDF5__UDData_ID = UDData_5.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_4 ON dbo.Part.UDF4__UDData_ID = UDData_4.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_3 ON dbo.Part.UDF3__UDData_ID = UDData_3.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON dbo.Part.UDF2__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON dbo.Part.UDF1__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.Group_Code LEFT OUTER JOIN
                      dbo.CATEGORY ON dbo.Group_Code.Category__category_id = dbo.CATEGORY.Category_Id ON 
                      dbo.Part.Groupcode__Groupcode_id = dbo.Group_Code.Groupcode_Id LEFT OUTER JOIN
                      dbo.Part_type ON dbo.Part.Type__Part_Type_Id = dbo.Part_type.part_type_id LEFT OUTER JOIN
                      dbo.UOM ON dbo.Part.Unit_of_measure__Uom_id = dbo.UOM.UOM_ID LEFT OUTER JOIN
                      dbo.Tracability ON dbo.Part.Tracability = dbo.Tracability.Tracability_id LEFT OUTER JOIN
                      dbo.Part_Status ON dbo.Part.Status__Part_status_id = dbo.Part_Status.Part_Status_id
WHERE     (dbo.Part.Deleted = 0) AND (dbo.Part.Part_No > '''') OR
                      (dbo.Part.Deleted IS NULL)
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Part_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -192
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Part_Comodity_Codes"
            Begin Extent = 
               Top = 726
               Left = 38
               Bottom = 845
               Right = 248
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Stock_Take_Type"
            Begin Extent = 
               Top = 486
               Left = 284
               Bottom = 605
               Right = 475
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "WIP_Total"
            Begin Extent = 
               Top = 302
               Left = 531
               Bottom = 455
               Right = 691
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part_Consignment"
            Begin Extent = 
               Top = 198
               Left = 1060
               Bottom = 287
               Right = 1220
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 31
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 266
               Left = 710
               Bottom = 562
               Right = 1022
            End
            DisplayFlags = 280
            TopColumn = 21
         End
         Begin Table = "Part_Quarantine"
            Begin Extent = 
               Top = 199
               Left = 386
               Bottom = 297
               Right = 599' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Part_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Part_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part_Discount_Group"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Drawing_No"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 263
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part_Revision"
            Begin Extent = 
               Top = 6
               Left = 252
               Bottom = 125
               Right = 468
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS_1"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Nominals_1"
            Begin Extent = 
               Top = 846
               Left = 38
               Bottom = 965
               Right = 295
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Nominals_2"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 295
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "LOCATION"
            Begin Extent = 
               Top = 966
               Left = 38
               Bottom = 1085
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_6"
            Begin Extent = 
               Top = 336
               Left = 301
               Bottom = 455
               Right = 477
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_5"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_4"
            Begin Extent = 
               Top = 726
               Left = 286
               Bottom = 845
               Right = 462
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_3"
            Begin Extent = 
               Top = 966
               Left = 285
               Bottom = 1085
               Right = 461
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_2"
            Begin Extent = 
               Top = 1086
               Left = 38
               Bottom = 1205
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_1"
            Begin Extent = 
               Top = 1086
               Left = 252
               Bottom = 1205
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Group_Code"
            Begin Extent = 
               Top = 1206
               Left = 38
               Bottom = 1325
               Right = 299
            End
            D' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Part_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane3' , N'SCHEMA',N'dbo', N'VIEW',N'Part_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane3', @value=N'isplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "CATEGORY"
            Begin Extent = 
               Top = 1326
               Left = 38
               Bottom = 1445
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part_type"
            Begin Extent = 
               Top = 1326
               Left = 236
               Bottom = 1415
               Right = 396
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UOM"
            Begin Extent = 
               Top = 1416
               Left = 236
               Bottom = 1535
               Right = 407
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Tracability"
            Begin Extent = 
               Top = 1446
               Left = 38
               Bottom = 1535
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part_Status"
            Begin Extent = 
               Top = 1536
               Left = 38
               Bottom = 1640
               Right = 251
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 66
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1995
         Alias = 1725
         Table = 1470
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Part_list'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Part_list', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=3 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Part_list'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Work_Orders_Required_With_Parts]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Work_Orders_Required_With_Parts]
AS
SELECT     dbo.Allocation_Outstanding.Allocations_ID, dbo.Allocation_Outstanding.Breadth, dbo.Allocation_Outstanding.Cancelled, dbo.Allocation_Outstanding.Complete, 
                      dbo.Allocation_Outstanding.[Date Created], dbo.Allocation_Outstanding.[Date Required], dbo.Allocation_Outstanding.Length, dbo.Allocation_Outstanding.Qty, 
                      dbo.Allocation_Outstanding.[Qty Complete], dbo.Allocation_Outstanding.[Qty Processed], dbo.Allocation_Outstanding.[Total Qty], dbo.Allocation_Outstanding.Type, 
                      dbo.Allocation_Outstanding.Source, dbo.Allocation_Outstanding.WO__Works_order_Id, dbo.Allocation_Outstanding.[For WO], 
                      dbo.Allocation_Outstanding.[For Contract No], dbo.Allocation_Outstanding.Released, dbo.Allocation_Outstanding.[Created By], 
                      dbo.Allocation_Outstanding.[Deleted From BOM], dbo.Allocation_Outstanding.[BOM Supplier], dbo.Allocation_Outstanding.Part__Part_Id, 
                      dbo.Allocation_Outstanding.[On Part BOM], dbo.Allocation_Outstanding.SO__Sales_Order_Line_id, dbo.Allocation_Outstanding.SO_Delivery_Schedule_id, 
                      dbo.Allocation_Outstanding.Purchase_Enquiry_Raised, dbo.Allocation_Outstanding.Notes, dbo.Allocation_Outstanding.[Week No], 
                      dbo.Allocation_Outstanding.[Wo Status], dbo.Parts_Required_2.Part_Id, dbo.Parts_Required_2.Type__Part_Type_Id, dbo.Parts_Required_2.[In Stock], 
                      dbo.Parts_Required_2.[Min Order], dbo.Parts_Required_2.[On Order], dbo.Parts_Required_2.[Part No], dbo.Parts_Required_2.[Re Order], 
                      dbo.Parts_Required_2.[Recomended Order], dbo.Parts_Required_2.[Total Required], dbo.Parts_Required_2.[Unit of Measure], 
                      dbo.Parts_Required_2.[Part Description], dbo.Parts_Required_2.[Drawing No], dbo.Parts_Required_2.Category, dbo.Parts_Required_2.[Group Code], 
                      dbo.Parts_Required_2.[Lead Time], dbo.Parts_Required_2.[Part type], dbo.Parts_Required_2.[Pref Supplier], dbo.Parts_Required_2.Country, 
                      dbo.COMPANYS.Company_No AS [Company No], dbo.COMPANYS.Name AS Customer, UDData_1.UDData_Data AS UserDefinable1, 
                      UDData_2.UDData_Data AS UserDefinable2, UDData_3.UDData_Data AS UserDefinable3, UDData_4.UDData_Data AS UserDefinable4, 
                      UDData_5.UDData_Data AS UserDefinable5, UDData_6.UDData_Data AS UserDefinable6, 
                      dbo.Allocation_Outstanding.Purchase_Enquiry_Raised AS [Purchase Enquiry Raised], dbo.Part_Status.Part_Status AS [Part Status], dbo.INDUSTRY.Industry, 
                      dbo.Allocation_Outstanding.Qty - dbo.Allocation_Outstanding.[Qty Processed] AS Outstanding, 
                      dbo.SALES_ORDER_LINE_STATUS.Sales_Order_line_Status AS [SO Line Status], dbo.Sales_Order_Lines.Priority AS [SO Priority], dbo.SO_Delivery_Schedule.Firm, 
                      dbo.SO_Delivery_Schedule.Dispatch_Date AS [Dispatch Date], dbo.SALES_ORDERS.Customers_PO AS [Customer PO]
FROM         dbo.SO_Delivery_Schedule RIGHT OUTER JOIN
                      dbo.Allocation_Outstanding ON dbo.Allocation_Outstanding.SO_Delivery_Schedule_id = dbo.SO_Delivery_Schedule.SO_Delivery_Schedule_ID LEFT OUTER JOIN
                      dbo.SALES_ORDERS LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.SALES_ORDERS.Customers_ID__Companys = dbo.COMPANYS.Company_Id RIGHT OUTER JOIN
                      dbo.SALES_ORDER_LINE_STATUS RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines ON 
                      dbo.SALES_ORDER_LINE_STATUS.Sales_order_line_Status_Id = dbo.Sales_Order_Lines.Status__Sales_Order_Line_Status_Id LEFT OUTER JOIN
                      dbo.INDUSTRY ON dbo.Sales_Order_Lines.Industry__INDUSTRY_ID = dbo.INDUSTRY.Industry_Id ON 
                      dbo.SALES_ORDERS.SALES_ORDERS_ID = dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID ON 
                      dbo.Allocation_Outstanding.SO__Sales_Order_Line_id = dbo.Sales_Order_Lines.Sales_Order_Lines_ID RIGHT OUTER JOIN
                      dbo.Parts_Required_2 LEFT OUTER JOIN
                      dbo.UDData AS UDData_3 RIGHT OUTER JOIN
                      dbo.Part LEFT OUTER JOIN
                      dbo.UDData AS UDData_6 ON UDData_6.UDData_ID = dbo.Part.UDF6__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_5 ON dbo.Part.UDF5__UDData_ID = UDData_5.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_4 ON dbo.Part.UDF4__UDData_ID = UDData_4.UDData_ID ON dbo.Part.UDF3__UDData_ID = UDData_3.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON UDData_2.UDData_ID = dbo.Part.UDF2__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON dbo.Part.UDF1__UDData_ID = UDData_1.UDData_ID LEFT OUTER JOIN
                      dbo.Part_Status ON dbo.Part.Status__Part_status_id = dbo.Part_Status.Part_Status_id ON dbo.Parts_Required_2.Part_Id = dbo.Part.Part_Id ON 
                      dbo.Parts_Required_2.Part_Id = dbo.Allocation_Outstanding.Part__Part_Id
WHERE     (dbo.Allocation_Outstanding.Type IS NULL) AND (dbo.Allocation_Outstanding.Released = 0) AND (dbo.Parts_Required_2.Type__Part_Type_Id = 1 OR
                      dbo.Parts_Required_2.Type__Part_Type_Id = 6 OR
                      dbo.Parts_Required_2.Type__Part_Type_Id = 9 OR
                      dbo.Parts_Required_2.Type__Part_Type_Id = 10 OR
                      dbo.Parts_Required_2.Type__Part_Type_Id = 11 OR
                      dbo.Parts_Required_2.Type__Part_Type_Id = 12) OR
                      (dbo.Allocation_Outstanding.Type = ''Manufactured'') AND (dbo.Allocation_Outstanding.Released = 0)
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Work_Orders_Required_With_Parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "SO_Delivery_Schedule"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Allocation_Outstanding"
            Begin Extent = 
               Top = 114
               Left = 38
               Bottom = 222
               Right = 242
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDERS"
            Begin Extent = 
               Top = 222
               Left = 38
               Bottom = 330
               Right = 273
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 330
               Left = 38
               Bottom = 438
               Right = 341
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDER_LINE_STATUS"
            Begin Extent = 
               Top = 438
               Left = 38
               Bottom = 546
               Right = 250
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines"
            Begin Extent = 
               Top = 546
               Left = 38
               Bottom = 654
               Right = 311
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "INDUSTRY"
            Begin Extent = 
               Top = 6
               Left = 285
               Bottom = 114
               Rig' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Work_Orders_Required_With_Parts'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Work_Orders_Required_With_Parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'ht = 436
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Parts_Required_2"
            Begin Extent = 
               Top = 114
               Left = 280
               Bottom = 222
               Right = 462
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_3"
            Begin Extent = 
               Top = 438
               Left = 288
               Bottom = 546
               Right = 455
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 654
               Left = 38
               Bottom = 762
               Right = 290
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_6"
            Begin Extent = 
               Top = 762
               Left = 38
               Bottom = 870
               Right = 205
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_5"
            Begin Extent = 
               Top = 762
               Left = 243
               Bottom = 870
               Right = 410
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_4"
            Begin Extent = 
               Top = 870
               Left = 38
               Bottom = 978
               Right = 205
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_2"
            Begin Extent = 
               Top = 870
               Left = 243
               Bottom = 978
               Right = 410
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_1"
            Begin Extent = 
               Top = 978
               Left = 38
               Bottom = 1086
               Right = 205
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part_Status"
            Begin Extent = 
               Top = 978
               Left = 243
               Bottom = 1071
               Right = 447
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 64
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Work_Orders_Required_With_Parts'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane3' , N'SCHEMA',N'dbo', N'VIEW',N'Work_Orders_Required_With_Parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane3', @value=N'1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Work_Orders_Required_With_Parts'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Work_Orders_Required_With_Parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=3 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Work_Orders_Required_With_Parts'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_Flat_BOM_Manu_dRoute]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_Flat_BOM_Manu_dRoute]
AS
SELECT     dbo.Part_Flat_Bom_Temp.*, dbo.Part.Type__Part_Type_Id AS Part_Type, dbo.Route_versions.[Default] AS Default_Route, dbo.Part.Part_No AS Part_No,
                       dbo.Work_Orders_Required.[For Contract No] AS Contract_No, dbo.Work_Orders_Required.[For WO] AS WO_No, 
                      dbo.Part.Required AS Total_Part_Required, dbo.Part.In_Stock AS Total_Part_In_Stock, dbo.Part.On_Order AS Total_Part_On_Order, 
                      dbo.Route.Op_No_Val AS Op_No_Val, dbo.Process.Abbreviation AS [Process_Abbrev.], dbo.Route.Run_Time AS Run_Time, 
                      dbo.Route.Setup_Time AS Setup_Time, dbo.Process.Process_Id AS Process_ID, dbo.Process.Process_Name AS Process_Name, 
                      dbo.Route.Deleted AS Route_Deleted
FROM         dbo.Process RIGHT OUTER JOIN
                      dbo.Route ON dbo.Process.Process_Id = dbo.Route.Process__Process_id RIGHT OUTER JOIN
                      dbo.Route_versions ON dbo.Route.Route_Version__Route_Versions_id = dbo.Route_versions.Route_Versions_id RIGHT OUTER JOIN
                      dbo.Part_Flat_Bom_Temp LEFT OUTER JOIN
                      dbo.Part ON dbo.Part_Flat_Bom_Temp.BomPart__Part_ID = dbo.Part.Part_Id LEFT OUTER JOIN
                      dbo.Work_Orders_Required ON dbo.Part_Flat_Bom_Temp.From__Allocations_ID = dbo.Work_Orders_Required.Allocations_ID ON 
                      dbo.Route_versions.For_Part__Part_id = dbo.Part.Part_Id
WHERE     (dbo.Part.Type__Part_Type_Id = 1) AND (dbo.Route_versions.[Default] = 1)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_orders_list_with_parts]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Sales_orders_list_with_parts]
AS
SELECT     TOP (100) PERCENT dbo.Sales_orders_list.SALES_ORDERS_ID, dbo.Sales_orders_list.[Sales No], dbo.Sales_orders_list.[Company No], 
                      dbo.Sales_orders_list.Customer, dbo.Sales_orders_list.Contact, dbo.Sales_orders_list.[SO Date], dbo.Sales_orders_list.[Customers PO], 
                      dbo.Sales_orders_list.SalesPerson, dbo.Sales_orders_list.[End User], dbo.Sales_orders_list.Industry, dbo.Sales_orders_list.Acknowledged, 
                      dbo.Sales_orders_list.[PO date], dbo.Sales_orders_list.Address1, dbo.Sales_orders_list.Address2, dbo.Sales_orders_list.Address3, dbo.Sales_orders_list.Town, 
                      dbo.Sales_orders_list.Country, dbo.Sales_orders_list.Postcode, dbo.Sales_orders_list.[SO Status], dbo.Sales_orders_list.Notes, 
                      dbo.Sales_orders_list.[Company Area], dbo.Sales_orders_list.Customers_ID__Companys, dbo.Sales_orders_list.Currency, dbo.Sales_orders_list.[Created By], 
                      dbo.Sales_orders_list.[Created Date], dbo.Sales_orders_list.[Internal Notes], dbo.Sales_orders_list.[First Order], dbo.Sales_orders_list.[On Hold], 
                      dbo.Sales_orders_list.Telephone, dbo.Sales_orders_list.UserDefinable1, dbo.Sales_orders_list.UserDefinable2, dbo.Sales_orders_list.UserDefinable3, 
                      dbo.Sales_orders_list.UserDefinable4, dbo.Sales_orders_list.UserDefinable5, dbo.Sales_orders_list.UserDefinable6, dbo.Sales_orders_list.[End User Contact], 
                      dbo.Sales_orders_list.[Total Exc Vat], dbo.Sales_orders_list.[Total Vat], dbo.Sales_orders_list.[Total Inc Vat], dbo.Sales_Order_Lines.Contract_No AS [Contract No], 
                      dbo.Sales_Order_Lines.Blanket, dbo.Sales_Order_Lines.Delivery_Date AS [Delivery Date], dbo.Sales_Order_Lines.Dispatch_Date AS [Despatch Date], 
                      dbo.Sales_Order_Lines.Scheduled, dbo.Sales_Order_Lines.Standard, dbo.Sales_Order_Lines.Total_Qty AS [Total Qty], dbo.Part.Description, 
                      dbo.Part.Part_No AS [Part No], dbo.SALES_ORDER_LINE_STATUS.Sales_Order_line_Status AS [Line Status], dbo.Group_Code.Group_Code AS [Group Code], 
                      UDData_1.UDData_Data AS PartUserDefinable1, UDData_2.UDData_Data AS PartUserDefinable2, UDData_3.UDData_Data AS PartUserDefinable3, 
                      UDData_4.UDData_Data AS PartUserDefinable4, UDData_5.UDData_Data AS PartUserDefinable5, UDData_6.UDData_Data AS PartUserDefinable6, 
                      dbo.Sales_Order_Lines.Gross_Price AS [Gross Price], dbo.Sales_Order_Lines.Price, dbo.Sales_Order_Lines.Total, 
                      dbo.Sales_Order_Lines.System_Price AS [System Price], dbo.Sales_Order_Lines.Qty_Invoiced AS [Qty Invoiced], 
                      dbo.Sales_Order_Lines.Qty_Processed AS [Qty Processed], dbo.Sales_Order_Lines.Qty_Returned AS [Qty Returned], 
                      dbo.Sales_Order_Lines.Qty_Credited AS [Qty Credited], dbo.Sales_Order_Lines.Priority, dbo.Sales_Order_Lines.Notes_non_rtf AS [Line Notes], 
                      dbo.Sales_Order_Lines.Requested_Date AS [Requested Date], dbo.UOM_From_Conversion_Id.Unit_of_Measure AS UOM, 
                      dbo.Sales_Order_Lines.Qty_Delivered AS [Qty Delivered], dbo.Sales_Order_Lines.Sales_Order_Lines_ID AS [Line Id], dbo.Sales_Order_Lines.Qty, 
                      dbo.Sales_Order_Lines.Date_Complete AS [Date Complete], dbo.Part_type.Part_type AS [Part Type], dbo.Quote_Line_Qty.Reference AS [Quote No], 
                      dbo.Sales_Order_Lines.Projected_Value AS [Projected Value], dbo.Sales_Order_Lines.Current__Part_Analysis_ID, 
                      dbo.Sales_Order_Lines.Scheduled_Complete_Date AS [Scheduled Complete Date], dbo.Sales_Order_Lines.Breadth_Ordered AS Breadth, 
                      dbo.Sales_Order_Lines.Length_Ordered AS Length, dbo.Sales_Order_Lines.Week_No AS [Week No], UDData_7.UDData_Data AS [SOL UserDefinable1], 
                      UDData_8.UDData_Data AS [SOL UserDefinable2], UDData_9.UDData_Data AS [SOL UserDefinable3], UDData_10.UDData_Data AS [SOL UserDefinable4], 
                      UDData_11.UDData_Data AS [SOL UserDefinable5], UDData_12.UDData_Data AS [SOL UserDefinable6], dbo.LOCATION.Location, 
                      dbo.Sales_Order_Lines.modified AS [Last Modified], dbo.Supplier_Part.Supplier_Part_No AS [Alias Part No], 
                      dbo.Sales_Order_Lines.Packing_Qty AS [Contract Packing Qty], dbo.Part.Packing_Qty AS [Part Packing Qty], dbo.Sales_Order_Lines.On_Hire AS [On Hire], 
                      dbo.Part.In_Stock AS [In Stock], dbo.Sales_Order_Lines.On_Hold AS [SOL On Hold], dbo.Sales_Order_Lines.Run_No AS [Run No], 
                      dbo.Sales_Order_Lines.Item_No AS [Item No], dbo.Sales_Order_Lines.Can_Deliver AS [Can Deliver Contract], dbo.Sales_orders_list.Can_Deliver AS [Can Deliver SO], 
                      dbo.Sales_orders_list.Contract_Reviewed AS [Contract Reviewed], dbo.Part.On_Order AS [On Order], dbo.Part.Required
FROM         dbo.Sales_orders_list LEFT OUTER JOIN
                      dbo.Quote_Line_Qty RIGHT OUTER JOIN
                      dbo.UDData AS UDData_7 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_9 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_10 RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines LEFT OUTER JOIN
                      dbo.Supplier_Part ON dbo.Sales_Order_Lines.Alias__Supplier_Part_ID = dbo.Supplier_Part.Supplier_part_id LEFT OUTER JOIN
                      dbo.UDData AS UDData_12 ON dbo.Sales_Order_Lines.UDF6__UDData_ID = UDData_12.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_11 ON dbo.Sales_Order_Lines.UDF5__UDData_ID = UDData_11.UDData_ID ON 
                      UDData_10.UDData_ID = dbo.Sales_Order_Lines.UDF4__UDData_ID ON UDData_9.UDData_ID = dbo.Sales_Order_Lines.UDF3__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_8 ON dbo.Sales_Order_Lines.UDF2__UDData_ID = UDData_8.UDData_ID ON 
                      UDData_7.UDData_ID = dbo.Sales_Order_Lines.UDF1__UDData_ID ON 
                      dbo.Quote_Line_Qty.Quote_Line_qty_id = dbo.Sales_Order_Lines.Quote__Quote_Line_qty_Id LEFT OUTER JOIN
                      dbo.UOM_From_Conversion_Id ON dbo.Sales_Order_Lines.UOM__Conversion_Id = dbo.UOM_From_Conversion_Id.Conversion_Id LEFT OUTER JOIN
                      dbo.SALES_ORDER_LINE_STATUS ON 
                      dbo.Sales_Order_Lines.Status__Sales_Order_Line_Status_Id = dbo.SALES_ORDER_LINE_STATUS.Sales_order_line_Status_Id ON 
                      dbo.Sales_orders_list.SALES_ORDERS_ID = dbo.Sales_Order_Lines.Sales_Order_Id__Sales_Orders_ID LEFT OUTER JOIN
                      dbo.Group_Code RIGHT OUTER JOIN
                      dbo.UDData AS UDData_1 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_3 RIGHT OUTER JOIN
                      dbo.Part LEFT OUTER JOIN
                      dbo.UDData AS UDData_5 ON dbo.Part.UDF5__UDData_ID = UDData_5.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_4 ON dbo.Part.UDF4__UDData_ID = UDData_4.UDData_ID ON UDData_3.UDData_ID = dbo.Part.UDF3__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON dbo.Part.UDF2__UDData_ID = UDData_2.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_6 ON dbo.Part.UDF6__UDData_ID = UDData_6.UDData_ID ON UDData_1.UDData_ID = dbo.Part.UDF1__UDData_ID LEFT OUTER JOIN
                      dbo.LOCATION ON dbo.Part.Preferred_Location__Location_id = dbo.LOCATION.Location_id LEFT OUTER JOIN
                      dbo.Part_type ON dbo.Part.Type__Part_Type_Id = dbo.Part_type.part_type_id ON dbo.Group_Code.Groupcode_Id = dbo.Part.Groupcode__Groupcode_id ON 
                      dbo.Sales_Order_Lines.Part_Id__Part_Id = dbo.Part.Part_Id
WHERE     (NOT (dbo.Part.Part_No IS NULL))
ORDER BY dbo.Sales_orders_list.SALES_ORDERS_ID DESC
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Sales_orders_list_with_parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[24] 4[38] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -1056
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Sales_orders_list"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 257
            End
            DisplayFlags = 280
            TopColumn = 43
         End
         Begin Table = "Quote_Line_Qty"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 350
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_7"
            Begin Extent = 
               Top = 6
               Left = 295
               Bottom = 125
               Right = 471
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_9"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 365
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_10"
            Begin Extent = 
               Top = 246
               Left = 252
               Bottom = 365
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines"
            Begin Extent = 
               Top = 366
               Left = 38
               Bottom = 485
               Right = 320
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Supplier_Part"
            Begin Extent = 
               Top = 486
               Left = 38
               Bottom = 605
               Right = 265
        ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Sales_orders_list_with_parts'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Sales_orders_list_with_parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'    End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_12"
            Begin Extent = 
               Top = 606
               Left = 38
               Bottom = 725
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_11"
            Begin Extent = 
               Top = 606
               Left = 252
               Bottom = 725
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_8"
            Begin Extent = 
               Top = 726
               Left = 38
               Bottom = 845
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UOM_From_Conversion_Id"
            Begin Extent = 
               Top = 486
               Left = 303
               Bottom = 590
               Right = 474
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDER_LINE_STATUS"
            Begin Extent = 
               Top = 726
               Left = 252
               Bottom = 845
               Right = 473
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Group_Code"
            Begin Extent = 
               Top = 846
               Left = 38
               Bottom = 965
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_1"
            Begin Extent = 
               Top = 966
               Left = 38
               Bottom = 1085
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_3"
            Begin Extent = 
               Top = 966
               Left = 252
               Bottom = 1085
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 1086
               Left = 38
               Bottom = 1205
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 44
         End
         Begin Table = "UDData_5"
            Begin Extent = 
               Top = 1206
               Left = 38
               Bottom = 1325
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_4"
            Begin Extent = 
               Top = 1206
               Left = 252
               Bottom = 1325
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_2"
            Begin Extent = 
               Top = 1326
               Left = 38
               Bottom = 1445
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_6"
            Begin Extent = 
               Top = 1326
               Left = 252
               Bottom = 1445
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "LOCATION"
            Begin Extent = 
               Top = 1446
               Left = 38
               Bottom = 1565
               Right = 247
            End
        ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Sales_orders_list_with_parts'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane3' , N'SCHEMA',N'dbo', N'VIEW',N'Sales_orders_list_with_parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane3', @value=N'    DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part_type"
            Begin Extent = 
               Top = 1446
               Left = 285
               Bottom = 1535
               Right = 445
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 2850
         Alias = 1425
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Sales_orders_list_with_parts'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Sales_orders_list_with_parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=3 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Sales_orders_list_with_parts'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Delivery_list_With_Parts]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Delivery_list_With_Parts]
AS
SELECT     dbo.Delivery_List.Delivery_ID, dbo.Delivery_List.[Advice No], dbo.Delivery_List.[Date Raised], dbo.Delivery_List.[Date Sent], dbo.Delivery_List.[Total Items], 
                      dbo.Delivery_List.[Total Weight], dbo.Delivery_List.[Company No], dbo.Delivery_List.Company, dbo.Delivery_List.Address1, dbo.Delivery_List.Address2, 
                      dbo.Delivery_List.Address3, dbo.Delivery_List.Country, dbo.Delivery_List.Status, dbo.Delivery_List.Company_Id, dbo.Delivery_List.[Raised By], 
                      dbo.Delivery_List.[Packing Description], dbo.Delivery_List.Postcode, dbo.Delivery_List.Town, dbo.Delivery_List.Notes, dbo.Delivery_List.UserDefinable1, 
                      dbo.Delivery_List.UserDefinable2, dbo.Delivery_List.UserDefinable3, dbo.Delivery_List.UserDefinable4, dbo.Delivery_List.UserDefinable5, 
                      dbo.Delivery_List.UserDefinable6, dbo.Delivery_List.Address__Company_Addess_id, dbo.Delivery_List.Status__Delivery_Status_id, 
                      dbo.Delivery_List.[Packing Only], dbo.Delivery_Item.Delivery_Item_ID, dbo.Delivery_Item.Deleted, dbo.Delivery_Item.Ref, 
                      dbo.Delivery_Item.Requested_Qty AS [Requested Qty], dbo.Delivery_Item.Qty AS [Stock Qty], dbo.Part.Part_No AS [Part No], 
                      Sales_Order_Lines_1.Contract_No AS [Contract No], dbo.Part.Description, Sales_Order_Lines_1.Sales_Order_Lines_ID AS [SO Line ID], dbo.Part.Part_Id, 
                      dbo.Delivery_Item.Transaction_UOM__Conversion_id AS Transaction_UOM_Conversion_Id, dbo.Delivery_Item.Qty_Invoiced AS [Qty Invoiced], 
                      dbo.Delivery_Item_Status.Delivery_Status AS [Line Status], dbo.Delivery_Item.Notes_Non_Rtf AS [Line Notes], 
                      Sales_Order_Lines_1.Delivery_Date AS [SO Delivery Date], Sales_Order_Lines_1.Dispatch_Date AS [SO Dispatch Date], 
                      Sales_Order_Lines_1.Requested_Date AS [SO Requested Date], dbo.Nominals.Nominal, Sales_Order_Lines_1.CofC_Required AS [CofC Required], 
                      dbo.Delivery_Item.Has_CofC AS CofC, dbo.Part.In_Stock AS [In Stock], Sales_Order_Lines_1.On_Hire AS [On Hire], dbo.WORK_ORDERS.WO_No AS [WO No], 
                      dbo.SALES_ORDERS.Customers_PO AS [Customers PO], dbo.INDUSTRY.Industry, dbo.Group_Code.Group_Code AS [Group Code], dbo.Part.Wieght AS Weight, 
                      dbo.Part_type.Part_type AS [Part Type], dbo.COMPANY_AREA.Area, dbo.Delivery_Item.Qty_Returned, dbo.SALES_ORDERS.Sales_No AS [Sales No], 
                      dbo.Delivery_Item.Issue_Qty AS [Issue Qty], dbo.Delivery_Item.Qty_entered AS [Qty Entered], dbo.SALES_ORDERS.SALES_ORDERS_ID AS [Sales Order ID], 
                      dbo.Sales_Order_Lines.Qty AS [Kit Qty], dbo.Sales_Order_Lines.Qty_Invoiced AS [Kit Qty Invoiced], UDData_1.UDData_Data AS [SO UD Data 1], 
                      dbo.UDData.UDData_Data AS [SO UD Data 2], UDData_2.UDData_Data AS [SO UD Data 3], UDData_3.UDData_Data AS [SO UD Data 4], 
                      UDData_4.UDData_Data AS [SO UD Data 5], UDData_5.UDData_Data AS [SO UD Data 6], dbo.Delivery_Item.Line_Scanned
FROM         dbo.Nominals RIGHT OUTER JOIN
                      dbo.Group_Code RIGHT OUTER JOIN
                      dbo.Part_type RIGHT OUTER JOIN
                      dbo.Part ON dbo.Part_type.part_type_id = dbo.Part.Type__Part_Type_Id ON dbo.Group_Code.Groupcode_Id = dbo.Part.Groupcode__Groupcode_id ON 
                      dbo.Nominals.Nominal_ID = dbo.Part.Sales_nom__Nominal_id RIGHT OUTER JOIN
                      dbo.COMPANY_AREA RIGHT OUTER JOIN
                      dbo.INDUSTRY RIGHT OUTER JOIN
                      dbo.COMPANYS ON dbo.INDUSTRY.Industry_Id = dbo.COMPANYS.CoyType__type_id ON 
                      dbo.COMPANY_AREA.Area_Id = dbo.COMPANYS.CoyArea__area_id RIGHT OUTER JOIN
                      dbo.Delivery_List ON dbo.COMPANYS.Company_Id = dbo.Delivery_List.Company_Id LEFT OUTER JOIN
                      dbo.Delivery_Item_Status RIGHT OUTER JOIN
                      dbo.Delivery_Item LEFT OUTER JOIN
                      dbo.WORK_ORDERS ON dbo.Delivery_Item.WO__WO_Id = dbo.WORK_ORDERS.WORK_ORDERS_ID ON 
                      dbo.Delivery_Item_Status.Delivery_Item_Status_ID = dbo.Delivery_Item.Status__Delivery_item_Status_id ON 
                      dbo.Delivery_List.Delivery_ID = dbo.Delivery_Item.Delivery__Delivery_id ON dbo.Part.Part_Id = dbo.Delivery_Item.Part__Part_id LEFT OUTER JOIN
                      dbo.Sales_Order_Lines RIGHT OUTER JOIN
                      dbo.Sales_Order_Lines AS Sales_Order_Lines_1 ON dbo.Sales_Order_Lines.Sales_Order_Lines_ID = Sales_Order_Lines_1.Top_Level_SOL_ID LEFT OUTER JOIN
                      dbo.UDData RIGHT OUTER JOIN
                      dbo.UDData AS UDData_4 RIGHT OUTER JOIN
                      dbo.UDData AS UDData_5 RIGHT OUTER JOIN
                      dbo.SALES_ORDERS ON UDData_5.UDData_ID = dbo.SALES_ORDERS.UDF6__UDData_ID ON 
                      UDData_4.UDData_ID = dbo.SALES_ORDERS.UDF5__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_3 ON dbo.SALES_ORDERS.UDF4__UDData_ID = UDData_3.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_2 ON dbo.SALES_ORDERS.UDF3__UDData_ID = UDData_2.UDData_ID ON 
                      dbo.UDData.UDData_ID = dbo.SALES_ORDERS.UDF2__UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON dbo.SALES_ORDERS.UDF1__UDData_ID = UDData_1.UDData_ID ON 
                      Sales_Order_Lines_1.Sales_Order_Id__Sales_Orders_ID = dbo.SALES_ORDERS.SALES_ORDERS_ID ON 
                      dbo.Delivery_Item.Contract__SO_Item_id = Sales_Order_Lines_1.Sales_Order_Lines_ID
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Delivery_list_With_Parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -768
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Nominals"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 295
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Group_Code"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part_type"
            Begin Extent = 
               Top = 246
               Left = 38
               Bottom = 335
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Part"
            Begin Extent = 
               Top = 336
               Left = 38
               Bottom = 455
               Right = 299
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANY_AREA"
            Begin Extent = 
               Top = 456
               Left = 38
               Bottom = 575
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "INDUSTRY"
            Begin Extent = 
               Top = 456
               Left = 236
               Bottom = 575
               Right = 396
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "COMPANYS"
            Begin Extent = 
               Top = 576
               Left = 38
               Bottom = 695
               Right = 350
            End
            Display' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Delivery_list_With_Parts'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'Delivery_list_With_Parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'Flags = 280
            TopColumn = 0
         End
         Begin Table = "Delivery_List"
            Begin Extent = 
               Top = 696
               Left = 38
               Bottom = 815
               Right = 278
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Delivery_Item_Status"
            Begin Extent = 
               Top = 246
               Left = 236
               Bottom = 335
               Right = 446
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Delivery_Item"
            Begin Extent = 
               Top = 816
               Left = 38
               Bottom = 935
               Right = 303
            End
            DisplayFlags = 280
            TopColumn = 43
         End
         Begin Table = "WORK_ORDERS"
            Begin Extent = 
               Top = 936
               Left = 38
               Bottom = 1055
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines"
            Begin Extent = 
               Top = 1056
               Left = 38
               Bottom = 1175
               Right = 320
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Sales_Order_Lines_1"
            Begin Extent = 
               Top = 1176
               Left = 38
               Bottom = 1295
               Right = 320
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData"
            Begin Extent = 
               Top = 1254
               Left = 572
               Bottom = 1373
               Right = 748
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_4"
            Begin Extent = 
               Top = 1411
               Left = 560
               Bottom = 1530
               Right = 736
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_5"
            Begin Extent = 
               Top = 1374
               Left = 750
               Bottom = 1493
               Right = 926
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SALES_ORDERS"
            Begin Extent = 
               Top = 1348
               Left = 40
               Bottom = 1467
               Right = 284
            End
            DisplayFlags = 280
            TopColumn = 51
         End
         Begin Table = "UDData_3"
            Begin Extent = 
               Top = 1412
               Left = 349
               Bottom = 1531
               Right = 525
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_2"
            Begin Extent = 
               Top = 1254
               Left = 786
               Bottom = 1373
               Right = 962
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "UDData_1"
            Begin Extent = 
               Top = 1254
               Left = 358
               Bottom = 1373
               Right = 534
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 71
         Width = 284
         Width = 1500
        ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Delivery_list_With_Parts'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane3' , N'SCHEMA',N'dbo', N'VIEW',N'Delivery_list_With_Parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane3', @value=N' Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 1380
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Delivery_list_With_Parts'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Delivery_list_With_Parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=3 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Delivery_list_With_Parts'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Stock_Building_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Stock_Building_List]
AS
SELECT dbo.LOCATION.Location, dbo.Building.Building, dbo.Building.Building_Id, dbo.Stock_List.Stock_ID, dbo.Stock_List.[Batch no], dbo.Stock_List.Breadth, 
               dbo.Stock_List.[Cast Heat No], dbo.Stock_List.Cost, dbo.Stock_List.[Date In], dbo.Stock_List.From_WO__WO_id, dbo.Stock_List.[WO Part Revision], 
               dbo.Stock_List.Grn__Grn_id, dbo.Stock_List.Length, dbo.Stock_List.Location__location_id, dbo.Stock_List.Notes, dbo.Stock_List.[Original Batch], 
               dbo.Stock_List.OriginalQty, dbo.Stock_List.Part__Part_Id, dbo.Stock_List.Qty, dbo.Stock_List.[Qty Allocated], dbo.Stock_List.[Qty Available], 
               dbo.Stock_List.[Serial no], dbo.Stock_List.[Total Qty], dbo.Stock_List.[Use By Date], dbo.Stock_List.Status, dbo.Stock_List.[Part No], dbo.Stock_List.Description, 
               dbo.Stock_List.[Equivalent Size], dbo.Stock_List.[Kilos UOM], dbo.Stock_List.[Part Type], dbo.Stock_List.[On Order], dbo.Stock_List.Supplier__Company_id, 
               dbo.Stock_List.[Grn No], dbo.Stock_List.[Group Code], dbo.Stock_List.WDV, dbo.Stock_List.[Manufactured On], dbo.Stock_List.Capacity, dbo.Stock_List.Category, 
               dbo.Stock_List.UserDefinable1, dbo.Stock_List.UserDefinable2, dbo.Stock_List.UserDefinable3, dbo.Stock_List.UserDefinable4, dbo.Stock_List.UserDefinable5, 
               dbo.Stock_List.UserDefinable6, dbo.Stock_List.[Part Description On Receipt], dbo.Stock_List.[On Hire], dbo.Stock_List.[PO No], dbo.Stock_List.[PO Part Revision], 
               dbo.Stock_List.[Third Party Results], dbo.Stock_List.[Third Party Results Two], dbo.Stock_List.[Consignment Stock], dbo.Stock_List.[Avg Length], 
               dbo.Stock_List.[Cost Per Tonne], dbo.Stock_List.[Bars Remaining], dbo.Stock_List.[Cost Per Bar], dbo.Stock_List.Feet, dbo.Stock_List.Original__Stock_ID, 
               dbo.Stock_List.Kilos, dbo.Stock_List.[Qty Remaining], dbo.Stock_List.[Cost UOM], dbo.Stock_List.Supplier, dbo.Stock_List.Specification, 
               dbo.Stock_List.Required
FROM  dbo.Building RIGHT OUTER JOIN
               dbo.Stock_List LEFT OUTER JOIN
               dbo.LOCATION ON dbo.Stock_List.Location__location_id = dbo.LOCATION.Location_id ON dbo.Building.Building_Id = dbo.LOCATION.Building__Building_id
WHERE (dbo.Building.Building_Id > 0)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[On_Hire_List]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[On_Hire_List]
AS
SELECT     dbo.On_Hire.On_Hire_ID, dbo.Sales_Order_Lines_List.[Part No], dbo.Stock.Serial_no, dbo.LOCATION.Location, dbo.Sales_Order_Lines_List.Customer, 
                      dbo.On_Hire.Date_Out, dbo.On_Hire.Date_Returned, dbo.On_Hire.Total_Days, dbo.On_Hire.Last_Invoiced_Date, dbo.On_Hire.Status, 
                      dbo.Sales_Order_Lines_List.[Contract No], dbo.Sales_Order_Lines_List.Sales_Order_Lines_ID, dbo.Sales_Order_Lines_List.Total, 
                      dbo.Sales_Order_Lines_List.[Vat Amount], dbo.Sales_Order_Lines_List.UOM
FROM         dbo.LOCATION RIGHT OUTER JOIN
                      dbo.On_Hire ON dbo.LOCATION.Location_id = dbo.On_Hire.Location LEFT OUTER JOIN
                      dbo.Stock ON dbo.On_Hire.SerialNo = dbo.Stock.Stock_ID LEFT OUTER JOIN
                      dbo.Sales_Order_Lines_List ON dbo.On_Hire.SalesOrderLine = dbo.Sales_Order_Lines_List.Sales_Order_Lines_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[AccountsCompanyBalance]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[AccountsCompanyBalance]
AS
SELECT     TOP 100 PERCENT dbo.AccountsCompanyBalanceTemp.Company__COMPANYS_ID, dbo.AccountsCompanyBalanceTemp.TotalCredit, 
                      dbo.AccountsCompanyBalanceTemp.TotalDebit, dbo.AccountsCompanyBalanceTemp.Balance, dbo.COMPANYS.Company_No, 
                      dbo.COMPANYS.Name
FROM         dbo.AccountsCompanyBalanceTemp LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.AccountsCompanyBalanceTemp.Company__COMPANYS_ID = dbo.COMPANYS.Company_Id
ORDER BY dbo.AccountsCompanyBalanceTemp.Company__COMPANYS_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Sales_Ledger]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Sales_Ledger]
AS
SELECT     dbo.COMPANYS.Company_Id, dbo.COMPANYS.Company_No AS CustomerAccNo, dbo.COMPANYS.SupplierAccNo, dbo.COMPANYS.Name, 
                      dbo.COMPANYS.Customer, dbo.COMPANYS.Supplier, dbo.Company_Balance.Currency, dbo.Company_Balance.[Currency Balance], 
                      dbo.Company_Balance.Balance, dbo.Company_Balance.[Currency OverDue], dbo.Company_Balance.OverDue, 
                      dbo.COMPANYS.CreditStatus AS [On Hold], dbo.COMPANYS.Address1, dbo.COMPANYS.Address2, dbo.COMPANYS.Address3, dbo.COMPANYS.Country, 
                      dbo.COMPANYS.Postcode
FROM         dbo.COMPANYS LEFT OUTER JOIN
                      dbo.Company_Balance ON dbo.COMPANYS.Company_Id = dbo.Company_Balance.Company__COMPANYS_ID
WHERE     (dbo.COMPANYS.Customer = 1)
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_List_With_Weekly_Balances]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_List_With_Weekly_Balances]
AS
SELECT     dbo.Part.Part_Id, dbo.Part.Part_No, dbo.Part.Description, dbo.Group_Code.Group_Code AS [Group Code], dbo.COMPANYS.Name AS [Preferred Supplier], 
                      dbo.Part.In_Stock AS [In Stock], dbo.Part.On_Order AS [On Order], dbo.Part.Required, dbo.Part.Re_Order AS [Re Order Level], dbo.Part.Min_Order AS [Min Order], 
                      dbo.Part.Recomended_Order AS [R.O.Q.], dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 AS W1, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 AS W2, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 AS W3, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       AS W4, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 AS W5, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 + dbo.Part_List_Weekly_Balance.W6 AS W6, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 + dbo.Part_List_Weekly_Balance.W6 + dbo.Part_List_Weekly_Balance.W7 AS W7, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 + dbo.Part_List_Weekly_Balance.W6 + dbo.Part_List_Weekly_Balance.W7 + dbo.Part_List_Weekly_Balance.W8 AS W8, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 + dbo.Part_List_Weekly_Balance.W6 + dbo.Part_List_Weekly_Balance.W7 + dbo.Part_List_Weekly_Balance.W8 + dbo.Part_List_Weekly_Balance.W9
                       AS W9, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 + dbo.Part_List_Weekly_Balance.W6 + dbo.Part_List_Weekly_Balance.W7 + dbo.Part_List_Weekly_Balance.W8 + dbo.Part_List_Weekly_Balance.W9
                       + dbo.Part_List_Weekly_Balance.W10 AS W10, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 + dbo.Part_List_Weekly_Balance.W6 + dbo.Part_List_Weekly_Balance.W7 + dbo.Part_List_Weekly_Balance.W8 + dbo.Part_List_Weekly_Balance.W9
                       + dbo.Part_List_Weekly_Balance.W10 + dbo.Part_List_Weekly_Balance.W11 AS W11, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 + dbo.Part_List_Weekly_Balance.W6 + dbo.Part_List_Weekly_Balance.W7 + dbo.Part_List_Weekly_Balance.W8 + dbo.Part_List_Weekly_Balance.W9
                       + dbo.Part_List_Weekly_Balance.W10 + dbo.Part_List_Weekly_Balance.W11 + dbo.Part_List_Weekly_Balance.W12 AS W12, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 + dbo.Part_List_Weekly_Balance.W6 + dbo.Part_List_Weekly_Balance.W7 + dbo.Part_List_Weekly_Balance.W8 + dbo.Part_List_Weekly_Balance.W9
                       + dbo.Part_List_Weekly_Balance.W10 + dbo.Part_List_Weekly_Balance.W11 + dbo.Part_List_Weekly_Balance.W12 + dbo.Part_List_Weekly_Balance.W13 AS W13, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 + dbo.Part_List_Weekly_Balance.W6 + dbo.Part_List_Weekly_Balance.W7 + dbo.Part_List_Weekly_Balance.W8 + dbo.Part_List_Weekly_Balance.W9
                       + dbo.Part_List_Weekly_Balance.W10 + dbo.Part_List_Weekly_Balance.W11 + dbo.Part_List_Weekly_Balance.W12 + dbo.Part_List_Weekly_Balance.W13 + dbo.Part_List_Weekly_Balance.W14
                       AS W14, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 + dbo.Part_List_Weekly_Balance.W6 + dbo.Part_List_Weekly_Balance.W7 + dbo.Part_List_Weekly_Balance.W8 + dbo.Part_List_Weekly_Balance.W9
                       + dbo.Part_List_Weekly_Balance.W10 + dbo.Part_List_Weekly_Balance.W11 + dbo.Part_List_Weekly_Balance.W12 + dbo.Part_List_Weekly_Balance.W13 + dbo.Part_List_Weekly_Balance.W14
                       + dbo.Part_List_Weekly_Balance.W15 AS W15, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 + dbo.Part_List_Weekly_Balance.W6 + dbo.Part_List_Weekly_Balance.W7 + dbo.Part_List_Weekly_Balance.W8 + dbo.Part_List_Weekly_Balance.W9
                       + dbo.Part_List_Weekly_Balance.W10 + dbo.Part_List_Weekly_Balance.W11 + dbo.Part_List_Weekly_Balance.W12 + dbo.Part_List_Weekly_Balance.W13 + dbo.Part_List_Weekly_Balance.W14
                       + dbo.Part_List_Weekly_Balance.W15 + dbo.Part_List_Weekly_Balance.W16 AS W16, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 + dbo.Part_List_Weekly_Balance.W6 + dbo.Part_List_Weekly_Balance.W7 + dbo.Part_List_Weekly_Balance.W8 + dbo.Part_List_Weekly_Balance.W9
                       + dbo.Part_List_Weekly_Balance.W10 + dbo.Part_List_Weekly_Balance.W11 + dbo.Part_List_Weekly_Balance.W12 + dbo.Part_List_Weekly_Balance.W13 + dbo.Part_List_Weekly_Balance.W14
                       + dbo.Part_List_Weekly_Balance.W15 + dbo.Part_List_Weekly_Balance.W16 + dbo.Part_List_Weekly_Balance.W17 AS W17, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 + dbo.Part_List_Weekly_Balance.W6 + dbo.Part_List_Weekly_Balance.W7 + dbo.Part_List_Weekly_Balance.W8 + dbo.Part_List_Weekly_Balance.W9
                       + dbo.Part_List_Weekly_Balance.W10 + dbo.Part_List_Weekly_Balance.W11 + dbo.Part_List_Weekly_Balance.W12 + dbo.Part_List_Weekly_Balance.W13 + dbo.Part_List_Weekly_Balance.W14
                       + dbo.Part_List_Weekly_Balance.W15 + dbo.Part_List_Weekly_Balance.W16 + dbo.Part_List_Weekly_Balance.W17 + dbo.Part_List_Weekly_Balance.W18 AS W18, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 + dbo.Part_List_Weekly_Balance.W6 + dbo.Part_List_Weekly_Balance.W7 + dbo.Part_List_Weekly_Balance.W8 + dbo.Part_List_Weekly_Balance.W9
                       + dbo.Part_List_Weekly_Balance.W10 + dbo.Part_List_Weekly_Balance.W11 + dbo.Part_List_Weekly_Balance.W12 + dbo.Part_List_Weekly_Balance.W13 + dbo.Part_List_Weekly_Balance.W14
                       + dbo.Part_List_Weekly_Balance.W15 + dbo.Part_List_Weekly_Balance.W16 + dbo.Part_List_Weekly_Balance.W17 + dbo.Part_List_Weekly_Balance.W18 + dbo.Part_List_Weekly_Balance.W19
                       AS W19, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 + dbo.Part_List_Weekly_Balance.W6 + dbo.Part_List_Weekly_Balance.W7 + dbo.Part_List_Weekly_Balance.W8 + dbo.Part_List_Weekly_Balance.W9
                       + dbo.Part_List_Weekly_Balance.W10 + dbo.Part_List_Weekly_Balance.W11 + dbo.Part_List_Weekly_Balance.W12 + dbo.Part_List_Weekly_Balance.W13 + dbo.Part_List_Weekly_Balance.W14
                       + dbo.Part_List_Weekly_Balance.W15 + dbo.Part_List_Weekly_Balance.W16 + dbo.Part_List_Weekly_Balance.W17 + dbo.Part_List_Weekly_Balance.W18 + dbo.Part_List_Weekly_Balance.W19
                       + dbo.Part_List_Weekly_Balance.W20 AS W20, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 + dbo.Part_List_Weekly_Balance.W6 + dbo.Part_List_Weekly_Balance.W7 + dbo.Part_List_Weekly_Balance.W8 + dbo.Part_List_Weekly_Balance.W9
                       + dbo.Part_List_Weekly_Balance.W10 + dbo.Part_List_Weekly_Balance.W11 + dbo.Part_List_Weekly_Balance.W12 + dbo.Part_List_Weekly_Balance.W13 + dbo.Part_List_Weekly_Balance.W14
                       + dbo.Part_List_Weekly_Balance.W15 + dbo.Part_List_Weekly_Balance.W16 + dbo.Part_List_Weekly_Balance.W17 + dbo.Part_List_Weekly_Balance.W18 + dbo.Part_List_Weekly_Balance.W19
                       + dbo.Part_List_Weekly_Balance.W20 + dbo.Part_List_Weekly_Balance.W21 AS W21, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 + dbo.Part_List_Weekly_Balance.W6 + dbo.Part_List_Weekly_Balance.W7 + dbo.Part_List_Weekly_Balance.W8 + dbo.Part_List_Weekly_Balance.W9
                       + dbo.Part_List_Weekly_Balance.W10 + dbo.Part_List_Weekly_Balance.W11 + dbo.Part_List_Weekly_Balance.W12 + dbo.Part_List_Weekly_Balance.W13 + dbo.Part_List_Weekly_Balance.W14
                       + dbo.Part_List_Weekly_Balance.W15 + dbo.Part_List_Weekly_Balance.W16 + dbo.Part_List_Weekly_Balance.W17 + dbo.Part_List_Weekly_Balance.W18 + dbo.Part_List_Weekly_Balance.W19
                       + dbo.Part_List_Weekly_Balance.W20 + dbo.Part_List_Weekly_Balance.W21 + dbo.Part_List_Weekly_Balance.W22 AS W22, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 + dbo.Part_List_Weekly_Balance.W6 + dbo.Part_List_Weekly_Balance.W7 + dbo.Part_List_Weekly_Balance.W8 + dbo.Part_List_Weekly_Balance.W9
                       + dbo.Part_List_Weekly_Balance.W10 + dbo.Part_List_Weekly_Balance.W11 + dbo.Part_List_Weekly_Balance.W12 + dbo.Part_List_Weekly_Balance.W13 + dbo.Part_List_Weekly_Balance.W14
                       + dbo.Part_List_Weekly_Balance.W15 + dbo.Part_List_Weekly_Balance.W16 + dbo.Part_List_Weekly_Balance.W17 + dbo.Part_List_Weekly_Balance.W18 + dbo.Part_List_Weekly_Balance.W19
                       + dbo.Part_List_Weekly_Balance.W20 + dbo.Part_List_Weekly_Balance.W21 + dbo.Part_List_Weekly_Balance.W22 + dbo.Part_List_Weekly_Balance.W23 AS W23, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 + dbo.Part_List_Weekly_Balance.W6 + dbo.Part_List_Weekly_Balance.W7 + dbo.Part_List_Weekly_Balance.W8 + dbo.Part_List_Weekly_Balance.W9
                       + dbo.Part_List_Weekly_Balance.W10 + dbo.Part_List_Weekly_Balance.W11 + dbo.Part_List_Weekly_Balance.W12 + dbo.Part_List_Weekly_Balance.W13 + dbo.Part_List_Weekly_Balance.W14
                       + dbo.Part_List_Weekly_Balance.W15 + dbo.Part_List_Weekly_Balance.W16 + dbo.Part_List_Weekly_Balance.W17 + dbo.Part_List_Weekly_Balance.W18 + dbo.Part_List_Weekly_Balance.W19
                       + dbo.Part_List_Weekly_Balance.W20 + dbo.Part_List_Weekly_Balance.W21 + dbo.Part_List_Weekly_Balance.W22 + dbo.Part_List_Weekly_Balance.W23 + dbo.Part_List_Weekly_Balance.W24
                       AS W24, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 + dbo.Part_List_Weekly_Balance.W6 + dbo.Part_List_Weekly_Balance.W7 + dbo.Part_List_Weekly_Balance.W8 + dbo.Part_List_Weekly_Balance.W9
                       + dbo.Part_List_Weekly_Balance.W10 + dbo.Part_List_Weekly_Balance.W11 + dbo.Part_List_Weekly_Balance.W12 + dbo.Part_List_Weekly_Balance.W13 + dbo.Part_List_Weekly_Balance.W14
                       + dbo.Part_List_Weekly_Balance.W15 + dbo.Part_List_Weekly_Balance.W16 + dbo.Part_List_Weekly_Balance.W17 + dbo.Part_List_Weekly_Balance.W18 + dbo.Part_List_Weekly_Balance.W19
                       + dbo.Part_List_Weekly_Balance.W20 + dbo.Part_List_Weekly_Balance.W21 + dbo.Part_List_Weekly_Balance.W22 + dbo.Part_List_Weekly_Balance.W23 + dbo.Part_List_Weekly_Balance.W24
                       + dbo.Part_List_Weekly_Balance.W25 AS W25, 
                      dbo.Part.In_Stock + dbo.Part_List_Weekly_Balance.W1 + dbo.Part_List_Weekly_Balance.W2 + dbo.Part_List_Weekly_Balance.W3 + dbo.Part_List_Weekly_Balance.W4
                       + dbo.Part_List_Weekly_Balance.W5 + dbo.Part_List_Weekly_Balance.W6 + dbo.Part_List_Weekly_Balance.W7 + dbo.Part_List_Weekly_Balance.W8 + dbo.Part_List_Weekly_Balance.W9
                       + dbo.Part_List_Weekly_Balance.W10 + dbo.Part_List_Weekly_Balance.W11 + dbo.Part_List_Weekly_Balance.W12 + dbo.Part_List_Weekly_Balance.W13 + dbo.Part_List_Weekly_Balance.W14
                       + dbo.Part_List_Weekly_Balance.W15 + dbo.Part_List_Weekly_Balance.W16 + dbo.Part_List_Weekly_Balance.W17 + dbo.Part_List_Weekly_Balance.W18 + dbo.Part_List_Weekly_Balance.W19
                       + dbo.Part_List_Weekly_Balance.W20 + dbo.Part_List_Weekly_Balance.W21 + dbo.Part_List_Weekly_Balance.W22 + dbo.Part_List_Weekly_Balance.W23 + dbo.Part_List_Weekly_Balance.W24
                       + dbo.Part_List_Weekly_Balance.W25 + + dbo.Part_List_Weekly_Balance.W26 AS W26
FROM         dbo.Part LEFT OUTER JOIN
                      dbo.Part_List_Weekly_Balance ON dbo.Part.Part_Id = dbo.Part_List_Weekly_Balance.Part_Id LEFT OUTER JOIN
                      dbo.COMPANYS ON dbo.Part.Supplier__Company_id = dbo.COMPANYS.Company_Id LEFT OUTER JOIN
                      dbo.Group_Code ON dbo.Part.Groupcode__Groupcode_id = dbo.Group_Code.Groupcode_Id
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Company_Ledger]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Company_Ledger]
AS
SELECT     dbo.COMPANYS.Company_Id, dbo.COMPANYS.Company_No AS CustomerAccNo, dbo.COMPANYS.SupplierAccNo, dbo.COMPANYS.Name, 
                      dbo.COMPANYS.Customer, dbo.COMPANYS.Supplier, dbo.Company_Balance.Currency, dbo.Company_Balance.[Currency Balance], 
                      dbo.Company_Balance.Balance, dbo.Company_Balance.[Currency OverDue], dbo.Company_Balance.OverDue, 
                      dbo.COMPANYS.CreditStatus AS [On Hold], dbo.COMPANYS.Address1, dbo.COMPANYS.Address2, dbo.COMPANYS.Address3, dbo.COMPANYS.Country, 
                      dbo.COMPANYS.Postcode
FROM         dbo.COMPANYS LEFT OUTER JOIN
                      dbo.Company_Balance ON dbo.COMPANYS.Company_Id = dbo.Company_Balance.Company__COMPANYS_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Purchase_Invoice_list_with_Parts]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Purchase_Invoice_list_with_Parts]
AS
SELECT     dbo.Purchase_Invoice_list.PI_ID, dbo.Purchase_Invoice_list.[Date Received], dbo.Purchase_Invoice_list.[Due Date], dbo.Purchase_Invoice_list.Notes, 
                      dbo.Purchase_Invoice_list.Reference, dbo.Purchase_Invoice_list.Status, dbo.Purchase_Invoice_list.[Company No], dbo.Purchase_Invoice_list.Supplier, 
                      dbo.Purchase_Invoice_list.Contact, dbo.Purchase_Invoice_list.[Created By], dbo.Purchase_Invoice_list.[Tax Date], dbo.Purchase_Invoice_list.[Sent To Accounts], 
                      dbo.Purchase_Invoice_list.[Acc NO], dbo.Purchase_Invoice_list.[PI NO], dbo.Purchase_Invoice_list.Posted, dbo.Purchase_Invoice_list.Credit, 
                      dbo.Purchase_Invoice_list.[Total Exc Vat], dbo.Purchase_Invoice_list.[Total Inc Vat], dbo.Purchase_Invoice_list.[Total Vat], 
                      dbo.Purchase_Invoice_list.Supplier__COMPANYS_ID, dbo.PI_Item_List.PI_Item_ID, dbo.PI_Item_List.[Item Notes], dbo.PI_Item_List.[Qty Paid], 
                      dbo.PI_Item_List.[Qty Credited], dbo.PI_Item_List.[Supplier Ref], dbo.PI_Item_List.Total, dbo.PI_Item_List.[Total Qty], dbo.PI_Item_List.[Vat Amount], 
                      dbo.PI_Item_List.[Vat rate], dbo.PI_Item_List.Description, dbo.PI_Item_List.Parent__Purchase_Invoice_ID, dbo.PI_Item_List.Price, 
                      dbo.PI_Item_List.[Approved for Payment], dbo.PI_Item_List.UOM, dbo.PI_Item_List.[Part No], dbo.PI_Item_List.Currency, dbo.PI_Item_List.Part__Part_id, 
                      dbo.PI_Item_List.Nominal, dbo.PI_Item_List.[Nominal Description], dbo.PI_Item_List.Nominal_ID, dbo.PI_Item_List.[Po No], dbo.PI_Item_List.[Length Ordered], 
                      dbo.PI_Item_List.[Breadth Ordered], dbo.PI_Item_List.[Qty Returned], dbo.PI_Item_List.Name, dbo.PI_Item_List.[PO Line Qty]
FROM         dbo.PI_Item_List RIGHT OUTER JOIN
                      dbo.Purchase_Invoice_list ON dbo.PI_Item_List.Parent__Purchase_Invoice_ID = dbo.Purchase_Invoice_list.PI_ID
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'Purchase_Invoice_list_with_Parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Purchase_Invoice_list"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 249
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "PI_Item_List"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 273
            End
            DisplayFlags = 280
            TopColumn = 22
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1845
         Alias = 900
         Table = 2745
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Purchase_Invoice_list_with_Parts'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'Purchase_Invoice_list_with_Parts', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Purchase_Invoice_list_with_Parts'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Request_For_Quote_List_With_Parts]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Request_For_Quote_List_With_Parts]
AS
SELECT     dbo.Request_For_Quote_List.Request_For_Quote_ID, dbo.Request_For_Quote_List.Supplier__COMPANYS_ID, dbo.Request_For_Quote_List.Status, 
                      dbo.Request_For_Quote_List.[Date Sent], dbo.Request_For_Quote_List.Address1, dbo.Request_For_Quote_List.Address2, dbo.Request_For_Quote_List.Address3, 
                      dbo.Request_For_Quote_List.Country, dbo.Request_For_Quote_List.Postcode, dbo.Request_For_Quote_List.Contact, dbo.Request_For_Quote_List.[RFQ No], 
                      dbo.Request_For_Quote_List.Currency, dbo.Request_For_Quote_List.[Company No], dbo.Request_For_Quote_List.Supplier, 
                      dbo.Request_For_Quote_List.Status__Request_For_Quote_Status_ID, dbo.Request_For_Quote_List.Created, dbo.Request_For_Quote_List.[Created By], 
                      dbo.RFQ_Lines_With_Prices.RFQ_Lines_ID, dbo.RFQ_Lines_With_Prices.[RFQ Reference], dbo.Purchase_Enquiry_List.[Purchase Enquiry No], 
                      dbo.Purchase_Enquiry_List.[Date Required], dbo.Purchase_Enquiry_List.Urgent, dbo.Purchase_Enquiry_List.Status AS [Purchase Enquiry Status], 
                      dbo.Purchase_Enquiry_List.[Contract No], dbo.Purchase_Enquiry_List.[Enquiry No], dbo.Purchase_Enquiry_List.[Part No], dbo.Purchase_Enquiry_List.Description, 
                      dbo.Supplier_Part_Qty_Price_List.Qty AS [Price Received Qty], dbo.Supplier_Part_Qty_Price_List.Price, dbo.Purchase_Enquiry_Qty.Qty, 
                      dbo.Supplier_Part_Qty_Price_List.[Lead Time in Days] AS [Lead Time], dbo.RFQ_Lines_With_Prices.Notes, dbo.Group_Code.Group_Code AS [Group Code], 
                      dbo.UDData.UDData_Data AS [Part UD1], UDData_1.UDData_Data AS [Part UD2], UDData_2.UDData_Data AS [Part UD3], 
                      dbo.Supplier_Part_Qty_Price_List.[Complies With Spec] AS Complies, dbo.Supplier_Part_Qty_Price_List.[Supplier Quote Ref], dbo.RFQ_Lines_With_Prices.Declined, 
                      dbo.Request_For_Quote_List.Notes_Non_RTF AS [RFQ Notes], dbo.RFQ_Lines_With_Prices.[Notes Non RTF] AS [RFQ Line Notes]
FROM         dbo.Supplier_Part_Qty_Price_List RIGHT OUTER JOIN
                      dbo.Purchase_Enquiry_Qty RIGHT OUTER JOIN
                      dbo.RFQ_Lines_With_Prices ON dbo.Purchase_Enquiry_Qty.Parent__Purchase_Enquiry_ID = dbo.RFQ_Lines_With_Prices.PE__Purchase_Enquiry_ID ON 
                      dbo.Supplier_Part_Qty_Price_List.Supplier_Part_qty_Price_id = dbo.RFQ_Lines_With_Prices.Supplier_Part_qty_Price_id RIGHT OUTER JOIN
                      dbo.Request_For_Quote_List ON 
                      dbo.RFQ_Lines_With_Prices.Parent__Request_For_Quote_ID = dbo.Request_For_Quote_List.Request_For_Quote_ID FULL OUTER JOIN
                      dbo.Purchase_Enquiry_List LEFT OUTER JOIN
                      dbo.Group_Code RIGHT OUTER JOIN
                      dbo.UDData AS UDData_2 RIGHT OUTER JOIN
                      dbo.Part LEFT OUTER JOIN
                      dbo.UDData ON dbo.Part.UDF1__UDData_ID = dbo.UDData.UDData_ID LEFT OUTER JOIN
                      dbo.UDData AS UDData_1 ON dbo.Part.UDF2__UDData_ID = UDData_1.UDData_ID ON UDData_2.UDData_ID = dbo.Part.UDF3__UDData_ID ON 
                      dbo.Group_Code.Groupcode_Id = dbo.Part.Groupcode__Groupcode_id ON dbo.Purchase_Enquiry_List.Part__Part_ID = dbo.Part.Part_Id ON 
                      dbo.RFQ_Lines_With_Prices.PE__Purchase_Enquiry_ID = dbo.Purchase_Enquiry_List.Purchase_Enquiry_ID
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_History_PO]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_History_PO]
AS
SELECT     dbo.Po_Lines.Part__Part_id, dbo.Purchase_Order_List_With_Parts.Purchase_Order_ID, dbo.Po_Lines.Po_Lines_ID, 
                      dbo.Purchase_Order_List_With_Parts.[PO No], dbo.Purchase_Order_List_With_Parts.Reference, dbo.Purchase_Order_List_With_Parts.[PO Type], 
                      dbo.Purchase_Order_List_With_Parts.Contact, dbo.Purchase_Order_List_With_Parts.Status, dbo.Purchase_Order_List_With_Parts.Supplier, 
                      dbo.Purchase_Order_List_With_Parts.Qty, dbo.Purchase_Order_List_With_Parts.Length, dbo.Purchase_Order_List_With_Parts.Breadth, 
                      dbo.Purchase_Order_List_With_Parts.Cancelled, dbo.Purchase_Order_List_With_Parts.Complete, 
                      dbo.Purchase_Order_List_With_Parts.[Date Promised], dbo.Purchase_Order_List_With_Parts.Price, 
                      dbo.Purchase_Order_List_With_Parts.[Qty Invoiced], dbo.Purchase_Order_List_With_Parts.[Qty Delivered], 
                      dbo.Purchase_Order_List_With_Parts.[Qty Returned], dbo.Purchase_Order_List_With_Parts.Total, dbo.Purchase_Order_List_With_Parts.[For WO No], 
                      dbo.Purchase_Order_List_With_Parts.[For Employee], dbo.Purchase_Order_List_With_Parts.[Ext Location], 
                      dbo.Purchase_Order_List_With_Parts.[Date sent]
FROM         dbo.Purchase_Order_List_With_Parts RIGHT OUTER JOIN
                      dbo.Po_Lines ON dbo.Purchase_Order_List_With_Parts.Po_Lines_ID = dbo.Po_Lines.Po_Lines_ID
WHERE     (NOT (dbo.Purchase_Order_List_With_Parts.[PO No] IS NULL))
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[WCC_Active_Ops]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[WCC_Active_Ops]
AS
SELECT     Wo_Route_SChedule_ID, Complete, [Date Complete], [Do Not Use], [Last Start Date], Priority, [Qty Complete], [Scheduled Complete date], [Start Date], 
                      [Actual Run Time], [Actual Setup Time], Conflict, Early, [First Start Date], [Last End Date], Late, Locked, [Materia _Arrival_Date], [Per Complete], [Problems Accepted], 
                      [Requires Material], [Seq No], Started, Stopped, [Use Setup Time], [Setup Time], [Run Time], [Inter Op Time], [Date Started], [WO No], [Contract No], [Op No], 
                      [OP Description], Process, [Route Version], [Part No], [Part Description], [WC Name], [WC No], Cancelled, Route_id, WORK_ORDERS_ID, Work_Centre_id, Process_Id, 
                      Location, Dispatch_Date, [Group Code], [Last Op Complete], [WO Status], [WO Date Required], [WO Date Raised], Notes, [WO On Hold], [Contract On Hold], [WO Qty], 
                      UserDefinable1, UserDefinable2, UserDefinable3, UserDefinable4, UserDefinable5, UserDefinable6, PrecedingOP, Customer, [Estimated Complete Date], Active, 
                      [Outstanding Run Time], [Outstanding Setup Time], [Work Centre Set], [First Start Date Locked], Industry, Efficiency, [Display Order], [Plan Exists], WO_UD_2, 
                      CASE WHEN [Start Date] > CONVERT(DATETIME, ''2000-01-01 00:00:00'', 102) THEN [Start Date] ELSE [Last Start Date] END AS [Last Start Override]
FROM         dbo.Active_Ops
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Part_List_with_Company]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[Part_List_with_Company]
AS
SELECT     dbo.Part_list.Part_Id, dbo.Part_list.[Part No], dbo.Part_list.Description, dbo.Part_list.[Drawing Register No], dbo.Part_list.[Drawing No], dbo.Part_list.[Lead Time], 
                      dbo.Part_list.[In Stock], dbo.Part_list.[On Order], dbo.Part_list.Required, dbo.Part_list.[Re Order], dbo.Part_list.[Min Order], dbo.Part_list.ROQ, dbo.Part_list.[For Sale], 
                      dbo.Part_list.[Fully Planned], dbo.Part_list.[Part Type], dbo.Part_list.UOM, dbo.Part_list.Traceabilty, dbo.Part_list.Status, dbo.Part_list.Category, 
                      dbo.Part_list.[Group Code], dbo.Part_list.[Has Area], dbo.Part_list.[Has Length], dbo.Part_list.[Non Divisible], dbo.Part_list.UserDefinable6, 
                      dbo.Part_list.UserDefinable5, dbo.Part_list.UserDefinable4, dbo.Part_list.UserDefinable3, dbo.Part_list.UserDefinable2, dbo.Part_list.UserDefinable1, 
                      dbo.Part_list.Released, dbo.Part_list.[Purchase Enquiry Raised], dbo.Part_list.[Pref Location], dbo.Part_list.Cost, dbo.Part_list.[Finnished Weight], 
                      dbo.Part_list.In_Stock, dbo.Part_list.Notes, dbo.Part_list.[Cost/Tonne], dbo.Part_list.Deleted, dbo.Part_list.Status__Part_status_id, dbo.Part_list.Approved, 
                      dbo.Part_list.[Cost Nominal], dbo.Part_list.[Sales Nominal], dbo.Part_list.[Comodity Code], dbo.Part_list.[Packing Qty], dbo.Part_list.[Preferred Supplier], 
                      dbo.Part_list.Revision, dbo.Part_list.[Avg Stock Cost], dbo.Part_list.Locked, dbo.Part_list.[Last Stock Take], dbo.Part_list.[Qty In Stock After StockTake], 
                      dbo.Part_list.[Qty In Stock Before StockTake], dbo.Part_list.[Stock Take Type], dbo.Part_list.[Equivalent Size], dbo.Part_list.[Std Material Cost], 
                      dbo.Part_list.[Std Labour Cost], dbo.Part_list.[Std Overhead Cost], dbo.Part_list.[MRP Stock], dbo.COMPANYS.Company_No AS [Company No], 
                      dbo.COMPANYS.Name AS Company, dbo.Supplier_Part.Supplier_Part_No AS [Alias Part No], dbo.INDUSTRY.Industry
FROM         dbo.COMPANYS LEFT OUTER JOIN
                      dbo.INDUSTRY ON dbo.COMPANYS.CoyType__type_id = dbo.INDUSTRY.Industry_Id RIGHT OUTER JOIN
                      dbo.Supplier_Part ON dbo.COMPANYS.Company_Id = dbo.Supplier_Part.Supplier__Companys_id RIGHT OUTER JOIN
                      dbo.Part_list ON dbo.Supplier_Part.Part__Part_id = dbo.Part_list.Part_Id
' 
